<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfx__reset__reason_8h" kind="file" language="C++">
    <compoundname>nrfx_reset_reason.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__power_8h" local="no">hal/nrf_power.h</includes>
    <includes refid="nrf__reset_8h" local="no">hal/nrf_reset.h</includes>
    <incdepgraph>
      <node id="1">
        <label>helpers/nrfx_reset_reason.h</label>
        <link refid="nrfx__reset__reason_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfx__reset__reason_1gaf81425aa4de342fb6bd6420cfc239d98" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_CTRLAP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRAP reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="61" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1ga42fc3a63f8f57f8f2db437612d5d9263" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_NETWORK</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether network reset reasons are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="68" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gaa96169f9fb31f181c44f1927f7d11069" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_LPCOMP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether LPCOMP reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="76" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gaa674f9552ecb86c31b01eea64f6e4a5d" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_NFC</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether NFC reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="83" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1ga2404511b607afc3be0f570b9e4494328" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_VBUS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether VBUS reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="91" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gafca1adf061c0a846a581cfda9af2ede2" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_CTRLAPSOFT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRL-AP reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="98" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1ga189561688db4e38da64ac82412f409ff" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_CTRLAPHARD</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRL-AP hard reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="105" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gac9e92bac1c549f7dfe86f288e7f16b2e" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_CTRLAPPIN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRL-AP pin reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="112" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gae0bccbcc16f503c626110cb5c059c548" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_GRTC</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether GRTC reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="119" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__reset__reason_1gaca687d9f32e2ddb1a73e75485dd03eed" prot="public" static="no">
        <name>NRFX_RESET_REASON_HAS_SECTAMPER</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether GRTC reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="126" column="9" bodyfile="helpers/nrfx_reset_reason.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrfx__reset__reason_1gabf69c6cc468466e57c3ad6c7aa322e19" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_reset_reason_mask_t</name>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19af6bad2d07ce0b6963c479ec90b0f8854" prot="public">
          <name>NRFX_RESET_REASON_RESETPIN_MASK</name>
          <initializer>= RESET_RESETREAS_RESETPIN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from pin-reset detected. Reset from watchdog/application watchdog timer 0 detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a8150a4221a7301ea11d26db52cf60bec" prot="public">
          <name>NRFX_RESET_REASON_DOG0_MASK</name>
          <initializer>= RESET_RESETREAS_DOG0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from watchdog/application watchdog timer 0 detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a78944b6c3b629fae3fbe81162d561f89" prot="public">
          <name>NRFX_RESET_REASON_DOG_MASK</name>
          <initializer>= NRFX_RESET_REASON_DOG0_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from application CTRL-AP detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a9fd6d994c8aff069c0a2e03ea8e7fcb9" prot="public">
          <name>NRFX_RESET_REASON_CTRLAP_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from soft reset/application soft reset detected. Deprecated. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19af7efad711cccc3febab59d36b4991480" prot="public">
          <name>NRFX_RESETREAS_SREQ_MASK</name>
          <initializer>= RESET_RESETREAS_SREQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from soft reset/application soft reset detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a7ce4aafc90f6dd258e9e93ea16412d0c" prot="public">
          <name>NRFX_RESET_REASON_SREQ_MASK</name>
          <initializer>= RESET_RESETREAS_SREQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from CPU lockup/application CPU lockup detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19aff9f0e51be587dcf07b2c0270febc3d8" prot="public">
          <name>NRFX_RESET_REASON_LOCKUP_MASK</name>
          <initializer>= RESET_RESETREAS_LOCKUP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF mode when wakeup is triggered by DETECT signal from GPIO. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a16a3781bdf05e5dbe6c2f5a8022f11c1" prot="public">
          <name>NRFX_RESET_REASON_OFF_MASK</name>
          <initializer>= RESET_RESETREAS_OFF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF mode when wakeup is triggered by ANADETECT signal from LPCOMP. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a2565e43196d5cd018cea467e5a00a557" prot="public">
          <name>NRFX_RESET_REASON_LPCOMP_MASK</name>
          <initializer>= RESET_RESETREAS_LPCOMP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF mode when wakeup is triggered by entering the debug interface mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3d91c29623eb300788d32d4ffd692320" prot="public">
          <name>NRFX_RESET_REASON_DIF_MASK</name>
          <initializer>= RESET_RESETREAS_DIF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from network soft reset detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a518a57466da9d44224c3df2627ed7fa0" prot="public">
          <name>NRFX_RESET_REASON_LSREQ_MASK</name>
          <initializer>= RESET_RESETREAS_LSREQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from network CPU lockup detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a1edc1662f231789bfcd8a29961fa6d91" prot="public">
          <name>NRFX_RESET_REASON_LLOCKUP_MASK</name>
          <initializer>= RESET_RESETREAS_LLOCKUP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from network watchdog timer detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a1748487ebb8417386ffe51a7ad09f1cf" prot="public">
          <name>NRFX_RESET_REASON_LDOG_MASK</name>
          <initializer>= RESET_RESETREAS_LDOG_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Force off reset from application core detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19adbd0fb57f13c84bd9b7c71898eab501f" prot="public">
          <name>NRFX_RESET_REASON_MFORCEOFF_MASK</name>
          <initializer>= RESET_RESETREAS_MFORCEOFF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19ad6ae53920b3cb31f9c5f8888348a196b" prot="public">
          <name>NRFX_RESET_REASON_NFC_MASK</name>
          <initializer>= RESET_RESETREAS_NFC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset after wakeup from System OFF mode due to NFC field being detected. Reset from application watchdog timer 1 detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3d67f199da05c7d79d766f6cb06000fb" prot="public">
          <name>NRFX_RESET_REASON_DOG1_MASK</name>
          <initializer>= RESET_RESETREAS_DOG1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset after wakeup from System OFF mode due to VBUS rising into valid range. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a82d0751f26331afd4269493d94747ad3" prot="public">
          <name>NRFX_RESET_REASON_VBUS_MASK</name>
          <initializer>= RESET_RESETREAS_VBUS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from network CTRL-AP detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3196607314c79395b77ea406c919ca55" prot="public">
          <name>NRFX_RESET_REASON_LCTRLAP_MASK</name>
          <initializer>= RESET_RESETREAS_LCTRLAP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19aafcd9383ce1029a69e0ab007e396e808" prot="public">
          <name>NRFX_RESET_REASON_CTRLAPHARD_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAPHARD_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to CTRL-AP hard reset. Reset due to CTRL-AP pin reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a08dde5715a08c0a4c21669b7ac10aef7" prot="public">
          <name>NRFX_RESET_REASON_CTRLAPPIN_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAPPIN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from GRTC. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19ad6961d249fbd82ec73c488ebace6c6fa" prot="public">
          <name>NRFX_RESET_REASON_GRTC_MASK</name>
          <initializer>= RESET_RESETREAS_GRTC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to illegal tampering of the device. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a300d5d7d24c2de6c1d6f1fd4f7868acb" prot="public">
          <name>NRFX_RESET_REASON_SECTAMPER_MASK</name>
          <initializer>= RESET_RESETREAS_SECTAMPER_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Reset reason bit masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="132" column="1" bodyfile="helpers/nrfx_reset_reason.h" bodystart="133" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__reset__reason_1gab41e113489da055f05d6814aefb4cae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE uint32_t</type>
        <definition>__STATIC_INLINE uint32_t nrfx_reset_reason_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_reset_reason_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the reset reason bitmask. </para>
        </briefdescription>
        <detaileddescription>
<para>Unless cleared, the RESETREAS register is cumulative. If none of the reset sources is flagged, the chip was reset from the on-chip reset generator. This indicates a power-on-reset or a brown out reset.</para>
<para><simplesect kind="return"><para>Mask of reset reasons constructed from <ref refid="group__nrfx__reset__reason_1gabf69c6cc468466e57c3ad6c7aa322e19" kindref="member">nrfx_reset_reason_mask_t</ref> values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="233" column="26" bodyfile="helpers/nrfx_reset_reason.h" bodystart="233" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__reset__reason_1gac9db848932e11105675873e6130dbbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void nrfx_reset_reason_clear</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_reset_reason_clear</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing the selected reset reason fields. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask constructed from <ref refid="group__nrfx__reset__reason_1gabf69c6cc468466e57c3ad6c7aa322e19" kindref="member">nrfx_reset_reason_mask_t</ref> values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_reset_reason.h" line="247" column="22" bodyfile="helpers/nrfx_reset_reason.h" bodystart="247" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_RESET_REASON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_power.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!NRF_POWER_HAS_RESETREAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_reset.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfx_reset_reason<sp/>Generic<sp/>Reset<sp/>Reason<sp/>layer</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrfx</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_power</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_reset</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Helper<sp/>layer<sp/>that<sp/>provides<sp/>a<sp/>uniform<sp/>way<sp/>of<sp/>checking<sp/>the<sp/>reset<sp/>reason.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS_CTRLAP<sp/>||<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_CTRLAP_RESET)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRAP<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_NETWORK)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>network<sp/>reset<sp/>reasons<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_NETWORK<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_NETWORK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS_LPCOMP<sp/>||<sp/>defined(RESET_RESETREAS_LPCOMP_Msk)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>LPCOMP<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_LPCOMP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_LPCOMP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS_NFC<sp/>||<sp/>defined(RESET_RESETREAS_NFC_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>NFC<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_NFC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_NFC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS_VBUS<sp/>||<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_VBUS_RESET)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>VBUS<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_VBUS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_VBUS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_CTRLAPSOFT_RESET)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRL-AP<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPSOFT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPSOFT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_CTRLAPHARD_RESET)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRL-AP<sp/>hard<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPHARD<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPHARD<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_CTRLAPPIN_RESET)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRL-AP<sp/>pin<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPPIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_CTRLAPPIN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_GRTC_RESET)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>GRTC<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_GRTC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_GRTC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(NRF_RESET)<sp/>&amp;&amp;<sp/>NRF_RESET_HAS_SECTAMPER_RESET)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>GRTC<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_SECTAMPER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_RESET_REASON_HAS_SECTAMPER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>@brief<sp/>Reset<sp/>reason<sp/>bit<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!NRF_POWER_HAS_RESETREAS<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>pin-reset<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19af6bad2d07ce0b6963c479ec90b0f8854" kindref="member">NRFX_RESET_REASON_RESETPIN_MASK</ref><sp/><sp/>=<sp/>RESET_RESETREAS_RESETPIN_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>watchdog/application<sp/>watchdog<sp/>timer<sp/>0<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a8150a4221a7301ea11d26db52cf60bec" kindref="member">NRFX_RESET_REASON_DOG0_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DOG0_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>watchdog/application<sp/>watchdog<sp/>timer<sp/>0<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a78944b6c3b629fae3fbe81162d561f89" kindref="member">NRFX_RESET_REASON_DOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a8150a4221a7301ea11d26db52cf60bec" kindref="member">NRFX_RESET_REASON_DOG0_MASK</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_CTRLAP</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>application<sp/>CTRL-AP<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a9fd6d994c8aff069c0a2e03ea8e7fcb9" kindref="member">NRFX_RESET_REASON_CTRLAP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_CTRLAP_Msk,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>soft<sp/>reset/application<sp/>soft<sp/>reset<sp/>detected.<sp/>Deprecated.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19af7efad711cccc3febab59d36b4991480" kindref="member">NRFX_RESETREAS_SREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_SREQ_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>soft<sp/>reset/application<sp/>soft<sp/>reset<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a7ce4aafc90f6dd258e9e93ea16412d0c" kindref="member">NRFX_RESET_REASON_SREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_SREQ_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>CPU<sp/>lockup/application<sp/>CPU<sp/>lockup<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19aff9f0e51be587dcf07b2c0270febc3d8" kindref="member">NRFX_RESET_REASON_LOCKUP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LOCKUP_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>mode<sp/>when<sp/>wakeup<sp/>is<sp/>triggered<sp/>by<sp/>DETECT<sp/>signal<sp/>from</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>GPIO.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a16a3781bdf05e5dbe6c2f5a8022f11c1" kindref="member">NRFX_RESET_REASON_OFF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_OFF_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>mode<sp/>when<sp/>wakeup<sp/>is<sp/>triggered<sp/>by<sp/>ANADETECT<sp/>signal<sp/>from</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>LPCOMP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a2565e43196d5cd018cea467e5a00a557" kindref="member">NRFX_RESET_REASON_LPCOMP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LPCOMP_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>mode<sp/>when<sp/>wakeup<sp/>is<sp/>triggered<sp/>by<sp/>entering<sp/>the<sp/>debug</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>interface<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3d91c29623eb300788d32d4ffd692320" kindref="member">NRFX_RESET_REASON_DIF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DIF_Msk,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_NETWORK</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>network<sp/>soft<sp/>reset<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a518a57466da9d44224c3df2627ed7fa0" kindref="member">NRFX_RESET_REASON_LSREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LSREQ_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>network<sp/>CPU<sp/>lockup<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a1edc1662f231789bfcd8a29961fa6d91" kindref="member">NRFX_RESET_REASON_LLOCKUP_MASK</ref><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LLOCKUP_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>network<sp/>watchdog<sp/>timer<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a1748487ebb8417386ffe51a7ad09f1cf" kindref="member">NRFX_RESET_REASON_LDOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LDOG_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Force<sp/>off<sp/>reset<sp/>from<sp/>application<sp/>core<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>NRFX_RESET_REASON_MFORCEOFF_MASK<sp/>=<sp/>RESET_RESETREAS_MFORCEOFF_Msk,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_RESET_REASON_HAS_NETWORK</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>after<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>mode<sp/>due<sp/>to<sp/>NFC<sp/>field<sp/>being<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19ad6ae53920b3cb31f9c5f8888348a196b" kindref="member">NRFX_RESET_REASON_NFC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_NFC_Msk,</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>application<sp/>watchdog<sp/>timer<sp/>1<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3d67f199da05c7d79d766f6cb06000fb" kindref="member">NRFX_RESET_REASON_DOG1_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DOG1_Msk,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_VBUS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>after<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>mode<sp/>due<sp/>to<sp/>VBUS<sp/>rising<sp/>into<sp/>valid<sp/>range.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a82d0751f26331afd4269493d94747ad3" kindref="member">NRFX_RESET_REASON_VBUS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_VBUS_Msk,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_NETWORK</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>from<sp/>network<sp/>CTRL-AP<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>NRFX_RESET_REASON_LCTRLAP_MASK<sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LCTRLAP_Msk,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_RESET_HAS_NETWORK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_CTRLAPSOFT_RESET</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Soft<sp/>reset<sp/>from<sp/>CTRL-AP<sp/>detected.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>NRFX_RESET_REASON_CTRLAPSOFT_MASK<sp/>=<sp/>RESET_RESETREAS_CTRLAPSOFT_Msk,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_CTRLAPSOFT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>CTRL-AP<sp/>hard<sp/>reset.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19aafcd9383ce1029a69e0ab007e396e808" kindref="member">NRFX_RESET_REASON_CTRLAPHARD_MASK</ref><sp/>=<sp/>RESET_RESETREAS_CTRLAPHARD_Msk,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_CTRLAPPIN</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>CTRL-AP<sp/>pin<sp/>reset.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a08dde5715a08c0a4c21669b7ac10aef7" kindref="member">NRFX_RESET_REASON_CTRLAPPIN_MASK</ref><sp/><sp/>=<sp/>RESET_RESETREAS_CTRLAPPIN_Msk,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_GRTC</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>GRTC.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19ad6961d249fbd82ec73c488ebace6c6fa" kindref="member">NRFX_RESET_REASON_GRTC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_GRTC_Msk,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_SECTAMPER</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>illegal<sp/>tampering<sp/>of<sp/>the<sp/>device.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>NRFX_RESET_REASON_SECTAMPER_MASK<sp/><sp/>=<sp/>RESET_RESETREAS_SECTAMPER_Msk,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19af6bad2d07ce0b6963c479ec90b0f8854" kindref="member">NRFX_RESET_REASON_RESETPIN_MASK</ref><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_RESETPIN_Msk,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a78944b6c3b629fae3fbe81162d561f89" kindref="member">NRFX_RESET_REASON_DOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_DOG_Msk,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a7ce4aafc90f6dd258e9e93ea16412d0c" kindref="member">NRFX_RESET_REASON_SREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_SREQ_Msk<sp/>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19aff9f0e51be587dcf07b2c0270febc3d8" kindref="member">NRFX_RESET_REASON_LOCKUP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_LOCKUP_Msk,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a16a3781bdf05e5dbe6c2f5a8022f11c1" kindref="member">NRFX_RESET_REASON_OFF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_OFF_Msk,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_CTRLAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a9fd6d994c8aff069c0a2e03ea8e7fcb9" kindref="member">NRFX_RESET_REASON_CTRLAP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_CTRLAP_Msk,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_LPCOMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a2565e43196d5cd018cea467e5a00a557" kindref="member">NRFX_RESET_REASON_LPCOMP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_LPCOMP_Msk,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a3d91c29623eb300788d32d4ffd692320" kindref="member">NRFX_RESET_REASON_DIF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_DIF_Msk,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_NFC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19ad6ae53920b3cb31f9c5f8888348a196b" kindref="member">NRFX_RESET_REASON_NFC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_NFC_Msk,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_RESET_REASON_HAS_VBUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__reset__reason_1ggabf69c6cc468466e57c3ad6c7aa322e19a82d0751f26331afd4269493d94747ad3" kindref="member">NRFX_RESET_REASON_VBUS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>POWER_RESETREAS_VBUS_Msk,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!NRF_POWER_HAS_RESETREAS<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}<sp/><ref refid="group__nrfx__reset__reason_1gabf69c6cc468466e57c3ad6c7aa322e19" kindref="member">nrfx_reset_reason_mask_t</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>reset<sp/>reason<sp/>bitmask.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>Unless<sp/>cleared,<sp/>the<sp/>RESETREAS<sp/>register<sp/>is<sp/>cumulative.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>If<sp/>none<sp/>of<sp/>the<sp/>reset<sp/>sources<sp/>is<sp/>flagged,<sp/>the<sp/>chip<sp/>was<sp/>reset<sp/>from<sp/>the<sp/>on-chip<sp/>reset<sp/>generator.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>This<sp/>indicates<sp/>a<sp/>power-on-reset<sp/>or<sp/>a<sp/>brown<sp/>out<sp/>reset.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>reset<sp/>reasons<sp/>constructed<sp/>from<sp/>@ref<sp/>nrfx_reset_reason_mask_t<sp/>values.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__reset__reason_1gab41e113489da055f05d6814aefb4cae9" kindref="member">nrfx_reset_reason_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__power__hal_1gaad306f69122fdd920fbf4c7e87745222" kindref="member">nrf_power_resetreas_get</ref>(NRF_POWER);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__reset__hal_1ga2956ac48322d4ebd37e8dca22ae9dd4d" kindref="member">nrf_reset_resetreas_get</ref>(NRF_RESET);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>selected<sp/>reset<sp/>reason<sp/>fields.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/>Mask<sp/>constructed<sp/>from<sp/>@ref<sp/>nrfx_reset_reason_mask_t<sp/>values.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__reset__reason_1gac9db848932e11105675873e6130dbbe3" kindref="member">nrfx_reset_reason_clear</ref>(uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_POWER_HAS_RESETREAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__power__hal_1ga47102dd335c0ecb520ed0cd70c7dc143" kindref="member">nrf_power_resetreas_clear</ref>(NRF_POWER,<sp/>mask);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ga763234a24c71ba8cb31e82956fce9496" kindref="member">nrf_reset_resetreas_clear</ref>(NRF_RESET,<sp/>mask);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_RESET_REASON_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="helpers/nrfx_reset_reason.h"/>
  </compounddef>
</doxygen>
