<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__timer_8h" kind="file" language="C++">
    <compoundname>nrfy_timer.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__timer_8h" local="no">hal/nrf_timer.h</includes>
    <includedby refid="nrfx__timer_8h" local="no">drivers/include/nrfx_timer.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_timer.h</label>
        <link refid="nrfy__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__timer__config__t" prot="public">nrfy_timer_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__timer_1gaf5a9fc1bc28828d7a4d3ab93dfdb2180" prot="public" static="no">
        <name>NRFY_TIMER_HAS_ONE_SHOT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga6167b2cca06829969f545c07bf7bee05" kindref="member">NRF_TIMER_HAS_ONE_SHOT</ref>  Symbol indicating whether timer supports one-shot operation.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="65" column="10" bodyfile="haly/nrfy_timer.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__timer_8h_1a83e0aa40c25a2cf2e86f183ff2efa41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_timer_event_enabled_clear</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask, nrf_timer_event_t event)</argsstring>
        <name>__nrfy_internal_timer_event_enabled_clear</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="404" column="25" bodyfile="haly/nrfy_timer.h" bodystart="404" bodyend="412" declfile="haly/nrfy_timer.h" declline="44" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__timer_8h_1ade7c88bc7710a02388a7d51dcb10cc37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_timer_event_handle</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask, nrf_timer_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_timer_event_handle</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="414" column="25" bodyfile="haly/nrfy_timer.h" bodystart="414" bodyend="429" declfile="haly/nrfy_timer.h" declline="48" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__timer_8h_1ad0a9fabb6ea4894757d131a3f089fc5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_timer_events_process</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>__nrfy_internal_timer_events_process</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="431" column="29" bodyfile="haly/nrfy_timer.h" bodystart="431" bodyend="446" declfile="haly/nrfy_timer.h" declline="53" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga0f8ab99581aa30b5d7337b046e82ff87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_periph_configure</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrfy_timer_config_t const *p_config)</argsstring>
        <name>nrfy_timer_periph_configure</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__timer__config__t" kindref="compound">nrfy_timer_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the TIMER. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="84" column="25" bodyfile="haly/nrfy_timer.h" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gab69eec22087e9f1d9c918ca605c3dc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_int_init</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_timer_int_init</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified TIMER interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="101" column="25" bodyfile="haly/nrfy_timer.h" bodystart="101" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gaa151b66e837306bcdd4551466fd082b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_int_uninit</definition>
        <argsstring>(NRF_TIMER_Type *p_reg)</argsstring>
        <name>nrfy_timer_int_uninit</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the TIMER interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="127" column="25" bodyfile="haly/nrfy_timer.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga8de88a06a509b1c4f64b20b798436311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_events_process</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_events_process</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified TIMER events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="142" column="29" bodyfile="haly/nrfy_timer.h" bodystart="142" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga53e8052f626b3747f3b945a7d03736c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_capture_get</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_cc_channel_t channel)</argsstring>
        <name>nrfy_timer_capture_get</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for capturing the TIMER value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function triggers the capture task for given <computeroutput>channel</computeroutput> and returns latched timer value.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture channel number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Captured value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="161" column="29" bodyfile="haly/nrfy_timer.h" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gad24d1a53dec25bbf19316b09dc01fb04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_task_trigger</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_task_t task)</argsstring>
        <name>nrfy_timer_task_trigger</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gacdcc887e5536df70fb766e2705711b65" kindref="member">nrf_timer_task_trigger</ref>  Function for activating the specified timer task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="172" column="25" bodyfile="haly/nrfy_timer.h" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gac1bf1cf18b1cdeb9b1feb0f3aedc0c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_task_address_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg, nrf_timer_task_t task)</argsstring>
        <name>nrfy_timer_task_address_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga2f4e47e68b4d1af3726747f2a34bb581" kindref="member">nrf_timer_task_address_get</ref>  Function for getting the address of the specified timer task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="180" column="29" bodyfile="haly/nrfy_timer.h" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga67ee2b3e385be2ed0e787416c5cdecc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_event_clear</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_event_t event)</argsstring>
        <name>nrfy_timer_event_clear</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga46788eabb1ad085616c4796bb609c016" kindref="member">nrf_timer_event_clear</ref>  Function for clearing the specified timer event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="187" column="25" bodyfile="haly/nrfy_timer.h" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga67014ac705ca7fad6c246fe6e233cf86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_timer_event_check</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg, nrf_timer_event_t event)</argsstring>
        <name>nrfy_timer_event_check</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga594ee9df9b86ae535bc4daf1384d5348" kindref="member">nrf_timer_event_check</ref>  Function for retrieving the state of the TIMER event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="195" column="25" bodyfile="haly/nrfy_timer.h" bodystart="195" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gac33c67632d00b9cc2f6ca83f1a0e6c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_event_address_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg, nrf_timer_event_t event)</argsstring>
        <name>nrfy_timer_event_address_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga9ad70342f0808182e18ef591d23b0561" kindref="member">nrf_timer_event_address_get</ref>  Function for getting the address of the specified timer event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="205" column="29" bodyfile="haly/nrfy_timer.h" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga343a0d35d2019bb3adedcda67e78f4d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_shorts_enable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_shorts_enable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga8efef095c7570c50f519dfe46539db90" kindref="member">nrf_timer_shorts_enable</ref>  Function for enabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="212" column="25" bodyfile="haly/nrfy_timer.h" bodystart="212" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga63bf0529d359a43da6c31a5070f8970a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_shorts_disable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_shorts_disable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga269330ebccab15e3e819cc2c805629ac" kindref="member">nrf_timer_shorts_disable</ref>  Function for disabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="220" column="25" bodyfile="haly/nrfy_timer.h" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gac865a10bfc8d40ced433ceb1780cc5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_shorts_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_shorts_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga2d9291fbd5262d1f5a3d755e76d175d9" kindref="member">nrf_timer_shorts_set</ref>  Function for setting the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="228" column="25" bodyfile="haly/nrfy_timer.h" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gabf102b1b4aa87ff4c378894d2b91e4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_int_enable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_int_enable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gaca84981e7f515192ffc4cb28ce18e554" kindref="member">nrf_timer_int_enable</ref>  Function for enabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__timer__hal_1ga55adb42b75222256195fa003f8c0dc20" kindref="member">nrf_timer_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="236" column="25" bodyfile="haly/nrfy_timer.h" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga37d9af679c84ce8a2e75da2cb4bdcd4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_int_disable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_int_disable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gab26b26a0a091b12491246d4b1f4e65c8" kindref="member">nrf_timer_int_disable</ref>  Function for disabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__timer__hal_1ga55adb42b75222256195fa003f8c0dc20" kindref="member">nrf_timer_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="244" column="25" bodyfile="haly/nrfy_timer.h" bodystart="244" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga9194e9854db4e46025f75617177a651b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_int_enable_check</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_timer_int_enable_check</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gaa6902537565850e0cfd62fa31a1b9083" kindref="member">nrf_timer_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__timer__hal_1ga55adb42b75222256195fa003f8c0dc20" kindref="member">nrf_timer_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="252" column="29" bodyfile="haly/nrfy_timer.h" bodystart="252" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gaffed4f76b265fc849e030a93bb3c7527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_subscribe_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_timer_subscribe_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gabcfd966f5844ba4c22476ea36f944bca" kindref="member">nrf_timer_subscribe_set</ref>  Function for setting the subscribe configuration for a given TIMER task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="263" column="25" bodyfile="haly/nrfy_timer.h" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga0b0c57d5f6fb35960860b222eaec195d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_subscribe_clear</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_task_t task)</argsstring>
        <name>nrfy_timer_subscribe_clear</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gafce2e496e07c100add401597ad9d82b2" kindref="member">nrf_timer_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given TIMER task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="272" column="25" bodyfile="haly/nrfy_timer.h" bodystart="272" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gaf982b735cdb723286854a312b86b8994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_publish_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_timer_publish_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gaa8e16ed891e6014d425b908daabfa498" kindref="member">nrf_timer_publish_set</ref>  Function for setting the publish configuration for a given TIMER event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="280" column="25" bodyfile="haly/nrfy_timer.h" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga57d1889b7721e45674e72fe587e4ad90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_publish_clear</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_event_t event)</argsstring>
        <name>nrfy_timer_publish_clear</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gafef86d00be35fa22765f9823c17fc6f0" kindref="member">nrf_timer_publish_clear</ref>  Function for clearing the publish configuration for a given TIMER event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="289" column="25" bodyfile="haly/nrfy_timer.h" bodystart="289" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga2d944eae29a07a442d84aaa216dd76dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_mode_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_mode_t mode)</argsstring>
        <name>nrfy_timer_mode_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga1c02aebd9fc392af80ea2da5dca7ed61" kindref="member">nrf_timer_mode_set</ref>  Function for setting the timer mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer mode.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="298" column="25" bodyfile="haly/nrfy_timer.h" bodystart="298" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga6b417f2ee6017cd03e0534c7c2f30938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_timer_mode_t nrfy_timer_mode_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg)</argsstring>
        <name>nrfy_timer_mode_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gaf0dbbc911f7fbf8952d261da81bb0aff" kindref="member">nrf_timer_mode_get</ref>  Function for retrieving the timer mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timer mode.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="306" column="37" bodyfile="haly/nrfy_timer.h" bodystart="306" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga5163a9d4bad854bb9b19c7328bd62111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_bit_width_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_bit_width_t bit_width)</argsstring>
        <name>nrfy_timer_bit_width_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref></type>
          <declname>bit_width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga1bf04327bb1bcbcafb66be1e0d69da39" kindref="member">nrf_timer_bit_width_set</ref>  Function for setting the timer bit width.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer bit width.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="315" column="25" bodyfile="haly/nrfy_timer.h" bodystart="315" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga3f7036df750b52c120123e7b0b1a657d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_timer_bit_width_t nrfy_timer_bit_width_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg)</argsstring>
        <name>nrfy_timer_bit_width_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gaf2be8f99a56547edd3d37a59b7be2602" kindref="member">nrf_timer_bit_width_get</ref>  Function for retrieving the timer bit width.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timer bit width.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="323" column="42" bodyfile="haly/nrfy_timer.h" bodystart="323" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga50f014aca66668b6a9fdda1c7d103bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_prescaler_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, uint32_t prescaler_factor)</argsstring>
        <name>nrfy_timer_prescaler_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prescaler_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga5e804fd21a6351e80e20ed94a95e1745" kindref="member">nrf_timer_prescaler_set</ref>  Function for setting the prescaler factor.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Prescaler value is expressed as <formula id="0">$ 2^{prescaler\_factor} $</formula>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prescaler_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>Prescaler factor.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="332" column="25" bodyfile="haly/nrfy_timer.h" bodystart="332" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga9edba941f76b39f47a27d926d671af18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_prescaler_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg)</argsstring>
        <name>nrfy_timer_prescaler_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga8018856d922dc9cd77c5f5b74f533f25" kindref="member">nrf_timer_prescaler_get</ref>  Function for retrieving the prescaler factor.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Prescaler factor.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="339" column="29" bodyfile="haly/nrfy_timer.h" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gafa689b7c06640d6de10697a2e9c011de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_cc_set</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_cc_channel_t cc_channel, uint32_t cc_value)</argsstring>
        <name>nrfy_timer_cc_set</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref></type>
          <declname>cc_channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cc_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga8778ec1e21e5a8306d720ab4e69a199b" kindref="member">nrf_timer_cc_set</ref>  Function for setting the capture/compare register for the specified channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified capture/compare channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to write to the capture/compare register.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="348" column="25" bodyfile="haly/nrfy_timer.h" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga6fc6d42f2fb43f09c80fc44d46cd7d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_timer_cc_get</definition>
        <argsstring>(NRF_TIMER_Type const *p_reg, nrf_timer_cc_channel_t cc_channel)</argsstring>
        <name>nrfy_timer_cc_get</name>
        <param>
          <type>NRF_TIMER_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref></type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga237a16bb2596cc350a15f741665b7e75" kindref="member">nrf_timer_cc_get</ref>  Function for retrieving the capture/compare value for a specified channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified capture/compare channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value from the specified capture/compare register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="357" column="29" bodyfile="haly/nrfy_timer.h" bodystart="357" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gaa2d03138a5c1648a11d57392d56d8675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_timer_task_t nrfy_timer_capture_task_get</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfy_timer_capture_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga992b4f8249b638159cc2abedcca7ba6a" kindref="member">nrf_timer_capture_task_get</ref>  Function for getting the specified timer capture task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Capture task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="367" column="37" bodyfile="haly/nrfy_timer.h" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1ga8ad5ee070df1becba5b5e86e007c93ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_timer_event_t nrfy_timer_compare_event_get</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfy_timer_compare_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga2e446c45ecb7958a1a15f8f08cdc2c40" kindref="member">nrf_timer_compare_event_get</ref>  Function for getting the specified timer compare event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Compare event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="373" column="38" bodyfile="haly/nrfy_timer.h" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gadf919c4c7c41d5b6b1a815c1b0098c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__timer__hal_1ga55adb42b75222256195fa003f8c0dc20" kindref="member">nrf_timer_int_mask_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_timer_int_mask_t nrfy_timer_compare_int_get</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfy_timer_compare_int_get</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1gac8210bc33f954ef3dacd78f3aabaf0bc" kindref="member">nrf_timer_compare_int_get</ref>  Function for getting the specified timer compare interrupt.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Compare interrupt.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="379" column="41" bodyfile="haly/nrfy_timer.h" bodystart="379" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gae2ce588963374526cdd3600aff60f03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_one_shot_enable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_cc_channel_t cc_channel)</argsstring>
        <name>nrfy_timer_one_shot_enable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref></type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga5b34388603484fa4043803f1ebca04c0" kindref="member">nrf_timer_one_shot_enable</ref>  Function for enabling one-shot operation for the specified capture/compare channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture/compare channel.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="386" column="25" bodyfile="haly/nrfy_timer.h" bodystart="386" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__timer_1gac01283e4c105b9e31ae9f18d5b89c25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_timer_one_shot_disable</definition>
        <argsstring>(NRF_TIMER_Type *p_reg, nrf_timer_cc_channel_t cc_channel)</argsstring>
        <name>nrfy_timer_one_shot_disable</name>
        <param>
          <type>NRF_TIMER_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref></type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__timer__hal_1ga85ee7ab4a9d8e7368602aa73ef560556" kindref="member">nrf_timer_one_shot_disable</ref>  Function for disabling one-shot operation for the specified capture/compare channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture/compare channel.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_timer.h" line="394" column="25" bodyfile="haly/nrfy_timer.h" bodystart="394" bodyend="399"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_TIMER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_TIMER_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_timer_event_enabled_clear(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_timer_event_handle(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_timer_events_process(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_timer<sp/>TIMER<sp/>HALY</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_timer</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>TIMER<sp/>peripheral.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>NRF_TIMER_HAS_ONE_SHOT<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>/**<sp/>@refhal{NRF_TIMER_HAS_ONE_SHOT}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>NRFY_TIMER_HAS_ONE_SHOT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>NRFY_TIMER_HAS_ONE_SHOT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/**<sp/>@brief<sp/>TIMER<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structnrfy__timer__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescaler;<sp/></highlight><highlight class="comment">///&lt;<sp/>Prescaler<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Mode<sp/>of<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref><sp/>bit_width;<sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><ref refid="structnrfy__timer__config__t" kindref="compound">nrfy_timer_config_t</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>TIMER.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>peripheral<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga0f8ab99581aa30b5d7337b046e82ff87" kindref="member">nrfy_timer_periph_configure</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__timer__config__t" kindref="compound">nrfy_timer_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1c02aebd9fc392af80ea2da5dca7ed61" kindref="member">nrf_timer_mode_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__timer__config__t_1aeb445fc24510d0a592bce7660175cb1d" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1bf04327bb1bcbcafb66be1e0d69da39" kindref="member">nrf_timer_bit_width_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__timer__config__t_1a6c20f306f079ff12992bfe22b47fcea7" kindref="member">bit_width</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga5e804fd21a6351e80e20ed94a95e1745" kindref="member">nrf_timer_prescaler_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__timer__config__t_1a78d88d065475b9a9aea64d565d2ea868" kindref="member">prescaler</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>TIMER<sp/>interrupts.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>interrupts<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gab69eec22087e9f1d9c918ca605c3dc99" kindref="member">nrfy_timer_int_init</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__nrf__timer__hal_1ga7abd2e5156d512be8aff97b3bc0c2691" kindref="member">NRF_TIMER_CC_COUNT_MAX</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_timer_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__timer__hal_1ga2e446c45ecb7958a1a15f8f08cdc2c40" kindref="member">nrf_timer_compare_event_get</ref>(i));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gaca84981e7f515192ffc4cb28ce18e554" kindref="member">nrf_timer_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>TIMER<sp/>interrupts.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gaa151b66e837306bcdd4551466fd082b6" kindref="member">nrfy_timer_int_uninit</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>TIMER<sp/>events.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1ga8de88a06a509b1c4f64b20b798436311" kindref="member">nrfy_timer_events_process</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_timer_events_process(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>capturing<sp/>the<sp/>TIMER<sp/>value.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>triggers<sp/>the<sp/>capture<sp/>task<sp/>for<sp/>given<sp/>@p<sp/>channel<sp/>and<sp/>returns</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>latched<sp/>timer<sp/>value.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Capture<sp/>channel<sp/>number.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>@return<sp/>Captured<sp/>value.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1ga53e8052f626b3747f3b945a7d03736c4" kindref="member">nrfy_timer_capture_get</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref><sp/>channel)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gacdcc887e5536df70fb766e2705711b65" kindref="member">nrf_timer_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__timer__hal_1ga992b4f8249b638159cc2abedcca7ba6a" kindref="member">nrf_timer_capture_task_get</ref>(channel));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cc<sp/>=<sp/><ref refid="group__nrf__timer__hal_1ga237a16bb2596cc350a15f741665b7e75" kindref="member">nrf_timer_cc_get</ref>(p_reg,<sp/>channel);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**<sp/>@refhal{nrf_timer_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gad24d1a53dec25bbf19316b09dc01fb04" kindref="member">nrfy_timer_task_trigger</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gacdcc887e5536df70fb766e2705711b65" kindref="member">nrf_timer_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">/**<sp/>@refhal{nrf_timer_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1gac1bf1cf18b1cdeb9b1feb0f3aedc0c44" kindref="member">nrfy_timer_task_address_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__timer__hal_1ga2f4e47e68b4d1af3726747f2a34bb581" kindref="member">nrf_timer_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/**<sp/>@refhal{nrf_timer_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga67ee2b3e385be2ed0e787416c5cdecc4" kindref="member">nrfy_timer_event_clear</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga46788eabb1ad085616c4796bb609c016" kindref="member">nrf_timer_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">/**<sp/>@refhal{nrf_timer_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga67014ac705ca7fad6c246fe6e233cf86" kindref="member">nrfy_timer_event_check</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__timer__hal_1ga594ee9df9b86ae535bc4daf1384d5348" kindref="member">nrf_timer_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**<sp/>@refhal{nrf_timer_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1gac33c67632d00b9cc2f6ca83f1a0e6c6f" kindref="member">nrfy_timer_event_address_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__timer__hal_1ga9ad70342f0808182e18ef591d23b0561" kindref="member">nrf_timer_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">/**<sp/>@refhal{nrf_timer_shorts_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga343a0d35d2019bb3adedcda67e78f4d2" kindref="member">nrfy_timer_shorts_enable</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga8efef095c7570c50f519dfe46539db90" kindref="member">nrf_timer_shorts_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">/**<sp/>@refhal{nrf_timer_shorts_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga63bf0529d359a43da6c31a5070f8970a" kindref="member">nrfy_timer_shorts_disable</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga269330ebccab15e3e819cc2c805629ac" kindref="member">nrf_timer_shorts_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">/**<sp/>@refhal{nrf_timer_shorts_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gac865a10bfc8d40ced433ceb1780cc5f9" kindref="member">nrfy_timer_shorts_set</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga2d9291fbd5262d1f5a3d755e76d175d9" kindref="member">nrf_timer_shorts_set</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">/**<sp/>@refhal{nrf_timer_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gabf102b1b4aa87ff4c378894d2b91e4d9" kindref="member">nrfy_timer_int_enable</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gaca84981e7f515192ffc4cb28ce18e554" kindref="member">nrf_timer_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">/**<sp/>@refhal{nrf_timer_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga37d9af679c84ce8a2e75da2cb4bdcd4a" kindref="member">nrfy_timer_int_disable</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gab26b26a0a091b12491246d4b1f4e65c8" kindref="member">nrf_timer_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">/**<sp/>@refhal{nrf_timer_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1ga9194e9854db4e46025f75617177a651b" kindref="member">nrfy_timer_int_enable_check</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__timer__hal_1gaa6902537565850e0cfd62fa31a1b9083" kindref="member">nrf_timer_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">/**<sp/>@refhal{nrf_timer_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gaffed4f76b265fc849e030a93bb3c7527" kindref="member">nrfy_timer_subscribe_set</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gabcfd966f5844ba4c22476ea36f944bca" kindref="member">nrf_timer_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment">/**<sp/>@refhal{nrf_timer_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga0b0c57d5f6fb35960860b222eaec195d" kindref="member">nrfy_timer_subscribe_clear</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gafce2e496e07c100add401597ad9d82b2" kindref="member">nrf_timer_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**<sp/>@refhal{nrf_timer_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gaf982b735cdb723286854a312b86b8994" kindref="member">nrfy_timer_publish_set</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gaa8e16ed891e6014d425b908daabfa498" kindref="member">nrf_timer_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment">/**<sp/>@refhal{nrf_timer_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga57d1889b7721e45674e72fe587e4ad90" kindref="member">nrfy_timer_publish_clear</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1gafef86d00be35fa22765f9823c17fc6f0" kindref="member">nrf_timer_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="297"><highlight class="comment">/**<sp/>@refhal{nrf_timer_mode_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga2d944eae29a07a442d84aaa216dd76dc" kindref="member">nrfy_timer_mode_set</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref><sp/>mode)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1c02aebd9fc392af80ea2da5dca7ed61" kindref="member">nrf_timer_mode_set</ref>(p_reg,<sp/>mode);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">/**<sp/>@refhal{nrf_timer_mode_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref><sp/><ref refid="group__nrfy__timer_1ga6b417f2ee6017cd03e0534c7c2f30938" kindref="member">nrfy_timer_mode_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga61044c286dc20ccb08df3988bc57a6f2" kindref="member">nrf_timer_mode_t</ref><sp/>mode<sp/>=<sp/><ref refid="group__nrf__timer__hal_1gaf0dbbc911f7fbf8952d261da81bb0aff" kindref="member">nrf_timer_mode_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**<sp/>@refhal{nrf_timer_bit_width_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga5163a9d4bad854bb9b19c7328bd62111" kindref="member">nrfy_timer_bit_width_set</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref><sp/>bit_width)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga1bf04327bb1bcbcafb66be1e0d69da39" kindref="member">nrf_timer_bit_width_set</ref>(p_reg,<sp/>bit_width);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="322"><highlight class="comment">/**<sp/>@refhal{nrf_timer_bit_width_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref><sp/><ref refid="group__nrfy__timer_1ga3f7036df750b52c120123e7b0b1a657d" kindref="member">nrfy_timer_bit_width_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga567f81d672267a218a5b2f0155be3043" kindref="member">nrf_timer_bit_width_t</ref><sp/>bit_width<sp/>=<sp/><ref refid="group__nrf__timer__hal_1gaf2be8f99a56547edd3d37a59b7be2602" kindref="member">nrf_timer_bit_width_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bit_width;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment">/**<sp/>@refhal{nrf_timer_prescaler_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1ga50f014aca66668b6a9fdda1c7d103bd2" kindref="member">nrfy_timer_prescaler_set</ref>(NRF_TIMER_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>prescaler_factor)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga5e804fd21a6351e80e20ed94a95e1745" kindref="member">nrf_timer_prescaler_set</ref>(p_reg,<sp/>prescaler_factor);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**<sp/>@refhal{nrf_timer_prescaler_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1ga9edba941f76b39f47a27d926d671af18" kindref="member">nrfy_timer_prescaler_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prescaler<sp/>=<sp/><ref refid="group__nrf__timer__hal_1ga8018856d922dc9cd77c5f5b74f533f25" kindref="member">nrf_timer_prescaler_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prescaler;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="347"><highlight class="comment">/**<sp/>@refhal{nrf_timer_cc_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gafa689b7c06640d6de10697a2e9c011de" kindref="member">nrfy_timer_cc_set</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref><sp/>cc_channel,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_value)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga8778ec1e21e5a8306d720ab4e69a199b" kindref="member">nrf_timer_cc_set</ref>(p_reg,<sp/>cc_channel,<sp/>cc_value);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**<sp/>@refhal{nrf_timer_cc_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__timer_1ga6fc6d42f2fb43f09c80fc44d46cd7d2d" kindref="member">nrfy_timer_cc_get</ref>(NRF_TIMER_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref><sp/>cc_channel)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cc<sp/>=<sp/><ref refid="group__nrf__timer__hal_1ga237a16bb2596cc350a15f741665b7e75" kindref="member">nrf_timer_cc_get</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**<sp/>@refhal{nrf_timer_capture_task_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__timer__hal_1ga1db410e4a6b7e38de383220b20724906" kindref="member">nrf_timer_task_t</ref><sp/><ref refid="group__nrfy__timer_1gaa2d03138a5c1648a11d57392d56d8675" kindref="member">nrfy_timer_capture_task_get</ref>(uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__timer__hal_1ga992b4f8249b638159cc2abedcca7ba6a" kindref="member">nrf_timer_capture_task_get</ref>(channel);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment">/**<sp/>@refhal{nrf_timer_compare_event_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/><ref refid="group__nrfy__timer_1ga8ad5ee070df1becba5b5e86e007c93ff" kindref="member">nrfy_timer_compare_event_get</ref>(uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__timer__hal_1ga2e446c45ecb7958a1a15f8f08cdc2c40" kindref="member">nrf_timer_compare_event_get</ref>(channel);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">/**<sp/>@refhal{nrf_timer_compare_int_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__timer__hal_1ga55adb42b75222256195fa003f8c0dc20" kindref="member">nrf_timer_int_mask_t</ref><sp/><ref refid="group__nrfy__timer_1gadf919c4c7c41d5b6b1a815c1b0098c24" kindref="member">nrfy_timer_compare_int_get</ref>(uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__timer__hal_1gac8210bc33f954ef3dacd78f3aabaf0bc" kindref="member">nrf_timer_compare_int_get</ref>(channel);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_TIMER_HAS_ONE_SHOT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="385"><highlight class="comment">/**<sp/>@refhal{nrf_timer_one_shot_enable}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gae2ce588963374526cdd3600aff60f03b" kindref="member">nrfy_timer_one_shot_enable</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref><sp/>cc_channel)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga5b34388603484fa4043803f1ebca04c0" kindref="member">nrf_timer_one_shot_enable</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment">/**<sp/>@refhal{nrf_timer_one_shot_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__timer_1gac01283e4c105b9e31ae9f18d5b89c25d" kindref="member">nrfy_timer_one_shot_disable</ref>(NRF_TIMER_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga21336e3aff87c90e95f08eff763d91a8" kindref="member">nrf_timer_cc_channel_t</ref><sp/>cc_channel)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga85ee7ab4a9d8e7368602aa73ef560556" kindref="member">nrf_timer_one_shot_disable</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_TIMER_HAS_ONE_SHOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_timer_event_enabled_clear(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga46788eabb1ad085616c4796bb609c016" kindref="member">nrf_timer_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_timer_event_handle(NRF_TIMER_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga6c7c835fd175129175fe2c08237af3c3" kindref="member">nrf_timer_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__timer__hal_1ga594ee9df9b86ae535bc4daf1384d5348" kindref="member">nrf_timer_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga46788eabb1ad085616c4796bb609c016" kindref="member">nrf_timer_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_timer_events_process(NRF_TIMER_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__nrf__timer__hal_1ga7abd2e5156d512be8aff97b3bc0c2691" kindref="member">NRF_TIMER_CC_COUNT_MAX</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_timer_event_handle(p_reg,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__timer__hal_1ga2e446c45ecb7958a1a15f8f08cdc2c40" kindref="member">nrf_timer_compare_event_get</ref>(i),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;event_mask);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event_mask;</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_TIMER_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_timer.h"/>
  </compounddef>
</doxygen>
