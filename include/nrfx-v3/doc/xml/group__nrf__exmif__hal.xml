<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__exmif__hal" kind="group">
    <compoundname>nrf_exmif_hal</compoundname>
    <title>EXMIF HAL</title>
    <innerclass refid="structnrf__exmif__config__t" prot="public">nrf_exmif_config_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__exmif__hal_1gaf42dd48fe5a55ead8c125e0ca2327948" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_exmif_task_t</name>
        <enumvalue id="group__nrf__exmif__hal_1ggaf42dd48fe5a55ead8c125e0ca2327948a70ff207e3d1587b0e6fc88a3df59b9ff" prot="public">
          <name>NRF_EXMIF_TASK_START</name>
          <initializer>= offsetof(NRF_EXMIF_Type, TASKS_START)</initializer>
          <briefdescription>
<para>Start EXMIF peripheral power and clocks. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__exmif__hal_1ggaf42dd48fe5a55ead8c125e0ca2327948a1f64aa880ee719fdffef829941d5eafe" prot="public">
          <name>NRF_EXMIF_TASK_STOP</name>
          <initializer>= offsetof(NRF_EXMIF_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stop EXMIF peripheral power and clocks. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EXMIF tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="57" column="1" bodyfile="hal/nrf_exmif.h" bodystart="58" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga32dc05c9a7a11b4ade06bb77c20e8c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_task_trigger</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, nrf_exmif_task_t task)</argsstring>
        <name>nrf_exmif_task_trigger</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__exmif__hal_1gaf42dd48fe5a55ead8c125e0ca2327948" kindref="member">nrf_exmif_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified EXMIF task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="145" column="24" bodyfile="hal/nrf_exmif.h" bodystart="145" bodyend="149" declfile="hal/nrf_exmif.h" declline="82" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga1db69de360627b548c48b4a48473fdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_exmif_task_address_get</definition>
        <argsstring>(NRF_EXMIF_Type const *p_reg, nrf_exmif_task_t task)</argsstring>
        <name>nrf_exmif_task_address_get</name>
        <param>
          <type>NRF_EXMIF_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__exmif__hal_1gaf42dd48fe5a55ead8c125e0ca2327948" kindref="member">nrf_exmif_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified EXMIF task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="151" column="28" bodyfile="hal/nrf_exmif.h" bodystart="151" bodyend="155" declfile="hal/nrf_exmif.h" declline="93" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga26657dc857bcef3553cf9396bbd5142b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_reset_set</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, bool enable)</argsstring>
        <name>nrf_exmif_reset_set</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling EXMIF reset state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if reset state is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="157" column="24" bodyfile="hal/nrf_exmif.h" bodystart="157" bodyend="162" declfile="hal/nrf_exmif.h" declline="102" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga4253d08a319e301450684822ad2fb44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_locked_access_set</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, bool enable)</argsstring>
        <name>nrf_exmif_locked_access_set</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling locked APB access to serial memory controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if locked APB access is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="164" column="24" bodyfile="hal/nrf_exmif.h" bodystart="164" bodyend="170" declfile="hal/nrf_exmif.h" declline="111" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1gad1fdc1d5ad54e06446ba169e7e43399b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_device_config</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, uint8_t device_idx, nrf_exmif_config_t const *p_device)</argsstring>
        <name>nrf_exmif_device_config</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>device_idx</declname>
        </param>
        <param>
          <type><ref refid="structnrf__exmif__config__t" kindref="compound">nrf_exmif_config_t</ref> const *</type>
          <declname>p_device</declname>
        </param>
        <briefdescription>
<para>Function for configuring mapping of the memory device to EXMIF peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_device</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the configuration structure of the memory device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="172" column="24" bodyfile="hal/nrf_exmif.h" bodystart="172" bodyend="192" declfile="hal/nrf_exmif.h" declline="121" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga67032704d7e7d27e2e62ba95dc9c1c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_device_enable</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, uint8_t device_idx)</argsstring>
        <name>nrf_exmif_device_enable</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>device_idx</declname>
        </param>
        <briefdescription>
<para>Function for enabling the EXMIF memory device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number to enable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="194" column="24" bodyfile="hal/nrf_exmif.h" bodystart="194" bodyend="210" declfile="hal/nrf_exmif.h" declline="131" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__exmif__hal_1ga154ee2f9b0a1fa786f76be9efb68dc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_exmif_device_disable</definition>
        <argsstring>(NRF_EXMIF_Type *p_reg, uint8_t device_idx)</argsstring>
        <name>nrf_exmif_device_disable</name>
        <param>
          <type>NRF_EXMIF_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>device_idx</declname>
        </param>
        <briefdescription>
<para>Function for disabling the EXMIF memory device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">device_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="212" column="24" bodyfile="hal/nrf_exmif.h" bodystart="212" bodyend="228" declfile="hal/nrf_exmif.h" declline="140" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__exmif__hal_1gaea0b8e6ffaaa929a1e5d3c764c21ac25" prot="public" static="no">
        <name>NRF_EXMIF_MAX_MEMORY_DEVICE_SIZE</name>
        <initializer>0x10000000UL</initializer>
        <briefdescription>
<para>Maximum EXMIF memory size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="51" column="9" bodyfile="hal/nrf_exmif.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__exmif__hal_1gab5ad02ea9d897c64754787c171576a58" prot="public" static="no">
        <name>NRF_EXMIF_MAX_NUMBER_OF_DEVICES</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Maximum number of EXMIF memory devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_exmif.h" line="54" column="9" bodyfile="hal/nrf_exmif.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the External Memory Interface (EXMIF) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
