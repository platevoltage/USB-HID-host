<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__mvdma__hal" kind="group">
    <compoundname>nrf_mvdma_hal</compoundname>
    <title>MVDMA HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_task_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea8d93caf32970ead40bb7991d191ada8a" prot="public">
          <name>NRF_MVDMA_TASK_PAUSE</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_PAUSE)</initializer>
          <briefdescription>
<para>Pause DMA transaction at next idle stage on memory bus. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eeab1c2e0da085f0f0657f178da17be5f34" prot="public">
          <name>NRF_MVDMA_TASK_RESET</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_RESET)</initializer>
          <briefdescription>
<para>Return all registers to default state and FSMs to IDLE. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea4148010af285f4346a78bf058387e661" prot="public">
          <name>NRF_MVDMA_TASK_START0</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[0])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea94490cc7e4f8df4a77de196f000017c5" prot="public">
          <name>NRF_MVDMA_TASK_START1</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[1])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea30a2e2301c0737476fc3bc351441e7b3" prot="public">
          <name>NRF_MVDMA_TASK_START2</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[2])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea15d1a042da8dd5c050b9a30456e3c23e" prot="public">
          <name>NRF_MVDMA_TASK_START3</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[3])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea3bcc5e0f52e9dfc4791905d2e6d132d8" prot="public">
          <name>NRF_MVDMA_TASK_START4</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[4])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea4f2950563085d427cab7836915f1b577" prot="public">
          <name>NRF_MVDMA_TASK_START5</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[5])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea8ce83fb0c6772416e41762250d3a1ae3" prot="public">
          <name>NRF_MVDMA_TASK_START6</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[6])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea1c2e2be600f394f67910e9252bcf2431" prot="public">
          <name>NRF_MVDMA_TASK_START7</name>
          <initializer>= offsetof(NRF_MVDMA_Type, TASKS_START[7])</initializer>
          <briefdescription>
<para>Start or continue processing of descriptor list 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="73" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="74" bodyend="89"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_event_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fad39f02c6e66781fdb74dd359507034ce" prot="public">
          <name>NRF_MVDMA_EVENT_END</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_END)</initializer>
          <briefdescription>
<para>Sink data descriptor list has been completed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac50a517bbd48467bb55a2ac017ba6777" prot="public">
          <name>NRF_MVDMA_EVENT_STARTED</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_STARTED)</initializer>
          <briefdescription>
<para>Data descriptor list processing has been started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa59980a449a84dbb08da5dce4ab2f1a99" prot="public">
          <name>NRF_MVDMA_EVENT_PAUSED</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_PAUSED)</initializer>
          <briefdescription>
<para>Data transfer has been paused. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac4e8ebd0e07363938099f074f2825e0a" prot="public">
          <name>NRF_MVDMA_EVENT_RESET</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_RESET)</initializer>
          <briefdescription>
<para>MVDMA has been reset. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa125898a4bae1add7fdf040f74b541cd6" prot="public">
          <name>NRF_MVDMA_EVENT_SOURCEBUSERROR</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_SOURCE.BUSERROR)</initializer>
          <briefdescription>
<para>Bus error has been received on the source channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa63d43fee3a4bffbcd5c70d153177a4bf" prot="public">
          <name>NRF_MVDMA_EVENT_SOURCESELECTJOBDONE</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_SOURCE.SELECTJOBDONE)</initializer>
          <briefdescription>
<para>Job on the source channel with event enable attribute bit active has been processed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5faa8c96f13ef51ad9e896e0cbe57405f7f" prot="public">
          <name>NRF_MVDMA_EVENT_SINKBUSERROR</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_SINK.BUSERROR)</initializer>
          <briefdescription>
<para>Bus error has been received on the sink channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fadd433afccebae42c2d0d7de3eaac4871" prot="public">
          <name>NRF_MVDMA_EVENT_SINKSELECTJOBDONE</name>
          <initializer>= offsetof(NRF_MVDMA_Type, EVENTS_SINK.SELECTJOBDONE)</initializer>
          <briefdescription>
<para>Job on the sink channel with event enable attribute bit active has been processed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="92" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="93" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_int_mask_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118affe923eb0be9c30897dbaabd5f39bf6e" prot="public">
          <name>NRF_MVDMA_INT_END_MASK</name>
          <initializer>= MVDMA_INTENSET_END_Msk</initializer>
          <briefdescription>
<para>Interrupt on END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118a1e63156ea82b9e69f933d41cbe3d2fef" prot="public">
          <name>NRF_MVDMA_INT_STARTED_MASK</name>
          <initializer>= MVDMA_INTENSET_STARTED_Msk</initializer>
          <briefdescription>
<para>Interrupt on STARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118a0174f813042616ed2d01d83d56b7cbd7" prot="public">
          <name>NRF_MVDMA_INT_PAUSED_MASK</name>
          <initializer>= MVDMA_INTENSET_PAUSED_Msk</initializer>
          <briefdescription>
<para>Interrupt on PAUSED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118a030611bf56d898b647e528f2d00947ee" prot="public">
          <name>NRF_MVDMA_INT_RESET_MASK</name>
          <initializer>= MVDMA_INTENSET_RESET_Msk</initializer>
          <briefdescription>
<para>Interrupt on RESET event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118a4d7df2105f1d4c36acaadc561961e175" prot="public">
          <name>NRF_MVDMA_INT_SOURCEBUSERROR_MASK</name>
          <initializer>= MVDMA_INTENSET_SOURCEBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on SOURCEBUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118ad7f55b60ba24d68894cc4e05a0e8f1b7" prot="public">
          <name>NRF_MVDMA_INT_SINKBUSERROR_MASK</name>
          <initializer>= MVDMA_INTENSET_SINKBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on SINKBUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118ac46aa7a8cc404fcd046b66e7814189fc" prot="public">
          <name>NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK</name>
          <initializer>= MVDMA_INTENSET_SOURCESELECTJOBDONE_Msk</initializer>
          <briefdescription>
<para>Interrupt on SOURCESELECTJOBDONE event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga2fc7541ce6835a58a26f9ba3794f3118a38dd7c7691e7400d4b56dbc86e287c70" prot="public">
          <name>NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK</name>
          <initializer>= MVDMA_INTENSET_SINKSELECTJOBDONE_Msk</initializer>
          <briefdescription>
<para>Interrupt on SINKSELECTJOBDONE event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="117" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="118" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_mode_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga611db7934e2236bfe69148e89823a3a3a4c1401a19a7d56f3df8673f45ec820c3" prot="public">
          <name>NRF_MVDMA_MODE_SINGLE</name>
          <initializer>= MVDMA_CONFIG_MODE_MODE_SingleMode</initializer>
          <briefdescription>
<para>Descriptor list pointers are stored in SOURCELISTPTR and SINKLISTPTR registers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga611db7934e2236bfe69148e89823a3a3a2e74b11949b60934564bbb3b708fec39" prot="public">
          <name>NRF_MVDMA_MODE_MULTI</name>
          <initializer>= MVDMA_CONFIG_MODE_MODE_MultiMode</initializer>
          <briefdescription>
<para>Descriptor list pointers are stored in a list in the memory. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA modes of operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="136" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga064227e6f56210dfaaecbef20ada7377" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_aximode_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga064227e6f56210dfaaecbef20ada7377a9bf466b3bcc69a72e90032f4d62a4071" prot="public">
          <name>NRF_MVDMA_AXIMODE_AXI</name>
          <initializer>= MVDMA_CONFIG_AXIMODE_AXIMODE_AXI</initializer>
          <briefdescription>
<para>AXI burst transactions may be longer than one beat. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga064227e6f56210dfaaecbef20ada7377a2e11e5def1f02f70d6fcc68da0602eec" prot="public">
          <name>NRF_MVDMA_AXIMODE_AXILITE</name>
          <initializer>= MVDMA_CONFIG_AXIMODE_AXIMODE_AXILITE</initializer>
          <briefdescription>
<para>All AXI transactions are one-beat accesses. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA AXI modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="144" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1gae569c468089413c6e25a5108060e8cb1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_fifo_status_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1ggae569c468089413c6e25a5108060e8cb1a5cdd6b960f67c71fd0572ab548b39e15" prot="public">
          <name>NRF_MVDMA_FIFO_STATUS_EMPTY</name>
          <initializer>= MVDMA_STATUS_FIFO_FIFOSTATUS_Empty</initializer>
          <briefdescription>
<para>No data in intermediate FIFO. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae569c468089413c6e25a5108060e8cb1aacd8c10ee2deb2eaa4f9f25b4aad4a47" prot="public">
          <name>NRF_MVDMA_FIFO_STATUS_NOT_EMPTY</name>
          <initializer>= MVDMA_STATUS_FIFO_FIFOSTATUS_NotEmpty</initializer>
          <briefdescription>
<para>Intermediate FIFO contains data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1ggae569c468089413c6e25a5108060e8cb1ab6f8c8b599317a38a7623f7a3b4667dd" prot="public">
          <name>NRF_MVDMA_FIFO_STATUS_FULL</name>
          <initializer>= MVDMA_STATUS_FIFO_FIFOSTATUS_Full</initializer>
          <briefdescription>
<para>Intermediate FIFO is full. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA FIFO status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="152" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_source_error_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2adf74833a0e7246da1bc9580e9b715d4a" prot="public">
          <name>NRF_MVDMA_SOURCE_ERROR_NONE</name>
          <initializer>= MVDMA_SOURCE_BUSERROR_BUSERROR_NoError</initializer>
          <briefdescription>
<para>No error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2aa25d0ae7aa6b817f7feba44a6e2d20f0" prot="public">
          <name>NRF_MVDMA_SOURCE_ERROR_READ</name>
          <initializer>= MVDMA_SOURCE_BUSERROR_BUSERROR_ReadError</initializer>
          <briefdescription>
<para>Error related to memory when reading joblist or memory/register when reading data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2aac6767a699a33b6c09cedab003cb16b5" prot="public">
          <name>NRF_MVDMA_SOURCE_ERROR_READ_DECODE</name>
          <initializer>= MVDMA_SOURCE_BUSERROR_BUSERROR_ReadDecodeError</initializer>
          <briefdescription>
<para>Error related to the joblist address or address when reading memory/register. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA data source errors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="164" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mvdma__hal_1ga98f9129dba13ac35d89a1cfc60c2e4e9" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mvdma_sink_error_t</name>
        <enumvalue id="group__nrf__mvdma__hal_1gga98f9129dba13ac35d89a1cfc60c2e4e9ae502dfe703c1e1285c397502718ca0e0" prot="public">
          <name>NRF_MVDMA_SINK_ERROR_NONE</name>
          <initializer>= MVDMA_SINK_BUSERROR_BUSERROR_NoError</initializer>
          <briefdescription>
<para>No error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga98f9129dba13ac35d89a1cfc60c2e4e9a3f43fe8ee11e981cba89b6d3d51896c1" prot="public">
          <name>NRF_MVDMA_SINK_ERROR_READ</name>
          <initializer>= MVDMA_SINK_BUSERROR_BUSERROR_ReadError</initializer>
          <briefdescription>
<para>Error related to memory when reading joblist. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga98f9129dba13ac35d89a1cfc60c2e4e9ad30bebc074b9a784a656df0d3d58f27f" prot="public">
          <name>NRF_MVDMA_SINK_ERROR_WRITE</name>
          <initializer>= MVDMA_SINK_BUSERROR_BUSERROR_WriteError</initializer>
          <briefdescription>
<para>Error related to memory/register when writing data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga98f9129dba13ac35d89a1cfc60c2e4e9a3b1bc48232265a979a5f7818861e6793" prot="public">
          <name>NRF_MVDMA_SINK_ERROR_DECODE_READ</name>
          <initializer>= MVDMA_SINK_BUSERROR_BUSERROR_ReadDecodeError</initializer>
          <briefdescription>
<para>Error related to the joblist address when reading joblist. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mvdma__hal_1gga98f9129dba13ac35d89a1cfc60c2e4e9a13852bfce127855c75243cf1f4a52f6f" prot="public">
          <name>NRF_MVDMA_SINK_ERROR_DECODE_WRITE</name>
          <initializer>= MVDMA_SINK_BUSERROR_BUSERROR_WriteDecodeError</initializer>
          <briefdescription>
<para>Error related to the memory/register address when writing data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MVDMA data sink errors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="178" column="1" bodyfile="hal/nrf_mvdma.h" bodystart="179" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_task_trigger</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrf_mvdma_task_trigger</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified MVDMA task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="492" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="492" bodyend="496" declfile="hal/nrf_mvdma.h" declline="201" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gafcbc21aa3b202cea94a75170ea2c8d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_task_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrf_mvdma_task_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified MVDMA task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="498" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="498" bodyend="502" declfile="hal/nrf_mvdma.h" declline="212" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga770ec8d1849122f7bf50341e0bceb7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_mvdma_task_t nrf_mvdma_start_task_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_mvdma_start_task_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting START task by its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the START task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>START task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="504" column="36" bodyfile="hal/nrf_mvdma.h" bodystart="504" bodyend="509" declfile="hal/nrf_mvdma.h" declline="223" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga74a7b2e9a23a8eeaa82bdce6b9575374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_event_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrf_mvdma_event_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified MVDMA event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="511" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="511" bodyend="515" declfile="hal/nrf_mvdma.h" declline="232" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga367b9509c93895cb50689d31ac284c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_mvdma_event_check</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrf_mvdma_event_check</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the MVDMA event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="517" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="517" bodyend="521" declfile="hal/nrf_mvdma.h" declline="244" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga7d44269c67a65e59a4a9606593782002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_event_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrf_mvdma_event_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified MVDMA event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="523" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="523" bodyend="527" declfile="hal/nrf_mvdma.h" declline="255" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga519024a15bce6aa1ce1c25ca32e9a5a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_int_enable</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mvdma_int_enable</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="529" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="529" bodyend="532" declfile="hal/nrf_mvdma.h" declline="265" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga18e7178bdf80b95ac9d531fcbeb0d7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_int_disable</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mvdma_int_disable</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="534" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="534" bodyend="537" declfile="hal/nrf_mvdma.h" declline="274" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga773770b5370b2f21403fffa5bb532598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_int_enable_check</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mvdma_int_enable_check</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="539" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="539" bodyend="542" declfile="hal/nrf_mvdma.h" declline="285" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga88407231c53c6d9d92ab20ab6c81110d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_int_pending_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_int_pending_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of pending interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>States of pending interrupt are saved as a bitmask. One set at particular position means that interrupt for event is pending.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitmask with information about pending interrupts. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="544" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="544" bodyend="547" declfile="hal/nrf_mvdma.h" declline="298" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga855b2fdd44b7e7a4bce7659b5190f54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_subscribe_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task, uint8_t channel)</argsstring>
        <name>nrf_mvdma_subscribe_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given MVDMA task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="309" column="24" declfile="hal/nrf_mvdma.h" declline="309" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga962201d7a29f3b10c4a520248efa4057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_subscribe_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrf_mvdma_subscribe_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given MVDMA task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="320" column="24" declfile="hal/nrf_mvdma.h" declline="320" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gaa9370f101858358a70af0964ca7a056a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_publish_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event, uint8_t channel)</argsstring>
        <name>nrf_mvdma_publish_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given MVDMA event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="331" column="24" declfile="hal/nrf_mvdma.h" declline="331" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gadc4859cd77da19bb928f0a477e5c3c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_publish_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrf_mvdma_publish_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given MVDMA event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="342" column="24" declfile="hal/nrf_mvdma.h" declline="342" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga0efe65b3bb929a13864bb29e0b570428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_mode_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_mode_t mode)</argsstring>
        <name>nrf_mvdma_mode_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Function for setting the MVDMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired operating mode for MVDMA. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="579" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="579" bodyend="582" declfile="hal/nrf_mvdma.h" declline="352" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga313afb53dca74554c3b4356b7246f517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_aximode_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_aximode_t aximode)</argsstring>
        <name>nrf_mvdma_aximode_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga064227e6f56210dfaaecbef20ada7377" kindref="member">nrf_mvdma_aximode_t</ref></type>
          <declname>aximode</declname>
        </param>
        <briefdescription>
<para>Function for setting the AXI mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aximode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired AXI mode for MVDMA. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="585" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="585" bodyend="588" declfile="hal/nrf_mvdma.h" declline="361" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga6ee1a92116337e8fc4c1f5cdba571778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_source_list_ptr_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_vdma_job_t const *p_job)</argsstring>
        <name>nrf_mvdma_source_list_ptr_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> const *</type>
          <declname>p_job</declname>
        </param>
        <briefdescription>
<para>Function for setting the pointer to the source descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_job</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a job list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="591" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="591" bodyend="599" declfile="hal/nrf_mvdma.h" declline="372" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga600ce66bf59c367d736c20a9cad42a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> *</type>
        <definition>NRF_STATIC_INLINE nrf_vdma_job_t * nrf_mvdma_source_list_ptr_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_source_list_ptr_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the source descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a job list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="601" column="35" bodyfile="hal/nrf_mvdma.h" bodystart="601" bodyend="608" declfile="hal/nrf_mvdma.h" declline="384" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gab120702d8cc46932695bcfa1b8b700a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mvdma_sink_list_ptr_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_vdma_job_t const *p_job)</argsstring>
        <name>nrf_mvdma_sink_list_ptr_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> const *</type>
          <declname>p_job</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the sink descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_job</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a job list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="610" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="610" bodyend="618" declfile="hal/nrf_mvdma.h" declline="394" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gaf012e8c81fd1e2735b818a36f4e5cab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> *</type>
        <definition>NRF_STATIC_INLINE nrf_vdma_job_t * nrf_mvdma_sink_list_ptr_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_sink_list_ptr_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the sink descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a job list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="620" column="35" bodyfile="hal/nrf_mvdma.h" bodystart="620" bodyend="627" declfile="hal/nrf_mvdma.h" declline="406" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga8fbb296c6cb2888e3186bfeba3de4678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_crc_result_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_crc_result_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the result of CRC checksum calculation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of CRC checksum calculation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="629" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="629" bodyend="632" declfile="hal/nrf_mvdma.h" declline="415" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gaa604217304e34b65605fb1cdc7160689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1gae569c468089413c6e25a5108060e8cb1" kindref="member">nrf_mvdma_fifo_status_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_mvdma_fifo_status_t nrf_mvdma_fifo_status_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_fifo_status_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the status of intermediate FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Intermediate FIFO status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="634" column="43" bodyfile="hal/nrf_mvdma.h" bodystart="634" bodyend="637" declfile="hal/nrf_mvdma.h" declline="424" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga048d320f31fc4f79927e69ba28b97f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_mvdma_activity_check</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_activity_check</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking the MVDMA activity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>MVDMA is processing data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>MVDMA is idle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="639" column="24" bodyfile="hal/nrf_mvdma.h" bodystart="639" bodyend="643" declfile="hal/nrf_mvdma.h" declline="434" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gab11530bca70704fa00c6605fc5df11f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1ga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2" kindref="member">nrf_mvdma_source_error_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_mvdma_source_error_t nrf_mvdma_source_error_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_source_error_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the bus error of MVDMA data source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bus error of data source. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="645" column="44" bodyfile="hal/nrf_mvdma.h" bodystart="645" bodyend="652" declfile="hal/nrf_mvdma.h" declline="443" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga0a4df038da3b5e328413aed798212d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1ga98f9129dba13ac35d89a1cfc60c2e4e9" kindref="member">nrf_mvdma_sink_error_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_mvdma_sink_error_t nrf_mvdma_sink_error_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_sink_error_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the bus error of MVDMA data source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bus error of data sink. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="654" column="42" bodyfile="hal/nrf_mvdma.h" bodystart="654" bodyend="661" declfile="hal/nrf_mvdma.h" declline="452" declcolumn="42"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga27ce2352bcae4bec021641c662e88a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_last_source_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_last_source_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the latest address being accessed on the source AXI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest address being accessed on the source AXI channel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="663" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="663" bodyend="670" declfile="hal/nrf_mvdma.h" declline="461" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gac83dac3081b964c22bc05821f0f485fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_last_sink_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_last_sink_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the latest address being accessed on the sink AXI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest address being accessed on the sink AXI channel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="672" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="672" bodyend="679" declfile="hal/nrf_mvdma.h" declline="470" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1gaaa85c9f87d1afa300b35d39675fdf11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_source_job_count_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_source_job_count_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of completed jobs in the current source descriptor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of completed jobs in the current source descriptor list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="681" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="681" bodyend="688" declfile="hal/nrf_mvdma.h" declline="479" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mvdma__hal_1ga6eaf1d2c50551a0a955650036486b7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mvdma_sink_job_count_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrf_mvdma_sink_job_count_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of completed jobs in the current sink descriptor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of completed jobs in the current sink descriptor list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="690" column="28" bodyfile="hal/nrf_mvdma.h" bodystart="690" bodyend="697" declfile="hal/nrf_mvdma.h" declline="488" declcolumn="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__mvdma__hal_1gae2a46e84fd2c194d6d687f760e5b563b" prot="public" static="no">
        <name>NRF_MVDMA_HAS_NEW_VER</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether MVDMA uses new or old version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="53" column="9" bodyfile="hal/nrf_mvdma.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__mvdma__hal_1ga3136a8d34e086cd5984556a0d4c28203" prot="public" static="no">
        <name>NRF_MVDMA_HAS_AXIMODE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether AXIMODE configuration is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="60" column="9" bodyfile="hal/nrf_mvdma.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__mvdma__hal_1gacdd297f6e4e4803856edb402ce6dfd29" prot="public" static="no">
        <name>NRF_MVDMA_HAS_MULTIMODE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Macro for checking if multi-mode operation is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mvdma.h" line="67" column="9" bodyfile="hal/nrf_mvdma.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the Memory-to-Memory Vector DMA (MVDMA) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
