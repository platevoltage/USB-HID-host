<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfx__ppi_8h" kind="file" language="C++">
    <compoundname>nrfx_ppi.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__ppi_8h" local="no">hal/nrf_ppi.h</includes>
    <incdepgraph>
      <node id="1">
        <label>drivers/include/nrfx_ppi.h</label>
        <link refid="nrfx__ppi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfx__ppi_1ga8b7e3c66e0834e23e7f02c1317cc01ec" prot="public" static="no">
        <name>NRFX_PPI_ALL_APP_CHANNELS_MASK</name>
        <initializer>((uint32_t)0xFFFFFFFFuL &amp; ~(<ref refid="group__nrfx__glue_1ga746e0cb5bec951bfad0dca1135176392" kindref="member">NRFX_PPI_CHANNELS_USED</ref>))</initializer>
        <briefdescription>
<para>Bitfield representing all PPI channels available to the application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="63" column="9" bodyfile="drivers/include/nrfx_ppi.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__ppi_1gac9666c0c1b19e6f124087a74e4009921" prot="public" static="no">
        <name>NRFX_PPI_PROG_APP_CHANNELS_MASK</name>
        <initializer>((uint32_t)0x000FFFFFuL &amp; ~(<ref refid="group__nrfx__glue_1ga746e0cb5bec951bfad0dca1135176392" kindref="member">NRFX_PPI_CHANNELS_USED</ref>))</initializer>
        <briefdescription>
<para>Bitfield representing programmable PPI channels available to the application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="65" column="9" bodyfile="drivers/include/nrfx_ppi.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__ppi_1ga9774b4e5e8cd8d9d76a89f481dc8d999" prot="public" static="no">
        <name>NRFX_PPI_ALL_APP_GROUPS_MASK</name>
        <initializer>(((1uL &lt;&lt; PPI_GROUP_NUM) - 1) &amp; ~(<ref refid="group__nrfx__glue_1gae12509ae47924b274993f410d86a1d9a" kindref="member">NRFX_PPI_GROUPS_USED</ref>))</initializer>
        <briefdescription>
<para>Bitfield representing all PPI groups available to the application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="72" column="9" bodyfile="drivers/include/nrfx_ppi.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__ppi_1gaad2479ca250a6828f49cd5ca66f6bdce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_ppi_free_all</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_ppi_free_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for uninitializing the PPI module. </para>
        </briefdescription>
        <detaileddescription>
<para>This function disables all channels and clears the channel groups. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="79" column="6" declfile="drivers/include/nrfx_ppi.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga95d5773fc3f4e93c64aec96e58019049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_alloc</definition>
        <argsstring>(nrf_ppi_channel_t *p_channel)</argsstring>
        <name>nrfx_ppi_channel_alloc</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref> *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
<para>Function for allocating a PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allocates the first unused PPI channel.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga92160c3eaf43857deebeb9e9c063378c" kindref="member">nrfx_flag32_alloc</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the PPI channel that has been allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="92" column="12" declfile="drivers/include/nrfx_ppi.h" declline="92" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1gae405d0b577a69dfe6192c6c7204725c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_free</definition>
        <argsstring>(nrf_ppi_channel_t channel)</argsstring>
        <name>nrfx_ppi_channel_free</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for freeing a PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function also disables the chosen channel.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga62a433fd3eaec5dbf39b9cebcb7998be" kindref="member">nrfx_flag32_free</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not user-configurable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="105" column="12" declfile="drivers/include/nrfx_ppi.h" declline="105" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1gae3d0c2c6e33fec27c262cd5ec87190db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_assign</definition>
        <argsstring>(nrf_ppi_channel_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrfx_ppi_channel_assign</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for assigning task and event endpoints to the PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be assigned endpoints. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Event endpoint address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Task endpoint address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not allocated for the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not user-configurable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="118" column="12" declfile="drivers/include/nrfx_ppi.h" declline="118" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga731bdfce05a01c7576dc14af43e89b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_fork_assign</definition>
        <argsstring>(nrf_ppi_channel_t channel, uint32_t fork_tep)</argsstring>
        <name>nrfx_ppi_channel_fork_assign</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for assigning fork endpoint to the PPI channel or clearing it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be assigned endpoints. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Fork task endpoint address or 0 to clear.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not allocated for the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Function is not supported. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="130" column="12" declfile="drivers/include/nrfx_ppi.h" declline="130" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga928edfcbceafb1d635d264df12f0e07c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_enable</definition>
        <argsstring>(nrf_ppi_channel_t channel)</argsstring>
        <name>nrfx_ppi_channel_enable</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for enabling a PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be enabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The user-configurable channel is not allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel cannot be enabled by the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="141" column="12" declfile="drivers/include/nrfx_ppi.h" declline="141" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga6eab16754df257eba23dbe53a420a814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channel_disable</definition>
        <argsstring>(nrf_ppi_channel_t channel)</argsstring>
        <name>nrfx_ppi_channel_disable</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for disabling a PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be disabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The user-configurable channel is not allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel cannot be disabled by the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="152" column="12" declfile="drivers/include/nrfx_ppi.h" declline="152" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1gafcce6ba302b942f3b790938c868253e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_group_alloc</definition>
        <argsstring>(nrf_ppi_channel_group_t *p_group)</argsstring>
        <name>nrfx_ppi_group_alloc</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref> *</type>
          <declname>p_group</declname>
        </param>
        <briefdescription>
<para>Function for allocating a PPI channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allocates the first unused PPI group.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga92160c3eaf43857deebeb9e9c063378c" kindref="member">nrfx_flag32_alloc</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the PPI channel group that has been allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel group was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel group to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="165" column="12" declfile="drivers/include/nrfx_ppi.h" declline="165" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga6f80914264dd4ee829b32e80e11eb86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_group_free</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_group_free</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for freeing a PPI channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function also disables the chosen group.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga62a433fd3eaec5dbf39b9cebcb7998be" kindref="member">nrfx_flag32_free</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel group to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel group was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel group is not user-configurable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="178" column="12" declfile="drivers/include/nrfx_ppi.h" declline="178" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga06676ff87e6cbd441cd97e18a7d3eea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE uint32_t</type>
        <definition>NRFX_STATIC_INLINE uint32_t nrfx_ppi_channel_to_mask</definition>
        <argsstring>(nrf_ppi_channel_t channel)</argsstring>
        <name>nrfx_ppi_channel_to_mask</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Compute a channel mask for NRF_PPI registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to transform to a mask.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Channel mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="306" column="29" bodyfile="drivers/include/nrfx_ppi.h" bodystart="306" bodyend="309" declfile="drivers/include/nrfx_ppi.h" declline="187" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga40fc2322df202dc800bd698f64ac22be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channels_include_in_group</definition>
        <argsstring>(uint32_t channel_mask, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_channels_include_in_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for including multiple PPI channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channels to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group in which to include the channels.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channels was successfully included. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group or channels are not an application channels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="200" column="12" declfile="drivers/include/nrfx_ppi.h" declline="200" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1gadbc1ba0968c5580492e41bf4876a6110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE <ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>NRFX_STATIC_INLINE nrfx_err_t nrfx_ppi_channel_include_in_group</definition>
        <argsstring>(nrf_ppi_channel_t channel, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_channel_include_in_group</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for including a PPI channel in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be added. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group in which to include the channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully included. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group or channel is not an application channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="311" column="31" bodyfile="drivers/include/nrfx_ppi.h" bodystart="311" bodyend="315" declfile="drivers/include/nrfx_ppi.h" declline="214" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga6ca88a010d0cfe54481786cd78be93f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_channels_remove_from_group</definition>
        <argsstring>(uint32_t channel_mask, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_channels_remove_from_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for removing multiple PPI channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channels to be removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group from which to remove the channels.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group or channels are not an application channels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="228" column="12" declfile="drivers/include/nrfx_ppi.h" declline="228" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga1e7c5ef755a04166e165de701b4225bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE <ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>NRFX_STATIC_INLINE nrfx_err_t nrfx_ppi_channel_remove_from_group</definition>
        <argsstring>(nrf_ppi_channel_t channel, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_channel_remove_from_group</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for removing a single PPI channel from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel to be removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group from which to remove the channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully removed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group or channel is not an application channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="317" column="31" bodyfile="drivers/include/nrfx_ppi.h" bodystart="317" bodyend="321" declfile="drivers/include/nrfx_ppi.h" declline="242" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga5964c2410393948ff56a8845c89890b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE <ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>NRFX_STATIC_INLINE nrfx_err_t nrfx_ppi_group_clear</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_group_clear</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for clearing a PPI channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group to be cleared.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The group was successfully cleared. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="323" column="31" bodyfile="drivers/include/nrfx_ppi.h" bodystart="323" bodyend="326" declfile="drivers/include/nrfx_ppi.h" declline="254" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga8831e127c00810d5bca5f96a6bd1c83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_group_enable</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_group_enable</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for enabling a PPI channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group to be enabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The group was successfully enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="265" column="12" declfile="drivers/include/nrfx_ppi.h" declline="265" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga6b521947858393f819ab118fe2af2763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_ppi_group_disable</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_group_disable</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for disabling a PPI channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group to be disabled.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The group was successfully disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an application group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>Group is not an allocated group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="276" column="12" declfile="drivers/include/nrfx_ppi.h" declline="276" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga4f7f1724b24133207d244f26dea787ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE uint32_t</type>
        <definition>NRFX_STATIC_INLINE uint32_t nrfx_ppi_task_address_get</definition>
        <argsstring>(nrf_ppi_task_t task)</argsstring>
        <name>nrfx_ppi_task_address_get</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a PPI task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="328" column="29" bodyfile="drivers/include/nrfx_ppi.h" bodystart="328" bodyend="331" declfile="drivers/include/nrfx_ppi.h" declline="285" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga3ce324ba15f0ddf0cf1a7e370fd11ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE uint32_t</type>
        <definition>NRFX_STATIC_INLINE uint32_t nrfx_ppi_task_group_enable_address_get</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_task_group_enable_address_get</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the enable task of a PPI group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel group</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="333" column="29" bodyfile="drivers/include/nrfx_ppi.h" bodystart="333" bodyend="336" declfile="drivers/include/nrfx_ppi.h" declline="294" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ppi_1ga3b3a7e3ac400117b83ef1e7e5506f7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE uint32_t</type>
        <definition>NRFX_STATIC_INLINE uint32_t nrfx_ppi_task_group_disable_address_get</definition>
        <argsstring>(nrf_ppi_channel_group_t group)</argsstring>
        <name>nrfx_ppi_task_group_disable_address_get</name>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the enable task of a PPI group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channel group</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_ppi.h" line="338" column="29" bodyfile="drivers/include/nrfx_ppi.h" bodystart="338" bodyend="341" declfile="drivers/include/nrfx_ppi.h" declline="303" declcolumn="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_ppi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfx_ppi<sp/>PPI<sp/>allocator</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_ppi</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Programmable<sp/>Peripheral<sp/>Interconnect<sp/>(PPI)<sp/>allocator.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(NRFX_PPI_CHANNELS_USED)<sp/>&amp;&amp;<sp/>!defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bitfield<sp/>representing<sp/>PPI<sp/>channels<sp/>used<sp/>by<sp/>external<sp/>modules.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_CHANNELS_USED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRFX_PPI_GROUPS_USED)<sp/>&amp;&amp;<sp/>!defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bitfield<sp/>representing<sp/>PPI<sp/>groups<sp/>used<sp/>by<sp/>external<sp/>modules.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_GROUPS_USED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_CH_NUM<sp/>&gt;<sp/>16)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">/**<sp/>@brief<sp/>Bitfield<sp/>representing<sp/>all<sp/>PPI<sp/>channels<sp/>available<sp/>to<sp/>the<sp/>application.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_ALL_APP_CHANNELS_MASK<sp/><sp/><sp/>((uint32_t)0xFFFFFFFFuL<sp/>&amp;<sp/>~(NRFX_PPI_CHANNELS_USED))</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/**<sp/>@brief<sp/>Bitfield<sp/>representing<sp/>programmable<sp/>PPI<sp/>channels<sp/>available<sp/>to<sp/>the<sp/>application.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_PROG_APP_CHANNELS_MASK<sp/><sp/>((uint32_t)0x000FFFFFuL<sp/>&amp;<sp/>~(NRFX_PPI_CHANNELS_USED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_ALL_APP_CHANNELS_MASK<sp/><sp/><sp/>((uint32_t)0xFFF0FFFFuL<sp/>&amp;<sp/>~(NRFX_PPI_CHANNELS_USED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_PROG_APP_CHANNELS_MASK<sp/><sp/>((uint32_t)0x0000FFFFuL<sp/>&amp;<sp/>~(NRFX_PPI_CHANNELS_USED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">/**<sp/>@brief<sp/>Bitfield<sp/>representing<sp/>all<sp/>PPI<sp/>groups<sp/>available<sp/>to<sp/>the<sp/>application.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_ALL_APP_GROUPS_MASK<sp/><sp/><sp/><sp/><sp/>(((1uL<sp/>&lt;&lt;<sp/>PPI_GROUP_NUM)<sp/>-<sp/>1)<sp/>&amp;<sp/>~(NRFX_PPI_GROUPS_USED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>PPI<sp/>module.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>disables<sp/>all<sp/>channels<sp/>and<sp/>clears<sp/>the<sp/>channel<sp/>groups.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__ppi_1gaad2479ca250a6828f49cd5ca66f6bdce" kindref="member">nrfx_ppi_free_all</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>allocating<sp/>a<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>allocates<sp/>the<sp/>first<sp/>unused<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_alloc.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_channel<sp/>Pointer<sp/>to<sp/>the<sp/>PPI<sp/>channel<sp/>that<sp/>has<sp/>been<sp/>allocated.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>allocated.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NO_MEM<sp/>There<sp/>is<sp/>no<sp/>available<sp/>channel<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga95d5773fc3f4e93c64aec96e58019049" kindref="member">nrfx_ppi_channel_alloc</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>*<sp/>p_channel);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>freeing<sp/>a<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>also<sp/>disables<sp/>the<sp/>chosen<sp/>channel.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_free.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>freed.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1gae405d0b577a69dfe6192c6c7204725c1" kindref="member">nrfx_ppi_channel_free</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>assigning<sp/>task<sp/>and<sp/>event<sp/>endpoints<sp/>to<sp/>the<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>assigned<sp/>endpoints.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Event<sp/>endpoint<sp/>address.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Task<sp/>endpoint<sp/>address.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>assigned.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>allocated<sp/>for<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1gae3d0c2c6e33fec27c262cd5ec87190db" kindref="member">nrfx_ppi_channel_assign</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,<sp/>uint32_t<sp/>eep,<sp/>uint32_t<sp/>tep);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>assigning<sp/>fork<sp/>endpoint<sp/>to<sp/>the<sp/>PPI<sp/>channel<sp/>or<sp/>clearing<sp/>it.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>assigned<sp/>endpoints.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>fork_tep<sp/>Fork<sp/>task<sp/>endpoint<sp/>address<sp/>or<sp/>0<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>assigned.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>allocated<sp/>for<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NOT_SUPPORTED<sp/>Function<sp/>is<sp/>not<sp/>supported.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga731bdfce05a01c7576dc14af43e89b99" kindref="member">nrfx_ppi_channel_fork_assign</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,<sp/>uint32_t<sp/>fork_tep);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>enabled.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>The<sp/>user-configurable<sp/>channel<sp/>is<sp/>not<sp/>allocated.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>cannot<sp/>be<sp/>enabled<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga928edfcbceafb1d635d264df12f0e07c" kindref="member">nrfx_ppi_channel_enable</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>disabled.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>The<sp/>user-configurable<sp/>channel<sp/>is<sp/>not<sp/>allocated.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>cannot<sp/>be<sp/>disabled<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga6eab16754df257eba23dbe53a420a814" kindref="member">nrfx_ppi_channel_disable</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>allocating<sp/>a<sp/>PPI<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>allocates<sp/>the<sp/>first<sp/>unused<sp/>PPI<sp/>group.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_alloc.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_group<sp/>Pointer<sp/>to<sp/>the<sp/>PPI<sp/>channel<sp/>group<sp/>that<sp/>has<sp/>been<sp/>allocated.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>group<sp/>was<sp/>successfully<sp/>allocated.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NO_MEM<sp/>There<sp/>is<sp/>no<sp/>available<sp/>channel<sp/>group<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1gafcce6ba302b942f3b790938c868253e2" kindref="member">nrfx_ppi_group_alloc</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>*<sp/>p_group);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>freeing<sp/>a<sp/>PPI<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>also<sp/>disables<sp/>the<sp/>chosen<sp/>group.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_free.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>PPI<sp/>channel<sp/>group<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>group<sp/>was<sp/>successfully<sp/>freed.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>group<sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga6f80914264dd4ee829b32e80e11eb86b" kindref="member">nrfx_ppi_group_free</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Compute<sp/>a<sp/>channel<sp/>mask<sp/>for<sp/>NRF_PPI<sp/>registers.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>number<sp/>to<sp/>transform<sp/>to<sp/>a<sp/>mask.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@return<sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga06676ff87e6cbd441cd97e18a7d3eea7" kindref="member">nrfx_ppi_channel_to_mask</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>including<sp/>multiple<sp/>PPI<sp/>channels<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/>PPI<sp/>channels<sp/>to<sp/>be<sp/>added.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>group<sp/>in<sp/>which<sp/>to<sp/>include<sp/>the<sp/>channels.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channels<sp/>was<sp/>successfully<sp/>included.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group<sp/>or<sp/>channels<sp/>are<sp/>not<sp/>an</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>channels.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga40fc2322df202dc800bd698f64ac22be" kindref="member">nrfx_ppi_channels_include_in_group</ref>(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>including<sp/>a<sp/>PPI<sp/>channel<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>added.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/><sp/><sp/>Channel<sp/>group<sp/>in<sp/>which<sp/>to<sp/>include<sp/>the<sp/>channel.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>included.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group<sp/>or<sp/>channel<sp/>is<sp/>not<sp/>an</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>channel.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1gadbc1ba0968c5580492e41bf4876a6110" kindref="member">nrfx_ppi_channel_include_in_group</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>multiple<sp/>PPI<sp/>channels<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/>PPI<sp/>channels<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>group<sp/>from<sp/>which<sp/>to<sp/>remove<sp/>the<sp/>channels.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>removed.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group<sp/>or<sp/>channels<sp/>are<sp/>not<sp/>an</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>channels.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga6ca88a010d0cfe54481786cd78be93f3" kindref="member">nrfx_ppi_channels_remove_from_group</ref>(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>a<sp/>single<sp/>PPI<sp/>channel<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>PPI<sp/>channel<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/><sp/><sp/>Channel<sp/>group<sp/>from<sp/>which<sp/>to<sp/>remove<sp/>the<sp/>channel.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>removed.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group<sp/>or<sp/>channel<sp/>is<sp/>not<sp/>an</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>channel.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga1e7c5ef755a04166e165de701b4225bf" kindref="member">nrfx_ppi_channel_remove_from_group</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>PPI<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>group<sp/>was<sp/>successfully<sp/>cleared.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga5964c2410393948ff56a8845c89890b5" kindref="member">nrfx_ppi_group_clear</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>PPI<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>group<sp/>was<sp/>successfully<sp/>enabled.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga8831e127c00810d5bca5f96a6bd1c83f" kindref="member">nrfx_ppi_group_enable</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>PPI<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>group<sp/>was<sp/>successfully<sp/>disabled.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>application<sp/>group.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>Group<sp/>is<sp/>not<sp/>an<sp/>allocated<sp/>group.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga6b521947858393f819ab118fe2af2763" kindref="member">nrfx_ppi_group_disable</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>a<sp/>PPI<sp/>task.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/>Task.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@return<sp/>Task<sp/>address.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga4f7f1724b24133207d244f26dea787ff" kindref="member">nrfx_ppi_task_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>enable<sp/>task<sp/>of<sp/>a<sp/>PPI<sp/>group.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>PPI<sp/>channel<sp/>group</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@return<sp/>Task<sp/>address.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga3ce324ba15f0ddf0cf1a7e370fd11ee9" kindref="member">nrfx_ppi_task_group_enable_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="296"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>enable<sp/>task<sp/>of<sp/>a<sp/>PPI<sp/>group.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>PPI<sp/>channel<sp/>group</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@return<sp/>Task<sp/>address.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga3b3a7e3ac400117b83ef1e7e5506f7b3" kindref="member">nrfx_ppi_task_group_disable_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga06676ff87e6cbd441cd97e18a7d3eea7" kindref="member">nrfx_ppi_channel_to_mask</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1uL<sp/>&lt;&lt;<sp/>(uint32_t)<sp/>channel);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1gadbc1ba0968c5580492e41bf4876a6110" kindref="member">nrfx_ppi_channel_include_in_group</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__ppi_1ga40fc2322df202dc800bd698f64ac22be" kindref="member">nrfx_ppi_channels_include_in_group</ref>(<ref refid="group__nrfx__ppi_1ga06676ff87e6cbd441cd97e18a7d3eea7" kindref="member">nrfx_ppi_channel_to_mask</ref>(channel),<sp/>group);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga1e7c5ef755a04166e165de701b4225bf" kindref="member">nrfx_ppi_channel_remove_from_group</ref>(<ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__ppi_1ga6ca88a010d0cfe54481786cd78be93f3" kindref="member">nrfx_ppi_channels_remove_from_group</ref>(<ref refid="group__nrfx__ppi_1ga06676ff87e6cbd441cd97e18a7d3eea7" kindref="member">nrfx_ppi_channel_to_mask</ref>(channel),<sp/>group);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__ppi_1ga5964c2410393948ff56a8845c89890b5" kindref="member">nrfx_ppi_group_clear</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__ppi_1ga6ca88a010d0cfe54481786cd78be93f3" kindref="member">nrfx_ppi_channels_remove_from_group</ref>(<ref refid="group__nrfx__ppi_1ga8b7e3c66e0834e23e7f02c1317cc01ec" kindref="member">NRFX_PPI_ALL_APP_CHANNELS_MASK</ref>,<sp/>group);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga4f7f1724b24133207d244f26dea787ff" kindref="member">nrfx_ppi_task_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga1927eb3ac3a032b7b9e06cd8626cfc66" kindref="member">nrf_ppi_task_address_get</ref>(NRF_PPI,<sp/>task);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga3ce324ba15f0ddf0cf1a7e370fd11ee9" kindref="member">nrfx_ppi_task_group_enable_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gac551a0000765c5ce386f53c07ceb5d3d" kindref="member">nrf_ppi_task_group_enable_address_get</ref>(NRF_PPI,<sp/>group);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">NRFX_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfx__ppi_1ga3b3a7e3ac400117b83ef1e7e5506f7b3" kindref="member">nrfx_ppi_task_group_disable_address_get</ref>(<ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga9c5b38010497468634d2dda0789542e4" kindref="member">nrf_ppi_task_group_disable_address_get</ref>(NRF_PPI,<sp/>group);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/include/nrfx_ppi.h"/>
  </compounddef>
</doxygen>
