<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__usbhs__hal" kind="group">
    <compoundname>nrf_usbhs_hal</compoundname>
    <title>USBHS HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__usbhs__hal_1ga97196bcccc13e6acf79b92dcdc772df2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_usbhs_task_t</name>
        <enumvalue id="group__nrf__usbhs__hal_1gga97196bcccc13e6acf79b92dcdc772df2a83a10cf1d75eb393af830e02824b885a" prot="public">
          <name>NRF_USBHS_TASK_START</name>
          <initializer>= offsetof(NRF_USBHS_Type, TASKS_START)</initializer>
          <briefdescription>
<para>Start the USB peripheral. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USBHS tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="51" column="1" bodyfile="hal/nrf_usbhs.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__usbhs__hal_1gad7330e488e00bafb43f323e3229e567a" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_usbhs_event_t</name>
        <enumvalue id="group__nrf__usbhs__hal_1ggad7330e488e00bafb43f323e3229e567aaf87825524e3c2140b0b222445911f546" prot="public">
          <name>NRF_USBHS_EVENT_CORE</name>
          <initializer>= offsetof(NRF_USBHS_Type, EVENTS_CORE)</initializer>
          <briefdescription>
<para>Signal that the USB reset condition is detected on the USB lines. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USBHS events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="57" column="1" bodyfile="hal/nrf_usbhs.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__usbhs__hal_1ga5aaaa5de2c6088f7ed024875515c5f47" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_usbhs_int_mask_t</name>
        <enumvalue id="group__nrf__usbhs__hal_1gga5aaaa5de2c6088f7ed024875515c5f47aee2be7166927bf7baaea320abfc557ca" prot="public">
          <name>NRF_USBHS_INT_USBCORE_MASK</name>
          <initializer>= USBHS_INTENSET_CORE_Msk</initializer>
          <briefdescription>
<para>Interrupt on the USBCORE event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USBHS interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="63" column="1" bodyfile="hal/nrf_usbhs.h" bodystart="64" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga53f91571d90dbd4c8eb09a1e8e962e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_task_trigger</definition>
        <argsstring>(NRF_USBHS_Type *p_reg, nrf_usbhs_task_t task)</argsstring>
        <name>nrf_usbhs_task_trigger</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1ga97196bcccc13e6acf79b92dcdc772df2" kindref="member">nrf_usbhs_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified USBHS task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="181" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="181" bodyend="184" declfile="hal/nrf_usbhs.h" declline="74" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga229b3035fac1be6636d99d2f3aaeaa46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_usbhs_task_address_get</definition>
        <argsstring>(NRF_USBHS_Type const *p_reg, nrf_usbhs_task_t task)</argsstring>
        <name>nrf_usbhs_task_address_get</name>
        <param>
          <type>NRF_USBHS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1ga97196bcccc13e6acf79b92dcdc772df2" kindref="member">nrf_usbhs_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of the specified USBHS task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="186" column="28" bodyfile="hal/nrf_usbhs.h" bodystart="186" bodyend="190" declfile="hal/nrf_usbhs.h" declline="84" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1gaf6eb930e454116bd2e2d9a6e4db9400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_event_clear</definition>
        <argsstring>(NRF_USBHS_Type *p_reg, nrf_usbhs_event_t event)</argsstring>
        <name>nrf_usbhs_event_clear</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1gad7330e488e00bafb43f323e3229e567a" kindref="member">nrf_usbhs_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="192" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="192" bodyend="196" declfile="hal/nrf_usbhs.h" declline="93" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1gabfe9cd1fb966559088b5c0969ce851fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_usbhs_event_check</definition>
        <argsstring>(NRF_USBHS_Type const *p_reg, nrf_usbhs_event_t event)</argsstring>
        <name>nrf_usbhs_event_check</name>
        <param>
          <type>NRF_USBHS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1gad7330e488e00bafb43f323e3229e567a" kindref="member">nrf_usbhs_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the USBHS event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="198" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="198" bodyend="201" declfile="hal/nrf_usbhs.h" declline="104" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga40e6ef81c8fcf66cb625c47510dd471d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_usbhs_event_get_and_clear</definition>
        <argsstring>(NRF_USBHS_Type *p_reg, nrf_usbhs_event_t event)</argsstring>
        <name>nrf_usbhs_event_get_and_clear</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1gad7330e488e00bafb43f323e3229e567a" kindref="member">nrf_usbhs_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting and clearing the state of the specified event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event was set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event was not set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="203" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="203" bodyend="211" declfile="hal/nrf_usbhs.h" declline="115" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1gafd88bbba48f4a3ba3a087d252995b6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_usbhs_event_address_get</definition>
        <argsstring>(NRF_USBHS_Type const *p_reg, nrf_usbhs_event_t event)</argsstring>
        <name>nrf_usbhs_event_address_get</name>
        <param>
          <type>NRF_USBHS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__usbhs__hal_1gad7330e488e00bafb43f323e3229e567a" kindref="member">nrf_usbhs_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of the specified USBHS event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the event specified as a function parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="213" column="28" bodyfile="hal/nrf_usbhs.h" bodystart="213" bodyend="217" declfile="hal/nrf_usbhs.h" declline="125" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga0d797a1dc96f7962fbfccacec47a55ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_int_enable</definition>
        <argsstring>(NRF_USBHS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_usbhs_int_enable</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the selected interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__usbhs__hal_1ga5aaaa5de2c6088f7ed024875515c5f47" kindref="member">nrf_usbhs_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="219" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="219" bodyend="222" declfile="hal/nrf_usbhs.h" declline="134" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1gaafbe74a90c8b0a37acf814b4b279ec3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_usbhs_int_enable_check</definition>
        <argsstring>(NRF_USBHS_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_usbhs_int_enable_check</name>
        <param>
          <type>NRF_USBHS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__usbhs__hal_1ga5aaaa5de2c6088f7ed024875515c5f47" kindref="member">nrf_usbhs_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="224" column="28" bodyfile="hal/nrf_usbhs.h" bodystart="224" bodyend="227" declfile="hal/nrf_usbhs.h" declline="145" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga89f68974ff1a6d8e65d0943255190982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_usbhs_int_enable_get</definition>
        <argsstring>(NRF_USBHS_Type const *p_reg)</argsstring>
        <name>nrf_usbhs_int_enable_get</name>
        <param>
          <type>NRF_USBHS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the information about the enabled interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags of the enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="229" column="28" bodyfile="hal/nrf_usbhs.h" bodystart="229" bodyend="232" declfile="hal/nrf_usbhs.h" declline="154" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga3690ab07884c7d7e7469cf5686aa5917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_int_disable</definition>
        <argsstring>(NRF_USBHS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_usbhs_int_disable</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the selected interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__usbhs__hal_1ga5aaaa5de2c6088f7ed024875515c5f47" kindref="member">nrf_usbhs_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="234" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="234" bodyend="237" declfile="hal/nrf_usbhs.h" declline="163" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga19d0d8785e50fd940b27f81f5b8473dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_enable</definition>
        <argsstring>(NRF_USBHS_Type *p_reg)</argsstring>
        <name>nrf_usbhs_enable</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the USBHS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="239" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="239" bodyend="243" declfile="hal/nrf_usbhs.h" declline="170" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__usbhs__hal_1ga35e9f40534922ae8e1ed36fcdd361c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_usbhs_disable</definition>
        <argsstring>(NRF_USBHS_Type *p_reg)</argsstring>
        <name>nrf_usbhs_disable</name>
        <param>
          <type>NRF_USBHS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the USBHS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_usbhs.h" line="245" column="24" bodyfile="hal/nrf_usbhs.h" bodystart="245" bodyend="249" declfile="hal/nrf_usbhs.h" declline="177" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the Universal Serial Bus High Speed (USBHS) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
