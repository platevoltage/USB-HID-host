<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfy__nfct" kind="group">
    <compoundname>nrfy_nfct</compoundname>
    <title>NFCT HALY</title>
    <innerclass refid="structnrfy__nfct__parameters__t" prot="public">nrfy_nfct_parameters_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfy__nfct_1ga93607d855107aeea80e8887fcefff571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_int_init</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_nfct_int_init</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified NFCT interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupts associated with the event mask are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="132" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="132" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga771451b5b3962b103d4bc42f7850cf80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_int_uninit</definition>
        <argsstring>(NRF_NFCT_Type *p_reg)</argsstring>
        <name>nrfy_nfct_int_uninit</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for un-initializing the NFCT interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="175" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga6002693d5901d294631b5457e0b17e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_events_process</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_nfct_events_process</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified NFCT events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of the events to be processed, created by the <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of the events that were generated and processed. To be checked against the result of the <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="195" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaf72827b0f23aadd230fbfadeab8c5c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_parameters_save</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, nrfy_nfct_parameters_t *p_params)</argsstring>
        <name>nrfy_nfct_parameters_save</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__nfct__parameters__t" kindref="compound">nrfy_nfct_parameters_t</ref> *</type>
          <declname>p_params</declname>
        </param>
        <briefdescription>
<para>Function for saving NFCT parameters before peripheral reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure where the parameters will be saved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="208" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="208" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga6fff47e705ca819a4c27e7e49dbb2960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_parameters_restore</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrfy_nfct_parameters_t const *p_params)</argsstring>
        <name>nrfy_nfct_parameters_restore</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__nfct__parameters__t" kindref="compound">nrfy_nfct_parameters_t</ref> const *</type>
          <declname>p_params</declname>
        </param>
        <briefdescription>
<para>Function for restoring NFCT parameters after peripheral reset. The parameters are written back to the peripheral registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure holding peripheral parameters to be restored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="227" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="227" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga44fffc3a8ca99aa99e3f0d8d715bae0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_rxtx_buffer_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint8_t *p_rxtx_buf, uint16_t max_txrx_len, bool rx)</argsstring>
        <name>nrfy_nfct_rxtx_buffer_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_rxtx_buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max_txrx_len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rx</declname>
        </param>
        <briefdescription>
<para>Function for setting the the NFCT RX/TX buffer (address and maximum length). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Buffer for the NFC RX/TX data is used by EasyDMA and must be located in RAM.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_rxtx_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the receive or transmit buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_txrx_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum receive or transmit length in bytes (size of the RAM buffer for EasyDMA). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx</parametername>
</parameternamelist>
<parameterdescription>
<para>True if buffer is set for the frame reception, false if buffer is set for the frame transmission. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="250" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="250" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga2325545cf84560f9c24538088dcafd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_task_trigger</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_task_t task)</argsstring>
        <name>nrfy_nfct_task_trigger</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga90998750300456aedbce0700a9df232a" kindref="member">nrf_nfct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga79ca17491a7ab505d2caf331f2b45c45" kindref="member">nrf_nfct_task_trigger</ref>  Function for activating a specific NFCT task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="265" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaec5c6243e0b3b9f5ab5b21bdcee83ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_task_address_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, nrf_nfct_task_t task)</argsstring>
        <name>nrfy_nfct_task_address_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga90998750300456aedbce0700a9df232a" kindref="member">nrf_nfct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaa0b23785c9a3fc0b0a94b03505293154" kindref="member">nrf_nfct_task_address_get</ref>  Function for returning the address of a specific NFCT task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="272" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga453197e69290462ba436cb63aa210f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_event_clear</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_event_t event)</argsstring>
        <name>nrfy_nfct_event_clear</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga0a44934a729ad8469a53a65318e8402d" kindref="member">nrf_nfct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gac8d0986e227f0414b1aa3a0fb58f0628" kindref="member">nrf_nfct_event_clear</ref>  Function for clearing a specific event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="279" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga01171ea85b93acce7ccd8608f49d527c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_nfct_event_check</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, nrf_nfct_event_t event)</argsstring>
        <name>nrfy_nfct_event_check</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga0a44934a729ad8469a53a65318e8402d" kindref="member">nrf_nfct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga9e50defad8a4cd3d018851756684dc68" kindref="member">nrf_nfct_event_check</ref>  Function for retrieving the state of the NFCT event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="286" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gad90ec8a3e49fcd2ca3fa3b25cf6a1b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_shorts_enable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t short_mask)</argsstring>
        <name>nrfy_nfct_shorts_enable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>short_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga4487623556dab1c328e34ff96395156d" kindref="member">nrf_nfct_shorts_enable</ref>  Function for enabling selected shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">short_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="295" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="295" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga33d23749d56f7b3470e674fe76ace726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_shorts_disable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t short_mask)</argsstring>
        <name>nrfy_nfct_shorts_disable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>short_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga0fe39dd786e8f19f214501cbec466e00" kindref="member">nrf_nfct_shorts_disable</ref>  Function for disabling selected shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">short_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="302" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga9b71083a8d203ce1a3efb67d1224ce26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_shorts_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_shorts_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3585ee24da28125f6d59cb7e2b0f8bc1" kindref="member">nrf_nfct_shorts_get</ref>  Function for retrieving the enabled shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flags of the currently enabled shortcuts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="309" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="309" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gad20139f76949291d49fda48883ade929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_shorts_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t short_mask)</argsstring>
        <name>nrfy_nfct_shorts_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>short_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3dc3d589230f0f22f13745fbfd0cd5dc" kindref="member">nrf_nfct_shorts_set</ref>  Function for setting shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">short_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcut mask.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="318" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gafe12fec91c5cd38ab139a2510b8d4824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_int_enable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_nfct_int_enable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga083b58b924c781b8ea9b7a901e5c8d0e" kindref="member">nrf_nfct_int_enable</ref>  Function for enabling the selected interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__nfct__hal_1gad16e86051bee49a907048aae86da2ee7" kindref="member">nrf_nfct_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="325" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="325" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga27bb9da4d83a7b47bc359abdc615634d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_int_enable_check</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_nfct_int_enable_check</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga40870c355963e7a61354adc085b8c132" kindref="member">nrf_nfct_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__nfct__hal_1gad16e86051bee49a907048aae86da2ee7" kindref="member">nrf_nfct_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="332" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="332" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga7a1963fe15794b54f7f72797620b623c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_int_enable_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_int_enable_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga60fdd94f14ad586f5de1fd2a607c2fa3" kindref="member">nrf_nfct_int_enable_get</ref>  Function for retrieving the information about enabled interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags of the enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="341" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="341" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gab850d83297bd7f1b08ed9e9110d8f569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_int_disable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_nfct_int_disable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga692fcd9a52ebdb75ed137cc29f06d04c" kindref="member">nrf_nfct_int_disable</ref>  Function for disabling the selected interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__nfct__hal_1gad16e86051bee49a907048aae86da2ee7" kindref="member">nrf_nfct_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="350" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="350" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga6dac9dab3caada451a326de045837efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_mod_ctrl_pin_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t mod_ctrl_pin)</argsstring>
        <name>nrfy_nfct_mod_ctrl_pin_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mod_ctrl_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gadee0eef3c3cfe89e730dded70de30eae" kindref="member">nrf_nfct_mod_ctrl_pin_set</ref>  Function for configuring the NFCT modulation control pin.  </para>
</simplesect>
</para>
<para>If a given signal is not needed, pass the <ref refid="group__nrf__nfct__hal_1ga9b144c59c9de8f9297ca2549c80380df" kindref="member">NRF_NFCT_MOD_CTRL_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mod_ctrl_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Modulation control pin.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="358" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="358" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga0c2e586f1c975ffe4999d3872b4e94d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_mod_ctrl_pin_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_mod_ctrl_pin_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga4e9255d4da9a6ce15d8d3d9d179412b3" kindref="member">nrf_nfct_mod_ctrl_pin_get</ref>  Function for getting the modulation control pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modulation control pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="365" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="365" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaabf9ae920d1661809bd96645bd07effd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_modulation_output_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_modulation_ctrl_t mod_ctrl)</argsstring>
        <name>nrfy_nfct_modulation_output_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga573f6e234b255f96cfa9516c5297345b" kindref="member">nrf_nfct_modulation_ctrl_t</ref></type>
          <declname>mod_ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaa579590b5349be09002fac3c45bc4b52" kindref="member">nrf_nfct_modulation_output_set</ref>  Function for setting the modulation output. It enables the output to a GPIO pin which can be connected to a second external.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mod_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Modulation control field configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="376" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="376" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga028571a69d3ca486b00895b21b60497a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga573f6e234b255f96cfa9516c5297345b" kindref="member">nrf_nfct_modulation_ctrl_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_modulation_ctrl_t nrfy_nfct_modulation_output_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_modulation_output_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gab54602dea9536f30f146acd7c044f700" kindref="member">nrf_nfct_modulation_output_get</ref>  Function for getting the modulation output configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The configured modulation output.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="385" column="28" bodyfile="haly/nrfy_nfct.h" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga7e3a97a59dc0b35a39e379533895537a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_error_status_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_error_status_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gae885af4d5554fc9011d4fa7a7b48887a" kindref="member">nrf_nfct_error_status_get</ref>  Function for getting the NFCT error status.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The NFCT error status flags, defined in <ref refid="group__nrf__nfct__hal_1gad99ea387f1db326f48ed88cd87ce029e" kindref="member">nrf_nfct_error_status_t</ref>.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="395" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="395" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga45c7ea7521f6b8566c8c15c3e3f36b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_error_status_clear</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t error_flag)</argsstring>
        <name>nrfy_nfct_error_status_clear</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>error_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga87592076f3fe8deb67a9051eab3cb9a1" kindref="member">nrf_nfct_error_status_clear</ref>  Function for clearing the NFCT error status.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error_flag</parametername>
</parameternamelist>
<parameterdescription>
<para>Error flags to be cleared, defined in <ref refid="group__nrf__nfct__hal_1gad99ea387f1db326f48ed88cd87ce029e" kindref="member">nrf_nfct_error_status_t</ref>.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="404" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="404" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gadf9ebc5ebc0459d4ca2cf47fe78e8a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_rx_frame_status_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_rx_frame_status_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga4df45a5ae798f487f02b7a9b492b4def" kindref="member">nrf_nfct_rx_frame_status_get</ref>  Function for getting the NFC frame reception status.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags of the NFC frame reception status, defined in <ref refid="group__nrf__nfct__hal_1ga932b29507cd5521c30732e467b9d59a4" kindref="member">nrf_nfct_rx_frame_status_t</ref>.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="411" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="411" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga1864e165aba649f9faf8a025f18cb2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_rx_frame_status_clear</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t framestatus_flags)</argsstring>
        <name>nrfy_nfct_rx_frame_status_clear</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>framestatus_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga71053304120e72fece9d5aa975d38ea6" kindref="member">nrf_nfct_rx_frame_status_clear</ref>  Function for clearing the NFC frame reception status.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">framestatus_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Status flags to be cleared, defined in <ref refid="group__nrf__nfct__hal_1ga932b29507cd5521c30732e467b9d59a4" kindref="member">nrf_nfct_rx_frame_status_t</ref>.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="420" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="420" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gad9b8a1e0a069d7c5227766d4ec14db46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1gad41c75935da91df206b39337d615780d" kindref="member">nrf_nfct_tag_state_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_tag_state_t nrfy_nfct_tag_state_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_tag_state_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3bdf972ded34bf3ceba3e7f2586a68fb" kindref="member">nrf_nfct_tag_state_get</ref>  Function for getting the NFC tag state.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_DISABLED</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag is disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_RAMP_UP</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag is ramping up. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_IDLE</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag is activated and idle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_RECEIVE</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag is receiving data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_FRAME_DELAY</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame Delay Timer of the NFC tag is counting ticks since the last symbol of the last received frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_TAG_STATE_TRANSMIT</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag is transmitting data.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="429" column="41" bodyfile="haly/nrfy_nfct.h" bodystart="429" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga73a0b72bf574af06dc1a7a400d96ff8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1gaed596f092cc3971acade2458023e3c3a" kindref="member">nrf_nfct_sleep_state_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_sleep_state_t nrfy_nfct_sleep_state_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_sleep_state_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3cd109684521662e9304a5f8e007f79b" kindref="member">nrf_nfct_sleep_state_get</ref>  Function for getting the NFC tag sleep state during the automatic collision resolution.  </para>
</simplesect>
</para>
<para>The returned value is the last state before the autimatic collision resolution started.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_SLEEP_STATE_IDLE</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag was in IDLE state before the automatic collision resolution started. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_NFCT_SLEEP_STATE_SLEEP_A</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC tag was in SLEEP_A state before the automatic collision resolution started.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="440" column="43" bodyfile="haly/nrfy_nfct.h" bodystart="440" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga4becac1b58f87deddb92586335a4c44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t</type>
        <definition>NRFY_STATIC_INLINE uint8_t nrfy_nfct_field_status_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_field_status_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga0d8d523a9ee9099f602643eaff69ee41" kindref="member">nrf_nfct_field_status_get</ref>  Function for getting the status of the external NFC field detection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The NFC field detection status. Status bits can be checked by using <ref refid="group__nrf__nfct__hal_1gac45bf9d9a9f138385c799a7273a64248" kindref="member">nrf_nfct_field_state_t</ref>.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="450" column="28" bodyfile="haly/nrfy_nfct.h" bodystart="450" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga022c303eadf87caa883ad22aa08cdeb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint16_t</type>
        <definition>NRFY_STATIC_INLINE uint16_t nrfy_nfct_frame_delay_min_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_frame_delay_min_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gafe66d96e4f86347fbdc01516d55b3e42" kindref="member">nrf_nfct_frame_delay_min_get</ref>  Function for getting the minimum Frame Delay Time value.  </para>
</simplesect>
</para>
<para>This is the minimum value for Frame Delay Timer. It controls the shortest time between the last symbol of the last received frame and the start of the transmission of a new TX frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The minimum Frame Delay Time value in 13.56-MHz clock ticks.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="459" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="459" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaab1e64c26f1bd5c670815fd21a0658c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_frame_delay_min_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint16_t frame_delay_min)</argsstring>
        <name>nrfy_nfct_frame_delay_min_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>frame_delay_min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga9778ee30876a8100798529972b0eedae" kindref="member">nrf_nfct_frame_delay_min_set</ref>  Function for setting the minimum Frame Delay Time value.  </para>
</simplesect>
</para>
<para>This is the minimum value for Frame Delay Timer. It controls the shortest time between the last symbol of the last received frame and the start of the transmission of a new TX frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frame_delay_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum Frame Delay Time value in 13.56-MHz clock ticks.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="468" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="468" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga54848142280adc151779d0cc8bd06206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_frame_delay_max_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_frame_delay_max_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga6ba009cc5c44a921574e8f2f6510b3d3" kindref="member">nrf_nfct_frame_delay_max_get</ref>  Function for getting the maximum Frame Delay Time value.  </para>
</simplesect>
</para>
<para>This is the maximum value for Frame Delay Timer. It controls the longest time between the last symbol of the last received frame and the start of the transmission of a new TX frame. If no transmission starts before the Frame Delay Timer timeout, <ref refid="group__nrf__nfct__hal_1ggad99ea387f1db326f48ed88cd87ce029ea2bfaf8571fdb161f9ef566f14fdfd7c6" kindref="member">NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK</ref> is set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum Frame Delay Time value in 13.56-MHz clock ticks.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="476" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="476" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaf5a2b35c690eccee1413565c6e76414f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_frame_delay_max_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t frame_delay_max)</argsstring>
        <name>nrfy_nfct_frame_delay_max_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_delay_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaaa3a9a207112ed2c58567c22b300dc51" kindref="member">nrf_nfct_frame_delay_max_set</ref>  Function for setting the maximum Frame Delay Time value.  </para>
</simplesect>
</para>
<para>This is the maximum value for Frame Delay Timer. It controls the longest time between the last symbol of the last received frame and the start of the transmission of a new TX frame. If no transmission starts before the Frame Delay Timer timeout, <ref refid="group__nrf__nfct__hal_1ggad99ea387f1db326f48ed88cd87ce029ea2bfaf8571fdb161f9ef566f14fdfd7c6" kindref="member">NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK</ref> is set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frame_delay_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum Frame Delay Time value in 13.56-MHz clock ticks.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="485" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="485" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga60913c89e7a7af6287a46e595a03c760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga440398a7c43c28c619f2326cf0d48408" kindref="member">nrf_nfct_frame_delay_mode_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_frame_delay_mode_t nrfy_nfct_frame_delay_mode_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_frame_delay_mode_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga1f44a3c0ca480bf85a37364857ef2225" kindref="member">nrf_nfct_frame_delay_mode_get</ref>  Function for getting the Frame Delay Mode configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The configured Frame Delay Mode.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="494" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="494" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga7ae58977ef308ce325109f7789952874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_frame_delay_mode_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_frame_delay_mode_t frame_delay_mode)</argsstring>
        <name>nrfy_nfct_frame_delay_mode_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga440398a7c43c28c619f2326cf0d48408" kindref="member">nrf_nfct_frame_delay_mode_t</ref></type>
          <declname>frame_delay_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga2e5ec700490c0c74547e7bf9f595f566" kindref="member">nrf_nfct_frame_delay_mode_set</ref>  Function for setting the NFC Frame Delay Mode configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frame_delay_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame Delay Mode configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="503" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="503" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gadaacab0907ab2d0be1f1a4a0aed9f0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t *</type>
        <definition>NRFY_STATIC_INLINE uint8_t * nrfy_nfct_rxtx_buffer_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_rxtx_buffer_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga37516865767004071c729500413c989c" kindref="member">nrf_nfct_rxtx_buffer_get</ref>  Function for getting the pointer to the NFCT RX/TX buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The configured pointer to the receive or transmit buffer.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="511" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="511" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga700902a64d2c26724bb8e358a3a0db49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint16_t</type>
        <definition>NRFY_STATIC_INLINE uint16_t nrfy_nfct_max_rxtx_length_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_max_rxtx_length_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaab957ec795c0a1a5c89ed7c8b5ffa08b" kindref="member">nrf_nfct_max_rxtx_length_get</ref>  Function for getting the NFCT RX/TX maximum buffer length.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The configured maximum receive or transmit length in bytes (size of the RX/TX buffer for EasyDMA).   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="520" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="520" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gae5d6927c393f02a64d04d80ed0bf9907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t</type>
        <definition>NRFY_STATIC_INLINE uint8_t nrfy_nfct_tx_frame_config_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_tx_frame_config_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga315921e064488658728101a955164691" kindref="member">nrf_nfct_tx_frame_config_get</ref>  Function for getting the flags for NFC frame transmission configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags of the NFCT frame transmission configuration, defined in <ref refid="group__nrf__nfct__hal_1ga97c7393982d73ebddf326b37d16919d7" kindref="member">nrf_nfct_tx_frame_config_t</ref>.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="529" column="28" bodyfile="haly/nrfy_nfct.h" bodystart="529" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga163ede975d3f5e1d250f839a5e0949f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_tx_frame_config_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint8_t flags)</argsstring>
        <name>nrfy_nfct_tx_frame_config_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga6c7dd65d09a963e920005015be39343a" kindref="member">nrf_nfct_tx_frame_config_set</ref>  Function for setting up the flags of the NFC frame transmission configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for NFCT TX configuration. Use <ref refid="group__nrf__nfct__hal_1ga97c7393982d73ebddf326b37d16919d7" kindref="member">nrf_nfct_tx_frame_config_t</ref> for setting.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="538" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="538" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gadce46c9458dc7e651a52dc3b7dae5e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint16_t</type>
        <definition>NRFY_STATIC_INLINE uint16_t nrfy_nfct_tx_bits_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_tx_bits_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga43a2addb4400bf65e0458f71c1d17a06" kindref="member">nrf_nfct_tx_bits_get</ref>  Function for getting the length of the configured transmission frame.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>NFC frames do not have to consist of full bytes only, therefore data amount for transmission is configured in number of bits.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bits to be sent excluding CRC, parity, SoF, and EoF.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="545" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="545" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gada7d89bd8988b49ba764d024b047160c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_tx_bits_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint16_t tx_bits)</argsstring>
        <name>nrfy_nfct_tx_bits_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>tx_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gadf4e35817a76e539d25ef3112278f13b" kindref="member">nrf_nfct_tx_bits_set</ref>  Function for setting up the NFC frame transmission.  </para>
</simplesect>
</para>
<para>Set the number of TX bits excluding CRC, parity, SoF, and EoF.</para>
<para><simplesect kind="note"><para>Source of data for transmission is set by using <ref refid="group__nrf__nfct__hal_1ga11064ed7f1e9e9dd51f2da645f2e3153" kindref="member">nrf_nfct_rxtx_buffer_set</ref>. </para>
</simplesect>
<simplesect kind="note"><para>NFC frames do not have to consist of full bytes only, therefore data amount for transmission is configured in number of bits.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tx_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>Overall number of bits to be sent.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="554" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="554" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga93696df14986e2fb7578e2d9ebf2bc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t</type>
        <definition>NRFY_STATIC_INLINE uint8_t nrfy_nfct_rx_frame_config_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_rx_frame_config_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaae9ea4c1cbaa9f17a225647092b86e2a" kindref="member">nrf_nfct_rx_frame_config_get</ref>  Function for getting the flags of the NFC frame reception configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags for NFCT frame reception configuration, defined in <ref refid="group__nrf__nfct__hal_1ga098d18d71f23c372cb882402843ad005" kindref="member">nrf_nfct_rx_frame_config_t</ref>.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="561" column="28" bodyfile="haly/nrfy_nfct.h" bodystart="561" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gacef2060334e9f8c6ae6102bbf5dc8e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_rx_frame_config_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint8_t flags)</argsstring>
        <name>nrfy_nfct_rx_frame_config_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga8faba62001014de0fdb87babcd99e6f3" kindref="member">nrf_nfct_rx_frame_config_set</ref>  Function for setting up the NFC frame reception.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Destination for the received data is set using <ref refid="group__nrf__nfct__hal_1ga11064ed7f1e9e9dd51f2da645f2e3153" kindref="member">nrf_nfct_rxtx_buffer_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>NFCT RX configuration flags. Use <ref refid="group__nrf__nfct__hal_1ga098d18d71f23c372cb882402843ad005" kindref="member">nrf_nfct_rx_frame_config_t</ref> for setting the desired configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="570" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="570" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga0dd89ed6a9b03e80374d440ebf231849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint16_t</type>
        <definition>NRFY_STATIC_INLINE uint16_t nrfy_nfct_rx_bits_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, bool crc_excluded)</argsstring>
        <name>nrfy_nfct_rx_bits_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>crc_excluded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaa2736d34816f988d3a0635e26486db97" kindref="member">nrf_nfct_rx_bits_get</ref>  Function for getting the number of bits received from the NFC poller.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crc_excluded</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag for excluding CRC size from calculation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of received bits including or excluding CRC, and excluding parity and SoF/EoF framing.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="577" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="577" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga7e6f1f20b1f43ab04e888d803c542d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga3613f465cdb62ffa95e3f598b6780c3c" kindref="member">nrf_nfct_sensres_nfcid1_size_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_sensres_nfcid1_size_t nrfy_nfct_nfcid1_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, uint8_t *p_nfcid1_buf)</argsstring>
        <name>nrfy_nfct_nfcid1_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_nfcid1_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaafe6bb2ce4b1cd23027b772e36238879" kindref="member">nrf_nfct_nfcid1_get</ref>  Function for getting the NFCID1 (NFC tag identifier).  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>This function always returns the full configuration of the NFCID1 setting (10 bytes), regardless of the NFCID1 size. The NFCID1 size can be configured using <ref refid="group__nrf__nfct__hal_1gaccb08875b749f22abf8dcaa00a1ae891" kindref="member">nrf_nfct_sensres_nfcid1_size_set</ref> or <ref refid="group__nrf__nfct__hal_1ga08032af670d283b99056a9c476a63213" kindref="member">nrf_nfct_nfcid1_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_nfcid1_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer for the NDFCID1 parameter. The NFCID1 values are in little endian order, that is: |NFCID1_3RD_LAST|NFCID1_2ND_LAST|NFCID1_LAST|.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Configured NFCID1 length   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="587" column="32" bodyfile="haly/nrfy_nfct.h" bodystart="587" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga79d6fbcd4e930218dd0a98716757d3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_nfcid1_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint8_t const *p_nfcid1_buf, nrf_nfct_sensres_nfcid1_size_t nfcid1_size)</argsstring>
        <name>nrfy_nfct_nfcid1_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_nfcid1_buf</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga3613f465cdb62ffa95e3f598b6780c3c" kindref="member">nrf_nfct_sensres_nfcid1_size_t</ref></type>
          <declname>nfcid1_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga08032af670d283b99056a9c476a63213" kindref="member">nrf_nfct_nfcid1_set</ref>  Function for setting the NFCID1 (NFC tag identifier).  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>This function also configures the NFCIDSIZE field in the SENSRES register of the NFCT peripheral.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_nfcid1_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with NDFCID1 bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nfcid1_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the NFCID1 in bytes.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="597" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gafe24029ed239e6f9f5e80211d85e7d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_nfct_autocolres_is_enabled</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_autocolres_is_enabled</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3f50dadcea361820f3ad134bfd85e3fd" kindref="member">nrf_nfct_autocolres_is_enabled</ref>  Function for getting the setting for the automatic collision resolution.  </para>
</simplesect>
</para>
<para>The automatic collision resolution mechanism as defined in ISO 14443-3 and NFC Forum Digital Protocol Technical Specification 2.0, section 6.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If automatic collision resolution is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If automatic collision resolution is disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="607" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="607" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga65109a7373b8af4b1b0d59a87b47012b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_autocolres_enable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg)</argsstring>
        <name>nrfy_nfct_autocolres_enable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gae5bb4dbf61bf182bae90d030d2dc1b95" kindref="member">nrf_nfct_autocolres_enable</ref>  Function for enabling the automatic collision resolution.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The automatic collision resolution mechanism as defined in ISO 14443-3 and NFC Forum Digital Protocol Technical Specification 2.0, section 6.   </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="616" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="616" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga3564b84897cc1dbc0549c09750f8f759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_autocolres_disable</definition>
        <argsstring>(NRF_NFCT_Type *p_reg)</argsstring>
        <name>nrfy_nfct_autocolres_disable</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaeaa0ee17b9bac6459e37de5590c5053f" kindref="member">nrf_nfct_autocolres_disable</ref>  Function for disabling the automatic collision resolution.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The automatic collision resolution mechanism as defined in ISO 14443-3 and NFC Forum Digital Protocol Technical Specification 2.0, section 6.   </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="623" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="623" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gae219881e105c629d682cee9a9c99372a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga3613f465cdb62ffa95e3f598b6780c3c" kindref="member">nrf_nfct_sensres_nfcid1_size_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_sensres_nfcid1_size_t nrfy_nfct_sensres_nfcid1_size_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_sensres_nfcid1_size_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gac42dc4d4d429ab437bf80ebec1a386bc" kindref="member">nrf_nfct_sensres_nfcid1_size_get</ref>  Function for getting the NFCID1 size from the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NFCID1 (tag identifier) size.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="632" column="32" bodyfile="haly/nrfy_nfct.h" bodystart="632" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga4e6d1f9e11d1d419d47363be35a19670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_sensres_nfcid1_size_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_sensres_nfcid1_size_t nfcid1_size)</argsstring>
        <name>nrfy_nfct_sensres_nfcid1_size_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga3613f465cdb62ffa95e3f598b6780c3c" kindref="member">nrf_nfct_sensres_nfcid1_size_t</ref></type>
          <declname>nfcid1_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaccb08875b749f22abf8dcaa00a1ae891" kindref="member">nrf_nfct_sensres_nfcid1_size_set</ref>  Function for setting the NFCID1 (tag identifier) size.field in the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nfcid1_size</parametername>
</parameternamelist>
<parameterdescription>
<para>NFCID1 (tag identifier) size.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga08032af670d283b99056a9c476a63213" kindref="member">nrf_nfct_nfcid1_set()</ref>   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="642" column="6" bodyfile="haly/nrfy_nfct.h" bodystart="642" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga8c2e3ad992429e38ee861f3ff5a478fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga0a21c500bdf07fbd27a8c1a638302f45" kindref="member">nrf_nfct_sensres_bit_frame_sdd_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_sensres_bit_frame_sdd_t nrfy_nfct_sensres_bit_frame_sdd_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_sensres_bit_frame_sdd_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga82714bc15f7655ab7dfbb496805ad424" kindref="member">nrf_nfct_sensres_bit_frame_sdd_get</ref>  Function for getting the Bit Frame SDD field from the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Bit Frame SDD field configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="651" column="34" bodyfile="haly/nrfy_nfct.h" bodystart="651" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga68fca75df3eba013380bffe4266b623a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_sensres_bit_frame_sdd_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_sensres_bit_frame_sdd_t bit_frame_sdd)</argsstring>
        <name>nrfy_nfct_sensres_bit_frame_sdd_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga0a21c500bdf07fbd27a8c1a638302f45" kindref="member">nrf_nfct_sensres_bit_frame_sdd_t</ref></type>
          <declname>bit_frame_sdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga68e3f17113189c55c33f276badfc0722" kindref="member">nrf_nfct_sensres_bit_frame_sdd_set</ref>  Function for setting the Bit Frame SDD field in the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit_frame_sdd</parametername>
</parameternamelist>
<parameterdescription>
<para>The Bit Frame SDD field configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="661" column="6" bodyfile="haly/nrfy_nfct.h" bodystart="661" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaeb6636cd8fe38f186a7149d301cd707d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1gac3dad0d77b9f35fea328bbdd91cc0b02" kindref="member">nrf_nfct_sensres_platform_config_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_sensres_platform_config_t nrfy_nfct_sensres_platform_config_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_sensres_platform_config_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga7157d8b85ed1d9d6859ee3fa3fbb52af" kindref="member">nrf_nfct_sensres_platform_config_get</ref>  Function for getting the Platform Config field from the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Platform Config field configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="670" column="1" bodyfile="haly/nrfy_nfct.h" bodystart="670" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga5bacc0bbd1d5f27c160a33b2e550e147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_sensres_platform_config_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_sensres_platform_config_t platform_config)</argsstring>
        <name>nrfy_nfct_sensres_platform_config_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1gac3dad0d77b9f35fea328bbdd91cc0b02" kindref="member">nrf_nfct_sensres_platform_config_t</ref></type>
          <declname>platform_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gae25e43464231c4d4c280db7bebcd5b6a" kindref="member">nrf_nfct_sensres_platform_config_set</ref>  Function for setting the Platform Config field in the SENS_RES frame configuration.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The SENS_RES frame is handled automatically by the NFCT hardware.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">platform_config</parametername>
</parameternamelist>
<parameterdescription>
<para>The Platform Config field configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="680" column="6" bodyfile="haly/nrfy_nfct.h" bodystart="680" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga39762bc4505b48927a33b6cddbdf8c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_nfct_selres_cascade_check</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_selres_cascade_check</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga5c9503e8c40d67c422a8dcf9ed0dff28" kindref="member">nrf_nfct_selres_cascade_check</ref>  Function for checking the CASCADE bit of the SEL_RES frame.  </para>
</simplesect>
</para>
<para>The CASCADE bit in the SEL_RES register is handled automatically by the NFCT hardware and indicates the status of the NFCID1 read operation to the NFC poller according to the NFC Forum Digital Protocol Speficiation 2.0, section 6.8.2.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If NFCID1 read procedure is not complete. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If NFCID1 read procedure is complete.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="688" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="688" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gae6c411a94c782970f08a806cc56950ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__nfct__hal_1ga184ca02cc782ae566ecef8389e1d7ca7" kindref="member">nrf_nfct_selres_protocol_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_nfct_selres_protocol_t nrfy_nfct_selres_protocol_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_selres_protocol_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga5eca78bed4e42015b4af6d89eb288b71" kindref="member">nrf_nfct_selres_protocol_get</ref>  Function for getting the Protocol field in the SEL_RES frame.  </para>
</simplesect>
</para>
<para>The SEL_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the Protocol field in the SEL_RES frame.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="698" column="28" bodyfile="haly/nrfy_nfct.h" bodystart="698" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga88643e8e6b0be03d908c73aae7326d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_selres_protocol_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_selres_protocol_t sel_res_protocol)</argsstring>
        <name>nrfy_nfct_selres_protocol_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__nfct__hal_1ga184ca02cc782ae566ecef8389e1d7ca7" kindref="member">nrf_nfct_selres_protocol_t</ref></type>
          <declname>sel_res_protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga761a688769bda6dac33596ba375c9e4a" kindref="member">nrf_nfct_selres_protocol_set</ref>  Function for setting the Protocol field in the SEL_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SEL_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sel_res_protocol</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the Protocol field in the SEL_RES frame.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="707" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga4ef2beb27ba333baea3e34d207d5ee1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_nfct_selres_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_selres_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga8d7a711de7c19239c319516717daeb64" kindref="member">nrf_nfct_selres_get</ref>  Function for getting the SEL_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SEL_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SEL_RES frame configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="715" column="29" bodyfile="haly/nrfy_nfct.h" bodystart="715" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga5ebd4950ce40c9bb7fea2a6005618b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_selres_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, uint32_t selres)</argsstring>
        <name>nrfy_nfct_selres_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>selres</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3b3b320f098e79afbaaa83f239c42e31" kindref="member">nrf_nfct_selres_set</ref>  Function for setting the SEL_RES frame configuration.  </para>
</simplesect>
</para>
<para>The SEL_RES frame is handled automatically by the NFCT hardware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">selres</parametername>
</parameternamelist>
<parameterdescription>
<para>SEL_RES frame configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="724" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="724" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga47515e115c51785e000e4c0e9330c182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_nfct_pad_config_enable_check</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg)</argsstring>
        <name>nrfy_nfct_pad_config_enable_check</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaadb18c43aea711f4b6fcd7be0cdffbf9" kindref="member">nrf_nfct_pad_config_enable_check</ref>  Function for checking the NFC pads configuration.  </para>
</simplesect>
</para>
<para>When the NFC pads are enabled, they are configured as the NFC antenna pins, and the NFC pins protection mechanism is enabled. When the NFC pads are disabled, they are configured as GPIO pins.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC pads are enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>NFC pads are disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="732" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="732" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1ga28b757e2d34dc3d872325d2e111e3a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_pad_config_enable_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_nfct_pad_config_enable_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga871e391e272696e982ccf2ab42d66087" kindref="member">nrf_nfct_pad_config_enable_set</ref>  Function for enabling or disabling the NFC pad configuration.  </para>
</simplesect>
</para>
<para>When the NFC pads are enabled, they are configured as the NFC antenna pins, and the NFC pins protection mechanism is enabled. When the NFC pads are disabled, they are configured as GPIO pins.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the NFC pads are to be enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="741" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="741" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gac29de24ecc0f19b0c9236bc6a8d999a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_bias_config_get</definition>
        <argsstring>(NRF_NFCT_Type const *p_reg, nrf_nfct_bias_config_t *p_bias_config)</argsstring>
        <name>nrfy_nfct_bias_config_get</name>
        <param>
          <type>NRF_NFCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__nfct__bias__config__t" kindref="compound">nrf_nfct_bias_config_t</ref> *</type>
          <declname>p_bias_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga7a54c231a83731dccf020275ae0b00c0" kindref="member">nrf_nfct_bias_config_get</ref>  Function for getting the bias configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_bias_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with bias configuration parameters.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="750" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="750" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__nfct_1gaf643a77fe1934e8f22a6dda5755a475c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_nfct_bias_config_set</definition>
        <argsstring>(NRF_NFCT_Type *p_reg, nrf_nfct_bias_config_t const *p_bias_config)</argsstring>
        <name>nrfy_nfct_bias_config_set</name>
        <param>
          <type>NRF_NFCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__nfct__bias__config__t" kindref="compound">nrf_nfct_bias_config_t</ref> const *</type>
          <declname>p_bias_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga9752f169298bde1eb999b7cee4638f49" kindref="member">nrf_nfct_bias_config_set</ref>  Function for setting the bias configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_bias_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of bias configuration parameters.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="759" column="25" bodyfile="haly/nrfy_nfct.h" bodystart="759" bodyend="764"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__nfct_1ga1cf246a7fd63ccf088c0ed71de9216a9" prot="public" static="no">
        <name>NRFY_NFCT_HAS_MODULATION_PSEL_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gac245b8683a60ff5150cff0cd6dd132ee" kindref="member">NRF_NFCT_HAS_MODULATION_PSEL_REG</ref>  Symbol indicating whether pin select for modulation control register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="65" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1ga4cb9e0db336a045e272e41bbc9e217ec" prot="public" static="no">
        <name>NRFY_NFCT_HAS_MODULATION_CTRL_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gaf798a5d0379502908e800a8bf02bfb0b" kindref="member">NRF_NFCT_HAS_MODULATION_CTRL_REG</ref>  Symbol indicating whether modulation output select register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="72" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1gabdf5621ea54771fe1fdda092121f47a2" prot="public" static="no">
        <name>NRFY_NFCT_HAS_TAG_STATE_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga3d3852803a40f4b1774beee1b13bfe14" kindref="member">NRF_NFCT_HAS_TAG_STATE_REG</ref>  Symbol indicating whether current operating state of NFC tag register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="79" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1gad537383c330f5ff14d75f91106ec245d" prot="public" static="no">
        <name>NRFY_NFCT_HAS_SLEEP_STATE_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1gad479fd73563462a92e3fa6abb384e460" kindref="member">NRF_NFCT_HAS_SLEEP_STATE_REG</ref>  Symbol indicating whether sleep state during automatic collision resolution is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="86" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1ga42b9c8d03cbb6c4536dd073d7a406d53" prot="public" static="no">
        <name>NRFY_NFCT_HAS_AUTOCOLRES_CONFIG_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga189fcead64f02b76a4da9bfafec48d86" kindref="member">NRF_NFCT_HAS_AUTOCOLRES_CONFIG_REG</ref>  Symbol indicating whether automatic collision resolution control register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="93" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1ga0f44a0d8c269d1fb349e11ce149b67ff" prot="public" static="no">
        <name>NRFY_NFCT_HAS_PAD_CONFIG_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga7ac57dea3f79dc1501b39d3d4a01ff59" kindref="member">NRF_NFCT_HAS_PAD_CONFIG_REG</ref>  Symbol indicating whether NFC pad configuration register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="100" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__nfct_1ga55e1b7f6285051c14ec7167740516607" prot="public" static="no">
        <name>NRFY_NFCT_HAS_BIAS_CONFIG_TRIM_REG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__nfct__hal_1ga0cbda78d7e300cf5822f4d29c3012420" kindref="member">NRF_NFCT_HAS_BIAS_CONFIG_TRIM_REG</ref>  Symbol indicating whether NFC bias configuration trim register is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_nfct.h" line="107" column="9" bodyfile="haly/nrfy_nfct.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer with cache and barrier support for managing the NFCT peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
