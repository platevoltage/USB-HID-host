<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfx__vevif" kind="group">
    <compoundname>nrfx_vevif</compoundname>
    <title>VEVIF driver</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrfx__vevif_1ga2056fbe419752f8e06131d0bbd03e9d9" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* nrfx_vevif_event_handler_t) (uint8_t event_idx, void *p_context)</definition>
        <argsstring>)(uint8_t event_idx, void *p_context)</argsstring>
        <name>nrfx_vevif_event_handler_t</name>
        <briefdescription>
<para>VEVIF event handler callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>VEVIF event index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context passed to the event handler. Set on initialization. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="61" column="9" bodyfile="drivers/include/nrfx_vevif.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__vevif_1ga43482c766a27dc2ad3f738c36bf2ece3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_vevif_init</definition>
        <argsstring>(uint8_t interrupt_priority, nrfx_vevif_event_handler_t event_handler, void *p_context)</argsstring>
        <name>nrfx_vevif_init</name>
        <param>
          <type>uint8_t</type>
          <declname>interrupt_priority</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__vevif_1ga2056fbe419752f8e06131d0bbd03e9d9" kindref="member">nrfx_vevif_event_handler_t</ref></type>
          <declname>event_handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p_context</declname>
        </param>
        <briefdescription>
<para>Function for initializing the VEVIF driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called on interrupt. Must not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context passed to the event handler.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver successfully initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_ALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver is already initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver is already initialized. Deprecated - use <ref refid="group__nrfx__error__codes_1gga2449720f8fa17b22243218068459a24badc3fc33e8a7dc8b9a9547fe07b437efd" kindref="member">NRFX_ERROR_ALREADY</ref> instead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="76" column="12" declfile="drivers/include/nrfx_vevif.h" declline="76" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__vevif_1ga780316f0d0f2913754eef100aeadedf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_vevif_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_vevif_uninit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for uninitializing the VEVIF driver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="81" column="6" declfile="drivers/include/nrfx_vevif.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__vevif_1ga4f3f2aa2a8b547b363394bfca7f474e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrfx_vevif_init_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_vevif_init_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking if the VEVIF driver is initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is already initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="89" column="6" declfile="drivers/include/nrfx_vevif.h" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__vevif_1gac8d819c98c36bb62b3de60f75ce3ed84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_vevif_int_enable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_vevif_int_enable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling interrupts on specified VEVIF events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="96" column="6" declfile="drivers/include/nrfx_vevif.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__vevif_1ga63f8f603573782ad739be0f5945a66d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_vevif_int_disable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_vevif_int_disable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupts on specified VEVIF events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_vevif.h" line="103" column="6" declfile="drivers/include/nrfx_vevif.h" declline="103" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>VPR Event Interface (VEVIF) mechanism driver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
