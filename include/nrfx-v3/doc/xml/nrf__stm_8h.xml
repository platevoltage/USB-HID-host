<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__stm_8h" kind="file" language="C++">
    <compoundname>nrf_stm.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_stm.h</label>
        <link refid="nrf__stm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_feature_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3adce2faa78cf8ca8a9a39dc9a143d7eb6" prot="public">
          <name>NRF_STM_FEATURE_HETER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event trigger enable register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3aaaf8d05b3d2d6c4c426e68c74a62b877" prot="public">
          <name>NRF_STM_FEATURE_HEERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event error detection support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a12803b33652de89f067213c9e90aef17" prot="public">
          <name>NRF_STM_FEATURE_HEMASTR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event master number register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acdb1133365105e0f0fd55d14e782c9aa" prot="public">
          <name>NRF_STM_FEATURE_STM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Global STM enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ab44ef608d1f75ab9dc8e6971cecaeb57" prot="public">
          <name>NRF_STM_FEATURE_TSEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamping enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a263f62dbca83a60cffa2cb3d2edebdd8" prot="public">
          <name>NRF_STM_FEATURE_SYNCEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Synchronization control register implemented. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a029892032af051a9aa0e9a9364f28a11" prot="public">
          <name>NRF_STM_FEATURE_COMPEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compression enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3af3582cc106502dbb75ff03330bdcbe03" prot="public">
          <name>NRF_STM_FEATURE_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STM busy status. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a515fc75aec87be1fc333be6a018a1dd0" prot="public">
          <name>NRF_STM_FEATURE_FIFOAF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Auto-flush enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acff8a30c048bcaf9c988f2925648b064" prot="public">
          <name>NRF_STM_FEATURE_ASYNCPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Async priority escalation enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae2a46ba1b5f722f4d9eeba80b5aac5b8" prot="public">
          <name>NRF_STM_FEATURE_PRIORINVDIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority inversion enable. RW (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0ba88513eb1fed36e13c764efc03cc25" prot="public">
          <name>NRF_STM_FEATURE_CLKON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Override for architectural clock gate enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a26c701e87490ed6ed398097b95d80fd6" prot="public">
          <name>NRF_STM_FEATURE_AFREADYHIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Override for the AFREADY output enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae9956a4efc6b834df312f9bb7041039f" prot="public">
          <name>NRF_STM_FEATURE_TSFREQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamp frequency indication configuration. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a5116ce804989b6fd9e220b263d549f8e" prot="public">
          <name>NRF_STM_FEATURE_FORCETS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>timestamp stimulus register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a64158dfffd2703dfd829fd3129a5df73" prot="public">
          <name>NRF_STM_FEATURE_TSPRESCALE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamp prescale support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7d315648f184f9470302f7f36fe2ace4" prot="public">
          <name>NRF_STM_FEATURE_HWTEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event trace packet emission support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acba57954942870229cbdbe62de66f84c" prot="public">
          <name>NRF_STM_FEATURE_SWOEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Anynchronous-specific usage model for timestamps support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a4f84f1a3469ee1ca754bc5ef609c09f3" prot="public">
          <name>NRF_STM_FEATURE_SPTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port trigger enable register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0a2cd8a8b4a487c682cf00429087516e" prot="public">
          <name>NRF_STM_FEATURE_SPER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port enable register support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a38c2b458da9f2b856370747a73fa0989" prot="public">
          <name>NRF_STM_FEATURE_SPOVERRIDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port override register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0447402de8222a4c65da0dba8eb76194" prot="public">
          <name>NRF_STM_FEATURE_PRIVMASK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace privilege register support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7c9641161804e4f37826d9a5ecf7f697" prot="public">
          <name>NRF_STM_FEATURE_INTEGRATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integration mode enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ad81a7f836966ad4b0a6f60bcc3ebff86" prot="public">
          <name>NRF_STM_FEATURE_LC_PRESENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lock control mechanism support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7b32bcfb2a48f60e1a682f8a783cdf9b" prot="public">
          <name>NRF_STM_FEATURE_LC_LOCKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lock write access enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a90bfbecd6d8a64dccbe543b4ce1e80d0" prot="public">
          <name>NRF_STM_FEATURE_NSID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for non-secure invasive debug enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a066e54c7ec9c1279b68d3ca57b58c043" prot="public">
          <name>NRF_STM_FEATURE_NSNID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for non-secure non-invasive debug enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a03f8a9f043ac0db1a88189b0c6995bcc" prot="public">
          <name>NRF_STM_FEATURE_SID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for secure invasive debug. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a06f03c2191b03dfa9ba9e7ccfb6e7c71" prot="public">
          <name>NRF_STM_FEATURE_SNID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for secure non-invasive debug. RO </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM features. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Registers marked with (1) signal negative situation (disabled, not supported) using non-zero value. Therefore the register value is negated when retrieving their setting with nrf_stm_feature_present_check() or setting it with <ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set()</ref>. This is to ensure that true always means enabled/supported and false disabled/not supported.</para>
</simplesect>
<simplesect kind="note"><para>Registers marked RO are read-only and may be only used in <ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref> function. Registers marked RW are read-write and may be used with both <ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref> and <ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set</ref> functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="62" column="1" bodyfile="hal/nrf_stm.h" bodystart="62" bodyend="92"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_output_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a72df215a47918c62a3e8a63cbbc832fa" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTSPTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Match using STMSPTER trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a85b2f71fe2cd9f4b5eed3837b86690fd" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTSW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write to TRIG location trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a80c2ead1689445a2968b794c80604bc4" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTHETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Match using STMHETER trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afdbdcd5d7abf1ba7857ecb2bd790eb16" prot="public">
          <name>NRF_STM_OUTPUT_ASYNCOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alignment synchronization output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a757fc0e01ada2474e478c41dd7994307" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[0] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979abd9fea5043097b6965b5177d61c3e92c" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[7] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a95e794012f50c6a67d7a4ad2d367bcec" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[15] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979aa7b2b30b3f8356ed739b8e1693dbec36" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[23] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afb76dbdff520210ad889ea2bd381c997" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_31</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[31] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979ae81f042a3a5f27ba314f77c139e54259" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 0 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979adc85945dca636164bcb5a69bde365d37" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 1 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979af4f3bbd0493a30331a698084fe94955b" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 2 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a65b24f39ef3e7d1e6123651940d4fc1d" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 3 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a900e23ab509039492055191e5242b4a9" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 4 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a69c47b277e3a0340362b29ef9025f741" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 5 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a64fc6ea30c211bc2edd93bc1eca9a043" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 6 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a7ce62552a74cb3e6d7e983081e18244b" prot="public">
          <name>NRF_STM_OUTPUT_ATVALIDM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer valid output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a18c56477cf0d59c09222b674246fb951" prot="public">
          <name>NRF_STM_OUTPUT_AFREADYM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ATB flush acknowledge output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a666fa358fce59dc59d755addef45dc6a" prot="public">
          <name>NRF_STM_OUTPUT_ATBYTESM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of bytes on ATDATA to be captured bit 0 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a6d4303e03818db1c8b820ea20c7dee16" prot="public">
          <name>NRF_STM_OUTPUT_ATBYTESM_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of bytes on ATDATA to be captured bit 1 output. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM outputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="95" column="1" bodyfile="hal/nrf_stm.h" bodystart="95" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_input_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18a41baa86bfede312703ac64a49676ef92" prot="public">
          <name>NRF_STM_INPUT_ATREADYM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slave is ready to accept data input. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18ab300a4225cbd755fff9585c7b2d9991f" prot="public">
          <name>NRF_STM_INPUT_AFVALIDM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ATB flush request input. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="119" column="1" bodyfile="hal/nrf_stm.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_dma_sens_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a02c75ef7a7719a23498bde4b46c93f98" prot="public">
          <name>NRF_STM_DMACTLR_LT25</name>
          <initializer>= STM_DMACTLR_SENS_LT25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;25% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367abf4f73fe5228db6d6e16b26d0f5e26ea" prot="public">
          <name>NRF_STM_DMACTLR_LT50</name>
          <initializer>= STM_DMACTLR_SENS_LT50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;50% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a232c8ae015b550d2f8cb26656e5132ca" prot="public">
          <name>NRF_STM_DMACTLR_LT75</name>
          <initializer>= STM_DMACTLR_SENS_LT75</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;75% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a06de203a4af67d0c82fdeaf132823e3e" prot="public">
          <name>NRF_STM_DMACTLR_LT100</name>
          <initializer>= STM_DMACTLR_SENS_LT100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;100% full. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensitivity of the DMA request to the current buffer level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="125" column="1" bodyfile="hal/nrf_stm.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_heidr_class_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga352f76bedc5d968021504cb00722a0fdaeabac641e36ebe87dd99618973c89873" prot="public">
          <name>NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL</name>
          <initializer>= STM_HEIDR_CLASS_HardwareEventControl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware Event Control programmer&apos;s model. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Programmer&apos;s models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="133" column="1" bodyfile="hal/nrf_stm.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_prot_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggac0470ee751b493a19e8c9058f84d72b1a89ae0ef3e62934e2476bb078bd3a842e" prot="public">
          <name>NRF_STM_SFPEAT1R_PROT_STPV2</name>
          <initializer>= STM_SPFEAT1R_PROT_STPV2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STPv2 protocol. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM protocols. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="138" column="1" bodyfile="hal/nrf_stm.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_ts_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga4fd6df5453ad35fa180d76f1db2cafd2a11de44c4051801bb3580c0fd444946c2" prot="public">
          <name>NRF_STM_SPFEAT1R_TS_ABSOLUTE</name>
          <initializer>= STM_SPFEAT1R_TS_Absolute</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Absolute timestaps implemented. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Timestamp support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="143" column="1" bodyfile="hal/nrf_stm.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_syncen_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga05c9b6dec27640c39f688a9df8859693a7566a07942596d133f6b93540f8d371d" prot="public">
          <name>NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE</name>
          <initializer>= STM_SPFEAT1R_SYNCEN_ReadAsOne</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STMTCSR.SYNCEN implemented, but always reads as 1. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STMTCSR.SYNCEN support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="148" column="1" bodyfile="hal/nrf_stm.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_spcomp_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga030d058810829d0923d694d0a344848baa77d631a6f3adf09edf040f3eb26d2e4" prot="public">
          <name>NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE</name>
          <initializer>= STM_SPFEAT2R_SPCOMP_Programmable</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data compression support is programmable. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Data compression on stimulus port support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="153" column="1" bodyfile="hal/nrf_stm.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_sptrtype_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggac08d86dd80030677445378b24c98aea5a647280d15a303b8de7ffa5727486e42f" prot="public">
          <name>NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED</name>
          <initializer>= STM_SPFEAT2R_SPTRTYPE_InvariantAndGuaranteed</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Both invariant timing and guaranteed transactions are supported. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Stimulus port transaction type support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="158" column="1" bodyfile="hal/nrf_stm.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_dsize_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga48f1800c2e2e6e2b2049a2f9cfbeff9faec508f881d213fe0fcba236c6c756281" prot="public">
          <name>NRF_STM_SPFEAT2R_DSIZE_32</name>
          <initializer>= STM_SPFEAT2R_DSIZE_Bits32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32-bit data. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Fundamental data size modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="163" column="1" bodyfile="hal/nrf_stm.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_lsr_type_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa57df22935771184d287486a6048a078f" prot="public">
          <name>NRF_STM_LSR_TYPE_8</name>
          <initializer>= STM_LSR_TYPE_Bits8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>8-bit Lock Access Register implemented. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa2d0235c34df91750bd0bd513a4eef9bc" prot="public">
          <name>NRF_STM_LSR_TYPE_32</name>
          <initializer>= STM_LSR_TYPE_Bits32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32-bit Lock Access Register implemented. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Lock Access Register implementation modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="168" column="1" bodyfile="hal/nrf_stm.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_devtype_major_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga088a57aa0aa611e20101bb50f5c06308a3ce4747eab7d59e477af8f8674ca2426" prot="public">
          <name>NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE</name>
          <initializer>= STM_DEVTYPE_MAJOR_TraceSource</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is a trace source. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Major classification grouping for this debug or trace component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="174" column="1" bodyfile="hal/nrf_stm.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_devtype_sub_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggaf8de504a65b510debcff6e857db0cacba37c7eb94cde1d2d1c5afc9fa117b82eb" prot="public">
          <name>NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE</name>
          <initializer>= STM_DEVTYPE_SUB_StimulusTrace</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is a stimulus trace source. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sub-classification for this debug or trace component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="179" column="1" bodyfile="hal/nrf_stm.h" bodystart="179" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_stm_feature_check</definition>
        <argsstring>(NRF_STM_Type const *p_reg, nrf_stm_feature_t feature)</argsstring>
        <name>nrf_stm_feature_check</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of a feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature is supported/enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature is not supported/disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="433" column="24" bodyfile="hal/nrf_stm.h" bodystart="433" bodyend="500" declfile="hal/nrf_stm.h" declline="192" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_feature_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_feature_t feature, bool enable)</argsstring>
        <name>nrf_stm_feature_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of a feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Only features that are RW may be used in this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>State to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="502" column="24" bodyfile="hal/nrf_stm.h" bodystart="502" bodyend="556" declfile="hal/nrf_stm.h" declline="204" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad9d1bc58630ef8ff845df867123e3258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_stm_input_check</definition>
        <argsstring>(NRF_STM_Type const *p_reg, nrf_stm_input_t input)</argsstring>
        <name>nrf_stm_input_check</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" kindref="member">nrf_stm_input_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of an input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The input is high. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The input is low. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="558" column="24" bodyfile="hal/nrf_stm.h" bodystart="558" bodyend="572" declfile="hal/nrf_stm.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga6f3c2f880ef6c7248e010ad7af132e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_output_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_output_t output, bool enable)</argsstring>
        <name>nrf_stm_output_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" kindref="member">nrf_stm_output_t</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>State to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="574" column="24" bodyfile="hal/nrf_stm.h" bodystart="574" bodyend="662" declfile="hal/nrf_stm.h" declline="226" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga90e1a0037bb5742c748f8af71ad43605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_dmactlr_sens_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_dma_sens_t sens)</argsstring>
        <name>nrf_stm_dmactlr_sens_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref></type>
          <declname>sens</declname>
        </param>
        <briefdescription>
<para>Function for setting the sensivity of the DMA request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensivity to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="664" column="24" bodyfile="hal/nrf_stm.h" bodystart="664" bodyend="667" declfile="hal/nrf_stm.h" declline="234" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8810049e00a731e08d3ea24051f4ea93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_dma_sens_t nrf_stm_dmactlr_sens_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_dmactlr_sens_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the sensivity of the DMA request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sensivity of the DMA request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="669" column="38" bodyfile="hal/nrf_stm.h" bodystart="669" bodyend="673" declfile="hal/nrf_stm.h" declline="243" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga0db55e2fcae1eb60bd18a4917a8c906f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_stm_hemastr_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_hemastr_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of the hardware event trace of the STPv2 master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of the hardware event trace of the STPv2 master. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="675" column="28" bodyfile="hal/nrf_stm.h" bodystart="675" bodyend="678" declfile="hal/nrf_stm.h" declline="252" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga54742fb32613f0751c2d960d7cb05394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_stm_hefeat1r_numhe_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_hefeat1r_numhe_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of hardware events suppoted by the STM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of hardware events suppoted by the STM. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="680" column="28" bodyfile="hal/nrf_stm.h" bodystart="680" bodyend="683" declfile="hal/nrf_stm.h" declline="261" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad16b30409ee18cfcb61f75ba89fe708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_heidr_class_t nrf_stm_heidr_class_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_class_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the programmer&apos;s model of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Programmer&apos;s model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="685" column="41" bodyfile="hal/nrf_stm.h" bodystart="685" bodyend="688" declfile="hal/nrf_stm.h" declline="270" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga67e9bf6b18d87aa4934792966f2b5c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_heidr_classrev_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_classrev_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the revision of the programmer&apos;s model of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Revision of the programmer&apos;s model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="690" column="27" bodyfile="hal/nrf_stm.h" bodystart="690" bodyend="693" declfile="hal/nrf_stm.h" declline="279" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga0d01e99c084bbf0bd0b8d763212eea49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_heidr_vendspec_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_vendspec_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting vendor specific modifications or mappings of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vendor specific modifications or mappings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="695" column="27" bodyfile="hal/nrf_stm.h" bodystart="695" bodyend="698" declfile="hal/nrf_stm.h" declline="288" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8e65172e62c09c9d8bb7034e4723d694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_tcsr_traceid_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, uint8_t trace_id)</argsstring>
        <name>nrf_stm_tcsr_traceid_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trace_id</declname>
        </param>
        <briefdescription>
<para>Function for setting the ATB Trace ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trace_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ATB Trace ID to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="700" column="24" bodyfile="hal/nrf_stm.h" bodystart="700" bodyend="703" declfile="hal/nrf_stm.h" declline="296" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gae247a74733974cddc0e6dfbb1e78142d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_tcsr_traceid_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_tcsr_traceid_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the ATB Trace ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ATB Trace ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="705" column="27" bodyfile="hal/nrf_stm.h" bodystart="705" bodyend="708" declfile="hal/nrf_stm.h" declline="305" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga2692161b5e49fc7063f655509a9f9325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_prot_t nrf_stm_spfeat1r_prot_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_prot_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the implemented STM protocol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Implemented STM protocol. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="710" column="43" bodyfile="hal/nrf_stm.h" bodystart="710" bodyend="714" declfile="hal/nrf_stm.h" declline="314" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8276574f255a79eb6710df7e5de0f0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_ts_t nrf_stm_spfeat1r_ts_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_ts_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the timestamp support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timestamp support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="716" column="41" bodyfile="hal/nrf_stm.h" bodystart="716" bodyend="720" declfile="hal/nrf_stm.h" declline="323" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gab17b787cd3ac51e7a5d94484515d74ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat1r_tracebus_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_tracebus_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the trace bus support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trace bus support. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="722" column="27" bodyfile="hal/nrf_stm.h" bodystart="722" bodyend="725" declfile="hal/nrf_stm.h" declline="332" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga5fc547f121c05051e6b30691ccc496b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat1r_trigctl_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_trigctl_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the trigger control support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trigger control support. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="727" column="27" bodyfile="hal/nrf_stm.h" bodystart="727" bodyend="730" declfile="hal/nrf_stm.h" declline="341" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gab09657647c5c58da070c77acdadfb46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_syncen_t nrf_stm_spfeat1r_syncen_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_syncen_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the STMTCSR.SYNCEN support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STMTCSR.SYNCEN support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="732" column="45" bodyfile="hal/nrf_stm.h" bodystart="732" bodyend="736" declfile="hal/nrf_stm.h" declline="350" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga59695eaa3f52253833d9f2001a9b5604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_spcomp_t nrf_stm_spfeat2r_spcomp_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_spcomp_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the data compression on stimulus port support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data compression on stimulus port support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="738" column="45" bodyfile="hal/nrf_stm.h" bodystart="738" bodyend="742" declfile="hal/nrf_stm.h" declline="359" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga38e2d9744618f6552fcfbe8a24a8aba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_sptrtype_t nrf_stm_spfeat2r_sptrtype_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_sptrtype_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the stimulus port transaction type support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stimulus port transaction type support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="744" column="47" bodyfile="hal/nrf_stm.h" bodystart="744" bodyend="748" declfile="hal/nrf_stm.h" declline="368" declcolumn="47"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad76e68bb327e2adeafbdb4faa7d713f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_dsize_t nrf_stm_spfeat2r_dsize_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_dsize_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the fundamental data size mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Fundamental data size mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="750" column="44" bodyfile="hal/nrf_stm.h" bodystart="750" bodyend="754" declfile="hal/nrf_stm.h" declline="377" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga4067e4ab6dbb67eca77d20eb3fec448c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat3r_nummast_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat3r_nummast_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of stimulus ports masters implemented, minus 1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of stimulus ports masters implemented, minus 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="756" column="27" bodyfile="hal/nrf_stm.h" bodystart="756" bodyend="759" declfile="hal/nrf_stm.h" declline="386" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gafc1dd4fc2765caef3c99cbbe16b15b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_lar_access_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, uint32_t value)</argsstring>
        <name>nrf_stm_lar_access_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the enable write access register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be set for enable write access register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="761" column="24" bodyfile="hal/nrf_stm.h" bodystart="761" bodyend="764" declfile="hal/nrf_stm.h" declline="394" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga54d9f6d735e88667ba538e51ae9a8628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_lsr_type_t nrf_stm_lsr_type_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_lsr_type_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the Lock Access Register implementation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lock Access Register implementation mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="766" column="38" bodyfile="hal/nrf_stm.h" bodystart="766" bodyend="769" declfile="hal/nrf_stm.h" declline="403" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga2533343dd7998329bc0701493e0edf96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_stm_devid_numsp_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devid_numsp_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of stimulus ports implemented. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of stimulus ports implemented. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="771" column="28" bodyfile="hal/nrf_stm.h" bodystart="771" bodyend="774" declfile="hal/nrf_stm.h" declline="412" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga528f48aef946aa8ff0165517966f2e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_devtype_major_t nrf_stm_devtype_major_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devtype_major_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the major classification grouping for this debug or trace component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Major classification grouping for this debug or trace component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="776" column="43" bodyfile="hal/nrf_stm.h" bodystart="776" bodyend="780" declfile="hal/nrf_stm.h" declline="421" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga79598ccbad5d8df946e91a3131ffbab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_devtype_sub_t nrf_stm_devtype_sub_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devtype_sub_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the sub-classification for this debug or trace component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sub-classification for this debug or trace component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="782" column="41" bodyfile="hal/nrf_stm.h" bodystart="782" bodyend="785" declfile="hal/nrf_stm.h" declline="430" declcolumn="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_STM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_STM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_stm_hal<sp/>STM<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_stm</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>System<sp/>Trace<sp/>Macrocell<sp/>(STM)<sp/>peripheral.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@brief<sp/>STM<sp/>features.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@warning<sp/>Registers<sp/>marked<sp/>with<sp/>(1)<sp/>signal<sp/>negative<sp/>situation<sp/>(disabled,<sp/>not<sp/>supported)<sp/>using</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-zero<sp/>value.<sp/>Therefore<sp/>the<sp/>register<sp/>value<sp/>is<sp/>negated<sp/>when<sp/>retrieving<sp/>their<sp/>setting</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>nrf_stm_feature_present_check()<sp/>or<sp/>setting<sp/>it<sp/>with<sp/>nrf_stm_feature_set().</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>to<sp/>ensure<sp/>that<sp/>true<sp/>always<sp/>means<sp/>enabled/supported<sp/>and<sp/>false<sp/>disabled/not<sp/>supported.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@note<sp/>Registers<sp/>marked<sp/>RO<sp/>are<sp/>read-only<sp/>and<sp/>may<sp/>be<sp/>only<sp/>used<sp/>in<sp/>@ref<sp/>nrf_stm_feature_check<sp/>function.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Registers<sp/>marked<sp/>RW<sp/>are<sp/>read-write<sp/>and<sp/>may<sp/>be<sp/>used<sp/>with<sp/>both<sp/>@ref<sp/>nrf_stm_feature_check</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>@ref<sp/>nrf_stm_feature_set<sp/>functions.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3adce2faa78cf8ca8a9a39dc9a143d7eb6" kindref="member">NRF_STM_FEATURE_HETER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Hardware<sp/>event<sp/>trigger<sp/>enable<sp/>register<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3aaaf8d05b3d2d6c4c426e68c74a62b877" kindref="member">NRF_STM_FEATURE_HEERR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Hardware<sp/>event<sp/>error<sp/>detection<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a12803b33652de89f067213c9e90aef17" kindref="member">NRF_STM_FEATURE_HEMASTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Hardware<sp/>event<sp/>master<sp/>number<sp/>register<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acdb1133365105e0f0fd55d14e782c9aa" kindref="member">NRF_STM_FEATURE_STM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Global<sp/>STM<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ab44ef608d1f75ab9dc8e6971cecaeb57" kindref="member">NRF_STM_FEATURE_TSEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Timestamping<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a263f62dbca83a60cffa2cb3d2edebdd8" kindref="member">NRF_STM_FEATURE_SYNCEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Synchronization<sp/>control<sp/>register<sp/>implemented.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a029892032af051a9aa0e9a9364f28a11" kindref="member">NRF_STM_FEATURE_COMPEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Compression<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3af3582cc106502dbb75ff03330bdcbe03" kindref="member">NRF_STM_FEATURE_BUSY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>STM<sp/>busy<sp/>status.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a515fc75aec87be1fc333be6a018a1dd0" kindref="member">NRF_STM_FEATURE_FIFOAF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Auto-flush<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acff8a30c048bcaf9c988f2925648b064" kindref="member">NRF_STM_FEATURE_ASYNCPE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Async<sp/>priority<sp/>escalation<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae2a46ba1b5f722f4d9eeba80b5aac5b8" kindref="member">NRF_STM_FEATURE_PRIORINVDIS</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Priority<sp/>inversion<sp/>enable.<sp/>RW<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0ba88513eb1fed36e13c764efc03cc25" kindref="member">NRF_STM_FEATURE_CLKON</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Override<sp/>for<sp/>architectural<sp/>clock<sp/>gate<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a26c701e87490ed6ed398097b95d80fd6" kindref="member">NRF_STM_FEATURE_AFREADYHIGH</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Override<sp/>for<sp/>the<sp/>AFREADY<sp/>output<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae9956a4efc6b834df312f9bb7041039f" kindref="member">NRF_STM_FEATURE_TSFREQ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Timestamp<sp/>frequency<sp/>indication<sp/>configuration.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a5116ce804989b6fd9e220b263d549f8e" kindref="member">NRF_STM_FEATURE_FORCETS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>timestamp<sp/>stimulus<sp/>register<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a64158dfffd2703dfd829fd3129a5df73" kindref="member">NRF_STM_FEATURE_TSPRESCALE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Timestamp<sp/>prescale<sp/>support.<sp/>RO<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7d315648f184f9470302f7f36fe2ace4" kindref="member">NRF_STM_FEATURE_HWTEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Hardware<sp/>event<sp/>trace<sp/>packet<sp/>emission<sp/>support.<sp/>RO<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acba57954942870229cbdbe62de66f84c" kindref="member">NRF_STM_FEATURE_SWOEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Anynchronous-specific<sp/>usage<sp/>model<sp/>for<sp/>timestamps<sp/>support.<sp/>RO<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a4f84f1a3469ee1ca754bc5ef609c09f3" kindref="member">NRF_STM_FEATURE_SPTER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Stimulus<sp/>port<sp/>trigger<sp/>enable<sp/>register<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0a2cd8a8b4a487c682cf00429087516e" kindref="member">NRF_STM_FEATURE_SPER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Stimulus<sp/>port<sp/>enable<sp/>register<sp/>support.<sp/>RO<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a38c2b458da9f2b856370747a73fa0989" kindref="member">NRF_STM_FEATURE_SPOVERRIDE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Stimulus<sp/>port<sp/>override<sp/>register<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0447402de8222a4c65da0dba8eb76194" kindref="member">NRF_STM_FEATURE_PRIVMASK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>privilege<sp/>register<sp/>support.<sp/>RO<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7c9641161804e4f37826d9a5ecf7f697" kindref="member">NRF_STM_FEATURE_INTEGRATION</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Integration<sp/>mode<sp/>enable.<sp/>RW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ad81a7f836966ad4b0a6f60bcc3ebff86" kindref="member">NRF_STM_FEATURE_LC_PRESENT</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Lock<sp/>control<sp/>mechanism<sp/>support.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7b32bcfb2a48f60e1a682f8a783cdf9b" kindref="member">NRF_STM_FEATURE_LC_LOCKED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Lock<sp/>write<sp/>access<sp/>enable.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a90bfbecd6d8a64dccbe543b4ce1e80d0" kindref="member">NRF_STM_FEATURE_NSID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Security<sp/>for<sp/>non-secure<sp/>invasive<sp/>debug<sp/>enable.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a066e54c7ec9c1279b68d3ca57b58c043" kindref="member">NRF_STM_FEATURE_NSNID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Security<sp/>for<sp/>non-secure<sp/>non-invasive<sp/>debug<sp/>enable.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a03f8a9f043ac0db1a88189b0c6995bcc" kindref="member">NRF_STM_FEATURE_SID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Security<sp/>for<sp/>secure<sp/>invasive<sp/>debug.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a06f03c2191b03dfa9ba9e7ccfb6e7c71" kindref="member">NRF_STM_FEATURE_SNID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Security<sp/>for<sp/>secure<sp/>non-invasive<sp/>debug.<sp/>RO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/>@brief<sp/>STM<sp/>outputs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a72df215a47918c62a3e8a63cbbc832fa" kindref="member">NRF_STM_OUTPUT_TRIGOUTSPTE</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Match<sp/>using<sp/>STMSPTER<sp/>trigger<sp/>event<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a85b2f71fe2cd9f4b5eed3837b86690fd" kindref="member">NRF_STM_OUTPUT_TRIGOUTSW</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>to<sp/>TRIG<sp/>location<sp/>trigger<sp/>event<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a80c2ead1689445a2968b794c80604bc4" kindref="member">NRF_STM_OUTPUT_TRIGOUTHETE</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Match<sp/>using<sp/>STMHETER<sp/>trigger<sp/>event<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afdbdcd5d7abf1ba7857ecb2bd790eb16" kindref="member">NRF_STM_OUTPUT_ASYNCOUT</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Alignment<sp/>synchronization<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a757fc0e01ada2474e478c41dd7994307" kindref="member">NRF_STM_OUTPUT_ATDATAM_0</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>data<sp/>ATDATAM[0]<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979abd9fea5043097b6965b5177d61c3e92c" kindref="member">NRF_STM_OUTPUT_ATDATAM_7</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>data<sp/>ATDATAM[7]<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a95e794012f50c6a67d7a4ad2d367bcec" kindref="member">NRF_STM_OUTPUT_ATDATAM_15</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>data<sp/>ATDATAM[15]<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979aa7b2b30b3f8356ed739b8e1693dbec36" kindref="member">NRF_STM_OUTPUT_ATDATAM_23</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>data<sp/>ATDATAM[23]<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afb76dbdff520210ad889ea2bd381c997" kindref="member">NRF_STM_OUTPUT_ATDATAM_31</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>data<sp/>ATDATAM[31]<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979ae81f042a3a5f27ba314f77c139e54259" kindref="member">NRF_STM_OUTPUT_ATIDM_0</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>0<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979adc85945dca636164bcb5a69bde365d37" kindref="member">NRF_STM_OUTPUT_ATIDM_1</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>1<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979af4f3bbd0493a30331a698084fe94955b" kindref="member">NRF_STM_OUTPUT_ATIDM_2</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>2<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a65b24f39ef3e7d1e6123651940d4fc1d" kindref="member">NRF_STM_OUTPUT_ATIDM_3</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>3<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a900e23ab509039492055191e5242b4a9" kindref="member">NRF_STM_OUTPUT_ATIDM_4</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>4<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a69c47b277e3a0340362b29ef9025f741" kindref="member">NRF_STM_OUTPUT_ATIDM_5</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>5<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a64fc6ea30c211bc2edd93bc1eca9a043" kindref="member">NRF_STM_OUTPUT_ATIDM_6</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trace<sp/>source<sp/>ID<sp/>bit<sp/>6<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a7ce62552a74cb3e6d7e983081e18244b" kindref="member">NRF_STM_OUTPUT_ATVALIDM</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Transfer<sp/>valid<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a18c56477cf0d59c09222b674246fb951" kindref="member">NRF_STM_OUTPUT_AFREADYM</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>ATB<sp/>flush<sp/>acknowledge<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a666fa358fce59dc59d755addef45dc6a" kindref="member">NRF_STM_OUTPUT_ATBYTESM_0</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Number<sp/>of<sp/>bytes<sp/>on<sp/>ATDATA<sp/>to<sp/>be<sp/>captured<sp/>bit<sp/>0<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a6d4303e03818db1c8b820ea20c7dee16" kindref="member">NRF_STM_OUTPUT_ATBYTESM_1</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Number<sp/>of<sp/>bytes<sp/>on<sp/>ATDATA<sp/>to<sp/>be<sp/>captured<sp/>bit<sp/>1<sp/>output.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" kindref="member">nrf_stm_output_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**<sp/>@brief<sp/>STM<sp/>inputs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18a41baa86bfede312703ac64a49676ef92" kindref="member">NRF_STM_INPUT_ATREADYM</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Slave<sp/>is<sp/>ready<sp/>to<sp/>accept<sp/>data<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18ab300a4225cbd755fff9585c7b2d9991f" kindref="member">NRF_STM_INPUT_AFVALIDM</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>ATB<sp/>flush<sp/>request<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" kindref="member">nrf_stm_input_t</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**<sp/>@brief<sp/>Sensitivity<sp/>of<sp/>the<sp/>DMA<sp/>request<sp/>to<sp/>the<sp/>current<sp/>buffer<sp/>level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a02c75ef7a7719a23498bde4b46c93f98" kindref="member">NRF_STM_DMACTLR_LT25</ref><sp/><sp/>=<sp/>STM_DMACTLR_SENS_LT25,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Buffer<sp/>is<sp/>&lt;25%<sp/>full.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367abf4f73fe5228db6d6e16b26d0f5e26ea" kindref="member">NRF_STM_DMACTLR_LT50</ref><sp/><sp/>=<sp/>STM_DMACTLR_SENS_LT50,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Buffer<sp/>is<sp/>&lt;50%<sp/>full.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a232c8ae015b550d2f8cb26656e5132ca" kindref="member">NRF_STM_DMACTLR_LT75</ref><sp/><sp/>=<sp/>STM_DMACTLR_SENS_LT75,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Buffer<sp/>is<sp/>&lt;75%<sp/>full.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a06de203a4af67d0c82fdeaf132823e3e" kindref="member">NRF_STM_DMACTLR_LT100</ref><sp/>=<sp/>STM_DMACTLR_SENS_LT100,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Buffer<sp/>is<sp/>&lt;100%<sp/>full.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**<sp/>@brief<sp/>Programmer&apos;s<sp/>models.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga352f76bedc5d968021504cb00722a0fdaeabac641e36ebe87dd99618973c89873" kindref="member">NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL</ref><sp/>=<sp/>STM_HEIDR_CLASS_HardwareEventControl,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Hardware<sp/>Event<sp/>Control<sp/>programmer&apos;s<sp/>model.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**<sp/>@brief<sp/>STM<sp/>protocols.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggac0470ee751b493a19e8c9058f84d72b1a89ae0ef3e62934e2476bb078bd3a842e" kindref="member">NRF_STM_SFPEAT1R_PROT_STPV2</ref><sp/>=<sp/>STM_SPFEAT1R_PROT_STPV2,<sp/></highlight><highlight class="comment">/**&lt;<sp/>STPv2<sp/>protocol.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**<sp/>@brief<sp/>Timestamp<sp/>support<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga4fd6df5453ad35fa180d76f1db2cafd2a11de44c4051801bb3580c0fd444946c2" kindref="member">NRF_STM_SPFEAT1R_TS_ABSOLUTE</ref><sp/>=<sp/>STM_SPFEAT1R_TS_Absolute,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Absolute<sp/>timestaps<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">/**<sp/>@brief<sp/>STMTCSR.SYNCEN<sp/>support<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga05c9b6dec27640c39f688a9df8859693a7566a07942596d133f6b93540f8d371d" kindref="member">NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE</ref><sp/>=<sp/>STM_SPFEAT1R_SYNCEN_ReadAsOne,<sp/></highlight><highlight class="comment">/**&lt;<sp/>STMTCSR.SYNCEN<sp/>implemented,<sp/>but<sp/>always<sp/>reads<sp/>as<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment">/**<sp/>@brief<sp/>Data<sp/>compression<sp/>on<sp/>stimulus<sp/>port<sp/>support<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga030d058810829d0923d694d0a344848baa77d631a6f3adf09edf040f3eb26d2e4" kindref="member">NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE</ref><sp/>=<sp/>STM_SPFEAT2R_SPCOMP_Programmable,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Data<sp/>compression<sp/>support<sp/>is<sp/>programmable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment">/**<sp/>@brief<sp/>Stimulus<sp/>port<sp/>transaction<sp/>type<sp/>support<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggac08d86dd80030677445378b24c98aea5a647280d15a303b8de7ffa5727486e42f" kindref="member">NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED</ref><sp/>=<sp/>STM_SPFEAT2R_SPTRTYPE_InvariantAndGuaranteed,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Both<sp/>invariant<sp/>timing<sp/>and<sp/>guaranteed<sp/>transactions<sp/>are<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**<sp/>@brief<sp/>Fundamental<sp/>data<sp/>size<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga48f1800c2e2e6e2b2049a2f9cfbeff9faec508f881d213fe0fcba236c6c756281" kindref="member">NRF_STM_SPFEAT2R_DSIZE_32</ref><sp/>=<sp/>STM_SPFEAT2R_DSIZE_Bits32,<sp/></highlight><highlight class="comment">/**&lt;<sp/>32-bit<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">/**<sp/>@brief<sp/>Lock<sp/>Access<sp/>Register<sp/>implementation<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa57df22935771184d287486a6048a078f" kindref="member">NRF_STM_LSR_TYPE_8</ref><sp/><sp/>=<sp/>STM_LSR_TYPE_Bits8,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>8-bit<sp/>Lock<sp/>Access<sp/>Register<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa2d0235c34df91750bd0bd513a4eef9bc" kindref="member">NRF_STM_LSR_TYPE_32</ref><sp/>=<sp/>STM_LSR_TYPE_Bits32,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>32-bit<sp/>Lock<sp/>Access<sp/>Register<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">/**<sp/>Major<sp/>classification<sp/>grouping<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gga088a57aa0aa611e20101bb50f5c06308a3ce4747eab7d59e477af8f8674ca2426" kindref="member">NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE</ref><sp/>=<sp/>STM_DEVTYPE_MAJOR_TraceSource,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>is<sp/>a<sp/>trace<sp/>source.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment">/**<sp/>Sub-classification<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1ggaf8de504a65b510debcff6e857db0cacba37c7eb94cde1d2d1c5afc9fa117b82eb" kindref="member">NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE</ref><sp/>=<sp/>STM_DEVTYPE_SUB_StimulusTrace,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>is<sp/>a<sp/>stimulus<sp/>trace<sp/>source.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}<sp/><ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>a<sp/>feature.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/>Feature<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>feature<sp/>is<sp/>supported/enabled.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>feature<sp/>is<sp/>not<sp/>supported/disabled.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref><sp/><sp/><sp/><sp/>feature);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>state<sp/>of<sp/>a<sp/>feature.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@warning<sp/>Only<sp/>features<sp/>that<sp/>are<sp/>RW<sp/>may<sp/>be<sp/>used<sp/>in<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/>Feature<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/>State<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set</ref>(NRF_STM_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>an<sp/>input.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>input<sp/>Input<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>input<sp/>is<sp/>high.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>input<sp/>is<sp/>low.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gad9d1bc58630ef8ff845df867123e3258" kindref="member">nrf_stm_input_check</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" kindref="member">nrf_stm_input_t</ref><sp/>input);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>state<sp/>of<sp/>an<sp/>output.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>output<sp/>Output<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>State<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga6f3c2f880ef6c7248e010ad7af132e04" kindref="member">nrf_stm_output_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" kindref="member">nrf_stm_output_t</ref><sp/>output,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>sensivity<sp/>of<sp/>the<sp/>DMA<sp/>request.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>sens<sp/><sp/>Sensivity<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga90e1a0037bb5742c748f8af71ad43605" kindref="member">nrf_stm_dmactlr_sens_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref><sp/>sens);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>sensivity<sp/>of<sp/>the<sp/>DMA<sp/>request.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@return<sp/>Sensivity<sp/>of<sp/>the<sp/>DMA<sp/>request.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga8810049e00a731e08d3ea24051f4ea93" kindref="member">nrf_stm_dmactlr_sens_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>the<sp/>hardware<sp/>event<sp/>trace<sp/>of<sp/>the<sp/>STPv2<sp/>master.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>the<sp/>hardware<sp/>event<sp/>trace<sp/>of<sp/>the<sp/>STPv2<sp/>master.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group__nrf__stm__hal_1ga0db55e2fcae1eb60bd18a4917a8c906f" kindref="member">nrf_stm_hemastr_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="254"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>hardware<sp/>events<sp/>suppoted<sp/>by<sp/>the<sp/>STM.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>hardware<sp/>events<sp/>suppoted<sp/>by<sp/>the<sp/>STM.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group__nrf__stm__hal_1ga54742fb32613f0751c2d960d7cb05394" kindref="member">nrf_stm_hefeat1r_numhe_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="263"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>programmer&apos;s<sp/>model<sp/>of<sp/>hardware<sp/>event<sp/>tracking.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@return<sp/>Programmer&apos;s<sp/>model.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref><sp/><ref refid="group__nrf__stm__hal_1gad16b30409ee18cfcb61f75ba89fe708f" kindref="member">nrf_stm_heidr_class_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>revision<sp/>of<sp/>the<sp/>programmer&apos;s<sp/>model<sp/>of<sp/>hardware<sp/>event<sp/>tracking.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@return<sp/>Revision<sp/>of<sp/>the<sp/>programmer&apos;s<sp/>model.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga67e9bf6b18d87aa4934792966f2b5c6c" kindref="member">nrf_stm_heidr_classrev_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>vendor<sp/>specific<sp/>modifications<sp/>or<sp/>mappings<sp/>of<sp/>hardware<sp/>event<sp/>tracking.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>@return<sp/>Vendor<sp/>specific<sp/>modifications<sp/>or<sp/>mappings.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga0d01e99c084bbf0bd0b8d763212eea49" kindref="member">nrf_stm_heidr_vendspec_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>ATB<sp/>Trace<sp/>ID.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>trace_id<sp/>ATB<sp/>Trace<sp/>ID<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga8e65172e62c09c9d8bb7034e4723d694" kindref="member">nrf_stm_tcsr_traceid_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/>uint8_t<sp/>trace_id);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>ATB<sp/>Trace<sp/>ID.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@return<sp/>ATB<sp/>Trace<sp/>ID.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1gae247a74733974cddc0e6dfbb1e78142d" kindref="member">nrf_stm_tcsr_traceid_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>implemented<sp/>STM<sp/>protocol.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@return<sp/>Implemented<sp/>STM<sp/>protocol.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga2692161b5e49fc7063f655509a9f9325" kindref="member">nrf_stm_spfeat1r_prot_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>timestamp<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@return<sp/>Timestamp<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga8276574f255a79eb6710df7e5de0f0b5" kindref="member">nrf_stm_spfeat1r_ts_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>trace<sp/>bus<sp/>support.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@return<sp/>Trace<sp/>bus<sp/>support.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1gab17b787cd3ac51e7a5d94484515d74ff" kindref="member">nrf_stm_spfeat1r_tracebus_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="334"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>trigger<sp/>control<sp/>support.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@return<sp/>Trigger<sp/>control<sp/>support.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga5fc547f121c05051e6b30691ccc496b7" kindref="member">nrf_stm_spfeat1r_trigctl_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>STMTCSR.SYNCEN<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>@return<sp/>STMTCSR.SYNCEN<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref><sp/><ref refid="group__nrf__stm__hal_1gab09657647c5c58da070c77acdadfb46f" kindref="member">nrf_stm_spfeat1r_syncen_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>data<sp/>compression<sp/>on<sp/>stimulus<sp/>port<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@return<sp/>Data<sp/>compression<sp/>on<sp/>stimulus<sp/>port<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga59695eaa3f52253833d9f2001a9b5604" kindref="member">nrf_stm_spfeat2r_spcomp_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="361"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>stimulus<sp/>port<sp/>transaction<sp/>type<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@return<sp/>Stimulus<sp/>port<sp/>transaction<sp/>type<sp/>support<sp/>mode.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga38e2d9744618f6552fcfbe8a24a8aba9" kindref="member">nrf_stm_spfeat2r_sptrtype_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>fundamental<sp/>data<sp/>size<sp/>mode.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@return<sp/>Fundamental<sp/>data<sp/>size<sp/>mode.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref><sp/><ref refid="group__nrf__stm__hal_1gad76e68bb327e2adeafbdb4faa7d713f1" kindref="member">nrf_stm_spfeat2r_dsize_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="379"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>stimulus<sp/>ports<sp/>masters<sp/>implemented,<sp/>minus<sp/>1.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>stimulus<sp/>ports<sp/>masters<sp/>implemented,<sp/>minus<sp/>1.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga4067e4ab6dbb67eca77d20eb3fec448c" kindref="member">nrf_stm_spfeat3r_nummast_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="388"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>enable<sp/>write<sp/>access<sp/>register.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/>Value<sp/>to<sp/>be<sp/>set<sp/>for<sp/>enable<sp/>write<sp/>access<sp/>register.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gafc1dd4fc2765caef3c99cbbe16b15b8d" kindref="member">nrf_stm_lar_access_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>Lock<sp/>Access<sp/>Register<sp/>implementation<sp/>mode.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@return<sp/>Lock<sp/>Access<sp/>Register<sp/>implementation<sp/>mode.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga54d9f6d735e88667ba538e51ae9a8628" kindref="member">nrf_stm_lsr_type_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>stimulus<sp/>ports<sp/>implemented.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>stimulus<sp/>ports<sp/>implemented.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__stm__hal_1ga2533343dd7998329bc0701493e0edf96" kindref="member">nrf_stm_devid_numsp_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="414"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>major<sp/>classification<sp/>grouping<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@return<sp/>Major<sp/>classification<sp/>grouping<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga528f48aef946aa8ff0165517966f2e08" kindref="member">nrf_stm_devtype_major_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="423"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>sub-classification<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>@return<sp/>Sub-classification<sp/>for<sp/>this<sp/>debug<sp/>or<sp/>trace<sp/>component.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga79598ccbad5d8df946e91a3131ffbab7" kindref="member">nrf_stm_devtype_sub_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref><sp/><sp/><sp/><sp/>feature)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3adce2faa78cf8ca8a9a39dc9a143d7eb6" kindref="member">NRF_STM_FEATURE_HETER</ref>:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;HEFEAT1R<sp/>&amp;<sp/>STM_HEFEAT1R_HETER_Msk);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3aaaf8d05b3d2d6c4c426e68c74a62b877" kindref="member">NRF_STM_FEATURE_HEERR</ref>:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;HEFEAT1R<sp/>&amp;<sp/>STM_HEFEAT1R_HEERR_Msk);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a12803b33652de89f067213c9e90aef17" kindref="member">NRF_STM_FEATURE_HEMASTR</ref>:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;HEFEAT1R<sp/>&amp;<sp/>STM_HEFEAT1R_HEMASTR_Msk);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acdb1133365105e0f0fd55d14e782c9aa" kindref="member">NRF_STM_FEATURE_STM</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_EN_Msk);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ab44ef608d1f75ab9dc8e6971cecaeb57" kindref="member">NRF_STM_FEATURE_TSEN</ref>:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_TSEN_Msk);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a263f62dbca83a60cffa2cb3d2edebdd8" kindref="member">NRF_STM_FEATURE_SYNCEN</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_SYNCEN_Msk);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a029892032af051a9aa0e9a9364f28a11" kindref="member">NRF_STM_FEATURE_COMPEN</ref>:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_COMPEN_Msk);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3af3582cc106502dbb75ff03330bdcbe03" kindref="member">NRF_STM_FEATURE_BUSY</ref>:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_BUSY_Msk);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a515fc75aec87be1fc333be6a018a1dd0" kindref="member">NRF_STM_FEATURE_FIFOAF</ref>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUXCR<sp/>&amp;<sp/>STM_AUXCR_FIFOAF_Msk);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acff8a30c048bcaf9c988f2925648b064" kindref="member">NRF_STM_FEATURE_ASYNCPE</ref>:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUXCR<sp/>&amp;<sp/>STM_AUXCR_ASYNCPE_Msk);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae2a46ba1b5f722f4d9eeba80b5aac5b8" kindref="member">NRF_STM_FEATURE_PRIORINVDIS</ref>:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;AUXCR<sp/>&amp;<sp/>STM_AUXCR_PRIORINVDIS_Msk);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0ba88513eb1fed36e13c764efc03cc25" kindref="member">NRF_STM_FEATURE_CLKON</ref>:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUXCR<sp/>&amp;<sp/>STM_AUXCR_CLKON_Msk);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a26c701e87490ed6ed398097b95d80fd6" kindref="member">NRF_STM_FEATURE_AFREADYHIGH</ref>:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUXCR<sp/>&amp;<sp/>STM_AUXCR_AFREADYHIGH_Msk);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae9956a4efc6b834df312f9bb7041039f" kindref="member">NRF_STM_FEATURE_TSFREQ</ref>:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_TSFREQ_Msk);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a5116ce804989b6fd9e220b263d549f8e" kindref="member">NRF_STM_FEATURE_FORCETS</ref>:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_FORCETS_Msk);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a64158dfffd2703dfd829fd3129a5df73" kindref="member">NRF_STM_FEATURE_TSPRESCALE</ref>:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_TSPRESCALE_Msk);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7d315648f184f9470302f7f36fe2ace4" kindref="member">NRF_STM_FEATURE_HWTEN</ref>:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_HWTEN_Msk);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acba57954942870229cbdbe62de66f84c" kindref="member">NRF_STM_FEATURE_SWOEN</ref>:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_SWOEN_Msk);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a4f84f1a3469ee1ca754bc5ef609c09f3" kindref="member">NRF_STM_FEATURE_SPTER</ref>:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_SPTER_Msk);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0a2cd8a8b4a487c682cf00429087516e" kindref="member">NRF_STM_FEATURE_SPER</ref>:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_SPER_Msk);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a38c2b458da9f2b856370747a73fa0989" kindref="member">NRF_STM_FEATURE_SPOVERRIDE</ref>:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_SPOVERRIDE_Msk);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0447402de8222a4c65da0dba8eb76194" kindref="member">NRF_STM_FEATURE_PRIVMASK</ref>:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_PRIVMASK_Msk);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7c9641161804e4f37826d9a5ecf7f697" kindref="member">NRF_STM_FEATURE_INTEGRATION</ref>:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;ITCTRL<sp/>&amp;<sp/>STM_ITCTRL_INTEGRATIONMODE_Msk);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ad81a7f836966ad4b0a6f60bcc3ebff86" kindref="member">NRF_STM_FEATURE_LC_PRESENT</ref>:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;LSR<sp/>&amp;<sp/>STM_LSR_PRESENT_Msk);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7b32bcfb2a48f60e1a682f8a783cdf9b" kindref="member">NRF_STM_FEATURE_LC_LOCKED</ref>:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;LSR<sp/>&amp;<sp/>STM_LSR_LOCKED_Msk);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a90bfbecd6d8a64dccbe543b4ce1e80d0" kindref="member">NRF_STM_FEATURE_NSID</ref>:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUTHSTATUS<sp/>&amp;<sp/>STM_AUTHSTATUS_NSID_Msk);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a066e54c7ec9c1279b68d3ca57b58c043" kindref="member">NRF_STM_FEATURE_NSNID</ref>:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUTHSTATUS<sp/>&amp;<sp/>STM_AUTHSTATUS_NSNID_Msk);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a03f8a9f043ac0db1a88189b0c6995bcc" kindref="member">NRF_STM_FEATURE_SID</ref>:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUTHSTATUS<sp/>&amp;<sp/>STM_AUTHSTATUS_SID_Msk);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a06f03c2191b03dfa9ba9e7ccfb6e7c71" kindref="member">NRF_STM_FEATURE_SNID</ref>:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;AUTHSTATUS<sp/>&amp;<sp/>STM_AUTHSTATUS_SNID_Msk);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set</ref>(NRF_STM_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acdb1133365105e0f0fd55d14e782c9aa" kindref="member">NRF_STM_FEATURE_STM</ref>:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((p_reg-&gt;TCSR<sp/>&amp;<sp/>~STM_TCSR_EN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_TCSR_EN_Pos));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ab44ef608d1f75ab9dc8e6971cecaeb57" kindref="member">NRF_STM_FEATURE_TSEN</ref>:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((p_reg-&gt;TCSR<sp/>&amp;<sp/>~STM_TCSR_TSEN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_TCSR_TSEN_Pos));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a263f62dbca83a60cffa2cb3d2edebdd8" kindref="member">NRF_STM_FEATURE_SYNCEN</ref>:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((p_reg-&gt;TCSR<sp/>&amp;<sp/>~STM_TCSR_SYNCEN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_TCSR_SYNCEN_Pos));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a029892032af051a9aa0e9a9364f28a11" kindref="member">NRF_STM_FEATURE_COMPEN</ref>:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((p_reg-&gt;TCSR<sp/>&amp;<sp/>~STM_TCSR_COMPEN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_TCSR_COMPEN_Pos));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3af3582cc106502dbb75ff03330bdcbe03" kindref="member">NRF_STM_FEATURE_BUSY</ref>:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((p_reg-&gt;TCSR<sp/>&amp;<sp/>~STM_TCSR_BUSY_Msk)<sp/>|</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_TCSR_BUSY_Pos));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a515fc75aec87be1fc333be6a018a1dd0" kindref="member">NRF_STM_FEATURE_FIFOAF</ref>:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;AUXCR<sp/>=<sp/>((p_reg-&gt;AUXCR<sp/>&amp;<sp/>~STM_AUXCR_FIFOAF_Msk)<sp/>|</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_AUXCR_FIFOAF_Pos));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acff8a30c048bcaf9c988f2925648b064" kindref="member">NRF_STM_FEATURE_ASYNCPE</ref>:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;AUXCR<sp/>=<sp/>((p_reg-&gt;AUXCR<sp/>&amp;<sp/>~STM_AUXCR_ASYNCPE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_AUXCR_ASYNCPE_Pos));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae2a46ba1b5f722f4d9eeba80b5aac5b8" kindref="member">NRF_STM_FEATURE_PRIORINVDIS</ref>:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;AUXCR<sp/>=<sp/>((p_reg-&gt;AUXCR<sp/>&amp;<sp/>~STM_AUXCR_PRIORINVDIS_Msk)<sp/>|</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((!enable)<sp/>&lt;&lt;<sp/>STM_AUXCR_PRIORINVDIS_Pos));</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0ba88513eb1fed36e13c764efc03cc25" kindref="member">NRF_STM_FEATURE_CLKON</ref>:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;AUXCR<sp/>=<sp/>((p_reg-&gt;AUXCR<sp/>&amp;<sp/>~STM_AUXCR_CLKON_Msk)<sp/>|</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_AUXCR_CLKON_Pos));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a26c701e87490ed6ed398097b95d80fd6" kindref="member">NRF_STM_FEATURE_AFREADYHIGH</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;AUXCR<sp/>=<sp/>((p_reg-&gt;AUXCR<sp/>&amp;<sp/>~STM_AUXCR_AFREADYHIGH_Msk)<sp/>|</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_AUXCR_AFREADYHIGH_Pos));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7c9641161804e4f37826d9a5ecf7f697" kindref="member">NRF_STM_FEATURE_INTEGRATION</ref>:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITCTRL<sp/>=<sp/>((p_reg-&gt;ITCTRL<sp/>&amp;<sp/>~STM_ITCTRL_INTEGRATIONMODE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITCTRL_INTEGRATIONMODE_Pos));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gad9d1bc58630ef8ff845df867123e3258" kindref="member">nrf_stm_input_check</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" kindref="member">nrf_stm_input_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(input)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18a41baa86bfede312703ac64a49676ef92" kindref="member">NRF_STM_INPUT_ATREADYM</ref>:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;ITATBCTR2<sp/>&amp;<sp/>STM_ITATBCTR2_ATREADYM_R_Msk)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_ITATBCTR2_ATREADYM_R_Pos);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18ab300a4225cbd755fff9585c7b2d9991f" kindref="member">NRF_STM_INPUT_AFVALIDM</ref>:</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;ITATBCTR2<sp/>&amp;<sp/>STM_ITATBCTR2_AFVALIDM_R_Msk)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_ITATBCTR2_AFVALIDM_R_Pos);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga6f3c2f880ef6c7248e010ad7af132e04" kindref="member">nrf_stm_output_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" kindref="member">nrf_stm_output_t</ref><sp/>output,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(output)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a72df215a47918c62a3e8a63cbbc832fa" kindref="member">NRF_STM_OUTPUT_TRIGOUTSPTE</ref>:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITTRIGGER<sp/>=<sp/>((p_reg-&gt;ITTRIGGER<sp/>&amp;<sp/>~STM_ITTRIGGER_TRIGOUTSPTE_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITTRIGGER_TRIGOUTSPTE_W_Pos));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a85b2f71fe2cd9f4b5eed3837b86690fd" kindref="member">NRF_STM_OUTPUT_TRIGOUTSW</ref>:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITTRIGGER<sp/>=<sp/>((p_reg-&gt;ITTRIGGER<sp/>&amp;<sp/>~STM_ITTRIGGER_TRIGOUTSW_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITTRIGGER_TRIGOUTSW_W_Pos));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a80c2ead1689445a2968b794c80604bc4" kindref="member">NRF_STM_OUTPUT_TRIGOUTHETE</ref>:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITTRIGGER<sp/>=<sp/>((p_reg-&gt;ITTRIGGER<sp/>&amp;<sp/>~STM_ITTRIGGER_TRIGOUTHETE_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITTRIGGER_TRIGOUTHETE_W_Pos));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afdbdcd5d7abf1ba7857ecb2bd790eb16" kindref="member">NRF_STM_OUTPUT_ASYNCOUT</ref>:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITTRIGGER<sp/>=<sp/>((p_reg-&gt;ITTRIGGER<sp/>&amp;<sp/>~STM_ITTRIGGER_ASYNCOUT_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITTRIGGER_ASYNCOUT_W_Pos));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a757fc0e01ada2474e478c41dd7994307" kindref="member">NRF_STM_OUTPUT_ATDATAM_0</ref>:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBDATA0<sp/>=<sp/>((p_reg-&gt;ITATBDATA0<sp/>&amp;<sp/>~STM_ITATBDATA0_ATDATAM0_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBDATA0_ATDATAM0_W_Pos));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979abd9fea5043097b6965b5177d61c3e92c" kindref="member">NRF_STM_OUTPUT_ATDATAM_7</ref>:</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBDATA0<sp/>=<sp/>((p_reg-&gt;ITATBDATA0<sp/>&amp;<sp/>~STM_ITATBDATA0_ATDATAM7_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBDATA0_ATDATAM7_W_Pos));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a95e794012f50c6a67d7a4ad2d367bcec" kindref="member">NRF_STM_OUTPUT_ATDATAM_15</ref>:</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBDATA0<sp/>=<sp/>((p_reg-&gt;ITATBDATA0<sp/>&amp;<sp/>~STM_ITATBDATA0_ATDATAM15_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBDATA0_ATDATAM15_W_Pos));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979aa7b2b30b3f8356ed739b8e1693dbec36" kindref="member">NRF_STM_OUTPUT_ATDATAM_23</ref>:</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBDATA0<sp/>=<sp/>((p_reg-&gt;ITATBDATA0<sp/>&amp;<sp/>~STM_ITATBDATA0_ATDATAM23_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBDATA0_ATDATAM23_W_Pos));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afb76dbdff520210ad889ea2bd381c997" kindref="member">NRF_STM_OUTPUT_ATDATAM_31</ref>:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBDATA0<sp/>=<sp/>((p_reg-&gt;ITATBDATA0<sp/>&amp;<sp/>~STM_ITATBDATA0_ATDATAM31_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBDATA0_ATDATAM31_W_Pos));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979ae81f042a3a5f27ba314f77c139e54259" kindref="member">NRF_STM_OUTPUT_ATIDM_0</ref>:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W0_Msk)<sp/>|</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W0_Pos));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979adc85945dca636164bcb5a69bde365d37" kindref="member">NRF_STM_OUTPUT_ATIDM_1</ref>:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W1_Msk)<sp/>|</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W1_Pos));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979af4f3bbd0493a30331a698084fe94955b" kindref="member">NRF_STM_OUTPUT_ATIDM_2</ref>:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W2_Msk)<sp/>|</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W2_Pos));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a65b24f39ef3e7d1e6123651940d4fc1d" kindref="member">NRF_STM_OUTPUT_ATIDM_3</ref>:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W3_Msk)<sp/>|</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W3_Pos));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a900e23ab509039492055191e5242b4a9" kindref="member">NRF_STM_OUTPUT_ATIDM_4</ref>:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W4_Msk)<sp/>|</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W4_Pos));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a69c47b277e3a0340362b29ef9025f741" kindref="member">NRF_STM_OUTPUT_ATIDM_5</ref>:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W5_Msk)<sp/>|</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W5_Pos));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a64fc6ea30c211bc2edd93bc1eca9a043" kindref="member">NRF_STM_OUTPUT_ATIDM_6</ref>:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBID<sp/>=<sp/>((p_reg-&gt;ITATBID<sp/>&amp;<sp/>~STM_ITATBID_ATIDM_W6_Msk)<sp/>|</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBID_ATIDM_W6_Pos));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a7ce62552a74cb3e6d7e983081e18244b" kindref="member">NRF_STM_OUTPUT_ATVALIDM</ref>:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBCTR0<sp/>=<sp/>((p_reg-&gt;ITATBCTR0<sp/>&amp;<sp/>~STM_ITATBCTR0_ATVALIDM_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBCTR0_ATVALIDM_W_Pos));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a18c56477cf0d59c09222b674246fb951" kindref="member">NRF_STM_OUTPUT_AFREADYM</ref>:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBCTR0<sp/>=<sp/>((p_reg-&gt;ITATBCTR0<sp/>&amp;<sp/>~STM_ITATBCTR0_AFREADYM_W_Msk)<sp/>|</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBCTR0_AFREADYM_W_Pos));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a666fa358fce59dc59d755addef45dc6a" kindref="member">NRF_STM_OUTPUT_ATBYTESM_0</ref>:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBCTR0<sp/>=<sp/>((p_reg-&gt;ITATBCTR0<sp/>&amp;<sp/>~STM_ITATBCTR0_ATBYTESM_W0_Msk)<sp/>|</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBCTR0_ATBYTESM_W0_Pos));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a6d4303e03818db1c8b820ea20c7dee16" kindref="member">NRF_STM_OUTPUT_ATBYTESM_1</ref>:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;ITATBCTR0<sp/>=<sp/>((p_reg-&gt;ITATBCTR0<sp/>&amp;<sp/>~STM_ITATBCTR0_ATBYTESM_W1_Msk)<sp/>|</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enable<sp/>&lt;&lt;<sp/>STM_ITATBCTR0_ATBYTESM_W1_Pos));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga90e1a0037bb5742c748f8af71ad43605" kindref="member">nrf_stm_dmactlr_sens_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref><sp/>sens)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMACTLR<sp/>=<sp/>(sens<sp/>&lt;&lt;<sp/>STM_DMACTLR_SENS_Pos);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga8810049e00a731e08d3ea24051f4ea93" kindref="member">nrf_stm_dmactlr_sens_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref>)((p_reg-&gt;DMACTLR<sp/>&amp;<sp/>STM_DMACTLR_SENS_Msk)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_DMACTLR_SENS_Pos);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group__nrf__stm__hal_1ga0db55e2fcae1eb60bd18a4917a8c906f" kindref="member">nrf_stm_hemastr_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)((p_reg-&gt;HEMASTR<sp/>&amp;<sp/>STM_HEMASTR_MASTER_Msk)<sp/>&gt;&gt;<sp/>STM_HEMASTR_MASTER_Pos);</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group__nrf__stm__hal_1ga54742fb32613f0751c2d960d7cb05394" kindref="member">nrf_stm_hefeat1r_numhe_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)((p_reg-&gt;HEFEAT1R<sp/>&amp;<sp/>STM_HEFEAT1R_NUMHE_Msk)<sp/>&gt;&gt;<sp/>STM_HEFEAT1R_NUMHE_Pos);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref><sp/><ref refid="group__nrf__stm__hal_1gad16b30409ee18cfcb61f75ba89fe708f" kindref="member">nrf_stm_heidr_class_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref>)((p_reg-&gt;HEIDR<sp/>&amp;<sp/>STM_HEIDR_CLASS_Msk)<sp/>&gt;&gt;<sp/>STM_HEIDR_CLASS_Pos);</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga67e9bf6b18d87aa4934792966f2b5c6c" kindref="member">nrf_stm_heidr_classrev_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;HEIDR<sp/>&amp;<sp/>STM_HEIDR_CLASSREV_Msk)<sp/>&gt;&gt;<sp/>STM_HEIDR_CLASSREV_Pos);</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga0d01e99c084bbf0bd0b8d763212eea49" kindref="member">nrf_stm_heidr_vendspec_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;HEIDR<sp/>&amp;<sp/>STM_HEIDR_VENDSPEC_Msk)<sp/>&gt;&gt;<sp/>STM_HEIDR_VENDSPEC_Pos);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1ga8e65172e62c09c9d8bb7034e4723d694" kindref="member">nrf_stm_tcsr_traceid_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/>uint8_t<sp/>trace_id)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TCSR<sp/>=<sp/>((trace_id<sp/>&lt;&lt;<sp/>STM_TCSR_TRACEID_Pos)<sp/>&amp;<sp/>STM_TCSR_TRACEID_Msk);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1gae247a74733974cddc0e6dfbb1e78142d" kindref="member">nrf_stm_tcsr_traceid_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;TCSR<sp/>&amp;<sp/>STM_TCSR_TRACEID_Msk)<sp/>&gt;&gt;<sp/>STM_TCSR_TRACEID_Pos);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga2692161b5e49fc7063f655509a9f9325" kindref="member">nrf_stm_spfeat1r_prot_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref>)((p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_PROT_Msk)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT1R_PROT_Pos);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga8276574f255a79eb6710df7e5de0f0b5" kindref="member">nrf_stm_spfeat1r_ts_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref>)((p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_TS_Msk)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT1R_TS_Pos);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1gab17b787cd3ac51e7a5d94484515d74ff" kindref="member">nrf_stm_spfeat1r_tracebus_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_TRACEBUS_Msk)<sp/>&gt;&gt;<sp/>STM_SPFEAT1R_TRACEBUS_Pos);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga5fc547f121c05051e6b30691ccc496b7" kindref="member">nrf_stm_spfeat1r_trigctl_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_TRIGCTL_Msk)<sp/>&gt;&gt;<sp/>STM_SPFEAT1R_TRIGCTL_Pos);</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref><sp/><ref refid="group__nrf__stm__hal_1gab09657647c5c58da070c77acdadfb46f" kindref="member">nrf_stm_spfeat1r_syncen_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref>)((p_reg-&gt;SPFEAT1R<sp/>&amp;<sp/>STM_SPFEAT1R_SYNCEN_Msk)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT1R_SYNCEN_Pos);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga59695eaa3f52253833d9f2001a9b5604" kindref="member">nrf_stm_spfeat2r_spcomp_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref>)((p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_SPCOMP_Msk)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT2R_SPCOMP_Pos);</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga38e2d9744618f6552fcfbe8a24a8aba9" kindref="member">nrf_stm_spfeat2r_sptrtype_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref>)((p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_SPTRTYPE_Msk)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT2R_SPTRTYPE_Pos);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref><sp/><ref refid="group__nrf__stm__hal_1gad76e68bb327e2adeafbdb4faa7d713f1" kindref="member">nrf_stm_spfeat2r_dsize_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref>)((p_reg-&gt;SPFEAT2R<sp/>&amp;<sp/>STM_SPFEAT2R_DSIZE_Msk)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_SPFEAT2R_DSIZE_Pos);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__stm__hal_1ga4067e4ab6dbb67eca77d20eb3fec448c" kindref="member">nrf_stm_spfeat3r_nummast_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((p_reg-&gt;SPFEAT3R<sp/>&amp;<sp/>STM_SPFEAT3R_NUMMAST_Msk)<sp/>&gt;&gt;<sp/>STM_SPFEAT3R_NUMMAST_Pos);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__stm__hal_1gafc1dd4fc2765caef3c99cbbe16b15b8d" kindref="member">nrf_stm_lar_access_set</ref>(NRF_STM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;LAR<sp/>=<sp/>((value<sp/>&lt;&lt;<sp/>STM_LAR_ACCESS_Pos)<sp/>&amp;<sp/>STM_LAR_ACCESS_Msk);</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga54d9f6d735e88667ba538e51ae9a8628" kindref="member">nrf_stm_lsr_type_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref>)((p_reg-&gt;LSR<sp/>&amp;<sp/>STM_LSR_TYPE_Msk)<sp/>&gt;&gt;<sp/>STM_LSR_TYPE_Pos);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__stm__hal_1ga2533343dd7998329bc0701493e0edf96" kindref="member">nrf_stm_devid_numsp_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DEVID<sp/>&amp;<sp/>STM_DEVID_NUMSP_Msk)<sp/>&gt;&gt;<sp/>STM_DEVID_NUMSP_Pos);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga528f48aef946aa8ff0165517966f2e08" kindref="member">nrf_stm_devtype_major_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref>)((p_reg-&gt;DEVTYPE<sp/>&amp;<sp/>STM_DEVTYPE_MAJOR_Msk)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>STM_DEVTYPE_MAJOR_Pos);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref><sp/><ref refid="group__nrf__stm__hal_1ga79598ccbad5d8df946e91a3131ffbab7" kindref="member">nrf_stm_devtype_sub_get</ref>(NRF_STM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref>)((p_reg-&gt;DEVTYPE<sp/>&amp;<sp/>STM_DEVTYPE_SUB_Msk)<sp/>&gt;&gt;<sp/>STM_DEVTYPE_SUB_Pos);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="789"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_STM_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_stm.h"/>
  </compounddef>
</doxygen>
