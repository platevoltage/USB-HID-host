<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structnrfx__pwm__config__t" kind="struct" language="C++" prot="public">
    <compoundname>nrfx_pwm_config_t</compoundname>
    <includes local="no">nrfx_pwm.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a3c348d31723cb6719767f09768f4709e" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_pwm_config_t::output_pins[NRF_PWM_CHANNEL_COUNT]</definition>
        <argsstring>[NRF_PWM_CHANNEL_COUNT]</argsstring>
        <name>output_pins</name>
        <qualifiedname>nrfx_pwm_config_t::output_pins</qualifiedname>
        <briefdescription>
<para>Pin numbers for individual output channels (optional). </para>
        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="group__nrf__pwm__hal_1gabf854890a14200d20e7aea8234a16887" kindref="member">NRF_PWM_PIN_NOT_CONNECTED</ref> if a given output channel is not needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="76" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a2f3434bdd3d0c1451a1ac7b945a71047" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_pwm_config_t::pin_inverted[NRF_PWM_CHANNEL_COUNT]</definition>
        <argsstring>[NRF_PWM_CHANNEL_COUNT]</argsstring>
        <name>pin_inverted</name>
        <qualifiedname>nrfx_pwm_config_t::pin_inverted</qualifiedname>
        <briefdescription>
<para>Inverted pin polarity (idle state = 1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="79" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a317c240386195bd9a11b8b8851c35222" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrfx_pwm_config_t::irq_priority</definition>
        <argsstring></argsstring>
        <name>irq_priority</name>
        <qualifiedname>nrfx_pwm_config_t::irq_priority</qualifiedname>
        <briefdescription>
<para>Interrupt priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="80" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a1415f76ec1b447316c236373dbb192ff" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__pwm__hal_1ga8479da20e14394fb2388b1be3b879670" kindref="member">nrf_pwm_clk_t</ref></type>
        <definition>nrf_pwm_clk_t nrfx_pwm_config_t::base_clock</definition>
        <argsstring></argsstring>
        <name>base_clock</name>
        <qualifiedname>nrfx_pwm_config_t::base_clock</qualifiedname>
        <briefdescription>
<para>Base clock frequency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="81" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a3664dc7a7119a4338591f6e0ff3980f9" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__pwm__hal_1ga1f29b190ff13c52895d249e07ebe92cb" kindref="member">nrf_pwm_mode_t</ref></type>
        <definition>nrf_pwm_mode_t nrfx_pwm_config_t::count_mode</definition>
        <argsstring></argsstring>
        <name>count_mode</name>
        <qualifiedname>nrfx_pwm_config_t::count_mode</qualifiedname>
        <briefdescription>
<para>Operating mode of the pulse generator counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="82" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1acb6344c2baab808193b03ac85f5a6aa0" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t nrfx_pwm_config_t::top_value</definition>
        <argsstring></argsstring>
        <name>top_value</name>
        <qualifiedname>nrfx_pwm_config_t::top_value</qualifiedname>
        <briefdescription>
<para>Value up to which the pulse generator counter counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="83" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1aaf1ad612b7e05a392a5a026edd1c56e8" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__pwm__hal_1ga453888e5feb46774da27499ca1eeafd2" kindref="member">nrf_pwm_dec_load_t</ref></type>
        <definition>nrf_pwm_dec_load_t nrfx_pwm_config_t::load_mode</definition>
        <argsstring></argsstring>
        <name>load_mode</name>
        <qualifiedname>nrfx_pwm_config_t::load_mode</qualifiedname>
        <briefdescription>
<para>Mode of loading sequence data from RAM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="84" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a552f9d660b958531e1f87e0866781f06" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__pwm__hal_1gae25a7e03c383934d33cda8a049b7dde4" kindref="member">nrf_pwm_dec_step_t</ref></type>
        <definition>nrf_pwm_dec_step_t nrfx_pwm_config_t::step_mode</definition>
        <argsstring></argsstring>
        <name>step_mode</name>
        <qualifiedname>nrfx_pwm_config_t::step_mode</qualifiedname>
        <briefdescription>
<para>Mode of advancing the active sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="85" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a681d3cb82148c449779a0f446e13e7fb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_pwm_config_t::skip_gpio_cfg</definition>
        <argsstring></argsstring>
        <name>skip_gpio_cfg</name>
        <qualifiedname>nrfx_pwm_config_t::skip_gpio_cfg</qualifiedname>
        <briefdescription>
<para>Skip the GPIO configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>When this flag is set, the user is responsible for providing the proper configuration of the output pins, as the driver does not touch it at all. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="86" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__pwm__config__t_1a15a1c09f317d2ee311323a7853c6106e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_pwm_config_t::skip_psel_cfg</definition>
        <argsstring></argsstring>
        <name>skip_psel_cfg</name>
        <qualifiedname>nrfx_pwm_config_t::skip_psel_cfg</qualifiedname>
        <briefdescription>
<para>Skip pin selection configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to true, the driver does not modify pin select registers in the peripheral. Those registers are supposed to be set up externally before the driver is initialized. <simplesect kind="note"><para>When both GPIO configuration and pin selection are to be skipped, the structure fields that specify pins can be omitted, as they are ignored anyway. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_pwm.h" line="90" column="24" bodyfile="drivers/include/nrfx_pwm.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PWM driver configuration structure. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="drivers/include/nrfx_pwm.h" line="74" column="1" bodyfile="drivers/include/nrfx_pwm.h" bodystart="75" bodyend="99"/>
    <listofallmembers>
      <member refid="structnrfx__pwm__config__t_1a1415f76ec1b447316c236373dbb192ff" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>base_clock</name></member>
      <member refid="structnrfx__pwm__config__t_1a3664dc7a7119a4338591f6e0ff3980f9" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>count_mode</name></member>
      <member refid="structnrfx__pwm__config__t_1a317c240386195bd9a11b8b8851c35222" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>irq_priority</name></member>
      <member refid="structnrfx__pwm__config__t_1aaf1ad612b7e05a392a5a026edd1c56e8" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>load_mode</name></member>
      <member refid="structnrfx__pwm__config__t_1a3c348d31723cb6719767f09768f4709e" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>output_pins</name></member>
      <member refid="structnrfx__pwm__config__t_1a2f3434bdd3d0c1451a1ac7b945a71047" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>pin_inverted</name></member>
      <member refid="structnrfx__pwm__config__t_1a681d3cb82148c449779a0f446e13e7fb" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>skip_gpio_cfg</name></member>
      <member refid="structnrfx__pwm__config__t_1a15a1c09f317d2ee311323a7853c6106e" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>skip_psel_cfg</name></member>
      <member refid="structnrfx__pwm__config__t_1a552f9d660b958531e1f87e0866781f06" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>step_mode</name></member>
      <member refid="structnrfx__pwm__config__t_1acb6344c2baab808193b03ac85f5a6aa0" prot="public" virt="non-virtual"><scope>nrfx_pwm_config_t</scope><name>top_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
