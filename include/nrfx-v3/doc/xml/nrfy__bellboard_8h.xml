<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__bellboard_8h" kind="file" language="C++">
    <compoundname>nrfy_bellboard.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__bellboard_8h" local="no">hal/nrf_bellboard.h</includes>
    <includedby refid="nrfx__bellboard_8h" local="no">drivers/include/nrfx_bellboard.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_bellboard.h</label>
        <link refid="nrfy__bellboard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__bellboard_8h_1adc0959ab8281385858877b3a49af37b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_bellboard_event_enabled_clear</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint32_t mask, nrf_bellboard_event_t event)</argsstring>
        <name>__nrfy_internal_bellboard_event_enabled_clear</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="251" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="251" bodyend="259" declfile="haly/nrfy_bellboard.h" declline="44" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__bellboard_8h_1afa0360dcd98ba1a727034dea9ac5fc91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_bellboard_event_handle</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint32_t mask, nrf_bellboard_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_bellboard_event_handle</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="231" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="231" bodyend="249" declfile="haly/nrfy_bellboard.h" declline="48" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__bellboard_8h_1a15524c090034a461b06928c82fbbb7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_bellboard_events_process</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint32_t mask)</argsstring>
        <name>__nrfy_internal_bellboard_events_process</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="217" column="30" bodyfile="haly/nrfy_bellboard.h" bodystart="217" bodyend="229" declfile="haly/nrfy_bellboard.h" declline="53" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gad4e156e8fb54cb64354def981de270f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_int_init</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable, uint8_t group_idx)</argsstring>
        <name>nrfy_bellboard_int_init</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified BELLBOARD interupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupts group to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="76" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="76" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1ga293d1cd09cff21359656d7dc6895f6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_int_uninit</definition>
        <argsstring>(uint8_t group_idx)</argsstring>
        <name>nrfy_bellboard_int_uninit</name>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the specified BELLBOARD interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index for interrupt group to be uninitialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="108" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="108" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gac1abb9a71e56d00914614566d7e161b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_bellboard_events_process</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_bellboard_events_process</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified BELLBOARD events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="127" column="29" bodyfile="haly/nrfy_bellboard.h" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1ga0e0082d4cf20d5631646901c400bff67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_task_trigger</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, nrf_bellboard_task_t task)</argsstring>
        <name>nrfy_bellboard_task_trigger</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1ga9cb866cd9da27e96a77d6acd2b33e746" kindref="member">nrf_bellboard_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga244a7a0f18026648a49a93293031efc2" kindref="member">nrf_bellboard_task_trigger</ref>  Function for triggering the specified BELLBOARD task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be triggered.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="136" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gac707fd0527a5091075bf37c01bc1eacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_bellboard_task_address_get</definition>
        <argsstring>(NRF_BELLBOARD_Type const *p_reg, nrf_bellboard_task_t task)</argsstring>
        <name>nrfy_bellboard_task_address_get</name>
        <param>
          <type>NRF_BELLBOARD_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1ga9cb866cd9da27e96a77d6acd2b33e746" kindref="member">nrf_bellboard_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1gafa96dd0593133d5a3859628976a85b3f" kindref="member">nrf_bellboard_task_address_get</ref>  Function for getting the address of the specified BELLBOARD task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="144" column="29" bodyfile="haly/nrfy_bellboard.h" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gad41d40224f3ab318f9c7e8808a140cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_event_clear</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, nrf_bellboard_event_t event)</argsstring>
        <name>nrfy_bellboard_event_clear</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga1b4743f2cee27e112265b65d33114046" kindref="member">nrf_bellboard_event_clear</ref>  Function for clearing the specified BELLBOARD event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="151" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1ga5aafb1d4ca89126a5a9b94940a696fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_bellboard_event_check</definition>
        <argsstring>(NRF_BELLBOARD_Type const *p_reg, nrf_bellboard_event_t event)</argsstring>
        <name>nrfy_bellboard_event_check</name>
        <param>
          <type>NRF_BELLBOARD_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga36c3d788a79f4aba907bd92c774873d8" kindref="member">nrf_bellboard_event_check</ref>  Function for retrieving the state of the BELLBOARD event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="159" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gad53f41c6f8f919fdfd7c1e6a9cc7813e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_bellboard_event_address_get</definition>
        <argsstring>(NRF_BELLBOARD_Type const *p_reg, nrf_bellboard_event_t event)</argsstring>
        <name>nrfy_bellboard_event_address_get</name>
        <param>
          <type>NRF_BELLBOARD_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga075ae6f5c3141d6af83b62d66819a5ea" kindref="member">nrf_bellboard_event_address_get</ref>  Function for getting the address of the specified BELLBOARD event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="169" column="29" bodyfile="haly/nrfy_bellboard.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gace151ea44f16678955af66ac32f90f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_int_enable</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrfy_bellboard_int_enable</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1gaaa84a439672fb98408477a4352d4f0a1" kindref="member">nrf_bellboard_int_enable</ref>  Function for enabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__bellboard__hal_1ga56f5fc2ca5b710e51d244956582f290b" kindref="member">nrf_bellboard_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="176" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="176" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1ga308761b027d819031ad17a4611bf29ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_bellboard_int_disable</definition>
        <argsstring>(NRF_BELLBOARD_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrfy_bellboard_int_disable</name>
        <param>
          <type>NRF_BELLBOARD_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga96083c6ad51f303af5693853ba35df5d" kindref="member">nrf_bellboard_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__bellboard__hal_1ga56f5fc2ca5b710e51d244956582f290b" kindref="member">nrf_bellboard_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="185" column="25" bodyfile="haly/nrfy_bellboard.h" bodystart="185" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1gaf5a944953d9e0f135998a866bc3254c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_bellboard_int_enable_check</definition>
        <argsstring>(NRF_BELLBOARD_Type const *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrfy_bellboard_int_enable_check</name>
        <param>
          <type>NRF_BELLBOARD_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1gadd0d9fbfd4079caf46d0689ebab55726" kindref="member">nrf_bellboard_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__bellboard__hal_1ga56f5fc2ca5b710e51d244956582f290b" kindref="member">nrf_bellboard_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="194" column="29" bodyfile="haly/nrfy_bellboard.h" bodystart="194" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__bellboard_1ga934bb0bd83f36fe0d91deb5ee04df544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_bellboard_int_pending_get</definition>
        <argsstring>(NRF_BELLBOARD_Type const *p_reg, uint8_t group_idx)</argsstring>
        <name>nrfy_bellboard_int_pending_get</name>
        <param>
          <type>NRF_BELLBOARD_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__bellboard__hal_1ga1fc63831ae72dff1636ae95caaa834cd" kindref="member">nrf_bellboard_int_pending_get</ref>  Function for retrieving the state of pending interrupts.  </para>
</simplesect>
</para>
<para>States of pending interrupt are saved as a bitmask. One set at particular position means that interrupt for event is pending.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitmask with information about pending interrupts. Use <ref refid="group__nrf__bellboard__hal_1ga56f5fc2ca5b710e51d244956582f290b" kindref="member">nrf_bellboard_int_mask_t</ref> values for bit masking.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_bellboard.h" line="205" column="29" bodyfile="haly/nrfy_bellboard.h" bodystart="205" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_BELLBOARD_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_BELLBOARD_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_bellboard.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_bellboard_event_enabled_clear(NRF_BELLBOARD_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_bellboard_event_handle(NRF_BELLBOARD_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_bellboard_events_process(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_bellboard<sp/>BELLBOARD<sp/>HALY</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_bellboard</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>BELLBOARD<sp/>peripheral.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BELLBOARD0_IRQn<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>RISC-V<sp/>targets,<sp/>so<sp/>the<sp/>interrupt<sp/>(un)init<sp/>functions<sp/>need<sp/>to<sp/>be<sp/>excluded<sp/>from<sp/>compilation.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>RISC-V<sp/>targets<sp/>should<sp/>use<sp/>(and<sp/>initialize)<sp/>VEVIF<sp/>for<sp/>receiving<sp/>inter-core<sp/>signals.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ISA_ARM)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>BELLBOARD<sp/>interupts.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>interrupts<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group_idx<sp/><sp/><sp/><sp/>Index<sp/>of<sp/>interrupts<sp/>group<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1gad4e156e8fb54cb64354def981de270f1" kindref="member">nrfy_bellboard_int_init</ref>(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_idx)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>IRQn_Type<sp/>interrupt_index<sp/>=<sp/>(IRQn_Type)((uint32_t)BELLBOARD_0_IRQn<sp/>+<sp/>group_idx);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__nrf__bellboard__hal_1gae98a60a559a3e97c18517f62937ef2c8" kindref="member">NRF_BELLBOARD_EVENTS_TRIGGERED_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__bellboard__hal_1ga33f96a06dee94d32d7fd9613ce51becb" kindref="member">nrf_bellboard_triggered_event_get</ref>(i);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_bellboard_event_enabled_clear(p_reg,<sp/>mask,<sp/>event);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(interrupt_index,<sp/>irq_priority);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(interrupt_index);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gaaa84a439672fb98408477a4352d4f0a1" kindref="member">nrf_bellboard_int_enable</ref>(p_reg,<sp/>group_idx,<sp/>mask);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>specified<sp/>BELLBOARD<sp/>interrupts.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group_idx<sp/>Index<sp/>for<sp/>interrupt<sp/>group<sp/>to<sp/>be<sp/>uninitialized.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1ga293d1cd09cff21359656d7dc6895f6ef" kindref="member">nrfy_bellboard_int_uninit</ref>(uint8_t<sp/>group_idx)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>IRQn_Type<sp/>interrupt_index<sp/>=<sp/>(IRQn_Type)((uint32_t)BELLBOARD_0_IRQn<sp/>+<sp/>group_idx);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(interrupt_index);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>//<sp/>defined(ISA_ARM)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>BELLBOARD<sp/>events.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__bellboard_1gac1abb9a71e56d00914614566d7e161b9" kindref="member">nrfy_bellboard_events_process</ref>(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_bellboard_events_process(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1ga0e0082d4cf20d5631646901c400bff67" kindref="member">nrfy_bellboard_task_trigger</ref>(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga9cb866cd9da27e96a77d6acd2b33e746" kindref="member">nrf_bellboard_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga244a7a0f18026648a49a93293031efc2" kindref="member">nrf_bellboard_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__bellboard_1gac707fd0527a5091075bf37c01bc1eacc" kindref="member">nrfy_bellboard_task_address_get</ref>(NRF_BELLBOARD_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga9cb866cd9da27e96a77d6acd2b33e746" kindref="member">nrf_bellboard_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__bellboard__hal_1gafa96dd0593133d5a3859628976a85b3f" kindref="member">nrf_bellboard_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1gad41d40224f3ab318f9c7e8808a140cf6" kindref="member">nrfy_bellboard_event_clear</ref>(NRF_BELLBOARD_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga1b4743f2cee27e112265b65d33114046" kindref="member">nrf_bellboard_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1ga5aafb1d4ca89126a5a9b94940a696fb2" kindref="member">nrfy_bellboard_event_check</ref>(NRF_BELLBOARD_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="group__nrf__bellboard__hal_1ga36c3d788a79f4aba907bd92c774873d8" kindref="member">nrf_bellboard_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__bellboard_1gad53f41c6f8f919fdfd7c1e6a9cc7813e" kindref="member">nrfy_bellboard_event_address_get</ref>(NRF_BELLBOARD_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__bellboard__hal_1ga075ae6f5c3141d6af83b62d66819a5ea" kindref="member">nrf_bellboard_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1gace151ea44f16678955af66ac32f90f48" kindref="member">nrfy_bellboard_int_enable</ref>(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_idx,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gaaa84a439672fb98408477a4352d4f0a1" kindref="member">nrf_bellboard_int_enable</ref>(p_reg,<sp/>group_idx,<sp/>mask);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__bellboard_1ga308761b027d819031ad17a4611bf29ab" kindref="member">nrfy_bellboard_int_disable</ref>(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_idx,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga96083c6ad51f303af5693853ba35df5d" kindref="member">nrf_bellboard_int_disable</ref>(p_reg,<sp/>group_idx,<sp/>mask);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__bellboard_1gaf5a944953d9e0f135998a866bc3254c0" kindref="member">nrfy_bellboard_int_enable_check</ref>(NRF_BELLBOARD_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_idx,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ret<sp/>=<sp/><ref refid="group__nrf__bellboard__hal_1gadd0d9fbfd4079caf46d0689ebab55726" kindref="member">nrf_bellboard_int_enable_check</ref>(p_reg,<sp/>group_idx,<sp/>mask);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**<sp/>@refhal{nrf_bellboard_int_pending_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__bellboard_1ga934bb0bd83f36fe0d91deb5ee04df544" kindref="member">nrfy_bellboard_int_pending_get</ref>(NRF_BELLBOARD_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_idx)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>int_ret<sp/>=<sp/><ref refid="group__nrf__bellboard__hal_1ga1fc63831ae72dff1636ae95caaa834cd" kindref="member">nrf_bellboard_int_pending_get</ref>(p_reg,<sp/>group_idx);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int_ret;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><sp/>__nrfy_internal_bellboard_events_process(NRF_BELLBOARD_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__nrf__bellboard__hal_1gae98a60a559a3e97c18517f62937ef2c8" kindref="member">NRF_BELLBOARD_EVENTS_TRIGGERED_COUNT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__bellboard__hal_1ga33f96a06dee94d32d7fd9613ce51becb" kindref="member">nrf_bellboard_triggered_event_get</ref>(i);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_bellboard_event_handle(p_reg,<sp/>mask,<sp/>event,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_bellboard_event_handle(NRF_BELLBOARD_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__bellboard__hal_1ga36c3d788a79f4aba907bd92c774873d8" kindref="member">nrf_bellboard_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga1b4743f2cee27e112265b65d33114046" kindref="member">nrf_bellboard_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_bellboard_event_enabled_clear(NRF_BELLBOARD_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1gacdf010457aefed28120bfe375c2aadb6" kindref="member">nrf_bellboard_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event)))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__bellboard__hal_1ga1b4743f2cee27e112265b65d33114046" kindref="member">nrf_bellboard_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_BELLBOARD_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_bellboard.h"/>
  </compounddef>
</doxygen>
