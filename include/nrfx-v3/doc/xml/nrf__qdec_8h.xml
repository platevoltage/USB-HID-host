<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__qdec_8h" kind="file" language="C++">
    <compoundname>nrf_qdec.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__qdec_8h" local="no">haly/nrfy_qdec.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_qdec.h</label>
        <link refid="nrf__qdec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__qdec__hal_1ga06a9ce1f8d267e1a88d9c27e7bf4c1d2" prot="public" static="no">
        <name>NRF_QDEC_PIN_NOT_CONNECTED</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
<para>This value can be provided as a parameter for the <ref refid="group__nrf__qdec__hal_1ga131271cd5b5f2912353b6b06d1dd977d" kindref="member">nrf_qdec_pins_set</ref> function call to specify that a LED signal shall not be use by the QDEC and connected to a physical pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="58" column="9" bodyfile="hal/nrf_qdec.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__qdec__hal_1gad5e0dbbc47b5eec20ccbbc5c97fdad99" prot="public" static="no">
        <name>NRF_QDEC_HAS_TASK_RDCLRACC</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of the RDCLRACC task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="62" column="9" bodyfile="hal/nrf_qdec.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__qdec__hal_1ga2e83bb485b84bebb7aeef5d5579b6427" prot="public" static="no">
        <name>NRF_QDEC_HAS_TASK_RDCLRDBL</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of the RDCLRDBL task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="69" column="9" bodyfile="hal/nrf_qdec.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__qdec__hal_1gadd6e2072f2ac9b9811ac8574c457753e" prot="public" static="no">
        <name>NRF_QDEC_HAS_EVENT_DBLRDY</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of the DBLRDY event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="76" column="9" bodyfile="hal/nrf_qdec.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__qdec__hal_1gaaf5b452612267bbfacccd0823c44ade6" prot="public" static="no">
        <name>NRF_QDEC_HAS_EVENT_STOPPED</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of the STOPPED event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="83" column="9" bodyfile="hal/nrf_qdec.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__qdec__hal_1ga40c35d05c8470041f75d91e3802ff07c" prot="public" static="no">
        <name>NRF_QDEC_LEDPRE_DEFAULT</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>Reset value of LEDPRE register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="89" column="9" bodyfile="hal/nrf_qdec.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_task_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a87eb359c9f37a0feb182d35f2df89541" prot="public">
          <name>NRF_QDEC_TASK_START</name>
          <initializer>= offsetof(NRF_QDEC_Type, TASKS_START)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Starting the quadrature decoder. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a5dc83a906e02ddc60700dd353f413e94" prot="public">
          <name>NRF_QDEC_TASK_STOP</name>
          <initializer>= offsetof(NRF_QDEC_Type, TASKS_STOP)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stopping the quadrature decoder. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a710b36275cd60bb174d3d3c371768138" prot="public">
          <name>NRF_QDEC_TASK_READCLRACC</name>
          <initializer>= offsetof(NRF_QDEC_Type, TASKS_READCLRACC)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reading and clearing ACC and ACCDBL registers. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a2b84234ef2726d39d0b5ecdd62b09a78" prot="public">
          <name>NRF_QDEC_TASK_RDCLRACC</name>
          <initializer>= offsetof(NRF_QDEC_Type, TASKS_RDCLRACC)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reading and clearing ACC register. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31af5a612f34934c41f8b92114e5b2e27db" prot="public">
          <name>NRF_QDEC_TASK_RDCLRDBL</name>
          <initializer>= offsetof(NRF_QDEC_Type, TASKS_RDCLRDBL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reading and clearing ACCDBL register. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>QDEC tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="92" column="1" bodyfile="hal/nrf_qdec.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_event_t</name>
        <enumvalue id="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4af25cb3123dbcb17e652cb821f537b4bc" prot="public">
          <name>NRF_QDEC_EVENT_SAMPLERDY</name>
          <initializer>= offsetof(NRF_QDEC_Type, EVENTS_SAMPLERDY)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event generated for every new sample. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a26869c0d1de02f1be03e1e248f084569" prot="public">
          <name>NRF_QDEC_EVENT_REPORTRDY</name>
          <initializer>= offsetof(NRF_QDEC_Type, EVENTS_REPORTRDY)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event generated for every new report. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4af87a861e1ec55498ad7b89e403f189bd" prot="public">
          <name>NRF_QDEC_EVENT_ACCOF</name>
          <initializer>= offsetof(NRF_QDEC_Type, EVENTS_ACCOF)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event generated for every accumulator overflow. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a0dc5469cf834b1ed124fe2672a815a05" prot="public">
          <name>NRF_QDEC_EVENT_DBLRDY</name>
          <initializer>= offsetof(NRF_QDEC_Type, EVENTS_DBLRDY)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event generated for every double displacement(s) detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a6ecd8de5486f639935d2db862715f265" prot="public">
          <name>NRF_QDEC_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_QDEC_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event generated for every QDEC stop. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>QDEC events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="106" column="1" bodyfile="hal/nrf_qdec.h" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga59d3af44f5e27ff6ab771993b30ad2de" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_short_mask_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga59d3af44f5e27ff6ab771993b30ad2dea0eea6cac250f24c14856ba7b2383b869" prot="public">
          <name>NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK</name>
          <initializer>= QDEC_SHORTS_REPORTRDY_READCLRACC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between REPORTRDY event and READCLRACC task. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga59d3af44f5e27ff6ab771993b30ad2deafd1f7fd5f18785dff6ebd64d17e76af4" prot="public">
          <name>NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK</name>
          <initializer>= QDEC_SHORTS_SAMPLERDY_STOP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between SAMPLERDY event and STOP task. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>QDEC shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="120" column="1" bodyfile="hal/nrf_qdec.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga799cee8a2c530915e2c0eaf3bd3a98b8" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_int_mask_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8abc3ae90221de6d19a29ec6e5fee4faaa" prot="public">
          <name>NRF_QDEC_INT_SAMPLERDY_MASK</name>
          <initializer>= QDEC_INTENSET_SAMPLERDY_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for enabling or disabling an interrupt on SAMPLERDY event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8abea7ec27c1337ce66eba3cb91cc27167" prot="public">
          <name>NRF_QDEC_INT_REPORTRDY_MASK</name>
          <initializer>= QDEC_INTENSET_REPORTRDY_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for enabling or disabling an interrupt on REPORTRDY event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8a5bff031ac204da0ca5b6149894398ac8" prot="public">
          <name>NRF_QDEC_INT_ACCOF_MASK</name>
          <initializer>= QDEC_INTENSET_ACCOF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for enabling or disabling an interrupt on ACCOF event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>QDEC interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="127" column="1" bodyfile="hal/nrf_qdec.h" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga06c88466fc26c14d998dbdb261780f97" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_enable_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97a8bf0bd9b044f730e2cb0263e919a9dc9" prot="public">
          <name>NRF_QDEC_DISABLE</name>
          <initializer>= QDEC_ENABLE_ENABLE_Disabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for disabling the QDEC periperal. When disabled, the QDEC decoder pins are not active. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97abf133133c9525ca3abb47bf6f74d71b2" prot="public">
          <name>NRF_QDEC_ENABLE</name>
          <initializer>= QDEC_ENABLE_ENABLE_Enabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for enabling the QDEC periperal. When enabled, the QDEC pins are active. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>States of the enable bit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="135" column="1" bodyfile="hal/nrf_qdec.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga7050e63cd770970f389de07c6fb3cdea" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_dbfen_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaabc2439c5bd1c52ee7621f5d9dbe7613a" prot="public">
          <name>NRF_QDEC_DBFEN_DISABLE</name>
          <initializer>= QDEC_DBFEN_DBFEN_Disabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for disabling the debounce filter. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaa8be52b7bfa4ca8b4a823982215c89be2" prot="public">
          <name>NRF_QDEC_DBFEN_ENABLE</name>
          <initializer>= QDEC_DBFEN_DBFEN_Enabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mask for enabling the debounce filter. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>States of the debounce filter enable bit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="142" column="1" bodyfile="hal/nrf_qdec.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1ga46dc0c4003ff86c492e0e28d6a2c5ae5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_ledpol_t</name>
        <enumvalue id="group__nrf__qdec__hal_1gga46dc0c4003ff86c492e0e28d6a2c5ae5abfa631971da3a38d274ae2ac4e721b87" prot="public">
          <name>NRF_QDEC_LEPOL_ACTIVE_LOW</name>
          <initializer>= QDEC_LEDPOL_LEDPOL_ActiveLow</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC LED active on output pin low. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1gga46dc0c4003ff86c492e0e28d6a2c5ae5aadef855450bc04335300c88f77ac17df" prot="public">
          <name>NRF_QDEC_LEPOL_ACTIVE_HIGH</name>
          <initializer>= QDEC_LEDPOL_LEDPOL_ActiveHigh</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC LED active on output pin high. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Active LED polarity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="149" column="1" bodyfile="hal/nrf_qdec.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_sampleper_t</name>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a80da73693ccf8aaa347ba514d43d1b8c" prot="public">
          <name>NRF_QDEC_SAMPLEPER_128US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_128us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 128 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a9ed87c6f908ab7eecbf60782741d1a8e" prot="public">
          <name>NRF_QDEC_SAMPLEPER_256US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_256us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 256 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48ae847db9d4c6944e5c23ad0113fb0238c" prot="public">
          <name>NRF_QDEC_SAMPLEPER_512US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_512us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 512 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a1c72d529859e075e13c82e0ee57ec595" prot="public">
          <name>NRF_QDEC_SAMPLEPER_1024US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_1024us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 1024 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a485dffd6659101727b2fb37d79d3e7be" prot="public">
          <name>NRF_QDEC_SAMPLEPER_2048US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_2048us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 2048 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a9dafb7709dd58db660295604e49f0308" prot="public">
          <name>NRF_QDEC_SAMPLEPER_4096US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_4096us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 4096 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a49608194495c24b12b019f00ed8d1a06" prot="public">
          <name>NRF_QDEC_SAMPLEPER_8192US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_8192us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 8192 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48abadf210e80ff9f5b0c131cc91e6d8c4f" prot="public">
          <name>NRF_QDEC_SAMPLEPER_16384US</name>
          <initializer>= QDEC_SAMPLEPER_SAMPLEPER_16384us</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC sampling period 16384 microseconds. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Available sampling periods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="156" column="1" bodyfile="hal/nrf_qdec.h" bodystart="157" bodyend="166"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_qdec_reportper_t</name>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bcaab3110d52d52af335259fc44880d1f9b" prot="public">
          <name>NRF_QDEC_REPORTPER_1</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_1Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 1 sample. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca01778bd2208621da40f5cf43fa5dbe2b" prot="public">
          <name>NRF_QDEC_REPORTPER_10</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_10Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 10 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca38f1d2441ff6a1897764d05de31cf2ad" prot="public">
          <name>NRF_QDEC_REPORTPER_40</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_40Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 40 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca6b848c9e4aba2bde479ae7c465fb9c6d" prot="public">
          <name>NRF_QDEC_REPORTPER_80</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_80Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 80 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca9d709c9089c49be2d52319c685e0139e" prot="public">
          <name>NRF_QDEC_REPORTPER_120</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_120Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 120 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bcad51e4b1606d8daae2c058553e6e435ed" prot="public">
          <name>NRF_QDEC_REPORTPER_160</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_160Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 160 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca70a5872ffe232830bf4b73f8158e9c5d" prot="public">
          <name>NRF_QDEC_REPORTPER_200</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_200Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 200 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca92fd6519db3fdfd8f0142ed1034d4552" prot="public">
          <name>NRF_QDEC_REPORTPER_240</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_240Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 240 samples. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca4d1c6e882737530808402bd1f010dde3" prot="public">
          <name>NRF_QDEC_REPORTPER_280</name>
          <initializer>= QDEC_REPORTPER_REPORTPER_280Smpl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>QDEC report period 280 samples. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Available report periods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="169" column="1" bodyfile="hal/nrf_qdec.h" bodystart="170" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga8b32fd7f8b2801870bd8bf17d81d4d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_enable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg)</argsstring>
        <name>nrf_qdec_enable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling QDEC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="502" column="24" bodyfile="hal/nrf_qdec.h" bodystart="502" bodyend="505" declfile="hal/nrf_qdec.h" declline="189" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga16aed0831f33fcde74e5e76b80d210d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_disable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg)</argsstring>
        <name>nrf_qdec_disable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling QDEC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="507" column="24" bodyfile="hal/nrf_qdec.h" bodystart="507" bodyend="510" declfile="hal/nrf_qdec.h" declline="196" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga9c1a00a0de52a516e3d4bbb7ac95483a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_enable_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_enable_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for returning the enable state of QDEC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State of the register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="512" column="28" bodyfile="hal/nrf_qdec.h" bodystart="512" bodyend="515" declfile="hal/nrf_qdec.h" declline="205" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga9adb28115c6d3f9f6ad1d96651226e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_int_enable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_qdec_int_enable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling QDEC interrupts by mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__qdec__hal_1ga799cee8a2c530915e2c0eaf3bd3a98b8" kindref="member">nrf_qdec_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="517" column="24" bodyfile="hal/nrf_qdec.h" bodystart="517" bodyend="520" declfile="hal/nrf_qdec.h" declline="214" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga6f02ad1f06aebbdbc2463e8898694c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_int_disable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_qdec_int_disable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling QDEC interrupts by mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__qdec__hal_1ga799cee8a2c530915e2c0eaf3bd3a98b8" kindref="member">nrf_qdec_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="522" column="24" bodyfile="hal/nrf_qdec.h" bodystart="522" bodyend="525" declfile="hal/nrf_qdec.h" declline="223" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga410c637a4dbbf8b1fc6a7e3c68b0e60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_int_enable_check</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_qdec_int_enable_check</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__qdec__hal_1ga799cee8a2c530915e2c0eaf3bd3a98b8" kindref="member">nrf_qdec_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="527" column="28" bodyfile="hal/nrf_qdec.h" bodystart="527" bodyend="530" declfile="hal/nrf_qdec.h" declline="234" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga5792485228942637839a13501c02ff24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_dbfen_enable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg)</argsstring>
        <name>nrf_qdec_dbfen_enable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the QDEC debouncing filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="532" column="24" bodyfile="hal/nrf_qdec.h" bodystart="532" bodyend="535" declfile="hal/nrf_qdec.h" declline="241" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga7c75fa7e398fc91f2c579a6ae4c1138d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_dbfen_disable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg)</argsstring>
        <name>nrf_qdec_dbfen_disable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the QDEC debouncing filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="537" column="24" bodyfile="hal/nrf_qdec.h" bodystart="537" bodyend="540" declfile="hal/nrf_qdec.h" declline="248" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gad89070def4afc43ffab91bf9a60e8c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_dbfen_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_dbfen_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the state of the QDEC debouncing filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRF_QDEC_DBFEN_DISABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>The debouncing filter is disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_QDEC_DBFEN_ENABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>The debouncing filter is enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="542" column="28" bodyfile="hal/nrf_qdec.h" bodystart="542" bodyend="545" declfile="hal/nrf_qdec.h" declline="258" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga131271cd5b5f2912353b6b06d1dd977d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_pins_set</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t phase_a_pin, uint32_t phase_b_pin, uint32_t led_pin)</argsstring>
        <name>nrf_qdec_pins_set</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>phase_a_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>phase_b_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>led_pin</declname>
        </param>
        <briefdescription>
<para>Function for configuring QDEC pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase_a_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Phase A pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phase_b_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Phase B pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">led_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>LED pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="547" column="24" bodyfile="hal/nrf_qdec.h" bodystart="547" bodyend="569" declfile="hal/nrf_qdec.h" declline="268" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga98137cc339e15f345d248434b32ecd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_phase_a_pin_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_phase_a_pin_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the Phase A pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Phase A pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="571" column="28" bodyfile="hal/nrf_qdec.h" bodystart="571" bodyend="578" declfile="hal/nrf_qdec.h" declline="280" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gacd37e49988f9f5971bb88cf33ea10676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_phase_b_pin_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_phase_b_pin_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the Phase B pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Phase B pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="580" column="28" bodyfile="hal/nrf_qdec.h" bodystart="580" bodyend="587" declfile="hal/nrf_qdec.h" declline="289" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga580d837d0f16029ac1f735edaca791f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_led_pin_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_led_pin_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the LED pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LED pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="589" column="28" bodyfile="hal/nrf_qdec.h" bodystart="589" bodyend="596" declfile="hal/nrf_qdec.h" declline="298" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga51559281664be54a89796e58ffc36551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_task_trigger</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, nrf_qdec_task_t task)</argsstring>
        <name>nrf_qdec_task_trigger</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified QDEC task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>QDEC task to be triggered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="598" column="24" bodyfile="hal/nrf_qdec.h" bodystart="598" bodyend="601" declfile="hal/nrf_qdec.h" declline="306" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gabe49c90c69dfd91700a0906f1651bef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_task_address_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg, nrf_qdec_task_t task)</argsstring>
        <name>nrf_qdec_task_address_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the address of a QDEC task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>QDEC task to get its address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified QDEC task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="603" column="28" bodyfile="hal/nrf_qdec.h" bodystart="603" bodyend="607" declfile="hal/nrf_qdec.h" declline="316" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga69c39cb70ffd44461532aa09688d382e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_event_clear</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, nrf_qdec_event_t event)</argsstring>
        <name>nrf_qdec_event_clear</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified QDEC event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>QDEC event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="609" column="24" bodyfile="hal/nrf_qdec.h" bodystart="609" bodyend="613" declfile="hal/nrf_qdec.h" declline="325" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga9ed3ae1b9d77901ef189dcc6175265e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_qdec_event_check</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg, nrf_qdec_event_t event)</argsstring>
        <name>nrf_qdec_event_check</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the state of the specified QDEC event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>QDEC event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>State of the specified QDEC event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="615" column="24" bodyfile="hal/nrf_qdec.h" bodystart="615" bodyend="618" declfile="hal/nrf_qdec.h" declline="335" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga83852d6bc0b07b7366f7afc9db6640be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_event_address_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg, nrf_qdec_event_t event)</argsstring>
        <name>nrf_qdec_event_address_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the address of the specified QDEC event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>QDEC event to get its address.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified QDEC event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="620" column="28" bodyfile="hal/nrf_qdec.h" bodystart="620" bodyend="624" declfile="hal/nrf_qdec.h" declline="345" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga3f75a62b51d50bf21817bf654eb603b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_shorts_enable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_qdec_shorts_enable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting QDEC shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of QDEC shortcuts to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="626" column="24" bodyfile="hal/nrf_qdec.h" bodystart="626" bodyend="629" declfile="hal/nrf_qdec.h" declline="354" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gaca17084d3aa69d0b1e42acc3c3f9509d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_shorts_disable</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_qdec_shorts_disable</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing shortcuts of the QDEC by mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of QDEC shortcuts to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="631" column="24" bodyfile="hal/nrf_qdec.h" bodystart="631" bodyend="634" declfile="hal/nrf_qdec.h" declline="362" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga246bd6a2c33b6f6fb6d6f34448958e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_sampleper_to_value</definition>
        <argsstring>(nrf_qdec_sampleper_t sampleper)</argsstring>
        <name>nrf_qdec_sampleper_to_value</name>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref></type>
          <declname>sampleper</declname>
        </param>
        <briefdescription>
<para>Function for converting return value of the <ref refid="group__nrf__qdec__hal_1gaf7795cbf2fa34391362e883fee6cb177" kindref="member">nrf_qdec_sampleper_get</ref> function to microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sampleper</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampling period.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Period in microseconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="636" column="28" bodyfile="hal/nrf_qdec.h" bodystart="636" bodyend="639" declfile="hal/nrf_qdec.h" declline="372" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gaf58c235034b6875a7b83363bd84fecbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_sampleper_set</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, nrf_qdec_sampleper_t sampleper)</argsstring>
        <name>nrf_qdec_sampleper_set</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref></type>
          <declname>sampleper</declname>
        </param>
        <briefdescription>
<para>Function for setting value of the QDEC sampling period. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sampleper</parametername>
</parameternamelist>
<parameterdescription>
<para>The sampling period. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="641" column="24" bodyfile="hal/nrf_qdec.h" bodystart="641" bodyend="645" declfile="hal/nrf_qdec.h" declline="380" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gaf7795cbf2fa34391362e883fee6cb177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_qdec_sampleper_t nrf_qdec_sampleper_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_sampleper_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC sampling period. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sampling period. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="647" column="40" bodyfile="hal/nrf_qdec.h" bodystart="647" bodyend="650" declfile="hal/nrf_qdec.h" declline="390" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gade5c928b2ac259044a512e9d55363ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE int32_t</type>
        <definition>NRF_STATIC_INLINE int32_t nrf_qdec_sample_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_sample_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC SAMPLE register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the SAMPLE register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="652" column="27" bodyfile="hal/nrf_qdec.h" bodystart="652" bodyend="655" declfile="hal/nrf_qdec.h" declline="399" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga8f15e75031a3204c5779dd8f2570f999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE int32_t</type>
        <definition>NRF_STATIC_INLINE int32_t nrf_qdec_acc_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_acc_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC ACC register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the ACC register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="657" column="27" bodyfile="hal/nrf_qdec.h" bodystart="657" bodyend="660" declfile="hal/nrf_qdec.h" declline="408" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga32579d80aea6b064e01a21e84703cfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE int32_t</type>
        <definition>NRF_STATIC_INLINE int32_t nrf_qdec_accread_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_accread_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC ACCREAD register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the ACCREAD register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="662" column="27" bodyfile="hal/nrf_qdec.h" bodystart="662" bodyend="665" declfile="hal/nrf_qdec.h" declline="417" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga1ac4bb7dfa1a165d968b49f3c54b92d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_accdbl_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_accdbl_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC ACCDBL register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the ACCDBL register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="667" column="28" bodyfile="hal/nrf_qdec.h" bodystart="667" bodyend="670" declfile="hal/nrf_qdec.h" declline="426" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga58d41afd8497c7d2c1f6a0cfea23f0ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_accdblread_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_accdblread_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving value of the QDEC ACCDBLREAD register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the ACCDBLREAD register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="672" column="28" bodyfile="hal/nrf_qdec.h" bodystart="672" bodyend="675" declfile="hal/nrf_qdec.h" declline="435" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gaef92ec079b56f14116dacdb32f93b984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_ledpre_set</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, uint32_t time_us)</argsstring>
        <name>nrf_qdec_ledpre_set</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>time_us</declname>
        </param>
        <briefdescription>
<para>Function for setting delay time between setting LED active state and start sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_us</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay time (in microseconds) between setting LED active state and start sampling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="677" column="24" bodyfile="hal/nrf_qdec.h" bodystart="677" bodyend="680" declfile="hal/nrf_qdec.h" declline="444" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gac790740db452a7fbcaf1e03f40306102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_ledpre_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_ledpre_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving how long the LED is switched on before sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The gap in time in microseconds between switched LED to active state and start sampling. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="682" column="28" bodyfile="hal/nrf_qdec.h" bodystart="682" bodyend="685" declfile="hal/nrf_qdec.h" declline="453" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gac8d5ef72022186009cbc32074dec304f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_reportper_set</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, nrf_qdec_reportper_t reportper)</argsstring>
        <name>nrf_qdec_reportper_set</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref></type>
          <declname>reportper</declname>
        </param>
        <briefdescription>
<para>Function for setting the report period (in samples). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reportper</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of samples. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="687" column="24" bodyfile="hal/nrf_qdec.h" bodystart="687" bodyend="691" declfile="hal/nrf_qdec.h" declline="461" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga1c4ec75785590fd137e46b244e251275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_qdec_reportper_t nrf_qdec_reportper_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_reportper_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the report period. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The report period. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="693" column="40" bodyfile="hal/nrf_qdec.h" bodystart="693" bodyend="696" declfile="hal/nrf_qdec.h" declline="471" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga5e8ed57fecd2296a16792075f5858975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_reportper_to_value</definition>
        <argsstring>(nrf_qdec_reportper_t reportper)</argsstring>
        <name>nrf_qdec_reportper_to_value</name>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref></type>
          <declname>reportper</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the value of QDEC SAMPLEPER register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reportper</parametername>
</parameternamelist>
<parameterdescription>
<para>Reportper to be converted to amount of samples per report.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of samples per report. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="698" column="28" bodyfile="hal/nrf_qdec.h" bodystart="698" bodyend="701" declfile="hal/nrf_qdec.h" declline="480" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1gad1f07d88e5f6cc6cd1125334ac3f1694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_qdec_ledpol_set</definition>
        <argsstring>(NRF_QDEC_Type *p_reg, nrf_qdec_ledpol_t pol)</argsstring>
        <name>nrf_qdec_ledpol_set</name>
        <param>
          <type>NRF_QDEC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__qdec__hal_1ga46dc0c4003ff86c492e0e28d6a2c5ae5" kindref="member">nrf_qdec_ledpol_t</ref></type>
          <declname>pol</declname>
        </param>
        <briefdescription>
<para>Function for setting the active level for the LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pol</parametername>
</parameternamelist>
<parameterdescription>
<para>Level of the active signal of the LED. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="703" column="24" bodyfile="hal/nrf_qdec.h" bodystart="703" bodyend="706" declfile="hal/nrf_qdec.h" declline="488" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__qdec__hal_1ga109071381920eccd3c5c23ecf3e353cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_qdec_ledpol_get</definition>
        <argsstring>(NRF_QDEC_Type const *p_reg)</argsstring>
        <name>nrf_qdec_ledpol_get</name>
        <param>
          <type>NRF_QDEC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the active level for the LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Level of the active signal of the LED. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_qdec.h" line="708" column="28" bodyfile="hal/nrf_qdec.h" bodystart="708" bodyend="711" declfile="hal/nrf_qdec.h" declline="497" declcolumn="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_QDEC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_QDEC0)<sp/>&amp;&amp;<sp/>defined(NRF_QDEC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC0<sp/>NRF_QDEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_qdec_hal<sp/>QDEC<sp/>HAL</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_qdec</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Quadrature<sp/>Decoder<sp/>(QDEC)<sp/>peripheral.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>value<sp/>can<sp/>be<sp/>provided<sp/>as<sp/>a<sp/>parameter<sp/>for<sp/>the<sp/>@ref<sp/>nrf_qdec_pins_set</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>call<sp/>to<sp/>specify<sp/>that<sp/>a<sp/>LED<sp/>signal<sp/>shall<sp/>not<sp/>be<sp/>use<sp/>by<sp/>the<sp/>QDEC<sp/>and</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connected<sp/>to<sp/>a<sp/>physical<sp/>pin.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_PIN_NOT_CONNECTED<sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_TASKS_RDCLRACC_TASKS_RDCLRACC_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>the<sp/>RDCLRACC<sp/>task.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_TASK_RDCLRACC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_TASK_RDCLRACC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_TASKS_RDCLRDBL_TASKS_RDCLRDBL_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>the<sp/>RDCLRDBL<sp/>task.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_TASK_RDCLRDBL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_TASK_RDCLRDBL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_EVENTS_DBLRDY_EVENTS_DBLRDY_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>the<sp/>DBLRDY<sp/>event.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_EVENT_DBLRDY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_EVENT_DBLRDY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_EVENTS_STOPPED_EVENTS_STOPPED_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>the<sp/>STOPPED<sp/>event.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_EVENT_STOPPED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_HAS_EVENT_STOPPED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">/**<sp/>@brief<sp/>Reset<sp/>value<sp/>of<sp/>LEDPRE<sp/>register.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_QDEC_LEDPRE_DEFAULT<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">/**<sp/>@brief<sp/>QDEC<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a87eb359c9f37a0feb182d35f2df89541" kindref="member">NRF_QDEC_TASK_START</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>TASKS_START),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Starting<sp/>the<sp/>quadrature<sp/>decoder.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a5dc83a906e02ddc60700dd353f413e94" kindref="member">NRF_QDEC_TASK_STOP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>TASKS_STOP),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Stopping<sp/>the<sp/>quadrature<sp/>decoder.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a710b36275cd60bb174d3d3c371768138" kindref="member">NRF_QDEC_TASK_READCLRACC</ref><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>TASKS_READCLRACC),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Reading<sp/>and<sp/>clearing<sp/>ACC<sp/>and<sp/>ACCDBL<sp/>registers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_QDEC_HAS_TASK_RDCLRACC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31a2b84234ef2726d39d0b5ecdd62b09a78" kindref="member">NRF_QDEC_TASK_RDCLRACC</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>TASKS_RDCLRACC),<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reading<sp/>and<sp/>clearing<sp/>ACC<sp/>register.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_QDEC_HAS_TASK_RDCLRDBL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga0dcaa13487193b622caad861a5f4cf31af5a612f34934c41f8b92114e5b2e27db" kindref="member">NRF_QDEC_TASK_RDCLRDBL</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>TASKS_RDCLRDBL)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reading<sp/>and<sp/>clearing<sp/>ACCDBL<sp/>register.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">/**<sp/>@brief<sp/>QDEC<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4af25cb3123dbcb17e652cb821f537b4bc" kindref="member">NRF_QDEC_EVENT_SAMPLERDY</ref><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>EVENTS_SAMPLERDY),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Event<sp/>generated<sp/>for<sp/>every<sp/>new<sp/>sample.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a26869c0d1de02f1be03e1e248f084569" kindref="member">NRF_QDEC_EVENT_REPORTRDY</ref><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>EVENTS_REPORTRDY),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Event<sp/>generated<sp/>for<sp/>every<sp/>new<sp/>report.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4af87a861e1ec55498ad7b89e403f189bd" kindref="member">NRF_QDEC_EVENT_ACCOF</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>EVENTS_ACCOF),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Event<sp/>generated<sp/>for<sp/>every<sp/>accumulator<sp/>overflow.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_QDEC_HAS_EVENT_DBLRDY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a0dc5469cf834b1ed124fe2672a815a05" kindref="member">NRF_QDEC_EVENT_DBLRDY</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>EVENTS_DBLRDY),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Event<sp/>generated<sp/>for<sp/>every<sp/>double<sp/>displacement(s)<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_QDEC_HAS_EVENT_STOPPED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae87c0c925cac2e5e1833534e51e7d1e4a6ecd8de5486f639935d2db862715f265" kindref="member">NRF_QDEC_EVENT_STOPPED</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_QDEC_Type,<sp/>EVENTS_STOPPED)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Event<sp/>generated<sp/>for<sp/>every<sp/>QDEC<sp/>stop.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/**<sp/>@brief<sp/>QDEC<sp/>shortcuts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga59d3af44f5e27ff6ab771993b30ad2dea0eea6cac250f24c14856ba7b2383b869" kindref="member">NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK</ref><sp/>=<sp/>QDEC_SHORTS_REPORTRDY_READCLRACC_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Shortcut<sp/>between<sp/>REPORTRDY<sp/>event<sp/>and<sp/>READCLRACC<sp/>task.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga59d3af44f5e27ff6ab771993b30ad2deafd1f7fd5f18785dff6ebd64d17e76af4" kindref="member">NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_SHORTS_SAMPLERDY_STOP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Shortcut<sp/>between<sp/>SAMPLERDY<sp/>event<sp/>and<sp/>STOP<sp/>task.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga59d3af44f5e27ff6ab771993b30ad2de" kindref="member">nrf_qdec_short_mask_t</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">/**<sp/>@brief<sp/>QDEC<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8abc3ae90221de6d19a29ec6e5fee4faaa" kindref="member">NRF_QDEC_INT_SAMPLERDY_MASK</ref><sp/>=<sp/>QDEC_INTENSET_SAMPLERDY_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>an<sp/>interrupt<sp/>on<sp/>SAMPLERDY<sp/>event.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8abea7ec27c1337ce66eba3cb91cc27167" kindref="member">NRF_QDEC_INT_REPORTRDY_MASK</ref><sp/>=<sp/>QDEC_INTENSET_REPORTRDY_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>an<sp/>interrupt<sp/>on<sp/>REPORTRDY<sp/>event.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga799cee8a2c530915e2c0eaf3bd3a98b8a5bff031ac204da0ca5b6149894398ac8" kindref="member">NRF_QDEC_INT_ACCOF_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_INTENSET_ACCOF_Msk<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>an<sp/>interrupt<sp/>on<sp/>ACCOF<sp/>event.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga799cee8a2c530915e2c0eaf3bd3a98b8" kindref="member">nrf_qdec_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment">/**<sp/>@brief<sp/>States<sp/>of<sp/>the<sp/>enable<sp/>bit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97a8bf0bd9b044f730e2cb0263e919a9dc9" kindref="member">NRF_QDEC_DISABLE</ref><sp/>=<sp/>QDEC_ENABLE_ENABLE_Disabled,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>disabling<sp/>the<sp/>QDEC<sp/>periperal.<sp/>When<sp/>disabled,<sp/>the<sp/>QDEC<sp/>decoder<sp/>pins<sp/>are<sp/>not<sp/>active.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97abf133133c9525ca3abb47bf6f74d71b2" kindref="member">NRF_QDEC_ENABLE</ref><sp/><sp/>=<sp/>QDEC_ENABLE_ENABLE_Enabled<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>enabling<sp/>the<sp/>QDEC<sp/>periperal.<sp/>When<sp/>enabled,<sp/>the<sp/>QDEC<sp/>pins<sp/>are<sp/>active.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga06c88466fc26c14d998dbdb261780f97" kindref="member">nrf_qdec_enable_t</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">/**<sp/>@brief<sp/>States<sp/>of<sp/>the<sp/>debounce<sp/>filter<sp/>enable<sp/>bit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaabc2439c5bd1c52ee7621f5d9dbe7613a" kindref="member">NRF_QDEC_DBFEN_DISABLE</ref><sp/>=<sp/>QDEC_DBFEN_DBFEN_Disabled,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>disabling<sp/>the<sp/>debounce<sp/>filter.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaa8be52b7bfa4ca8b4a823982215c89be2" kindref="member">NRF_QDEC_DBFEN_ENABLE</ref><sp/><sp/>=<sp/>QDEC_DBFEN_DBFEN_Enabled<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Mask<sp/>for<sp/>enabling<sp/>the<sp/>debounce<sp/>filter.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga7050e63cd770970f389de07c6fb3cdea" kindref="member">nrf_qdec_dbfen_t</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">/**<sp/>@brief<sp/>Active<sp/>LED<sp/>polarity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga46dc0c4003ff86c492e0e28d6a2c5ae5abfa631971da3a38d274ae2ac4e721b87" kindref="member">NRF_QDEC_LEPOL_ACTIVE_LOW</ref><sp/><sp/>=<sp/>QDEC_LEDPOL_LEDPOL_ActiveLow,<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>LED<sp/>active<sp/>on<sp/>output<sp/>pin<sp/>low.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gga46dc0c4003ff86c492e0e28d6a2c5ae5aadef855450bc04335300c88f77ac17df" kindref="member">NRF_QDEC_LEPOL_ACTIVE_HIGH</ref><sp/>=<sp/>QDEC_LEDPOL_LEDPOL_ActiveHigh<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>LED<sp/>active<sp/>on<sp/>output<sp/>pin<sp/>high.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1ga46dc0c4003ff86c492e0e28d6a2c5ae5" kindref="member">nrf_qdec_ledpol_t</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">/**<sp/>@brief<sp/>Available<sp/>sampling<sp/>periods.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a80da73693ccf8aaa347ba514d43d1b8c" kindref="member">NRF_QDEC_SAMPLEPER_128US</ref><sp/><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_128us,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>128<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a9ed87c6f908ab7eecbf60782741d1a8e" kindref="member">NRF_QDEC_SAMPLEPER_256US</ref><sp/><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_256us,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>256<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48ae847db9d4c6944e5c23ad0113fb0238c" kindref="member">NRF_QDEC_SAMPLEPER_512US</ref><sp/><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_512us,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>512<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a1c72d529859e075e13c82e0ee57ec595" kindref="member">NRF_QDEC_SAMPLEPER_1024US</ref><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_1024us,<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>1024<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a485dffd6659101727b2fb37d79d3e7be" kindref="member">NRF_QDEC_SAMPLEPER_2048US</ref><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_2048us,<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>2048<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a9dafb7709dd58db660295604e49f0308" kindref="member">NRF_QDEC_SAMPLEPER_4096US</ref><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_4096us,<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>4096<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48a49608194495c24b12b019f00ed8d1a06" kindref="member">NRF_QDEC_SAMPLEPER_8192US</ref><sp/><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_8192us,<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>8192<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggacc2b3f0fab27a73d628dcb64b7d6ee48abadf210e80ff9f5b0c131cc91e6d8c4f" kindref="member">NRF_QDEC_SAMPLEPER_16384US</ref><sp/>=<sp/>QDEC_SAMPLEPER_SAMPLEPER_16384us<sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>sampling<sp/>period<sp/>16384<sp/>microseconds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**<sp/>@brief<sp/>Available<sp/>report<sp/>periods.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_REPORTPER_REPORTPER_1Smpl)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bcaab3110d52d52af335259fc44880d1f9b" kindref="member">NRF_QDEC_REPORTPER_1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_1Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>1<sp/>sample.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca01778bd2208621da40f5cf43fa5dbe2b" kindref="member">NRF_QDEC_REPORTPER_10</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_10Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>10<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca38f1d2441ff6a1897764d05de31cf2ad" kindref="member">NRF_QDEC_REPORTPER_40</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_40Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>40<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca6b848c9e4aba2bde479ae7c465fb9c6d" kindref="member">NRF_QDEC_REPORTPER_80</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_80Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>80<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca9d709c9089c49be2d52319c685e0139e" kindref="member">NRF_QDEC_REPORTPER_120</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_120Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>120<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bcad51e4b1606d8daae2c058553e6e435ed" kindref="member">NRF_QDEC_REPORTPER_160</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_160Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>160<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca70a5872ffe232830bf4b73f8158e9c5d" kindref="member">NRF_QDEC_REPORTPER_200</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_200Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>200<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca92fd6519db3fdfd8f0142ed1034d4552" kindref="member">NRF_QDEC_REPORTPER_240</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_240Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>240<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca4d1c6e882737530808402bd1f010dde3" kindref="member">NRF_QDEC_REPORTPER_280</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>QDEC_REPORTPER_REPORTPER_280Smpl,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>QDEC<sp/>report<sp/>period<sp/>280<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}<sp/><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>QDEC.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga8b32fd7f8b2801870bd8bf17d81d4d13" kindref="member">nrf_qdec_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>QDEC.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga16aed0831f33fcde74e5e76b80d210d1" kindref="member">nrf_qdec_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>enable<sp/>state<sp/>of<sp/>QDEC.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@return<sp/>State<sp/>of<sp/>the<sp/>register.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga9c1a00a0de52a516e3d4bbb7ac95483a" kindref="member">nrf_qdec_enable_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>QDEC<sp/>interrupts<sp/>by<sp/>mask.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_qdec_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga9adb28115c6d3f9f6ad1d96651226e99" kindref="member">nrf_qdec_int_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>QDEC<sp/>interrupts<sp/>by<sp/>mask.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_qdec_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga6f02ad1f06aebbdbc2463e8898694c46" kindref="member">nrf_qdec_int_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_qdec_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga410c637a4dbbf8b1fc6a7e3c68b0e60d" kindref="member">nrf_qdec_int_enable_check</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>QDEC<sp/>debouncing<sp/>filter.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga5792485228942637839a13501c02ff24" kindref="member">nrf_qdec_dbfen_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>QDEC<sp/>debouncing<sp/>filter.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga7c75fa7e398fc91f2c579a6ae4c1138d" kindref="member">nrf_qdec_dbfen_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="250"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>state<sp/>of<sp/>the<sp/>QDEC<sp/>debouncing<sp/>filter.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRF_QDEC_DBFEN_DISABLE<sp/>The<sp/>debouncing<sp/>filter<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRF_QDEC_DBFEN_ENABLE<sp/><sp/>The<sp/>debouncing<sp/>filter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gad89070def4afc43ffab91bf9a60e8c4f" kindref="member">nrf_qdec_dbfen_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>QDEC<sp/>pins.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>phase_a_pin<sp/>Phase<sp/>A<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>phase_b_pin<sp/>Phase<sp/>B<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>led_pin<sp/><sp/><sp/><sp/><sp/>LED<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga131271cd5b5f2912353b6b06d1dd977d" kindref="member">nrf_qdec_pins_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_a_pin,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_b_pin,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_pin);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>Phase<sp/>A<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@return<sp/>Phase<sp/>A<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga98137cc339e15f345d248434b32ecd57" kindref="member">nrf_qdec_phase_a_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>Phase<sp/>B<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@return<sp/>Phase<sp/>B<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gacd37e49988f9f5971bb88cf33ea10676" kindref="member">nrf_qdec_phase_b_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>LED<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@return<sp/>LED<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga580d837d0f16029ac1f735edaca791f8" kindref="member">nrf_qdec_led_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>specified<sp/>QDEC<sp/>task.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>QDEC<sp/>task<sp/>to<sp/>be<sp/>triggered.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga51559281664be54a89796e58ffc36551" kindref="member">nrf_qdec_task_trigger</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="308"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>address<sp/>of<sp/>a<sp/>QDEC<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>QDEC<sp/>task<sp/>to<sp/>get<sp/>its<sp/>address.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>QDEC<sp/>task.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gabe49c90c69dfd91700a0906f1651bef6" kindref="member">nrf_qdec_task_address_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>QDEC<sp/>event.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>QDEC<sp/>event<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga69c39cb70ffd44461532aa09688d382e" kindref="member">nrf_qdec_event_clear</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>state<sp/>of<sp/>the<sp/>specified<sp/>QDEC<sp/>event.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>QDEC<sp/>event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@return<sp/>State<sp/>of<sp/>the<sp/>specified<sp/>QDEC<sp/>event.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga9ed3ae1b9d77901ef189dcc6175265e1" kindref="member">nrf_qdec_event_check</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>QDEC<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>QDEC<sp/>event<sp/>to<sp/>get<sp/>its<sp/>address.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>QDEC<sp/>event.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga83852d6bc0b07b7366f7afc9db6640be" kindref="member">nrf_qdec_event_address_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>QDEC<sp/>shortcuts.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>QDEC<sp/>shortcuts<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga3f75a62b51d50bf21817bf654eb603b6" kindref="member">nrf_qdec_shorts_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>shortcuts<sp/>of<sp/>the<sp/>QDEC<sp/>by<sp/>mask.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>QDEC<sp/>shortcuts<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaca17084d3aa69d0b1e42acc3c3f9509d" kindref="member">nrf_qdec_shorts_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>converting<sp/>return<sp/>value<sp/>of<sp/>the<sp/>@ref<sp/>nrf_qdec_sampleper_get<sp/>function</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>microseconds.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>sampleper<sp/>The<sp/>sampling<sp/>period.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@return<sp/>Period<sp/>in<sp/>microseconds.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga246bd6a2c33b6f6fb6d6f34448958e5a" kindref="member">nrf_qdec_sampleper_to_value</ref>(<ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/>sampleper);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>sampling<sp/>period.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>sampleper<sp/>The<sp/>sampling<sp/>period.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaf58c235034b6875a7b83363bd84fecbb" kindref="member">nrf_qdec_sampleper_set</ref>(NRF_QDEC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/>sampleper);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>sampling<sp/>period.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@return<sp/>Sampling<sp/>period.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/><ref refid="group__nrf__qdec__hal_1gaf7795cbf2fa34391362e883fee6cb177" kindref="member">nrf_qdec_sampleper_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>SAMPLE<sp/>register.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@return<sp/>Value<sp/>of<sp/>the<sp/>SAMPLE<sp/>register.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1gade5c928b2ac259044a512e9d55363ea4" kindref="member">nrf_qdec_sample_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>ACC<sp/>register.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@return<sp/>Value<sp/>of<sp/>the<sp/>ACC<sp/>register.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1ga8f15e75031a3204c5779dd8f2570f999" kindref="member">nrf_qdec_acc_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>ACCREAD<sp/>register.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@return<sp/>Value<sp/>of<sp/>the<sp/>ACCREAD<sp/>register.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1ga32579d80aea6b064e01a21e84703cfe2" kindref="member">nrf_qdec_accread_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>ACCDBL<sp/>register.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@return<sp/>Value<sp/>of<sp/>the<sp/>ACCDBL<sp/>register.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga1ac4bb7dfa1a165d968b49f3c54b92d9" kindref="member">nrf_qdec_accdbl_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="428"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>value<sp/>of<sp/>the<sp/>QDEC<sp/>ACCDBLREAD<sp/>register.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>@return<sp/>Value<sp/>of<sp/>the<sp/>ACCDBLREAD<sp/>register.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga58d41afd8497c7d2c1f6a0cfea23f0ee" kindref="member">nrf_qdec_accdblread_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>delay<sp/>time<sp/>between<sp/>setting<sp/>LED<sp/>active<sp/>state<sp/>and<sp/>start<sp/>sampling.</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>time_us<sp/>Delay<sp/>time<sp/>(in<sp/>microseconds)<sp/>between<sp/>setting<sp/>LED<sp/>active<sp/>state</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>start<sp/>sampling.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaef92ec079b56f14116dacdb32f93b984" kindref="member">nrf_qdec_ledpre_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>time_us);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="446"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>how<sp/>long<sp/>the<sp/>LED<sp/>is<sp/>switched<sp/>on<sp/>before<sp/>sampling.</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>gap<sp/>in<sp/>time<sp/>in<sp/>microseconds<sp/>between<sp/>switched<sp/>LED<sp/>to<sp/>active<sp/>state<sp/>and<sp/>start<sp/>sampling.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gac790740db452a7fbcaf1e03f40306102" kindref="member">nrf_qdec_ledpre_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>report<sp/>period<sp/>(in<sp/>samples).</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>reportper<sp/>The<sp/>number<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gac8d5ef72022186009cbc32074dec304f" kindref="member">nrf_qdec_reportper_set</ref>(NRF_QDEC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/>reportper);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="464"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>report<sp/>period.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>report<sp/>period.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/><ref refid="group__nrf__qdec__hal_1ga1c4ec75785590fd137e46b244e251275" kindref="member">nrf_qdec_reportper_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="473"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>value<sp/>of<sp/>QDEC<sp/>SAMPLEPER<sp/>register.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>reportper<sp/>Reportper<sp/>to<sp/>be<sp/>converted<sp/>to<sp/>amount<sp/>of<sp/>samples<sp/>per<sp/>report.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>samples<sp/>per<sp/>report.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga5e8ed57fecd2296a16792075f5858975" kindref="member">nrf_qdec_reportper_to_value</ref>(<ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/>reportper);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>active<sp/>level<sp/>for<sp/>the<sp/>LED.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pol<sp/><sp/><sp/>Level<sp/>of<sp/>the<sp/>active<sp/>signal<sp/>of<sp/>the<sp/>LED.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gad1f07d88e5f6cc6cd1125334ac3f1694" kindref="member">nrf_qdec_ledpol_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1ga46dc0c4003ff86c492e0e28d6a2c5ae5" kindref="member">nrf_qdec_ledpol_t</ref><sp/>pol);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="490"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>active<sp/>level<sp/>for<sp/>the<sp/>LED.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>@return<sp/>Level<sp/>of<sp/>the<sp/>active<sp/>signal<sp/>of<sp/>the<sp/>LED.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga109071381920eccd3c5c23ecf3e353cb" kindref="member">nrf_qdec_ledpol_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga8b32fd7f8b2801870bd8bf17d81d4d13" kindref="member">nrf_qdec_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/><ref refid="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97abf133133c9525ca3abb47bf6f74d71b2" kindref="member">NRF_QDEC_ENABLE</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga16aed0831f33fcde74e5e76b80d210d1" kindref="member">nrf_qdec_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/><ref refid="group__nrf__qdec__hal_1gga06c88466fc26c14d998dbdb261780f97a8bf0bd9b044f730e2cb0263e919a9dc9" kindref="member">NRF_QDEC_DISABLE</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga9c1a00a0de52a516e3d4bbb7ac95483a" kindref="member">nrf_qdec_enable_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ENABLE;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga9adb28115c6d3f9f6ad1d96651226e99" kindref="member">nrf_qdec_int_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;<sp/></highlight><highlight class="comment">//<sp/>writing<sp/>0<sp/>has<sp/>no<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga6f02ad1f06aebbdbc2463e8898694c46" kindref="member">nrf_qdec_int_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;<sp/></highlight><highlight class="comment">//<sp/>writing<sp/>0<sp/>has<sp/>no<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga410c637a4dbbf8b1fc6a7e3c68b0e60d" kindref="member">nrf_qdec_int_enable_check</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;<sp/></highlight><highlight class="comment">//<sp/>when<sp/>read<sp/>this<sp/>register<sp/>will<sp/>return<sp/>the<sp/>value<sp/>of<sp/>INTEN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga5792485228942637839a13501c02ff24" kindref="member">nrf_qdec_dbfen_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DBFEN<sp/>=<sp/><ref refid="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaa8be52b7bfa4ca8b4a823982215c89be2" kindref="member">NRF_QDEC_DBFEN_ENABLE</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga7c75fa7e398fc91f2c579a6ae4c1138d" kindref="member">nrf_qdec_dbfen_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DBFEN<sp/>=<sp/><ref refid="group__nrf__qdec__hal_1gga7050e63cd770970f389de07c6fb3cdeaabc2439c5bd1c52ee7621f5d9dbe7613a" kindref="member">NRF_QDEC_DBFEN_DISABLE</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gad89070def4afc43ffab91bf9a60e8c4f" kindref="member">nrf_qdec_dbfen_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DBFEN;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga131271cd5b5f2912353b6b06d1dd977d" kindref="member">nrf_qdec_pins_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_a_pin,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_b_pin,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_pin)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_A_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.A<sp/>=<sp/>phase_a_pin;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELA<sp/>=<sp/>phase_a_pin;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_B_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.B<sp/>=<sp/>phase_b_pin;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELB<sp/>=<sp/>phase_b_pin;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_LED_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.LED<sp/>=<sp/>led_pin;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELLED<sp/>=<sp/>led_pin;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga98137cc339e15f345d248434b32ecd57" kindref="member">nrf_qdec_phase_a_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_A_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.A;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELA;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gacd37e49988f9f5971bb88cf33ea10676" kindref="member">nrf_qdec_phase_b_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_B_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.B;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELB;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga580d837d0f16029ac1f735edaca791f8" kindref="member">nrf_qdec_led_pin_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QDEC_PSEL_LED_CONNECT_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.LED;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELLED;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga51559281664be54a89796e58ffc36551" kindref="member">nrf_qdec_task_trigger</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)(<sp/>(uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task)<sp/>)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gabe49c90c69dfd91700a0906f1651bef6" kindref="member">nrf_qdec_task_address_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1ga0dcaa13487193b622caad861a5f4cf31" kindref="member">nrf_qdec_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga69c39cb70ffd44461532aa09688d382e" kindref="member">nrf_qdec_event_clear</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)(<sp/>(uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event)<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga9ed3ae1b9d77901ef189dcc6175265e1" kindref="member">nrf_qdec_event_check</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga83852d6bc0b07b7366f7afc9db6640be" kindref="member">nrf_qdec_event_address_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gae87c0c925cac2e5e1833534e51e7d1e4" kindref="member">nrf_qdec_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1ga3f75a62b51d50bf21817bf654eb603b6" kindref="member">nrf_qdec_shorts_enable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaca17084d3aa69d0b1e42acc3c3f9509d" kindref="member">nrf_qdec_shorts_disable</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga246bd6a2c33b6f6fb6d6f34448958e5a" kindref="member">nrf_qdec_sampleper_to_value</ref>(<ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/>sampleper)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>&lt;&lt;<sp/>(7<sp/>+<sp/>sampleper));</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaf58c235034b6875a7b83363bd84fecbb" kindref="member">nrf_qdec_sampleper_set</ref>(NRF_QDEC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/>sampleper)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SAMPLEPER<sp/>=<sp/>sampleper;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref><sp/><ref refid="group__nrf__qdec__hal_1gaf7795cbf2fa34391362e883fee6cb177" kindref="member">nrf_qdec_sampleper_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__qdec__hal_1gacc2b3f0fab27a73d628dcb64b7d6ee48" kindref="member">nrf_qdec_sampleper_t</ref>)(p_reg-&gt;SAMPLEPER);</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1gade5c928b2ac259044a512e9d55363ea4" kindref="member">nrf_qdec_sample_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;SAMPLE;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1ga8f15e75031a3204c5779dd8f2570f999" kindref="member">nrf_qdec_acc_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ACC;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">NRF_STATIC_INLINE<sp/>int32_t<sp/><ref refid="group__nrf__qdec__hal_1ga32579d80aea6b064e01a21e84703cfe2" kindref="member">nrf_qdec_accread_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ACCREAD;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga1ac4bb7dfa1a165d968b49f3c54b92d9" kindref="member">nrf_qdec_accdbl_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ACCDBL;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga58d41afd8497c7d2c1f6a0cfea23f0ee" kindref="member">nrf_qdec_accdblread_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ACCDBLREAD;</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gaef92ec079b56f14116dacdb32f93b984" kindref="member">nrf_qdec_ledpre_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>time_us)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;LEDPRE<sp/>=<sp/>time_us;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1gac790740db452a7fbcaf1e03f40306102" kindref="member">nrf_qdec_ledpre_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;LEDPRE;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gac8d5ef72022186009cbc32074dec304f" kindref="member">nrf_qdec_reportper_set</ref>(NRF_QDEC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/>reportper)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;REPORTPER<sp/>=<sp/>reportper;</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/><ref refid="group__nrf__qdec__hal_1ga1c4ec75785590fd137e46b244e251275" kindref="member">nrf_qdec_reportper_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref>)(p_reg-&gt;REPORTPER);</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga5e8ed57fecd2296a16792075f5858975" kindref="member">nrf_qdec_reportper_to_value</ref>(<ref refid="group__nrf__qdec__hal_1gae6e5e701c319afebe0117d4ec868b0bc" kindref="member">nrf_qdec_reportper_t</ref><sp/>reportper)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(reportper<sp/>==<sp/><ref refid="group__nrf__qdec__hal_1ggae6e5e701c319afebe0117d4ec868b0bca01778bd2208621da40f5cf43fa5dbe2b" kindref="member">NRF_QDEC_REPORTPER_10</ref>)<sp/>?<sp/>10<sp/>:<sp/>reportper<sp/>*<sp/>40;</highlight></codeline>
<codeline lineno="701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__qdec__hal_1gad1f07d88e5f6cc6cd1125334ac3f1694" kindref="member">nrf_qdec_ledpol_set</ref>(NRF_QDEC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__qdec__hal_1ga46dc0c4003ff86c492e0e28d6a2c5ae5" kindref="member">nrf_qdec_ledpol_t</ref><sp/>pol)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;LEDPOL<sp/>=<sp/>pol;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__qdec__hal_1ga109071381920eccd3c5c23ecf3e353cb" kindref="member">nrf_qdec_ledpol_get</ref>(NRF_QDEC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;LEDPOL;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="715"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_QDEC_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_qdec.h"/>
  </compounddef>
</doxygen>
