<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__twim_8h" kind="file" language="C++">
    <compoundname>nrf_twim.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__twim_8h" local="no">haly/nrfy_twim.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_twim.h</label>
        <link refid="nrf__twim_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__twim__hal_1ga9f2ca642bbf7172f071271ab24d04bd1" prot="public" static="no">
        <name>NRF_TWIM_INST_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, TWIM, idx)</initializer>
        <briefdescription>
<para>Macro getting pointer to the structure of registers of the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>TWIM instance index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the structure of registers of the TWIM peripheral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="65" column="9" bodyfile="hal/nrf_twim.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gacaf46a6e0ec7f27a8c0c36ecb1caaa1a" prot="public" static="no">
        <name>NRF_TWIM_HAS_1000_KHZ_FREQ</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether 1000 kHz clock frequency is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="69" column="9" bodyfile="hal/nrf_twim.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga2819d1e2c146013c30fb943d92387043" prot="public" static="no">
        <name>NRF_TWIM_HAS_ARRAY_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether EasyDMA array list feature is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="77" column="9" bodyfile="hal/nrf_twim.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gac85663d9e6662cc179209d11d3a9e09a" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether dedicated DMA register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="84" column="9" bodyfile="hal/nrf_twim.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga5d9d297054339585df08b905dcb183f5" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether DMA CURRENTAMOUNT registers are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="91" column="9" bodyfile="hal/nrf_twim.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga6470f177142717ff78fe9db56fae3d9c" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_TASKS_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM DMA tasks and events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="99" column="9" bodyfile="hal/nrf_twim.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gafe92d1e6956b2fbf5ccfdedfd19a06c2" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_SHORTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM DMA shortcuts are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="106" column="9" bodyfile="hal/nrf_twim.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga171dbf7b1feb8e8cb6e8c4e104404935" prot="public" static="no">
        <name>NRF_TWIM_HAS_BUS_ERROR_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM BUSERROR events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="114" column="9" bodyfile="hal/nrf_twim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" prot="public" static="no">
        <name>NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</name>
        <initializer>TWIM_DMA_RX_MATCH_CANDIDATE_MaxCount</initializer>
        <briefdescription>
<para>Max number of RX patterns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="121" column="9" bodyfile="hal/nrf_twim.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_task_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aab6746392435f2b57a8d1a2258fdeb69" prot="public">
          <name>NRF_TWIM_TASK_STARTRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.START)</initializer>
          <briefdescription>
<para>Start TWI receive operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a78f179e48e0b4a7c2db554ce41b89ae7" prot="public">
          <name>NRF_TWIM_TASK_STOPRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.STOP)</initializer>
          <briefdescription>
<para>Stop TWI receive operation using easyDMA. This does not trigger an END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a75915573dd56ea04d2f89f533aea68d7" prot="public">
          <name>NRF_TWIM_TASK_STARTTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.TX.START)</initializer>
          <briefdescription>
<para>Start TWI transmit operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a581d6021f1ffdbf19c7c008c65316527" prot="public">
          <name>NRF_TWIM_TASK_STOPTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.TX.STOP)</initializer>
          <briefdescription>
<para>Stop TWI transmit operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aabecd8d112f2da94a10bef955a8a6fc6" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[0])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3af309f23ecabcc6fcfd8335083ac8703c" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[1])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3ac0a328e75f58a4ca911b5204c29743e9" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[2])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a00b58a1dd42b7f236164d4d759bf6f0b" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[3])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3afec9b8c2bc535c4e9ff59ebd387ec3fb" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[0])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a601ed051fdf4e2a8ad7d6860d0074803" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[1])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a196b85af0db8c82779ace992cc63f312" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[2])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a1b349927a00dceb01a0f2b8058b37962" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[3])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" prot="public">
          <name>NRF_TWIM_TASK_STOP</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stop TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a39b462e4d1fcc2c3f96a9de8fe95d9b2" prot="public">
          <name>NRF_TWIM_TASK_SUSPEND</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_SUSPEND)</initializer>
          <briefdescription>
<para>Suspend TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a080a36834935e231d07ea4f75eb488fd" prot="public">
          <name>NRF_TWIM_TASK_RESUME</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_RESUME)</initializer>
          <briefdescription>
<para>Resume TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="125" column="1" bodyfile="hal/nrf_twim.h" bodystart="126" bodyend="147"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_event_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" prot="public">
          <name>NRF_TWIM_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>TWI stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" prot="public">
          <name>NRF_TWIM_EVENT_ERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_ERROR)</initializer>
          <briefdescription>
<para>TWI error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" prot="public">
          <name>NRF_TWIM_EVENT_SUSPENDED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_SUSPENDED)</initializer>
          <briefdescription>
<para>TWI suspended. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea1f0e474171b2ad6544b3cf062bba669b" prot="public">
          <name>NRF_TWIM_EVENT_ENDRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.END)</initializer>
          <briefdescription>
<para>Receive sequence finished. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" prot="public">
          <name>NRF_TWIM_EVENT_RXSTARTED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.READY)</initializer>
          <briefdescription>
<para>Receive sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea95416dcbb39121b8c81bbc00d1e68168" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[0])</initializer>
          <briefdescription>
<para>Pattern match for pattern 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea297ed03308b31e8a69249b1f456cabbc" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[1])</initializer>
          <briefdescription>
<para>Pattern match for pattern 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea9cf8af4e0176c6e18ae438d71cc124e7" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[2])</initializer>
          <briefdescription>
<para>Pattern match for pattern 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea6c5d75d98dae2ac3e2914e5b97a8134b" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[3])</initializer>
          <briefdescription>
<para>Pattern match for pattern 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa189609f1ce5610dc4a5ee4439007486" prot="public">
          <name>NRF_TWIM_EVENT_ENDTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.END)</initializer>
          <briefdescription>
<para>Transmit sequence finished. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" prot="public">
          <name>NRF_TWIM_EVENT_TXSTARTED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.READY)</initializer>
          <briefdescription>
<para>Transmit sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fead374f8ea3d70d216c78e4bbade0f2169" prot="public">
          <name>NRF_TWIM_EVENT_RXBUSERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the RX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feafb95f90f73d93500eb1fd294d66381f7" prot="public">
          <name>NRF_TWIM_EVENT_TXBUSERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the TX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" prot="public">
          <name>NRF_TWIM_EVENT_LASTRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_LASTRX)</initializer>
          <briefdescription>
<para>Byte boundary, starting to receive the last byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" prot="public">
          <name>NRF_TWIM_EVENT_LASTTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_LASTTX)</initializer>
          <briefdescription>
<para>Byte boundary, starting to transmit the last byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="150" column="1" bodyfile="hal/nrf_twim.h" bodystart="151" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1gadd0664ac6080208c547d3352d082a8e4" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_short_mask_t</name>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a0a8df7ede7f011f77c76e7b05fa08706" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_SUSPEND_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and SUSPEND task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad540ff8b6b5ac0904d50e08b6778faff" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_STOP_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5456148732b958fba77fc6900c9b4573" prot="public">
          <name>NRF_TWIM_SHORT_LASTRX_STOP_MASK</name>
          <initializer>= TWIM_SHORTS_LASTRX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTRX event and STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a56a462f3bafab3dab5ca3634cf2a5169" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_STARTRX_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_DMA_RX_START_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and STARTRX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad605e2387dc4121e16d17ee9f496fc79" prot="public">
          <name>NRF_TWIM_SHORT_LASTRX_STARTTX_MASK</name>
          <initializer>= TWIM_SHORTS_LASTRX_DMA_TX_START_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTRX event and STARTTX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a36c084c9eafd6d73c5af95e07cc0bebc" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.ENABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5661b5d8b7450423886c4bd3b0ac6f95" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.ENABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aeb61eae619ab8562fc31d375a3a6ed5d" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.ENABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a2cc9a45323724addf649c07ac67bfe18" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.ENABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a4a749247bd0e37c575eead73dabc2d9d" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.DISABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ac994257b33ba12659a202fede3e9de1c" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.DISABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a1fd3325b3fd4ff2845e74d6e8b111336" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.DISABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aa45220849e131709c398d96e0880ce37" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.DISABLEMATCH3 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4adf591f39db80005910acf9a5aa124f9d" prot="public">
          <name>NRF_TWIM_ALL_SHORTS_MASK</name>
          <initializer>=

                                                   TWIM_SHORTS_LASTTX_DMA_RX_START_Msk                |
                                                   TWIM_SHORTS_LASTRX_DMA_TX_START_Msk                |





                                                   TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk |

                                                   TWIM_SHORTS_LASTTX_SUSPEND_Msk                     |
                                                   TWIM_SHORTS_LASTTX_STOP_Msk                        |
                                                   TWIM_SHORTS_LASTRX_STOP_Msk</initializer>
          <briefdescription>
<para>All TWIM shortcuts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="181" column="1" bodyfile="hal/nrf_twim.h" bodystart="182" bodyend="224"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_int_mask_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acab603ecc0e6031acd4700d742e2c12421" prot="public">
          <name>NRF_TWIM_INT_STOPPED_MASK</name>
          <initializer>= TWIM_INTENSET_STOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on STOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca347a32ca9593b31de5d0d920cd10443f" prot="public">
          <name>NRF_TWIM_INT_ERROR_MASK</name>
          <initializer>= TWIM_INTENSET_ERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on ERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca31222ebdb3bb548504f718ef16ea5c9a" prot="public">
          <name>NRF_TWIM_INT_SUSPENDED_MASK</name>
          <initializer>= TWIM_INTENSET_SUSPENDED_Msk</initializer>
          <briefdescription>
<para>Interrupt on SUSPENDED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa4f9166c76e49f82f5c4f28421d4e352" prot="public">
          <name>NRF_TWIM_INT_RXSTARTED_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acacf284b01c09624da1f88959aab8b38c7" prot="public">
          <name>NRF_TWIM_INT_TXSTARTED_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca890d041f5d4f5e38c7db6f3fe9ecbca7" prot="public">
          <name>NRF_TWIM_INT_ENDRX_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaf5becfa8469cb1081f4522ea8b342e1b" prot="public">
          <name>NRF_TWIM_INT_RXREADY_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad874dad87f10c787b025f64d6b1fef4e" prot="public">
          <name>NRF_TWIM_INT_RXBUSERROR_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca61367af0766747a929fdd690ec7f0c4f" prot="public">
          <name>NRF_TWIM_INT_RXMATCH0_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH0_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH0 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca09fabb82fca97e6ff93b231ae2bb5a26" prot="public">
          <name>NRF_TWIM_INT_RXMATCH1_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH1_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH1 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca4d23baa47c53821f641250b830ff718e" prot="public">
          <name>NRF_TWIM_INT_RXMATCH2_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH2_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH2 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad1cf35986f0b558a74514c8c9384fc78" prot="public">
          <name>NRF_TWIM_INT_RXMATCH3_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH3_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH3 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca161c1a5f210de592778da09b28590d1c" prot="public">
          <name>NRF_TWIM_INT_ENDTX_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca663b9dbeb5e66081b714c8fb9aaf01ce" prot="public">
          <name>NRF_TWIM_INT_TXREADY_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca282d4ee80e48758b8645371032669bcc" prot="public">
          <name>NRF_TWIM_INT_TXBUSERROR_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acac80810b77e2b204b8491858b1b96ce0e" prot="public">
          <name>NRF_TWIM_INT_LASTRX_MASK</name>
          <initializer>= TWIM_INTENSET_LASTRX_Msk</initializer>
          <briefdescription>
<para>Interrupt on LASTRX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa360137e749de8dc1a2816778451b2bf" prot="public">
          <name>NRF_TWIM_INT_LASTTX_MASK</name>
          <initializer>= TWIM_INTENSET_LASTTX_Msk</initializer>
          <briefdescription>
<para>Interrupt on LASTTX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca91edd9c8686edbdd2c0f9ecc3a7c5882" prot="public">
          <name>NRF_TWIM_ALL_INTS_MASK</name>
          <initializer>= NRF_TWIM_INT_STOPPED_MASK    |
                                   NRF_TWIM_INT_ERROR_MASK      |
                                   NRF_TWIM_INT_SUSPENDED_MASK  |
                                   NRF_TWIM_INT_RXSTARTED_MASK  |
                                   NRF_TWIM_INT_TXSTARTED_MASK  |

                                   NRF_TWIM_INT_ENDRX_MASK      |
                                   NRF_TWIM_INT_RXREADY_MASK    |
                                   NRF_TWIM_INT_RXBUSERROR_MASK |
                                   NRF_TWIM_INT_RXMATCH0_MASK   |
                                   NRF_TWIM_INT_RXMATCH1_MASK   |
                                   NRF_TWIM_INT_RXMATCH2_MASK   |
                                   NRF_TWIM_INT_RXMATCH3_MASK   |
                                   NRF_TWIM_INT_ENDTX_MASK      |
                                   NRF_TWIM_INT_TXREADY_MASK    |
                                   NRF_TWIM_INT_TXBUSERROR_MASK |

                                   NRF_TWIM_INT_LASTRX_MASK     |
                                   NRF_TWIM_INT_LASTTX_MASK</initializer>
          <briefdescription>
<para>All TWIM interrupts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="227" column="1" bodyfile="hal/nrf_twim.h" bodystart="228" bodyend="270"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_frequency_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a85f5bb1285c0b1f13513aa3e056c1473" prot="public">
          <name>NRF_TWIM_FREQ_100K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K100</initializer>
          <briefdescription>
<para>100 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7ae760f2404075e102e0898a8c35d358f9" prot="public">
          <name>NRF_TWIM_FREQ_250K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K250</initializer>
          <briefdescription>
<para>250 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a2506fcae2808e2997513ac4d842d253f" prot="public">
          <name>NRF_TWIM_FREQ_400K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K400</initializer>
          <briefdescription>
<para>400 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a25991e182681ca3c0f6024340997641c" prot="public">
          <name>NRF_TWIM_FREQ_1000K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K1000</initializer>
          <briefdescription>
<para>1000 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM master clock frequency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="273" column="1" bodyfile="hal/nrf_twim.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga1b0f04ff557a603935d12650d2f255b2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_error_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2a24dfbf415012297514bf25bfc0e755cd" prot="public">
          <name>NRF_TWIM_ERROR_ADDRESS_NACK</name>
          <initializer>= TWIM_ERRORSRC_ANACK_Msk</initializer>
          <briefdescription>
<para>NACK received after sending the address. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2aa5b0ed2e59ccecf820ea3a3c02a02a13" prot="public">
          <name>NRF_TWIM_ERROR_DATA_NACK</name>
          <initializer>= TWIM_ERRORSRC_DNACK_Msk</initializer>
          <briefdescription>
<para>NACK received after sending a data byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2af4952f4ca2ceb7d571f01846c58a363b" prot="public">
          <name>NRF_TWIM_ERROR_OVERRUN</name>
          <initializer>= TWIM_ERRORSRC_OVERRUN_Msk</initializer>
          <briefdescription>
<para>Overrun error. </para>
          </briefdescription>
          <detaileddescription>
<para>A new byte was received before the previous byte was handled by peripheral. (previous data is lost). </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM error source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="284" column="1" bodyfile="hal/nrf_twim.h" bodystart="285" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_task_trigger</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_task_trigger</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="762" column="24" bodyfile="hal/nrf_twim.h" bodystart="762" bodyend="766" declfile="hal/nrf_twim.h" declline="300" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_task_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_task_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TWIM task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="768" column="28" bodyfile="hal/nrf_twim.h" bodystart="768" bodyend="772" declfile="hal/nrf_twim.h" declline="311" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_event_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="774" column="24" bodyfile="hal/nrf_twim.h" bodystart="774" bodyend="779" declfile="hal/nrf_twim.h" declline="320" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_event_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="781" column="24" bodyfile="hal/nrf_twim.h" bodystart="781" bodyend="785" declfile="hal/nrf_twim.h" declline="332" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_event_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TWIM event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="787" column="28" bodyfile="hal/nrf_twim.h" bodystart="787" bodyend="791" declfile="hal/nrf_twim.h" declline="343" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="793" column="24" bodyfile="hal/nrf_twim.h" bodystart="793" bodyend="797" declfile="hal/nrf_twim.h" declline="352" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="799" column="24" bodyfile="hal/nrf_twim.h" bodystart="799" bodyend="803" declfile="hal/nrf_twim.h" declline="361" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_int_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="805" column="24" bodyfile="hal/nrf_twim.h" bodystart="805" bodyend="809" declfile="hal/nrf_twim.h" declline="371" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_int_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="811" column="24" bodyfile="hal/nrf_twim.h" bodystart="811" bodyend="815" declfile="hal/nrf_twim.h" declline="381" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_int_enable_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_enable_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="817" column="28" bodyfile="hal/nrf_twim.h" bodystart="817" bodyend="820" declfile="hal/nrf_twim.h" declline="393" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_subscribe_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task, uint8_t channel)</argsstring>
        <name>nrf_twim_subscribe_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="404" column="24" declfile="hal/nrf_twim.h" declline="404" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_subscribe_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_subscribe_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="415" column="24" declfile="hal/nrf_twim.h" declline="415" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_publish_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event, uint8_t channel)</argsstring>
        <name>nrf_twim_publish_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="426" column="24" declfile="hal/nrf_twim.h" declline="426" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_publish_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_publish_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="437" column="24" declfile="hal/nrf_twim.h" declline="437" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="852" column="24" bodyfile="hal/nrf_twim.h" bodystart="852" bodyend="855" declfile="hal/nrf_twim.h" declline="446" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="857" column="24" bodyfile="hal/nrf_twim.h" bodystart="857" bodyend="860" declfile="hal/nrf_twim.h" declline="453" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_pins_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t scl_pin, uint32_t sda_pin)</argsstring>
        <name>nrf_twim_pins_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>scl_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sda_pin</declname>
        </param>
        <briefdescription>
<para>Function for configuring TWI pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scl_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SCL pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sda_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SDA pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="862" column="24" bodyfile="hal/nrf_twim.h" bodystart="862" bodyend="868" declfile="hal/nrf_twim.h" declline="462" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_scl_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_scl_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SCL pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="870" column="28" bodyfile="hal/nrf_twim.h" bodystart="870" bodyend="873" declfile="hal/nrf_twim.h" declline="473" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_sda_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_sda_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SDA pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDA pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="875" column="28" bodyfile="hal/nrf_twim.h" bodystart="875" bodyend="878" declfile="hal/nrf_twim.h" declline="482" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_frequency_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_frequency_t frequency)</argsstring>
        <name>nrf_twim_frequency_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Function for setting the TWI master clock frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>TWI frequency. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="880" column="24" bodyfile="hal/nrf_twim.h" bodystart="880" bodyend="884" declfile="hal/nrf_twim.h" declline="490" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_errorsrc_get_and_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_errorsrc_get_and_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking the TWI error source. </para>
        </briefdescription>
        <detaileddescription>
<para>The error flags are cleared after reading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask with error source flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="886" column="28" bodyfile="hal/nrf_twim.h" bodystart="886" bodyend="894" declfile="hal/nrf_twim.h" declline="502" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_address_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t address)</argsstring>
        <name>nrf_twim_address_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Function for setting the address to be used in TWI transfers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to be used in transfers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="896" column="24" bodyfile="hal/nrf_twim.h" bodystart="896" bodyend="900" declfile="hal/nrf_twim.h" declline="510" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga10b2fe5d9eb8f4288fdc52c80e796ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_twim_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the address to be used in TWI transfers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address to be used in TWI transfers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="902" column="27" bodyfile="hal/nrf_twim.h" bodystart="902" bodyend="905" declfile="hal/nrf_twim.h" declline="520" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga69598fbbb9293d1c116a998103050a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrf_twim_tx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="907" column="24" bodyfile="hal/nrf_twim.h" bodystart="907" bodyend="918" declfile="hal/nrf_twim.h" declline="529" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaad43bb3e7ec6c84080609df5fcfc4373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrf_twim_rx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="920" column="24" bodyfile="hal/nrf_twim.h" bodystart="920" bodyend="931" declfile="hal/nrf_twim.h" declline="540" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="933" column="24" bodyfile="hal/nrf_twim.h" bodystart="933" bodyend="937" declfile="hal/nrf_twim.h" declline="550" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_shorts_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_shorts_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the shortcut setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current shortcut configuration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="939" column="28" bodyfile="hal/nrf_twim.h" bodystart="939" bodyend="942" declfile="hal/nrf_twim.h" declline="560" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_txd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_txd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of transmitted bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of transmitted bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="944" column="26" bodyfile="hal/nrf_twim.h" bodystart="944" bodyend="951" declfile="hal/nrf_twim.h" declline="572" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_rxd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rxd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of received bytes in the last transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of received bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="953" column="26" bodyfile="hal/nrf_twim.h" bodystart="953" bodyend="960" declfile="hal/nrf_twim.h" declline="584" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga29e6df5473d7c8ac95fd407e97549bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_txd_curr_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_txd_curr_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of transmitted bytes in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Number of bytes is continuously updated during transmission.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of transmitted bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="963" column="26" bodyfile="hal/nrf_twim.h" bodystart="963" bodyend="966" declfile="hal/nrf_twim.h" declline="596" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4368126c5327b396a2be6dacf9b57639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_rxd_curr_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rxd_curr_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of received bytes in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Number of bytes is continuously updated during reception.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of received bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="968" column="26" bodyfile="hal/nrf_twim.h" bodystart="968" bodyend="971" declfile="hal/nrf_twim.h" declline="607" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_tx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="975" column="24" bodyfile="hal/nrf_twim.h" bodystart="975" bodyend="982" declfile="hal/nrf_twim.h" declline="616" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_tx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="984" column="24" bodyfile="hal/nrf_twim.h" bodystart="984" bodyend="991" declfile="hal/nrf_twim.h" declline="623" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_rx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="993" column="24" bodyfile="hal/nrf_twim.h" bodystart="993" bodyend="1000" declfile="hal/nrf_twim.h" declline="630" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_rx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1002" column="24" bodyfile="hal/nrf_twim.h" bodystart="1002" bodyend="1009" declfile="hal/nrf_twim.h" declline="637" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga03b45ee52443abc4bb84a68da58d3983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index, bool enable)</argsstring>
        <name>nrf_twim_rx_pattern_match_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling individual pattern match filters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if pattern match filter is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1013" column="24" bodyfile="hal/nrf_twim.h" bodystart="1013" bodyend="1056" declfile="hal/nrf_twim.h" declline="648" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4229f51c36a9fb8ba02ca5d2677853dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_pattern_match_enable_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_enable_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified pattern match filter is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1058" column="24" bodyfile="hal/nrf_twim.h" bodystart="1058" bodyend="1084" declfile="hal/nrf_twim.h" declline="661" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga3d97f46ab5862e06288d301e6d872f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_one_shot_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for enabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1086" column="24" bodyfile="hal/nrf_twim.h" bodystart="1086" bodyend="1108" declfile="hal/nrf_twim.h" declline="670" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga2db46980e65275d25e2064ff6007a821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_one_shot_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for disabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1110" column="24" bodyfile="hal/nrf_twim.h" bodystart="1110" bodyend="1132" declfile="hal/nrf_twim.h" declline="679" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga7886b5d343f1faea1fe22596cc81232f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_pattern_match_one_shot_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if specified pattern match filter is configured as one-shot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as one-shot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as continuous. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1134" column="24" bodyfile="hal/nrf_twim.h" bodystart="1134" bodyend="1160" declfile="hal/nrf_twim.h" declline="691" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6d85eb808398073ce89e868b856120e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_candidate_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index, uint32_t pattern)</argsstring>
        <name>nrf_twim_rx_pattern_match_candidate_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Function for setting the pattern to be looked for by the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern to be looked for. Match will trigger the corresponding event, if enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1162" column="24" bodyfile="hal/nrf_twim.h" bodystart="1162" bodyend="1168" declfile="hal/nrf_twim.h" declline="702" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga37e0f06d8c38b7125c1ef5e5712ce054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_rx_pattern_match_candidate_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_candidate_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the pattern that the specified match filter is looking for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pattern that the specified match filter is looking for. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1170" column="28" bodyfile="hal/nrf_twim.h" bodystart="1170" bodyend="1175" declfile="hal/nrf_twim.h" declline="714" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga62f37342881aaa9fab3523d6c4000dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_terminate_on_bus_error_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrf_twim_rx_terminate_on_bus_error_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling RX transaction termination on the detection of a BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the RX transaction termination is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1179" column="24" bodyfile="hal/nrf_twim.h" bodystart="1179" bodyend="1185" declfile="hal/nrf_twim.h" declline="725" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaa2a21a1edfee4d03f24797ed1188bfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the RX transaction termination on the detection of a BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1187" column="24" bodyfile="hal/nrf_twim.h" bodystart="1187" bodyend="1192" declfile="hal/nrf_twim.h" declline="737" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaa8582ba6d468ddd837563d6c848478e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_terminate_on_bus_error_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrf_twim_tx_terminate_on_bus_error_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling TX transaction termination on the detection of a BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the TX transaction termination is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1194" column="24" bodyfile="hal/nrf_twim.h" bodystart="1194" bodyend="1200" declfile="hal/nrf_twim.h" declline="745" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gadecaa8529db79c2100bbb3d932d91b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_tx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_tx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the TX transaction termination on the detection of a BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1202" column="24" bodyfile="hal/nrf_twim.h" bodystart="1202" bodyend="1207" declfile="hal/nrf_twim.h" declline="757" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF54H20_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_CLOCKPIN_SDA_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_CLOCKPIN_SCL_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_twim_hal<sp/>TWIM<sp/>HAL</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_twim</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>getting<sp/>pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/>TWIM<sp/>instance<sp/>index.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_INST_GET(idx)<sp/>NRFX_CONCAT(NRF_,<sp/>TWIM,<sp/>idx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TWIM_FREQUENCY_FREQUENCY_K1000)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>1000<sp/>kHz<sp/>clock<sp/>frequency<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_1000_KHZ_FREQ<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_1000_KHZ_FREQ<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TWIM_TXD_LIST_LIST_ArrayList)<sp/>||<sp/>defined(TWIM_DMA_TX_LIST_TYPE_ArrayList)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>EasyDMA<sp/>array<sp/>list<sp/>feature<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_ARRAY_LIST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_ARRAY_LIST<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TWIM_DMA_RX_PTR_PTR_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>dedicated<sp/>DMA<sp/>register<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_REG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_REG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TWIM_DMA_RX_CURRENTAMOUNT_AMOUNT_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>DMA<sp/>CURRENTAMOUNT<sp/>registers<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(TWIM_TASKS_DMA_RX_START_START_Msk)<sp/>&amp;&amp;<sp/>defined(TWIM_EVENTS_DMA_RX_END_END_Msk))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>TWIM<sp/>DMA<sp/>tasks<sp/>and<sp/>events<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TWIM_SHORTS_LASTTX_DMA_RX_START_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>TWIM<sp/>DMA<sp/>shortcuts<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_SHORTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_DMA_SHORTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(TWIM_EVENTS_RXBUSERROR_EVENTS_RXBUSERROR_Msk)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>defined(TWIM_EVENTS_DMA_RX_BUSERROR_BUSERROR_Msk))<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>TWIM<sp/>BUSERROR<sp/>events<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">/**<sp/>@brief<sp/>Max<sp/>number<sp/>of<sp/>RX<sp/>patterns.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT<sp/>TWIM_DMA_RX_MATCH_CANDIDATE_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aab6746392435f2b57a8d1a2258fdeb69" kindref="member">NRF_TWIM_TASK_STARTRX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.START),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>TWI<sp/>receive<sp/>operation<sp/>using<sp/>easyDMA<sp/>to<sp/>load<sp/>the<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a78f179e48e0b4a7c2db554ce41b89ae7" kindref="member">NRF_TWIM_TASK_STOPRX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.STOP),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>TWI<sp/>receive<sp/><sp/>operation<sp/>using<sp/>easyDMA.<sp/>This<sp/>does<sp/>not<sp/>trigger<sp/>an<sp/>END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a75915573dd56ea04d2f89f533aea68d7" kindref="member">NRF_TWIM_TASK_STARTTX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.TX.START),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>TWI<sp/>transmit<sp/>operation<sp/>using<sp/>easyDMA<sp/>to<sp/>load<sp/>the<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a581d6021f1ffdbf19c7c008c65316527" kindref="member">NRF_TWIM_TASK_STOPTX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.TX.STOP),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>TWI<sp/>transmit<sp/>operation<sp/>using<sp/>easyDMA<sp/>to<sp/>load<sp/>the<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aabecd8d112f2da94a10bef955a8a6fc6" kindref="member">NRF_TWIM_TASK_ENABLERXMATCH0</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[0]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3af309f23ecabcc6fcfd8335083ac8703c" kindref="member">NRF_TWIM_TASK_ENABLERXMATCH1</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[1]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3ac0a328e75f58a4ca911b5204c29743e9" kindref="member">NRF_TWIM_TASK_ENABLERXMATCH2</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[2]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a00b58a1dd42b7f236164d4d759bf6f0b" kindref="member">NRF_TWIM_TASK_ENABLERXMATCH3</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[3]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3afec9b8c2bc535c4e9ff59ebd387ec3fb" kindref="member">NRF_TWIM_TASK_DISABLERXMATCH0</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[0]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a601ed051fdf4e2a8ad7d6860d0074803" kindref="member">NRF_TWIM_TASK_DISABLERXMATCH1</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[1]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a196b85af0db8c82779ace992cc63f312" kindref="member">NRF_TWIM_TASK_DISABLERXMATCH2</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[2]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a1b349927a00dceb01a0f2b8058b37962" kindref="member">NRF_TWIM_TASK_DISABLERXMATCH3</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[3]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>TWI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aab6746392435f2b57a8d1a2258fdeb69" kindref="member">NRF_TWIM_TASK_STARTRX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_STARTRX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>TWI<sp/>receive<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a75915573dd56ea04d2f89f533aea68d7" kindref="member">NRF_TWIM_TASK_STARTTX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_STARTTX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>TWI<sp/>transmit<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_STOP),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>TWI<sp/>transaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a39b462e4d1fcc2c3f96a9de8fe95d9b2" kindref="member">NRF_TWIM_TASK_SUSPEND</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_SUSPEND),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Suspend<sp/>TWI<sp/>transaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a080a36834935e231d07ea4f75eb488fd" kindref="member">NRF_TWIM_TASK_RESUME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>TASKS_RESUME)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Resume<sp/>TWI<sp/>transaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_STOPPED),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TWI<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_ERROR),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TWI<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_SUSPENDED),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TWI<sp/>suspended.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea1f0e474171b2ad6544b3cf062bba669b" kindref="member">NRF_TWIM_EVENT_ENDRX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.END),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>sequence<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" kindref="member">NRF_TWIM_EVENT_RXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.READY),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea95416dcbb39121b8c81bbc00d1e68168" kindref="member">NRF_TWIM_EVENT_RXMATCH0</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.MATCH[0]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea297ed03308b31e8a69249b1f456cabbc" kindref="member">NRF_TWIM_EVENT_RXMATCH1</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.MATCH[1]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea9cf8af4e0176c6e18ae438d71cc124e7" kindref="member">NRF_TWIM_EVENT_RXMATCH2</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.MATCH[2]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>2<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea6c5d75d98dae2ac3e2914e5b97a8134b" kindref="member">NRF_TWIM_EVENT_RXMATCH3</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.MATCH[3]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>3<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa189609f1ce5610dc4a5ee4439007486" kindref="member">NRF_TWIM_EVENT_ENDTX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.TX.END),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmit<sp/>sequence<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" kindref="member">NRF_TWIM_EVENT_TXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.TX.READY),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmit<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fead374f8ea3d70d216c78e4bbade0f2169" kindref="member">NRF_TWIM_EVENT_RXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.RX.BUSERROR),<sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>RX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feafb95f90f73d93500eb1fd294d66381f7" kindref="member">NRF_TWIM_EVENT_TXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_DMA.TX.BUSERROR),<sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>TX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" kindref="member">NRF_TWIM_EVENT_RXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_RXSTARTED),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" kindref="member">NRF_TWIM_EVENT_TXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_TXSTARTED),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmit<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fead374f8ea3d70d216c78e4bbade0f2169" kindref="member">NRF_TWIM_EVENT_RXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_RXBUSERROR),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>RX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feafb95f90f73d93500eb1fd294d66381f7" kindref="member">NRF_TWIM_EVENT_TXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_TXBUSERROR),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>TX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" kindref="member">NRF_TWIM_EVENT_LASTRX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_LASTRX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Byte<sp/>boundary,<sp/>starting<sp/>to<sp/>receive<sp/>the<sp/>last<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" kindref="member">NRF_TWIM_EVENT_LASTTX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TWIM_Type,<sp/>EVENTS_LASTTX)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Byte<sp/>boundary,<sp/>starting<sp/>to<sp/>transmit<sp/>the<sp/>last<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>shortcuts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a0a8df7ede7f011f77c76e7b05fa08706" kindref="member">NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTTX_SUSPEND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTTX<sp/>event<sp/>and<sp/>SUSPEND<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad540ff8b6b5ac0904d50e08b6778faff" kindref="member">NRF_TWIM_SHORT_LASTTX_STOP_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTTX_STOP_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTTX<sp/>event<sp/>and<sp/>STOP<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5456148732b958fba77fc6900c9b4573" kindref="member">NRF_TWIM_SHORT_LASTRX_STOP_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTRX_STOP_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTRX<sp/>event<sp/>and<sp/>STOP<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_SHORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a56a462f3bafab3dab5ca3634cf2a5169" kindref="member">NRF_TWIM_SHORT_LASTTX_STARTRX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTTX_DMA_RX_START_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTTX<sp/>event<sp/>and<sp/>STARTRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad605e2387dc4121e16d17ee9f496fc79" kindref="member">NRF_TWIM_SHORT_LASTRX_STARTTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTRX_DMA_TX_START_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTRX<sp/>event<sp/>and<sp/>STARTTX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a56a462f3bafab3dab5ca3634cf2a5169" kindref="member">NRF_TWIM_SHORT_LASTTX_STARTRX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTTX_STARTRX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTTX<sp/>event<sp/>and<sp/>STARTRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad605e2387dc4121e16d17ee9f496fc79" kindref="member">NRF_TWIM_SHORT_LASTRX_STARTTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_SHORTS_LASTRX_STARTTX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>LASTRX<sp/>event<sp/>and<sp/>STARTTX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a36c084c9eafd6d73c5af95e07cc0bebc" kindref="member">NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</ref><sp/><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH0<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH1<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5661b5d8b7450423886c4bd3b0ac6f95" kindref="member">NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</ref><sp/><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH1<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH2<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aeb61eae619ab8562fc31d375a3a6ed5d" kindref="member">NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</ref><sp/><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH2<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH0<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a2cc9a45323724addf649c07ac67bfe18" kindref="member">NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</ref><sp/><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH3<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH1<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a4a749247bd0e37c575eead73dabc2d9d" kindref="member">NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</ref><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH0<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH0<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ac994257b33ba12659a202fede3e9de1c" kindref="member">NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</ref><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH1<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH1<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a1fd3325b3fd4ff2845e74d6e8b111336" kindref="member">NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</ref><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH2<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH2<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aa45220849e131709c398d96e0880ce37" kindref="member">NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</ref><sp/>=<sp/>TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH3<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH3<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4adf591f39db80005910acf9a5aa124f9d" kindref="member">NRF_TWIM_ALL_SHORTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_SHORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTTX_DMA_RX_START_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTRX_DMA_TX_START_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTTX_STARTRX_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTRX_STARTTX_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk<sp/><sp/>|</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk<sp/><sp/>|</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk<sp/><sp/>|</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk<sp/><sp/>|</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk<sp/>|</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk<sp/>|</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk<sp/>|</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk<sp/>|</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTTX_SUSPEND_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTTX_STOP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_SHORTS_LASTRX_STOP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>All<sp/>TWIM<sp/>shortcuts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1gadd0664ac6080208c547d3352d082a8e4" kindref="member">nrf_twim_short_mask_t</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acab603ecc0e6031acd4700d742e2c12421" kindref="member">NRF_TWIM_INT_STOPPED_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_STOPPED_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>STOPPED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca347a32ca9593b31de5d0d920cd10443f" kindref="member">NRF_TWIM_INT_ERROR_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_ERROR_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca31222ebdb3bb548504f718ef16ea5c9a" kindref="member">NRF_TWIM_INT_SUSPENDED_MASK</ref><sp/><sp/>=<sp/>TWIM_INTENSET_SUSPENDED_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>SUSPENDED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa4f9166c76e49f82f5c4f28421d4e352" kindref="member">NRF_TWIM_INT_RXSTARTED_MASK</ref><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acacf284b01c09624da1f88959aab8b38c7" kindref="member">NRF_TWIM_INT_TXSTARTED_MASK</ref><sp/><sp/>=<sp/>TWIM_INTENSET_DMATXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca890d041f5d4f5e38c7db6f3fe9ecbca7" kindref="member">NRF_TWIM_INT_ENDRX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXEND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaf5becfa8469cb1081f4522ea8b342e1b" kindref="member">NRF_TWIM_INT_RXREADY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.READY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad874dad87f10c787b025f64d6b1fef4e" kindref="member">NRF_TWIM_INT_RXBUSERROR_MASK</ref><sp/>=<sp/>TWIM_INTENSET_DMARXBUSERROR_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.BUSERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca61367af0766747a929fdd690ec7f0c4f" kindref="member">NRF_TWIM_INT_RXMATCH0_MASK</ref><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXMATCH0_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH0<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca09fabb82fca97e6ff93b231ae2bb5a26" kindref="member">NRF_TWIM_INT_RXMATCH1_MASK</ref><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXMATCH1_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH1<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca4d23baa47c53821f641250b830ff718e" kindref="member">NRF_TWIM_INT_RXMATCH2_MASK</ref><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXMATCH2_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH2<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad1cf35986f0b558a74514c8c9384fc78" kindref="member">NRF_TWIM_INT_RXMATCH3_MASK</ref><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMARXMATCH3_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH3<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca161c1a5f210de592778da09b28590d1c" kindref="member">NRF_TWIM_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMATXEND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.TX.END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca663b9dbeb5e66081b714c8fb9aaf01ce" kindref="member">NRF_TWIM_INT_TXREADY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_DMATXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.TX.READY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca282d4ee80e48758b8645371032669bcc" kindref="member">NRF_TWIM_INT_TXBUSERROR_MASK</ref><sp/>=<sp/>TWIM_INTENSET_DMATXBUSERROR_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.TX.BUSERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa4f9166c76e49f82f5c4f28421d4e352" kindref="member">NRF_TWIM_INT_RXSTARTED_MASK</ref><sp/><sp/>=<sp/>TWIM_INTENSET_RXSTARTED_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acacf284b01c09624da1f88959aab8b38c7" kindref="member">NRF_TWIM_INT_TXSTARTED_MASK</ref><sp/><sp/>=<sp/>TWIM_INTENSET_TXSTARTED_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acac80810b77e2b204b8491858b1b96ce0e" kindref="member">NRF_TWIM_INT_LASTRX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_LASTRX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>LASTRX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa360137e749de8dc1a2816778451b2bf" kindref="member">NRF_TWIM_INT_LASTTX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_INTENSET_LASTTX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>LASTTX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca91edd9c8686edbdd2c0f9ecc3a7c5882" kindref="member">NRF_TWIM_ALL_INTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acab603ecc0e6031acd4700d742e2c12421" kindref="member">NRF_TWIM_INT_STOPPED_MASK</ref><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca347a32ca9593b31de5d0d920cd10443f" kindref="member">NRF_TWIM_INT_ERROR_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca31222ebdb3bb548504f718ef16ea5c9a" kindref="member">NRF_TWIM_INT_SUSPENDED_MASK</ref><sp/><sp/>|</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa4f9166c76e49f82f5c4f28421d4e352" kindref="member">NRF_TWIM_INT_RXSTARTED_MASK</ref><sp/><sp/>|</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acacf284b01c09624da1f88959aab8b38c7" kindref="member">NRF_TWIM_INT_TXSTARTED_MASK</ref><sp/><sp/>|</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca890d041f5d4f5e38c7db6f3fe9ecbca7" kindref="member">NRF_TWIM_INT_ENDRX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaf5becfa8469cb1081f4522ea8b342e1b" kindref="member">NRF_TWIM_INT_RXREADY_MASK</ref><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad874dad87f10c787b025f64d6b1fef4e" kindref="member">NRF_TWIM_INT_RXBUSERROR_MASK</ref><sp/>|</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca61367af0766747a929fdd690ec7f0c4f" kindref="member">NRF_TWIM_INT_RXMATCH0_MASK</ref><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca09fabb82fca97e6ff93b231ae2bb5a26" kindref="member">NRF_TWIM_INT_RXMATCH1_MASK</ref><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca4d23baa47c53821f641250b830ff718e" kindref="member">NRF_TWIM_INT_RXMATCH2_MASK</ref><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad1cf35986f0b558a74514c8c9384fc78" kindref="member">NRF_TWIM_INT_RXMATCH3_MASK</ref><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca161c1a5f210de592778da09b28590d1c" kindref="member">NRF_TWIM_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca663b9dbeb5e66081b714c8fb9aaf01ce" kindref="member">NRF_TWIM_INT_TXREADY_MASK</ref><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca282d4ee80e48758b8645371032669bcc" kindref="member">NRF_TWIM_INT_TXBUSERROR_MASK</ref><sp/>|</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acac80810b77e2b204b8491858b1b96ce0e" kindref="member">NRF_TWIM_INT_LASTRX_MASK</ref><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa360137e749de8dc1a2816778451b2bf" kindref="member">NRF_TWIM_INT_LASTTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>All<sp/>TWIM<sp/>interrupts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>master<sp/>clock<sp/>frequency.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a85f5bb1285c0b1f13513aa3e056c1473" kindref="member">NRF_TWIM_FREQ_100K</ref><sp/><sp/>=<sp/>TWIM_FREQUENCY_FREQUENCY_K100,<sp/></highlight><highlight class="comment">///&lt;<sp/>100<sp/>kbps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7ae760f2404075e102e0898a8c35d358f9" kindref="member">NRF_TWIM_FREQ_250K</ref><sp/><sp/>=<sp/>TWIM_FREQUENCY_FREQUENCY_K250,<sp/></highlight><highlight class="comment">///&lt;<sp/>250<sp/>kbps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a2506fcae2808e2997513ac4d842d253f" kindref="member">NRF_TWIM_FREQ_400K</ref><sp/><sp/>=<sp/>TWIM_FREQUENCY_FREQUENCY_K400,<sp/></highlight><highlight class="comment">///&lt;<sp/>400<sp/>kbps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_1000_KHZ_FREQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a25991e182681ca3c0f6024340997641c" kindref="member">NRF_TWIM_FREQ_1000K</ref><sp/>=<sp/>TWIM_FREQUENCY_FREQUENCY_K1000<sp/></highlight><highlight class="comment">///&lt;<sp/>1000<sp/>kbps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>error<sp/>source.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2a24dfbf415012297514bf25bfc0e755cd" kindref="member">NRF_TWIM_ERROR_ADDRESS_NACK</ref><sp/>=<sp/>TWIM_ERRORSRC_ANACK_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>NACK<sp/>received<sp/>after<sp/>sending<sp/>the<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2aa5b0ed2e59ccecf820ea3a3c02a02a13" kindref="member">NRF_TWIM_ERROR_DATA_NACK</ref><sp/><sp/><sp/><sp/>=<sp/>TWIM_ERRORSRC_DNACK_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>NACK<sp/>received<sp/>after<sp/>sending<sp/>a<sp/>data<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2af4952f4ca2ceb7d571f01846c58a363b" kindref="member">NRF_TWIM_ERROR_OVERRUN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TWIM_ERRORSRC_OVERRUN_Msk<sp/></highlight><highlight class="comment">///&lt;<sp/>Overrun<sp/>error.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>A<sp/>new<sp/>byte<sp/>was<sp/>received<sp/>before<sp/>the<sp/>previous<sp/>byte<sp/>was</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>handled<sp/>by<sp/>peripheral.<sp/>(previous<sp/>data<sp/>is<sp/>lost).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">}<sp/><ref refid="group__nrf__twim__hal_1ga1b0f04ff557a603935d12650d2f255b2" kindref="member">nrf_twim_error_t</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>activating<sp/>the<sp/>specified<sp/>TWIM<sp/>task.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="303"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>TWIM<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>The<sp/>specified<sp/>task.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" kindref="member">nrf_twim_task_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>TWIM<sp/>event.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>TWIM<sp/>event.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" kindref="member">nrf_twim_event_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>TWIM<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>The<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" kindref="member">nrf_twim_event_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>specified<sp/>shortcuts.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" kindref="member">nrf_twim_shorts_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>specified<sp/>shortcuts.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" kindref="member">nrf_twim_shorts_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="364"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_twim_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" kindref="member">nrf_twim_int_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_twim_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" kindref="member">nrf_twim_int_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_twim_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" kindref="member">nrf_twim_int_enable_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM<sp/>task.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" kindref="member">nrf_twim_subscribe_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="408"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM<sp/>task.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" kindref="member">nrf_twim_subscribe_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM<sp/>event.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" kindref="member">nrf_twim_publish_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM<sp/>event.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" kindref="member">nrf_twim_publish_clear</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="441"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" kindref="member">nrf_twim_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" kindref="member">nrf_twim_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>TWI<sp/>pins.</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>scl_pin<sp/>SCL<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>sda_pin<sp/>SDA<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" kindref="member">nrf_twim_pins_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scl_pin,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sda_pin);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>SCL<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>@return<sp/>SCL<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" kindref="member">nrf_twim_scl_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="475"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>SDA<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>@return<sp/>SDA<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" kindref="member">nrf_twim_sda_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>TWI<sp/>master<sp/>clock<sp/>frequency.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>frequency<sp/>TWI<sp/>frequency.</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" kindref="member">nrf_twim_frequency_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref><sp/>frequency);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="493"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>the<sp/>TWI<sp/>error<sp/>source.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/>The<sp/>error<sp/>flags<sp/>are<sp/>cleared<sp/>after<sp/>reading.</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>with<sp/>error<sp/>source<sp/>flags.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" kindref="member">nrf_twim_errorsrc_get_and_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="504"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>address<sp/>to<sp/>be<sp/>used<sp/>in<sp/>TWI<sp/>transfers.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>address<sp/>Address<sp/>to<sp/>be<sp/>used<sp/>in<sp/>transfers.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" kindref="member">nrf_twim_address_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="513"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>to<sp/>be<sp/>used<sp/>in<sp/>TWI<sp/>transfers.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>to<sp/>be<sp/>used<sp/>in<sp/>TWI<sp/>transfers.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__twim__hal_1ga10b2fe5d9eb8f4288fdc52c80e796ee3" kindref="member">nrf_twim_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="522"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>with<sp/>data<sp/>to<sp/>send.</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>transmit.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga69598fbbb9293d1c116a998103050a6e" kindref="member">nrf_twim_tx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>for<sp/>received<sp/>data.</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>receive.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaad43bb3e7ec6c84080609df5fcfc4373" kindref="member">nrf_twim_rx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>specified<sp/>shortcuts.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" kindref="member">nrf_twim_shorts_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>shortcut<sp/>setting.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/>@return<sp/>Current<sp/>shortcut<sp/>configuration.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" kindref="member">nrf_twim_shorts_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>amount<sp/>of<sp/>transmitted<sp/>bytes.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>@note<sp/>In<sp/>case<sp/>of<sp/>NACK<sp/>error,<sp/>includes<sp/>the<sp/>NACK&apos;ed<sp/>byte.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/>@note<sp/>Number<sp/>of<sp/>bytes<sp/>are<sp/>updated<sp/>after<sp/>the<sp/>END<sp/>event<sp/>and<sp/>each<sp/>MATCH<sp/>event.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>@return<sp/>Amount<sp/>of<sp/>transmitted<sp/>bytes.</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" kindref="member">nrf_twim_txd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="574"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>amount<sp/>of<sp/>received<sp/>bytes<sp/>in<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>@note<sp/>In<sp/>case<sp/>of<sp/>NACK<sp/>error,<sp/>includes<sp/>the<sp/>NACK&apos;ed<sp/>byte.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@note<sp/>Number<sp/>of<sp/>bytes<sp/>are<sp/>updated<sp/>after<sp/>the<sp/>END<sp/>event<sp/>and<sp/>each<sp/>MATCH<sp/>event.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>@return<sp/>Amount<sp/>of<sp/>received<sp/>bytes.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" kindref="member">nrf_twim_rxd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>amount<sp/>of<sp/>transmitted<sp/>bytes<sp/>in<sp/>the<sp/>current<sp/>transaction.</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>@note<sp/>Number<sp/>of<sp/>bytes<sp/>is<sp/>continuously<sp/>updated<sp/>during<sp/>transmission.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>@return<sp/>Amount<sp/>of<sp/>transmitted<sp/>bytes.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga29e6df5473d7c8ac95fd407e97549bbb" kindref="member">nrf_twim_txd_curr_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="598"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>amount<sp/>of<sp/>received<sp/>bytes<sp/>in<sp/>the<sp/>current<sp/>transaction.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>@note<sp/>Number<sp/>of<sp/>bytes<sp/>is<sp/>continuously<sp/>updated<sp/>during<sp/>reception.</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/>@return<sp/>Amount<sp/>of<sp/>received<sp/>bytes.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4368126c5327b396a2be6dacf9b57639" kindref="member">nrf_twim_rxd_curr_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_ARRAY_LIST</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" kindref="member">nrf_twim_tx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="618"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" kindref="member">nrf_twim_tx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="625"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" kindref="member">nrf_twim_rx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" kindref="member">nrf_twim_rx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="641"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>individual<sp/>pattern<sp/>match<sp/>filters.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga03b45ee52443abc4bb84a68da58d3983" kindref="member">nrf_twim_rx_pattern_match_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="652"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4229f51c36a9fb8ba02ca5d2677853dd" kindref="member">nrf_twim_rx_pattern_match_enable_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="664"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>one-shot<sp/>operation<sp/>for<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga3d97f46ab5862e06288d301e6d872f0c" kindref="member">nrf_twim_rx_pattern_match_one_shot_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="673"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>one-shot<sp/>operation<sp/>for<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga2db46980e65275d25e2064ff6007a821" kindref="member">nrf_twim_rx_pattern_match_one_shot_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="682"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>specified<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>one-shot.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>one-shot.</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>continuous.</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga7886b5d343f1faea1fe22596cc81232f" kindref="member">nrf_twim_rx_pattern_match_one_shot_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="694"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pattern<sp/>to<sp/>be<sp/>looked<sp/>for<sp/>by<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pattern<sp/>Pattern<sp/>to<sp/>be<sp/>looked<sp/>for.</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Match<sp/>will<sp/>trigger<sp/>the<sp/>corresponding<sp/>event,<sp/>if<sp/>enabled.</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6d85eb808398073ce89e868b856120e5" kindref="member">nrf_twim_rx_pattern_match_candidate_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="706"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pattern<sp/>that<sp/>the<sp/>specified<sp/>match<sp/>filter<sp/>is<sp/>looking<sp/>for.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pattern<sp/>that<sp/>the<sp/>specified<sp/>match<sp/>filter<sp/>is<sp/>looking<sp/>for.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga37e0f06d8c38b7125c1ef5e5712ce054" kindref="member">nrf_twim_rx_pattern_match_candidate_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="719"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>RX<sp/>transaction<sp/>termination<sp/>on<sp/>the<sp/>detection<sp/>of<sp/>a<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>the<sp/>RX<sp/>transaction<sp/>termination<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga62f37342881aaa9fab3523d6c4000dad" kindref="member">nrf_twim_rx_terminate_on_bus_error_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="728"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>RX<sp/>transaction<sp/>termination<sp/>on<sp/>the<sp/>detection</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Transaction<sp/>termination<sp/>on<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Transaction<sp/>termination<sp/>on<sp/>BUSERROR<sp/>event<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaa2a21a1edfee4d03f24797ed1188bfe5" kindref="member">nrf_twim_rx_terminate_on_bus_error_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="739"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>TX<sp/>transaction<sp/>termination<sp/>on<sp/>the<sp/>detection<sp/>of<sp/>a<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>the<sp/>TX<sp/>transaction<sp/>termination<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaa8582ba6d468ddd837563d6c848478e5" kindref="member">nrf_twim_tx_terminate_on_bus_error_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="748"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>TX<sp/>transaction<sp/>termination<sp/>on<sp/>the<sp/>detection</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Transaction<sp/>termination<sp/>on<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Transaction<sp/>termination<sp/>on<sp/>BUSERROR<sp/>event<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gadecaa8529db79c2100bbb3d932d91b2d" kindref="member">nrf_twim_tx_terminate_on_bus_error_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" kindref="member">nrf_twim_task_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" kindref="member">nrf_twim_event_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" kindref="member">nrf_twim_event_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" kindref="member">nrf_twim_shorts_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" kindref="member">nrf_twim_shorts_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>&amp;=<sp/>~(mask);</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" kindref="member">nrf_twim_int_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" kindref="member">nrf_twim_int_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" kindref="member">nrf_twim_int_enable_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" kindref="member">nrf_twim_subscribe_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" kindref="member">nrf_twim_subscribe_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" kindref="member">nrf_twim_publish_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" kindref="member">nrf_twim_publish_clear</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" kindref="member">nrf_twim_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(TWIM_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>TWIM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" kindref="member">nrf_twim_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(TWIM_ENABLE_ENABLE_Disabled<sp/>&lt;&lt;<sp/>TWIM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" kindref="member">nrf_twim_pins_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>scl_pin,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sda_pin)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SCL<sp/>=<sp/>scl_pin;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SDA<sp/>=<sp/>sda_pin;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" kindref="member">nrf_twim_scl_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SCL;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" kindref="member">nrf_twim_sda_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SDA;</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" kindref="member">nrf_twim_frequency_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref><sp/>frequency)</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;FREQUENCY<sp/>=<sp/>frequency;</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" kindref="member">nrf_twim_errorsrc_get_and_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>error_source<sp/>=<sp/>p_reg-&gt;ERRORSRC;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[error<sp/>flags<sp/>are<sp/>cleared<sp/>by<sp/>writing<sp/>&apos;1&apos;<sp/>on<sp/>their<sp/>position]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ERRORSRC<sp/>=<sp/>error_source;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error_source;</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" kindref="member">nrf_twim_address_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>address)</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ADDRESS<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__twim__hal_1ga10b2fe5d9eb8f4288fdc52c80e796ee3" kindref="member">nrf_twim_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)(p_reg-&gt;ADDRESS<sp/>&amp;<sp/>TWIM_ADDRESS_ADDRESS_Msk);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga69598fbbb9293d1c116a998103050a6e" kindref="member">nrf_twim_tx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaad43bb3e7ec6c84080609df5fcfc4373" kindref="member">nrf_twim_rx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" kindref="member">nrf_twim_shorts_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" kindref="member">nrf_twim_shorts_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;SHORTS;</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" kindref="member">nrf_twim_txd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.TX.AMOUNT;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;TXD.AMOUNT;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" kindref="member">nrf_twim_rxd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.AMOUNT;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RXD.AMOUNT;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga29e6df5473d7c8ac95fd407e97549bbb" kindref="member">nrf_twim_txd_curr_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.TX.CURRENTAMOUNT;</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4368126c5327b396a2be6dacf9b57639" kindref="member">nrf_twim_rxd_curr_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.CURRENTAMOUNT;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_ARRAY_LIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" kindref="member">nrf_twim_tx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.LIST<sp/>=<sp/>TWIM_DMA_TX_LIST_TYPE_ArrayList<sp/>&lt;&lt;<sp/>TWIM_DMA_TX_LIST_TYPE_Pos;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.LIST<sp/>=<sp/>TWIM_TXD_LIST_LIST_ArrayList<sp/>&lt;&lt;<sp/>TWIM_TXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" kindref="member">nrf_twim_tx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.LIST<sp/>=<sp/>TWIM_DMA_TX_LIST_TYPE_Disabled<sp/>&lt;&lt;<sp/>TWIM_DMA_TX_LIST_TYPE_Pos;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.LIST<sp/>=<sp/>TWIM_TXD_LIST_LIST_Disabled<sp/>&lt;&lt;<sp/>TWIM_TXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" kindref="member">nrf_twim_rx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.LIST<sp/>=<sp/>TWIM_DMA_RX_LIST_TYPE_ArrayList<sp/>&lt;&lt;<sp/>TWIM_DMA_RX_LIST_TYPE_Pos;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.LIST<sp/>=<sp/>TWIM_RXD_LIST_LIST_ArrayList<sp/>&lt;&lt;<sp/>TWIM_RXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" kindref="member">nrf_twim_rx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.LIST<sp/>=<sp/>TWIM_DMA_RX_LIST_TYPE_Disabled<sp/>&lt;&lt;<sp/>TWIM_DMA_RX_LIST_TYPE_Pos;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.LIST<sp/>=<sp/>TWIM_RXD_LIST_LIST_Disabled<sp/>&lt;&lt;<sp/>TWIM_RXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga03b45ee52443abc4bb84a68da58d3983" kindref="member">nrf_twim_rx_pattern_match_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Disabled)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Pos));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Disabled)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Pos));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Disabled)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Pos));</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Disabled)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Pos));</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga4229f51c36a9fb8ba02ca5d2677853dd" kindref="member">nrf_twim_rx_pattern_match_enable_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Msk)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE0_Enabled;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Msk)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE1_Enabled;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Msk)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE2_Enabled;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Msk)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ENABLE3_Enabled;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga3d97f46ab5862e06288d301e6d872f0c" kindref="member">nrf_twim_rx_pattern_match_one_shot_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga2db46980e65275d25e2064ff6007a821" kindref="member">nrf_twim_rx_pattern_match_one_shot_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(TWIM_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(TWIM_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(TWIM_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(TWIM_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga7886b5d343f1faea1fe22596cc81232f" kindref="member">nrf_twim_rx_pattern_match_one_shot_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk)</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT0_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT0_Oneshot;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT1_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT1_Oneshot;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT2_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT2_Oneshot;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT3_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_MATCH_CONFIG_ONESHOT3_Oneshot;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga6d85eb808398073ce89e868b856120e5" kindref="member">nrf_twim_rx_pattern_match_candidate_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CANDIDATE[index]<sp/>=<sp/>pattern;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__twim__hal_1ga37e0f06d8c38b7125c1ef5e5712ce054" kindref="member">nrf_twim_rx_pattern_match_candidate_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" kindref="member">NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.MATCH.CANDIDATE[index];</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TWIM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1ga62f37342881aaa9fab3523d6c4000dad" kindref="member">nrf_twim_rx_terminate_on_bus_error_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.TERMINATEONBUSERROR<sp/>=<sp/><sp/>(enable<sp/>?<sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Disabled)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Pos;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaa2a21a1edfee4d03f24797ed1188bfe5" kindref="member">nrf_twim_rx_terminate_on_bus_error_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.TERMINATEONBUSERROR<sp/>&amp;<sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Msk)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_RX_TERMINATEONBUSERROR_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gaa8582ba6d468ddd837563d6c848478e5" kindref="member">nrf_twim_tx_terminate_on_bus_error_enable_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.TERMINATEONBUSERROR<sp/>=<sp/><sp/>(enable<sp/>?<sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Disabled)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Pos;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gadecaa8529db79c2100bbb3d932d91b2d" kindref="member">nrf_twim_tx_terminate_on_bus_error_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.TX.TERMINATEONBUSERROR<sp/>&amp;<sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Msk)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TWIM_DMA_TX_TERMINATEONBUSERROR_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TWIM_HAS_BUS_ERROR_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1212"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_twim.h"/>
  </compounddef>
</doxygen>
