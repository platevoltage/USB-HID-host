<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__mwu_8h" kind="file" language="C++">
    <compoundname>nrf_mwu.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_mwu.h</label>
        <link refid="nrf__mwu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_event_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda0e5e4e741cee5c902ae9f4af28f19a62" prot="public">
          <name>NRF_MWU_EVENT_REGION0_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[0].WA)</initializer>
          <briefdescription>
<para>Write access to region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda59bd6049fdc4fed797d2ccc12a852358" prot="public">
          <name>NRF_MWU_EVENT_REGION0_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[0].RA)</initializer>
          <briefdescription>
<para>Read access to region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda3e03c8d74b4e2db1fd0419816a1a954f" prot="public">
          <name>NRF_MWU_EVENT_REGION1_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[1].WA)</initializer>
          <briefdescription>
<para>Write access to region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edaa32db639e7f455b2e9d361e6e1037d39" prot="public">
          <name>NRF_MWU_EVENT_REGION1_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[1].RA)</initializer>
          <briefdescription>
<para>Read access to region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda444cdd49141606ff197f872435c0e622" prot="public">
          <name>NRF_MWU_EVENT_REGION2_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[2].WA)</initializer>
          <briefdescription>
<para>Write access to region 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda4bb0dfc1a7ef83c6431e1168b51fc606" prot="public">
          <name>NRF_MWU_EVENT_REGION2_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[2].RA)</initializer>
          <briefdescription>
<para>Read access to region 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edade4311d6d05028789859283b0f834b05" prot="public">
          <name>NRF_MWU_EVENT_REGION3_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[3].WA)</initializer>
          <briefdescription>
<para>Write access to region 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda6d36d9b30941de8983c13f94878decd1" prot="public">
          <name>NRF_MWU_EVENT_REGION3_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[3].RA)</initializer>
          <briefdescription>
<para>Read access to region 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda961eb180b123f8362d246fb7806e2503" prot="public">
          <name>NRF_MWU_EVENT_PREGION0_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[0].WA)</initializer>
          <briefdescription>
<para>Write access to peripheral region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edafbbd48efbfba9a54b1ea04e01d75a378" prot="public">
          <name>NRF_MWU_EVENT_PREGION0_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[0].RA)</initializer>
          <briefdescription>
<para>Read access to peripheral region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda9cde0abfad3a0d9f6748f5b459134d8d" prot="public">
          <name>NRF_MWU_EVENT_PREGION1_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[1].WA)</initializer>
          <briefdescription>
<para>Write access to peripheral region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edace2daa7894692580f20a2ff3474abdb7" prot="public">
          <name>NRF_MWU_EVENT_PREGION1_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[1].RA)</initializer>
          <briefdescription>
<para>Read access to peripheral region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="51" column="1" bodyfile="hal/nrf_mwu.h" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_int_mask_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4ef3f1301fe67c45163abf0c14117dfe" prot="public">
          <name>NRF_MWU_INT_REGION0_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION0WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[0].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca6ab4e927dbfd3d7d0860eb54d7a72de0" prot="public">
          <name>NRF_MWU_INT_REGION0_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION0RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[0].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca1039f95184c89d2247e77f26df17c9c9" prot="public">
          <name>NRF_MWU_INT_REGION1_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION1WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[1].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cae83ddf17319268d8a3bf232d3c7afddd" prot="public">
          <name>NRF_MWU_INT_REGION1_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION1RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[1].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca8c7a08730539aff0f4ac89604bd34d7a" prot="public">
          <name>NRF_MWU_INT_REGION2_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION2WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[2].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cad2b9cbca2a96645ebba6225b5f8f2a24" prot="public">
          <name>NRF_MWU_INT_REGION2_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION2RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[2].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca3d65ccfcd1c97376b2442f675113535b" prot="public">
          <name>NRF_MWU_INT_REGION3_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION3WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[3].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca48640cb15c2fc1faa105c673defaa05d" prot="public">
          <name>NRF_MWU_INT_REGION3_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION3RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[3].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf413d7cfc876f8a5e9f4a50d2a613696" prot="public">
          <name>NRF_MWU_INT_PREGION0_WRITE_MASK</name>
          <initializer>= MWU_INTEN_PREGION0WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[0].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4bebb394b28a17f8c5df2a3a98ccc5d4" prot="public">
          <name>NRF_MWU_INT_PREGION0_READ_MASK</name>
          <initializer>= MWU_INTEN_PREGION0RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[0].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf1f8b19cd282378840f334a27d79bcc6" prot="public">
          <name>NRF_MWU_INT_PREGION1_WRITE_MASK</name>
          <initializer>= MWU_INTEN_PREGION1WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[1].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caaa07155a848e2e7fc048854c402d2896" prot="public">
          <name>NRF_MWU_INT_PREGION1_READ_MASK</name>
          <initializer>= MWU_INTEN_PREGION1RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[1].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU interrupt masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="68" column="1" bodyfile="hal/nrf_mwu.h" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_region_watch_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa8f7d43836325909249f992b91fafb0bb" prot="public">
          <name>NRF_MWU_WATCH_REGION0_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN0WA_Msk</initializer>
          <briefdescription>
<para>Region 0 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50927b4a81897f899a7216f74db61cd1" prot="public">
          <name>NRF_MWU_WATCH_REGION0_READ</name>
          <initializer>= MWU_REGIONEN_RGN0RA_Msk</initializer>
          <briefdescription>
<para>Region 0 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5f3538857ba305be022ef4139f89b495" prot="public">
          <name>NRF_MWU_WATCH_REGION1_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN1WA_Msk</initializer>
          <briefdescription>
<para>Region 1 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50e302e09bbc25d5a1078ee8ed2aa8fd" prot="public">
          <name>NRF_MWU_WATCH_REGION1_READ</name>
          <initializer>= MWU_REGIONEN_RGN1RA_Msk</initializer>
          <briefdescription>
<para>Region 1 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effaf5b025de12dc188b84fcce377f4052b5" prot="public">
          <name>NRF_MWU_WATCH_REGION2_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN2WA_Msk</initializer>
          <briefdescription>
<para>Region 2 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa74d8337c232131188867cd4caa9470ac" prot="public">
          <name>NRF_MWU_WATCH_REGION2_READ</name>
          <initializer>= MWU_REGIONEN_RGN2RA_Msk</initializer>
          <briefdescription>
<para>Region 2 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa112fcbbaef380fe2af338ca06a306d63" prot="public">
          <name>NRF_MWU_WATCH_REGION3_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN3WA_Msk</initializer>
          <briefdescription>
<para>Region 3 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa4682a2cec9e5c16d79333e5ab9d16fd1" prot="public">
          <name>NRF_MWU_WATCH_REGION3_READ</name>
          <initializer>= MWU_REGIONEN_RGN3RA_Msk</initializer>
          <briefdescription>
<para>Region 3 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effacc47806c9badca92dad3e81d7083e89e" prot="public">
          <name>NRF_MWU_WATCH_PREGION0_WRITE</name>
          <initializer>= MWU_REGIONEN_PRGN0WA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 0 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa1e46d4f8f2e69fc01b8406ec8b71cab0" prot="public">
          <name>NRF_MWU_WATCH_PREGION0_READ</name>
          <initializer>= MWU_REGIONEN_PRGN0RA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 0 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5a7201e2cff49a7306cf8bf934f8a873" prot="public">
          <name>NRF_MWU_WATCH_PREGION1_WRITE</name>
          <initializer>= MWU_REGIONEN_PRGN1WA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 1 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa41822c063366a82c0bd1b727e7744172" prot="public">
          <name>NRF_MWU_WATCH_PREGION1_READ</name>
          <initializer>= MWU_REGIONEN_PRGN1RA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 1 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU region watch masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="85" column="1" bodyfile="hal/nrf_mwu.h" bodystart="86" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__mwu__hal_1gad2aff60e58f84a9aa0653496bbcd8505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_mwu_event_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the MWU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="285" column="24" bodyfile="hal/nrf_mwu.h" bodystart="285" bodyend="289" declfile="hal/nrf_mwu.h" declline="110" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gaa6a632034a44d2ad3dbe6cef1c0cd364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_event_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing a specific MWU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="291" column="24" bodyfile="hal/nrf_mwu.h" bodystart="291" bodyend="296" declfile="hal/nrf_mwu.h" declline="119" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga489dddcce4a3e38d672ba2b9af9924f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_event_address_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_address_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a specific MWU event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="298" column="28" bodyfile="hal/nrf_mwu.h" bodystart="298" bodyend="302" declfile="hal/nrf_mwu.h" declline="130" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gae1976d4d9cee04fcdb094c4bb99c1b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_int_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="304" column="24" bodyfile="hal/nrf_mwu.h" bodystart="304" bodyend="307" declfile="hal/nrf_mwu.h" declline="140" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga63b2c98f28196c77c6deb863851de28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_int_enable_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_enable_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="309" column="28" bodyfile="hal/nrf_mwu.h" bodystart="309" bodyend="312" declfile="hal/nrf_mwu.h" declline="151" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga4791501dae2891aa9a015c05bd889e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_int_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="314" column="24" bodyfile="hal/nrf_mwu.h" bodystart="314" bodyend="317" declfile="hal/nrf_mwu.h" declline="160" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gaa74bc12c49194463dc2de242cf172bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_nmi_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified non-maskable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="319" column="24" bodyfile="hal/nrf_mwu.h" bodystart="319" bodyend="322" declfile="hal/nrf_mwu.h" declline="168" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga6fb89107ab17f307f71f3f4d52f7df7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_nmi_enable_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_enable_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified non-maskable interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="324" column="28" bodyfile="hal/nrf_mwu.h" bodystart="324" bodyend="327" declfile="hal/nrf_mwu.h" declline="178" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga697fe2025a8d20b365d7c68cd17ab7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_nmi_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified non-maskable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="329" column="24" bodyfile="hal/nrf_mwu.h" bodystart="329" bodyend="332" declfile="hal/nrf_mwu.h" declline="186" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga37745bc047c1e777909478b9727b5ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_user_region_range_set</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t region_idx, uint32_t start_addr, uint32_t end_addr)</argsstring>
        <name>nrf_mwu_user_region_range_set</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>end_addr</declname>
        </param>
        <briefdescription>
<para>Function for setting address range of the specified user region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory address defining the beginning of the region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory address defining the end of the region. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="334" column="24" bodyfile="hal/nrf_mwu.h" bodystart="334" bodyend="343" declfile="hal/nrf_mwu.h" declline="196" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga416c45ca26704fac75886294a9fcba2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_region_watch_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t reg_watch_mask)</argsstring>
        <name>nrf_mwu_region_watch_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_watch_mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling memory access watch mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_watch_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines regions and access types to watch. Compose this mask from <ref refid="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" kindref="member">nrf_mwu_region_watch_t</ref> values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="345" column="24" bodyfile="hal/nrf_mwu.h" bodystart="345" bodyend="348" declfile="hal/nrf_mwu.h" declline="208" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gab22fa019a61a53ce83946839c3e6a13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_region_watch_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t reg_watch_mask)</argsstring>
        <name>nrf_mwu_region_watch_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_watch_mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling memory access watch mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_watch_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines regions and access types to stop watching. Compose this mask from <ref refid="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" kindref="member">nrf_mwu_region_watch_t</ref> values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="350" column="24" bodyfile="hal/nrf_mwu.h" bodystart="350" bodyend="353" declfile="hal/nrf_mwu.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga7b7255abc5aba39a83d58dcd7337ba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_region_watch_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg)</argsstring>
        <name>nrf_mwu_region_watch_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting memory access watch configuration mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask that defines regions and access types being watched. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="355" column="28" bodyfile="hal/nrf_mwu.h" bodystart="355" bodyend="358" declfile="hal/nrf_mwu.h" declline="226" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga24b1b3296949acf5884fa075a6f5d6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_configure</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_configure</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for configuring peripheral subregions for watching. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing specified subregions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregions to include into the specified peripheral region. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="360" column="24" bodyfile="hal/nrf_mwu.h" bodystart="360" bodyend="365" declfile="hal/nrf_mwu.h" declline="235" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga45626d7b774d743668227a721f436aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_subregions_write_accesses_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint8_t per_reg_idx)</argsstring>
        <name>nrf_mwu_subregions_write_accesses_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the mask of the write access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregions to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask specifying subregions that were write accessed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="367" column="28" bodyfile="hal/nrf_mwu.h" bodystart="367" bodyend="371" declfile="hal/nrf_mwu.h" declline="247" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga0d23ad2079e7bee845b531a0fd6de49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_write_accesses_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_write_accesses_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing write access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregion accesses to clear. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregion write accesses to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="373" column="24" bodyfile="hal/nrf_mwu.h" bodystart="373" bodyend="378" declfile="hal/nrf_mwu.h" declline="257" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga68a34cbbbea15269cb405d2f4312cb63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_subregions_read_accesses_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint8_t per_reg_idx)</argsstring>
        <name>nrf_mwu_subregions_read_accesses_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the mask of the read access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregions to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask specifying subregions that were read accessed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="380" column="28" bodyfile="hal/nrf_mwu.h" bodystart="380" bodyend="384" declfile="hal/nrf_mwu.h" declline="269" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga9013094fb0489c6b26d9f2dc8f240a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_read_accesses_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_read_accesses_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing read access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregion accesses to clear. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregion read accesses to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="386" column="24" bodyfile="hal/nrf_mwu.h" bodystart="386" bodyend="391" declfile="hal/nrf_mwu.h" declline="279" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_MWU_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_MWU_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_mwu_hal<sp/>MWU<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_mwu</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Memory<sp/>Watch<sp/>Unit<sp/>(MWU)<sp/>peripheral.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**<sp/>@brief<sp/>MWU<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda0e5e4e741cee5c902ae9f4af28f19a62" kindref="member">NRF_MWU_EVENT_REGION0_WRITE</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[0].WA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>region<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda59bd6049fdc4fed797d2ccc12a852358" kindref="member">NRF_MWU_EVENT_REGION0_READ</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[0].RA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>region<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda3e03c8d74b4e2db1fd0419816a1a954f" kindref="member">NRF_MWU_EVENT_REGION1_WRITE</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[1].WA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>region<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edaa32db639e7f455b2e9d361e6e1037d39" kindref="member">NRF_MWU_EVENT_REGION1_READ</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[1].RA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>region<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda444cdd49141606ff197f872435c0e622" kindref="member">NRF_MWU_EVENT_REGION2_WRITE</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[2].WA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>region<sp/>2<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda4bb0dfc1a7ef83c6431e1168b51fc606" kindref="member">NRF_MWU_EVENT_REGION2_READ</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[2].RA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>region<sp/>2<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edade4311d6d05028789859283b0f834b05" kindref="member">NRF_MWU_EVENT_REGION3_WRITE</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[3].WA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>region<sp/>3<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda6d36d9b30941de8983c13f94878decd1" kindref="member">NRF_MWU_EVENT_REGION3_READ</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_REGION[3].RA),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>region<sp/>3<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda961eb180b123f8362d246fb7806e2503" kindref="member">NRF_MWU_EVENT_PREGION0_WRITE</ref><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_PREGION[0].WA),<sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>peripheral<sp/>region<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edafbbd48efbfba9a54b1ea04e01d75a378" kindref="member">NRF_MWU_EVENT_PREGION0_READ</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_PREGION[0].RA),<sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>peripheral<sp/>region<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda9cde0abfad3a0d9f6748f5b459134d8d" kindref="member">NRF_MWU_EVENT_PREGION1_WRITE</ref><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_PREGION[1].WA),<sp/></highlight><highlight class="comment">///&lt;<sp/>Write<sp/>access<sp/>to<sp/>peripheral<sp/>region<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edace2daa7894692580f20a2ff3474abdb7" kindref="member">NRF_MWU_EVENT_PREGION1_READ</ref><sp/><sp/>=<sp/>offsetof(NRF_MWU_Type,<sp/>EVENTS_PREGION[1].RA),<sp/></highlight><highlight class="comment">///&lt;<sp/>Read<sp/>access<sp/>to<sp/>peripheral<sp/>region<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**<sp/>@brief<sp/>MWU<sp/>interrupt<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4ef3f1301fe67c45163abf0c14117dfe" kindref="member">NRF_MWU_INT_REGION0_WRITE_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_REGION0WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[0].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca6ab4e927dbfd3d7d0860eb54d7a72de0" kindref="member">NRF_MWU_INT_REGION0_READ_MASK</ref><sp/><sp/><sp/>=<sp/>MWU_INTEN_REGION0RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[0].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca1039f95184c89d2247e77f26df17c9c9" kindref="member">NRF_MWU_INT_REGION1_WRITE_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_REGION1WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[1].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cae83ddf17319268d8a3bf232d3c7afddd" kindref="member">NRF_MWU_INT_REGION1_READ_MASK</ref><sp/><sp/><sp/>=<sp/>MWU_INTEN_REGION1RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[1].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca8c7a08730539aff0f4ac89604bd34d7a" kindref="member">NRF_MWU_INT_REGION2_WRITE_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_REGION2WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[2].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cad2b9cbca2a96645ebba6225b5f8f2a24" kindref="member">NRF_MWU_INT_REGION2_READ_MASK</ref><sp/><sp/><sp/>=<sp/>MWU_INTEN_REGION2RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[2].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca3d65ccfcd1c97376b2442f675113535b" kindref="member">NRF_MWU_INT_REGION3_WRITE_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_REGION3WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[3].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca48640cb15c2fc1faa105c673defaa05d" kindref="member">NRF_MWU_INT_REGION3_READ_MASK</ref><sp/><sp/><sp/>=<sp/>MWU_INTEN_REGION3RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>REGION[3].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf413d7cfc876f8a5e9f4a50d2a613696" kindref="member">NRF_MWU_INT_PREGION0_WRITE_MASK</ref><sp/>=<sp/>MWU_INTEN_PREGION0WA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>PREGION[0].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4bebb394b28a17f8c5df2a3a98ccc5d4" kindref="member">NRF_MWU_INT_PREGION0_READ_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_PREGION0RA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>PREGION[0].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf1f8b19cd282378840f334a27d79bcc6" kindref="member">NRF_MWU_INT_PREGION1_WRITE_MASK</ref><sp/>=<sp/>MWU_INTEN_PREGION1WA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>PREGION[1].WA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caaa07155a848e2e7fc048854c402d2896" kindref="member">NRF_MWU_INT_PREGION1_READ_MASK</ref><sp/><sp/>=<sp/>MWU_INTEN_PREGION1RA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>PREGION[1].RA<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/><ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment">/**<sp/>@brief<sp/>MWU<sp/>region<sp/>watch<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa8f7d43836325909249f992b91fafb0bb" kindref="member">NRF_MWU_WATCH_REGION0_WRITE</ref><sp/><sp/>=<sp/>MWU_REGIONEN_RGN0WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>0<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50927b4a81897f899a7216f74db61cd1" kindref="member">NRF_MWU_WATCH_REGION0_READ</ref><sp/><sp/><sp/>=<sp/>MWU_REGIONEN_RGN0RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>0<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5f3538857ba305be022ef4139f89b495" kindref="member">NRF_MWU_WATCH_REGION1_WRITE</ref><sp/><sp/>=<sp/>MWU_REGIONEN_RGN1WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>1<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50e302e09bbc25d5a1078ee8ed2aa8fd" kindref="member">NRF_MWU_WATCH_REGION1_READ</ref><sp/><sp/><sp/>=<sp/>MWU_REGIONEN_RGN1RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>1<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effaf5b025de12dc188b84fcce377f4052b5" kindref="member">NRF_MWU_WATCH_REGION2_WRITE</ref><sp/><sp/>=<sp/>MWU_REGIONEN_RGN2WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>2<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa74d8337c232131188867cd4caa9470ac" kindref="member">NRF_MWU_WATCH_REGION2_READ</ref><sp/><sp/><sp/>=<sp/>MWU_REGIONEN_RGN2RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>2<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa112fcbbaef380fe2af338ca06a306d63" kindref="member">NRF_MWU_WATCH_REGION3_WRITE</ref><sp/><sp/>=<sp/>MWU_REGIONEN_RGN3WA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>3<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa4682a2cec9e5c16d79333e5ab9d16fd1" kindref="member">NRF_MWU_WATCH_REGION3_READ</ref><sp/><sp/><sp/>=<sp/>MWU_REGIONEN_RGN3RA_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Region<sp/>3<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effacc47806c9badca92dad3e81d7083e89e" kindref="member">NRF_MWU_WATCH_PREGION0_WRITE</ref><sp/>=<sp/>MWU_REGIONEN_PRGN0WA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Peripheral<sp/>region<sp/>0<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa1e46d4f8f2e69fc01b8406ec8b71cab0" kindref="member">NRF_MWU_WATCH_PREGION0_READ</ref><sp/><sp/>=<sp/>MWU_REGIONEN_PRGN0RA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Peripheral<sp/>region<sp/>0<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5a7201e2cff49a7306cf8bf934f8a873" kindref="member">NRF_MWU_WATCH_PREGION1_WRITE</ref><sp/>=<sp/>MWU_REGIONEN_PRGN1WA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Peripheral<sp/>region<sp/>1<sp/>write<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa41822c063366a82c0bd1b727e7744172" kindref="member">NRF_MWU_WATCH_PREGION1_READ</ref><sp/><sp/>=<sp/>MWU_REGIONEN_PRGN1RA_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Peripheral<sp/>region<sp/>1<sp/>read<sp/>access<sp/>watch<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/><ref refid="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" kindref="member">nrf_mwu_region_watch_t</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>MWU<sp/>event.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gad2aff60e58f84a9aa0653496bbcd8505" kindref="member">nrf_mwu_event_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>specific<sp/>MWU<sp/>event.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gaa6a632034a44d2ad3dbe6cef1c0cd364" kindref="member">nrf_mwu_event_clear</ref>(NRF_MWU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>a<sp/>specific<sp/>MWU<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Requested<sp/>event.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga489dddcce4a3e38d672ba2b9af9924f1" kindref="member">nrf_mwu_event_address_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_mwu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gae1976d4d9cee04fcdb094c4bb99c1b06" kindref="member">nrf_mwu_int_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_mwu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga63b2c98f28196c77c6deb863851de28e" kindref="member">nrf_mwu_int_enable_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_mwu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga4791501dae2891aa9a015c05bd889e79" kindref="member">nrf_mwu_int_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>non-maskable<sp/>interrupts.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gaa74bc12c49194463dc2de242cf172bd1" kindref="member">nrf_mwu_nmi_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>non-maskable<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga6fb89107ab17f307f71f3f4d52f7df7c" kindref="member">nrf_mwu_nmi_enable_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>non-maskable<sp/>interrupts.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga697fe2025a8d20b365d7c68cd17ab7a6" kindref="member">nrf_mwu_nmi_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>address<sp/>range<sp/>of<sp/>the<sp/>specified<sp/>user<sp/>region.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>region_idx<sp/>Region<sp/>number<sp/>to<sp/>configure.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>start_addr<sp/>Memory<sp/>address<sp/>defining<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>region.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>end_addr<sp/><sp/><sp/>Memory<sp/>address<sp/>defining<sp/>the<sp/>end<sp/>of<sp/>the<sp/>region.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga37745bc047c1e777909478b9727b5ad6" kindref="member">nrf_mwu_user_region_range_set</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_idx,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_addr);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>memory<sp/>access<sp/>watch<sp/>mechanism.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>reg_watch_mask<sp/>Mask<sp/>that<sp/>defines<sp/>regions<sp/>and<sp/>access<sp/>types<sp/>to<sp/>watch.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compose<sp/>this<sp/>mask<sp/>from<sp/>@ref<sp/>nrf_mwu_region_watch_t<sp/>values.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga416c45ca26704fac75886294a9fcba2c" kindref="member">nrf_mwu_region_watch_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>reg_watch_mask);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>memory<sp/>access<sp/>watch<sp/>mechanism.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>reg_watch_mask<sp/>Mask<sp/>that<sp/>defines<sp/>regions<sp/>and<sp/>access<sp/>types<sp/>to<sp/>stop<sp/>watching.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compose<sp/>this<sp/>mask<sp/>from<sp/>@ref<sp/>nrf_mwu_region_watch_t<sp/>values.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gab22fa019a61a53ce83946839c3e6a13b" kindref="member">nrf_mwu_region_watch_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>reg_watch_mask);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>memory<sp/>access<sp/>watch<sp/>configuration<sp/>mask.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>that<sp/>defines<sp/>regions<sp/>and<sp/>access<sp/>types<sp/>being<sp/>watched.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga7b7255abc5aba39a83d58dcd7337ba0e" kindref="member">nrf_mwu_region_watch_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>peripheral<sp/>subregions<sp/>for<sp/>watching.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>per_reg_idx<sp/><sp/><sp/><sp/>Peripheral<sp/>region<sp/>containing<sp/>specified<sp/>subregions.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subregion_mask<sp/>Mask<sp/>that<sp/>defines<sp/>subregions<sp/>to<sp/>include<sp/>into<sp/>the<sp/>specified<sp/>peripheral<sp/>region.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga24b1b3296949acf5884fa075a6f5d6cd" kindref="member">nrf_mwu_subregions_configure</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>mask<sp/>of<sp/>the<sp/>write<sp/>access<sp/>flags<sp/>of<sp/>peripheral<sp/>subregions</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>per_reg_idx<sp/>Peripheral<sp/>region<sp/>containing<sp/>subregions<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>specifying<sp/>subregions<sp/>that<sp/>were<sp/>write<sp/>accessed.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga45626d7b774d743668227a721f436aaf" kindref="member">nrf_mwu_subregions_write_accesses_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="250"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>write<sp/>access<sp/>flags<sp/>of<sp/>peripheral<sp/>subregions.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>per_reg_idx<sp/><sp/><sp/><sp/>Peripheral<sp/>region<sp/>containing<sp/>subregion<sp/>accesses<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subregion_mask<sp/>Mask<sp/>that<sp/>defines<sp/>subregion<sp/>write<sp/>accesses<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga0d23ad2079e7bee845b531a0fd6de49c" kindref="member">nrf_mwu_subregions_write_accesses_clear</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>mask<sp/>of<sp/>the<sp/>read<sp/>access<sp/>flags<sp/>of<sp/>peripheral<sp/>subregions</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>per_reg_idx<sp/>Peripheral<sp/>region<sp/>containing<sp/>subregions<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>specifying<sp/>subregions<sp/>that<sp/>were<sp/>read<sp/>accessed.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga68a34cbbbea15269cb405d2f4312cb63" kindref="member">nrf_mwu_subregions_read_accesses_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>read<sp/>access<sp/>flags<sp/>of<sp/>peripheral<sp/>subregions.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>per_reg_idx<sp/><sp/><sp/><sp/>Peripheral<sp/>region<sp/>containing<sp/>subregion<sp/>accesses<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subregion_mask<sp/>Mask<sp/>that<sp/>defines<sp/>subregion<sp/>read<sp/>accesses<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga9013094fb0489c6b26d9f2dc8f240a58" kindref="member">nrf_mwu_subregions_read_accesses_clear</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gad2aff60e58f84a9aa0653496bbcd8505" kindref="member">nrf_mwu_event_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gaa6a632034a44d2ad3dbe6cef1c0cd364" kindref="member">nrf_mwu_event_clear</ref>(NRF_MWU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga489dddcce4a3e38d672ba2b9af9924f1" kindref="member">nrf_mwu_event_address_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gae1976d4d9cee04fcdb094c4bb99c1b06" kindref="member">nrf_mwu_int_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga63b2c98f28196c77c6deb863851de28e" kindref="member">nrf_mwu_int_enable_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga4791501dae2891aa9a015c05bd889e79" kindref="member">nrf_mwu_int_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gaa74bc12c49194463dc2de242cf172bd1" kindref="member">nrf_mwu_nmi_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;NMIENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga6fb89107ab17f307f71f3f4d52f7df7c" kindref="member">nrf_mwu_nmi_enable_check</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;NMIENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga697fe2025a8d20b365d7c68cd17ab7a6" kindref="member">nrf_mwu_nmi_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;NMIENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga37745bc047c1e777909478b9727b5ad6" kindref="member">nrf_mwu_user_region_range_set</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_idx,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_addr)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(end_addr<sp/>&gt;=<sp/>start_addr);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;REGION[region_idx].START<sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;REGION[region_idx].END<sp/>=<sp/>end_addr;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga416c45ca26704fac75886294a9fcba2c" kindref="member">nrf_mwu_region_watch_enable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>reg_watch_mask)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;REGIONENSET<sp/>=<sp/>reg_watch_mask;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1gab22fa019a61a53ce83946839c3e6a13b" kindref="member">nrf_mwu_region_watch_disable</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>reg_watch_mask)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;REGIONENCLR<sp/>=<sp/>reg_watch_mask;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga7b7255abc5aba39a83d58dcd7337ba0e" kindref="member">nrf_mwu_region_watch_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;REGIONENSET;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga24b1b3296949acf5884fa075a6f5d6cd" kindref="member">nrf_mwu_subregions_configure</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PREGION[per_reg_idx].SUBS<sp/>=<sp/>subregion_mask;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga45626d7b774d743668227a721f436aaf" kindref="member">nrf_mwu_subregions_write_accesses_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PERREGION[per_reg_idx].SUBSTATWA;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga0d23ad2079e7bee845b531a0fd6de49c" kindref="member">nrf_mwu_subregions_write_accesses_clear</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERREGION[per_reg_idx].SUBSTATWA<sp/>=<sp/>subregion_mask;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__mwu__hal_1ga68a34cbbbea15269cb405d2f4312cb63" kindref="member">nrf_mwu_subregions_read_accesses_get</ref>(NRF_MWU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PERREGION[per_reg_idx].SUBSTATRA;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mwu__hal_1ga9013094fb0489c6b26d9f2dc8f240a58" kindref="member">nrf_mwu_subregions_read_accesses_clear</ref>(NRF_MWU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>per_reg_idx,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>subregion_mask)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERREGION[per_reg_idx].SUBSTATRA<sp/>=<sp/>subregion_mask;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_MWU_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_mwu.h"/>
  </compounddef>
</doxygen>
