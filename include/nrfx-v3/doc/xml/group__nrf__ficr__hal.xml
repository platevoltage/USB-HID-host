<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__ficr__hal" kind="group">
    <compoundname>nrf_ficr_hal</compoundname>
    <title>FICR HAL</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__ficr__hal_1ga849163322869a87460c4b4a9472a63b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ficr_codepagesize_get</definition>
        <argsstring>(NRF_FICR_Type const *p_reg)</argsstring>
        <name>nrf_ficr_codepagesize_get</name>
        <param>
          <type>NRF_FICR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the size of the code memory page. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code memory page size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="157" column="28" bodyfile="hal/nrf_ficr.h" bodystart="157" bodyend="164" declfile="hal/nrf_ficr.h" declline="115" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ficr__hal_1ga100f2e9556162926c27043384d1854c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ficr_codesize_get</definition>
        <argsstring>(NRF_FICR_Type const *p_reg)</argsstring>
        <name>nrf_ficr_codesize_get</name>
        <param>
          <type>NRF_FICR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the size of the code memory rendered as number of pages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code memory size rendered as number of pages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="168" column="28" bodyfile="hal/nrf_ficr.h" bodystart="168" bodyend="175" declfile="hal/nrf_ficr.h" declline="126" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ficr__hal_1ga41ee74775cc273b75ca6163f2e2d85c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ficr_deviceid_get</definition>
        <argsstring>(NRF_FICR_Type const *p_reg, uint32_t reg_id)</argsstring>
        <name>nrf_ficr_deviceid_get</name>
        <param>
          <type>NRF_FICR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_id</declname>
        </param>
        <briefdescription>
<para>Function for getting the unique device identifier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Register index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Unique device identifier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="179" column="28" bodyfile="hal/nrf_ficr.h" bodystart="179" bodyend="186" declfile="hal/nrf_ficr.h" declline="138" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ficr__hal_1ga212361cc0aaf80e575ab98c639e13bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ficr_nfc_tagheader_get</definition>
        <argsstring>(NRF_FICR_Type const *p_reg, uint32_t tagheader_id)</argsstring>
        <name>nrf_ficr_nfc_tagheader_get</name>
        <param>
          <type>NRF_FICR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tagheader_id</declname>
        </param>
        <briefdescription>
<para>Function for getting the default header values for the NFC tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tagheader_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag header index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The default header value of the NFC tag for the specified header index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="190" column="28" bodyfile="hal/nrf_ficr.h" bodystart="190" bodyend="220" declfile="hal/nrf_ficr.h" declline="150" declcolumn="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__ficr__hal_1gaeeea21a4d47036d6d178bd09baf6b271" prot="public" static="no">
        <name>NRF_FICR_HAS_CODE_PAGE_SIZE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR CODEPAGESIZE register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="53" column="9" bodyfile="hal/nrf_ficr.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1gacc79383b18aade1e2ae883a4d3ee7a39" prot="public" static="no">
        <name>NRF_FICR_HAS_INFO_CODE_PAGE_SIZE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR INFO.CODEPAGESIZE register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="60" column="9" bodyfile="hal/nrf_ficr.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1gab074eaf5b326ee33f41d3527cb07379d" prot="public" static="no">
        <name>NRF_FICR_HAS_CODE_SIZE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR CODESIZE register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="67" column="9" bodyfile="hal/nrf_ficr.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1gacb528fb6e68a42f274d8dba69b656b99" prot="public" static="no">
        <name>NRF_FICR_HAS_INFO_CODE_SIZE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR INFO.CODESIZE register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="74" column="9" bodyfile="hal/nrf_ficr.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1ga8cf9bf0881e9f445293f3769d8eaa33d" prot="public" static="no">
        <name>NRF_FICR_HAS_DEVICE_ID</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR DEVICEID[n] registers are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="81" column="9" bodyfile="hal/nrf_ficr.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1gaba6378861cb5ae3381de199dcca86d02" prot="public" static="no">
        <name>NRF_FICR_HAS_INFO_DEVICE_ID</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR INFO.DEVICEID[n] registers are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="88" column="9" bodyfile="hal/nrf_ficr.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1ga6c4f01c7759e8e47adedea08c916b211" prot="public" static="no">
        <name>NRF_FICR_HAS_NFC_TAGHEADER</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR NFC.TAGHEADERn registers are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="95" column="9" bodyfile="hal/nrf_ficr.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ficr__hal_1ga366c88d19f6b534fc7199408441b028b" prot="public" static="no">
        <name>NRF_FICR_HAS_NFC_TAGHEADER_ARRAY</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether FICR NFC registers have tagheader array layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ficr.h" line="102" column="9" bodyfile="hal/nrf_ficr.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer (HAL) for getting data from the Factory Information Configuration Registers (FICR). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
