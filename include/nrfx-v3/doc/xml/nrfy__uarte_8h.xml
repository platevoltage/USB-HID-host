<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__uarte_8h" kind="file" language="C++">
    <compoundname>nrfy_uarte.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__uarte_8h" local="no">hal/nrf_uarte.h</includes>
    <includedby refid="nrfx__uarte_8h" local="no">drivers/include/nrfx_uarte.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_uarte.h</label>
        <link refid="nrfy__uarte_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__uarte__pins__t" prot="public">nrfy_uarte_pins_t</innerclass>
    <innerclass refid="structnrfy__uarte__config__t" prot="public">nrfy_uarte_config_t</innerclass>
    <innerclass refid="structnrfy__uarte__buffer__t" prot="public">nrfy_uarte_buffer_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nrfy__uarte_8h_1a25622195eaf8d8915a483e58055c3764" prot="public" static="no">
        <type>struct <ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref></type>
        <definition>typedef struct nrfy_uarte_buffer_t nrfy_uarte_buffer_t</definition>
        <argsstring></argsstring>
        <name>nrfy_uarte_buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="44" column="34" bodyfile="haly/nrfy_uarte.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__uarte_8h_1a57d243f1266f1bc0110126909d48d43d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_uarte_event_enabled_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask, nrf_uarte_event_t event)</argsstring>
        <name>__nrfy_internal_uarte_event_enabled_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="614" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="614" bodyend="622" declfile="haly/nrfy_uarte.h" declline="46" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__uarte_8h_1ae3fbe983996edcea30c67be2cc8a1d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_uarte_event_handle</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask, nrf_uarte_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_uarte_event_handle</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="624" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="624" bodyend="639" declfile="haly/nrfy_uarte.h" declline="50" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__uarte_8h_1a667ebbe1702e0e8691f79e7f5b12f4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_uarte_events_process</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask, nrfy_uarte_buffer_t const *p_xfer)</argsstring>
        <name>__nrfy_internal_uarte_events_process</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="642" column="10" bodyfile="haly/nrfy_uarte.h" bodystart="642" bodyend="674" declfile="haly/nrfy_uarte.h" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga979d82087b1aca1aadc7875dee27449d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_periph_configure</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrfy_uarte_config_t const *p_config)</argsstring>
        <name>nrfy_uarte_periph_configure</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__config__t" kindref="compound">nrfy_uarte_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the UARTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="106" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="106" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga90f12e09899772ba7e26850d0c59aedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_int_init</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_uarte_int_init</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified UARTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupts associated with the event mask are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="131" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="131" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga2d4f9644f0ffa5ab486978189331f494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_int_uninit</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_int_uninit</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the UARTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="163" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaebecd9466b7ce2a5466a92e5fde61a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_events_process</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask, nrfy_uarte_buffer_t const *p_xfer)</argsstring>
        <name>nrfy_uarte_events_process</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified UARTE events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing buffer associated with the last reception. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="180" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga6b3f6b4e5ff129f77e23bb85db0c845f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_tx_abort</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_uarte_tx_abort</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for aborting the ongoing UARTE transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU should wait for peripheral to abort transmission, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="195" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="195" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaed589e3ef3b3569a6233fc6e5e85b79b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_stop</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrfy_uarte_buffer_t const *p_xfer)</argsstring>
        <name>nrfy_uarte_stop</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for stopping the UARTE transmitter and receiver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing reception buffer. Can be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="216" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="216" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga90dbbcb5a42ed3a1040762777d8fcf48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_tx_start</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_uarte_tx_start</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for starting the UARTE transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True for blocking transmission, false otherwise.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events occured, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. Always 0 for non-blocking transmission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="245" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="245" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga7053a6ccebab4b46a6a60ee7bfdd54c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_rx_start</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrfy_uarte_buffer_t const *p_xfer)</argsstring>
        <name>nrfy_uarte_rx_start</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for starting the UARTE reception. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing reception buffer if the reception is to be blocking. NULL for non-blocking reception.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events occured, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. Always 0 for non-blocking reception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="273" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="273" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaa99f07c448ce4ddbbe98c96b660a3f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_pins_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrfy_uarte_pins_t *p_pins)</argsstring>
        <name>nrfy_uarte_pins_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__uarte__pins__t" kindref="compound">nrfy_uarte_pins_t</ref> *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for getting UARTE pins configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the UARTE pin configurartion structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="298" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="298" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga112df535de86242de25879f2479c75bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_pins_disconnect</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_pins_disconnect</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disconnecting UARTE pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="314" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="314" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gac35185925fd420b6145686e720bb7f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_event_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrfy_uarte_event_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>  Function for clearing a specific UARTE event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="322" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga39641452e2e09c66292394353d149455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_uarte_event_check</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrfy_uarte_event_check</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>  Function for retrieving the state of the UARTE event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="329" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="329" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga37276340ccc49f68d9e20fb7450d044a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_event_address_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrfy_uarte_event_address_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga71fbc9d9b1a7a7fb61e54af1db53e9b1" kindref="member">nrf_uarte_event_address_get</ref>  Function for returning the address of the specified UARTE event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="339" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gabe8dccd7084ae22c8c3c50900a534915" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_shorts_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_shorts_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaa95a64c55eaf1ef8c5034c701be8cc2f" kindref="member">nrf_uarte_shorts_set</ref>  Function for configuring UARTE shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="346" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="346" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga69617cea915c00d77aabac9803396cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_shorts_get</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_shorts_get</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gacdf7d64e583ad40f2f6284080af2bb54" kindref="member">nrf_uarte_shorts_get</ref>  Function for getting UARTE shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of requested shortcuts which were enabled.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="353" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="353" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gad1644cea5e250775f4d98af418a4381a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_shorts_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_shorts_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaf118432d67372baf106ddebd40706ac0" kindref="member">nrf_uarte_shorts_enable</ref>  Function for enabling UARTE shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="363" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="363" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga29a741277e4ac89a77f5f46c2249bde1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_shorts_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_shorts_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga4b45795e5eb4ab6ca6bec57fef5ca900" kindref="member">nrf_uarte_shorts_disable</ref>  Function for disabling UARTE shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="370" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="370" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga05492f03d5600f6e4eff2d742f2883fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_int_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_int_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" kindref="member">nrf_uarte_int_enable</ref>  Function for enabling UARTE interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="377" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="377" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga4470c30a5c56413fc98b238fd3d72153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_int_enable_check</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_int_enable_check</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga90865440e200499623f4cc89e01db83d" kindref="member">nrf_uarte_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="384" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="384" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga2cfc5c13cbe90c67cb30923fc2b10615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_int_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_uarte_int_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga9b7a75ee458272927873b753c7f0d3ad" kindref="member">nrf_uarte_int_disable</ref>  Function for disabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="394" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="394" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga6763f776ae53e3d2259d5b5b59bb95f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_subscribe_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_uarte_subscribe_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga122e4a898f64c58603ffe58ebe9f0828" kindref="member">nrf_uarte_subscribe_set</ref>  Function for setting the subscribe configuration for a given UARTE task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="402" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="402" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga08372d9855792e847ccbcd8c2590bd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_subscribe_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrfy_uarte_subscribe_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga615374471fc4545e9b26e69963c37d95" kindref="member">nrf_uarte_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given UARTE task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="411" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gae1de286621e46fbbe2a11ddac1c8246c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_publish_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_uarte_publish_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga92107bd9f425356f88682a286ba480e9" kindref="member">nrf_uarte_publish_set</ref>  Function for setting the publish configuration for a given UARTE event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="418" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="418" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga34acc91611f5628b37113248a08c8923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_publish_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrfy_uarte_publish_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gacfa67b79ba293492c74d1e670106fcc8" kindref="member">nrf_uarte_publish_clear</ref>  Function for clearing the publish configuration for a given UARTE event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="427" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gac2108c270aab2499f5d5f9ce863306f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_errorsrc_get_and_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_errorsrc_get_and_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gafb0484282cce3fb422e1179cbbede5e9" kindref="member">nrf_uarte_errorsrc_get_and_clear</ref>  Function for getting error source mask. Function is clearing error source flags after reading.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask with error source flags.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="435" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="435" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga6bcb0c05cd2ab3e68bc9dc12a44d1370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga070849bf37e459b44758bfe6cd63859b" kindref="member">nrf_uarte_enable</ref>  Function for enabling UARTE.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="444" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="444" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaf184b3780a869730847cb420403120eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gac6629a9ad9c7acbf36515e484a45d166" kindref="member">nrf_uarte_disable</ref>  Function for disabling UARTE.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="451" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="451" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga52931d5a372f95ffac839c7bc7d9b8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_uarte_enable_check</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_enable_check</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gae8d7bc802477ebd1b07539e0c9ec8ff1" kindref="member">nrf_uarte_enable_check</ref>  Function for checking if the UARTE is enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The UARTE is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The UARTE is not enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="458" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="458" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga22058a3eec02a17999a81e20d444476f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_txrx_pins_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t pseltxd, uint32_t pselrxd)</argsstring>
        <name>nrfy_uarte_txrx_pins_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pseltxd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselrxd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>  Function for configuring TX/RX pins.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pseltxd</parametername>
</parameternamelist>
<parameterdescription>
<para>TXD pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselrxd</parametername>
</parameternamelist>
<parameterdescription>
<para>RXD pin number.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="467" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="467" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gad9ac37a28348ee1145d9725f462fe5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_txrx_pins_disconnect</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_txrx_pins_disconnect</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" kindref="member">nrf_uarte_txrx_pins_disconnect</ref>  Function for disconnecting TX/RX pins.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="476" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="476" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga4c6a374712c3e0618b9a9c476ce89013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_tx_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_tx_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" kindref="member">nrf_uarte_tx_pin_get</ref>  Function for getting TX pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TX pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="483" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="483" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gab235c9aca37903fada1b4604a0b36669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_rx_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_rx_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" kindref="member">nrf_uarte_rx_pin_get</ref>  Function for getting RX pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RX pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="492" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="492" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga027de3256d24a364959e6e788ce8e009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_rts_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_rts_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" kindref="member">nrf_uarte_rts_pin_get</ref>  Function for getting RTS pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RTS pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="501" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="501" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gadb566e156afc96986faf78cce42e434f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_cts_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_cts_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" kindref="member">nrf_uarte_cts_pin_get</ref>  Function for getting CTS pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CTS pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="510" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="510" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga3f18db088d6b217ddbfd76d1b5804553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_hwfc_pins_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t pselrts, uint32_t pselcts)</argsstring>
        <name>nrfy_uarte_hwfc_pins_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselrts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselcts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>  Function for configuring flow control pins.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselrts</parametername>
</parameternamelist>
<parameterdescription>
<para>RTS pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselcts</parametername>
</parameternamelist>
<parameterdescription>
<para>CTS pin number.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="519" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="519" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaab6357077a739b9648ed36322f760b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_hwfc_pins_disconnect</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_hwfc_pins_disconnect</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" kindref="member">nrf_uarte_hwfc_pins_disconnect</ref>  Function for disconnecting flow control pins.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="528" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="528" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga91def4f30e12d3c3ccfcb6e96dd54593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_task_trigger</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrfy_uarte_task_trigger</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>  Function for starting an UARTE task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="535" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="535" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga0af9b7f3ea2eafea1271efca6ca45826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_task_address_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrfy_uarte_task_address_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaf3123d724a34655489ff9a353f24dd10" kindref="member">nrf_uarte_task_address_get</ref>  Function for returning the address of the specified task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="542" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="542" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gac7f28719c676cc6c6ac2b1706fc1953d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_configure</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_config_t const *p_cfg)</argsstring>
        <name>nrfy_uarte_configure</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref> const *</type>
          <declname>p_cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" kindref="member">nrf_uarte_configure</ref>  Function for configuring UARTE.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to UARTE settings structure.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="549" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="549" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gad05148d6ec5ae09873e629118ec27176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_baudrate_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_baudrate_t baudrate)</argsstring>
        <name>nrfy_uarte_baudrate_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref></type>
          <declname>baudrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" kindref="member">nrf_uarte_baudrate_set</ref>  Function for setting UARTE baud rate.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="557" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="557" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaa67a7a6fea422fa068623387a1b92e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_tx_buffer_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrfy_uarte_tx_buffer_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gab54534a45e185cee807e27b4b2a77d75" kindref="member">nrf_uarte_tx_buffer_set</ref>  Function for setting the transmit buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="565" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="565" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1gaf15b967fc119bb1a83f1e0d58994a87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t const *</type>
        <definition>NRFY_STATIC_INLINE uint8_t const  * nrfy_uarte_tx_buffer_get</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrfy_uarte_tx_buffer_get</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1gaa2591b6842b0ef1033a095e9484d0cd8" kindref="member">nrf_uarte_tx_buffer_get</ref>  Function for getting the transmit buffer address.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the transmit buffer.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="578" column="35" bodyfile="haly/nrfy_uarte.h" bodystart="578" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga06b6f63f0b14a551ada08b2d9416c8de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_tx_amount_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_tx_amount_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga4b52b1f7133577c0cf017143d5dc5ee0" kindref="member">nrf_uarte_tx_amount_get</ref>  Function for getting number of bytes transmitted in the last transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes transmitted.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="587" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="587" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga48e82453a4eaba4bdf563604a1bbc238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_uarte_rx_buffer_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrfy_uarte_rx_buffer_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga1bb25747646dd76f76f5939cc332abc9" kindref="member">nrf_uarte_rx_buffer_set</ref>  Function for setting the receive buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="596" column="25" bodyfile="haly/nrfy_uarte.h" bodystart="596" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__uarte_1ga2e010b0c600aff747d464d441ec12e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_uarte_rx_amount_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrfy_uarte_rx_amount_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" kindref="member">nrf_uarte_rx_amount_get</ref>  Function for getting number of bytes received in the last transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes received.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_uarte.h" line="605" column="29" bodyfile="haly/nrfy_uarte.h" bodystart="605" bodyend="611"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_uarte.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_uarte_event_enabled_clear(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_uarte_event_handle(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="56"><highlight class="normal">uint32_t<sp/>__nrfy_internal_uarte_events_process(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_uarte<sp/>UARTE<sp/>HALY</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_uarte</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>UARTE<sp/>peripheral.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**<sp/>@brief<sp/>UARTE<sp/>pins<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structnrfy__uarte__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>txd_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>TXD<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>RXD<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rts_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>RTS<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cts_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>CTS<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/><ref refid="structnrfy__uarte__pins__t" kindref="compound">nrfy_uarte_pins_t</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>@brief<sp/>UARTE<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structnrfy__uarte__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__pins__t" kindref="compound">nrfy_uarte_pins_t</ref><sp/><sp/><sp/><sp/>pins;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pin<sp/>configuration<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref><sp/>baudrate;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Baud<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref><sp/><sp/><sp/>config;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Peripheral<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_psel_cfg;<sp/></highlight><highlight class="comment">///&lt;<sp/>Skip<sp/>pin<sp/>selection<sp/>configuration.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>the<sp/>driver<sp/>does<sp/>not<sp/>modify</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>pin<sp/>select<sp/>registers<sp/>in<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Those<sp/>registers<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>externally<sp/>before<sp/>the<sp/>driver<sp/>is<sp/>initialized.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>@note<sp/>When<sp/>both<sp/>GPIO<sp/>configuration<sp/>and<sp/>pin</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>selection<sp/>are<sp/>to<sp/>be<sp/>skipped,<sp/>the<sp/>structure</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>fields<sp/>that<sp/>specify<sp/>pins<sp/>can<sp/>be<sp/>omitted,</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>as<sp/>they<sp/>are<sp/>ignored<sp/>anyway.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/><ref refid="structnrfy__uarte__config__t" kindref="compound">nrfy_uarte_config_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>an<sp/>UARTE<sp/>transfer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="structnrfy__uarte__buffer__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="structnrfy__uarte__buffer__t_1a636425f62735952fe0a02e7aa4741cea" kindref="member">p_buffer</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Buffer<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t_1a1477a3f8b894a9f948cc4179fcf649a1" kindref="member">length</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Data<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>UARTE.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>peripheral<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga979d82087b1aca1aadc7875dee27449d" kindref="member">nrfy_uarte_periph_configure</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__config__t" kindref="compound">nrfy_uarte_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" kindref="member">nrf_uarte_baudrate_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__uarte__config__t_1a425fa113d90f1d6139dec64bd1cf7021" kindref="member">baudrate</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" kindref="member">nrf_uarte_configure</ref>(p_reg,<sp/>&amp;p_config-&gt;<ref refid="structnrfy__uarte__config__t_1a4544b3d6797e09ec5528fb59cc8303a9" kindref="member">config</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_config-&gt;<ref refid="structnrfy__uarte__config__t_1adb3236aa662521b483ff0253740474f7" kindref="member">skip_psel_cfg</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__uarte__config__t_1ad8f27c12bcae1f66d9eb3289725f2715" kindref="member">pins</ref>.<ref refid="structnrfy__uarte__pins__t_1aeb4c7bdc83c9c6f01409c4f1379bbee8" kindref="member">txd_pin</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__uarte__config__t_1ad8f27c12bcae1f66d9eb3289725f2715" kindref="member">pins</ref>.<ref refid="structnrfy__uarte__pins__t_1a5bd9432078266f390539ae1a3b6c84a2" kindref="member">rxd_pin</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_config-&gt;<ref refid="structnrfy__uarte__config__t_1a4544b3d6797e09ec5528fb59cc8303a9" kindref="member">config</ref>.<ref refid="structnrf__uarte__config__t_1a087d80bdf09822a25457ed814100081d" kindref="member">hwfc</ref><sp/>==<sp/><ref refid="group__nrf__uarte__hal_1gga067ff543548e273bd1658c8746894c11a00927c92cfe376a926365e4ecdfbb512" kindref="member">NRF_UARTE_HWFC_ENABLED</ref><sp/>&amp;&amp;<sp/>!p_config-&gt;<ref refid="structnrfy__uarte__config__t_1adb3236aa662521b483ff0253740474f7" kindref="member">skip_psel_cfg</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__uarte__config__t_1ad8f27c12bcae1f66d9eb3289725f2715" kindref="member">pins</ref>.<ref refid="structnrfy__uarte__pins__t_1aafeb0fc5df5ac51aa75c6d092ad9d1ba" kindref="member">rts_pin</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__uarte__config__t_1ad8f27c12bcae1f66d9eb3289725f2715" kindref="member">pins</ref>.<ref refid="structnrfy__uarte__pins__t_1ac9f1e4978555fbe58389f38fcda15b54" kindref="member">cts_pin</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>UARTE<sp/>interrupts.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>interrupts<sp/>associated<sp/>with<sp/>the<sp/>event<sp/>mask<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga90f12e09899772ba7e26850d0c59aedd" kindref="member">nrfy_uarte_int_init</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb7e7f48f8a385142af3ae249e8a15ae" kindref="member">NRF_UARTE_EVENT_CTS</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaa9eadfafaf2bc8d8525973db6ad0fffa" kindref="member">NRF_UARTE_EVENT_NCTS</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aad82cb8f90030dfd0a66ac658a29722ec" kindref="member">NRF_UARTE_EVENT_RXDRDY</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa41438c8cc0a6dd6a3c534e25640c5f15" kindref="member">NRF_UARTE_EVENT_TXDRDY</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" kindref="member">NRF_UARTE_EVENT_ENDTX</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb747c6d6000073aff543006fb6a67bf" kindref="member">NRF_UARTE_EVENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa3088313a496175a52d7f4b5e050c7702" kindref="member">NRF_UARTE_EVENT_RXSTARTED</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa499f8441d47ff978989ed67aa6a6b27a" kindref="member">NRF_UARTE_EVENT_TXSTARTED</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_uarte_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" kindref="member">nrf_uarte_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>UARTE<sp/>interrupts.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga2d4f9644f0ffa5ab486978189331f494" kindref="member">nrfy_uarte_int_uninit</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>UARTE<sp/>events.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>buffer<sp/>associated<sp/>with<sp/>the<sp/>last<sp/>reception.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1gaebecd9466b7ce2a5466a92e5fde61a3f" kindref="member">nrfy_uarte_events_process</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_uarte_events_process(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>aborting<sp/>the<sp/>ongoing<sp/>UARTE<sp/>transmission.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>if<sp/>CPU<sp/>should<sp/>wait<sp/>for<sp/>peripheral<sp/>to<sp/>abort<sp/>transmission,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga6b3f6b4e5ff129f77e23bb85db0c845f" kindref="member">nrfy_uarte_tx_abort</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a4f014e7e6d864c697f3b501581e77d0c" kindref="member">NRF_UARTE_TASK_STOPTX</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>stopping<sp/>the<sp/>UARTE<sp/>transmitter<sp/>and<sp/>receiver.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>reception<sp/>buffer.<sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gaed589e3ef3b3569a6233fc6e5e85b79b" kindref="member">nrfy_uarte_stop</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a4f014e7e6d864c697f3b501581e77d0c" kindref="member">NRF_UARTE_TASK_STOPTX</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_uarte_events_process(p_reg,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer<sp/>&amp;&amp;<sp/>p_xfer-&gt;<ref refid="structnrfy__uarte__buffer__t_1a1477a3f8b894a9f948cc4179fcf649a1" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a0bc486fb0751337a49fa3b4570279afc" kindref="member">NRF_UARTE_TASK_STOPRX</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_uarte_events_process(p_reg,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref>),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_xfer))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>UARTE<sp/>transmission.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>for<sp/>blocking<sp/>transmission,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>occured,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Always<sp/>0<sp/>for<sp/>non-blocking<sp/>transmission.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga90dbbcb5a42ed3a1040762777d8fcf48" kindref="member">nrfy_uarte_tx_start</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12af3a09172b5dff04de632997f0f7d5a73" kindref="member">NRF_UARTE_TASK_STARTTX</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" kindref="member">NRF_UARTE_EVENT_ENDTX</ref>)<sp/>|</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__uarte_1gaebecd9466b7ce2a5466a92e5fde61a3f" kindref="member">nrfy_uarte_events_process</ref>(p_reg,<sp/>mask,<sp/>NULL);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!evt_mask);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="263"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>UARTE<sp/>reception.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>reception<sp/>buffer<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reception<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>reception.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>occured,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Always<sp/>0<sp/>for<sp/>non-blocking<sp/>reception.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga7053a6ccebab4b46a6a60ee7bfdd54c3" kindref="member">nrfy_uarte_rx_start</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12abd99d435a65192d48802b693b9acab6b" kindref="member">NRF_UARTE_TASK_STARTRX</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref>)<sp/>|</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref>)<sp/><sp/>|</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb747c6d6000073aff543006fb6a67bf" kindref="member">NRF_UARTE_EVENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__uarte_1gaebecd9466b7ce2a5466a92e5fde61a3f" kindref="member">nrfy_uarte_events_process</ref>(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!evt_mask);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>UARTE<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>UARTE<sp/>pin<sp/>configurartion<sp/>structure.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gaa99f07c448ce4ddbbe98c96b660a3f34" kindref="member">nrfy_uarte_pins_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__pins__t" kindref="compound">nrfy_uarte_pins_t</ref><sp/>*<sp/><sp/><sp/><sp/>p_pins)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__uarte__pins__t_1aeb4c7bdc83c9c6f01409c4f1379bbee8" kindref="member">txd_pin</ref><sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" kindref="member">nrf_uarte_tx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__uarte__pins__t_1a5bd9432078266f390539ae1a3b6c84a2" kindref="member">rxd_pin</ref><sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" kindref="member">nrf_uarte_rx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__uarte__pins__t_1aafeb0fc5df5ac51aa75c6d092ad9d1ba" kindref="member">rts_pin</ref><sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" kindref="member">nrf_uarte_rts_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__uarte__pins__t_1ac9f1e4978555fbe58389f38fcda15b54" kindref="member">cts_pin</ref><sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" kindref="member">nrf_uarte_cts_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disconnecting<sp/>UARTE<sp/>pins.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga112df535de86242de25879f2479c75bd" kindref="member">nrfy_uarte_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" kindref="member">nrf_uarte_txrx_pins_disconnect</ref>(p_reg);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" kindref="member">nrf_uarte_hwfc_pins_disconnect</ref>(p_reg);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gac35185925fd420b6145686e720bb7f17" kindref="member">nrfy_uarte_event_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga39641452e2e09c66292394353d149455" kindref="member">nrfy_uarte_event_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga37276340ccc49f68d9e20fb7450d044a" kindref="member">nrfy_uarte_event_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga71fbc9d9b1a7a7fb61e54af1db53e9b1" kindref="member">nrf_uarte_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="345"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_shorts_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gabe8dccd7084ae22c8c3c50900a534915" kindref="member">nrfy_uarte_shorts_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gaa95a64c55eaf1ef8c5034c701be8cc2f" kindref="member">nrf_uarte_shorts_set</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_shorts_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga69617cea915c00d77aabac9803396cfb" kindref="member">nrfy_uarte_shorts_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ret<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gacdf7d64e583ad40f2f6284080af2bb54" kindref="member">nrf_uarte_shorts_get</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_shorts_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gad1644cea5e250775f4d98af418a4381a" kindref="member">nrfy_uarte_shorts_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gaf118432d67372baf106ddebd40706ac0" kindref="member">nrf_uarte_shorts_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_shorts_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga29a741277e4ac89a77f5f46c2249bde1" kindref="member">nrfy_uarte_shorts_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga4b45795e5eb4ab6ca6bec57fef5ca900" kindref="member">nrf_uarte_shorts_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga05492f03d5600f6e4eff2d742f2883fe" kindref="member">nrfy_uarte_int_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" kindref="member">nrf_uarte_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga4470c30a5c56413fc98b238fd3d72153" kindref="member">nrfy_uarte_int_enable_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga90865440e200499623f4cc89e01db83d" kindref="member">nrf_uarte_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga2cfc5c13cbe90c67cb30923fc2b10615" kindref="member">nrfy_uarte_int_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga9b7a75ee458272927873b753c7f0d3ad" kindref="member">nrf_uarte_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga6763f776ae53e3d2259d5b5b59bb95f0" kindref="member">nrfy_uarte_subscribe_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga122e4a898f64c58603ffe58ebe9f0828" kindref="member">nrf_uarte_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga08372d9855792e847ccbcd8c2590bd5e" kindref="member">nrfy_uarte_subscribe_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga615374471fc4545e9b26e69963c37d95" kindref="member">nrf_uarte_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gae1de286621e46fbbe2a11ddac1c8246c" kindref="member">nrfy_uarte_publish_set</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga92107bd9f425356f88682a286ba480e9" kindref="member">nrf_uarte_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="426"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga34acc91611f5628b37113248a08c8923" kindref="member">nrfy_uarte_publish_clear</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gacfa67b79ba293492c74d1e670106fcc8" kindref="member">nrf_uarte_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_errorsrc_get_and_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1gac2108c270aab2499f5d5f9ce863306f2" kindref="member">nrfy_uarte_errorsrc_get_and_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>errorsrc<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gafb0484282cce3fb422e1179cbbede5e9" kindref="member">nrf_uarte_errorsrc_get_and_clear</ref>(p_reg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorsrc;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="443"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga6bcb0c05cd2ab3e68bc9dc12a44d1370" kindref="member">nrfy_uarte_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga070849bf37e459b44758bfe6cd63859b" kindref="member">nrf_uarte_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gaf184b3780a869730847cb420403120eb" kindref="member">nrfy_uarte_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gac6629a9ad9c7acbf36515e484a45d166" kindref="member">nrf_uarte_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga52931d5a372f95ffac839c7bc7d9b8d4" kindref="member">nrfy_uarte_enable_check</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gae8d7bc802477ebd1b07539e0c9ec8ff1" kindref="member">nrf_uarte_enable_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_txrx_pins_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga22058a3eec02a17999a81e20d444476f" kindref="member">nrfy_uarte_txrx_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseltxd,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrxd)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>(p_reg,<sp/>pseltxd,<sp/>pselrxd);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="475"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_txrx_pins_disconnect}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gad9ac37a28348ee1145d9725f462fe5a5" kindref="member">nrfy_uarte_txrx_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" kindref="member">nrf_uarte_txrx_pins_disconnect</ref>(p_reg);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_tx_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga4c6a374712c3e0618b9a9c476ce89013" kindref="member">nrfy_uarte_tx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" kindref="member">nrf_uarte_tx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_rx_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1gab235c9aca37903fada1b4604a0b36669" kindref="member">nrfy_uarte_rx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" kindref="member">nrf_uarte_rx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="500"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_rts_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga027de3256d24a364959e6e788ce8e009" kindref="member">nrfy_uarte_rts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" kindref="member">nrf_uarte_rts_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="509"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_cts_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1gadb566e156afc96986faf78cce42e434f" kindref="member">nrfy_uarte_cts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" kindref="member">nrf_uarte_cts_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_hwfc_pins_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga3f18db088d6b217ddbfd76d1b5804553" kindref="member">nrfy_uarte_hwfc_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrts,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselcts)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>(p_reg,<sp/>pselrts,<sp/>pselcts);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_hwfc_pins_disconnect}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gaab6357077a739b9648ed36322f760b6a" kindref="member">nrfy_uarte_hwfc_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" kindref="member">nrf_uarte_hwfc_pins_disconnect</ref>(p_reg);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga91def4f30e12d3c3ccfcb6e96dd54593" kindref="member">nrfy_uarte_task_trigger</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga0af9b7f3ea2eafea1271efca6ca45826" kindref="member">nrfy_uarte_task_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaf3123d724a34655489ff9a353f24dd10" kindref="member">nrf_uarte_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_configure}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gac7f28719c676cc6c6ac2b1706fc1953d" kindref="member">nrfy_uarte_configure</ref>(NRF_UARTE_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_cfg)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" kindref="member">nrf_uarte_configure</ref>(p_reg,<sp/>p_cfg);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_baudrate_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gad05148d6ec5ae09873e629118ec27176" kindref="member">nrfy_uarte_baudrate_set</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref><sp/>baudrate)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" kindref="member">nrf_uarte_baudrate_set</ref>(p_reg,<sp/>baudrate);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_tx_buffer_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1gaa67a7a6fea422fa068623387a1b92e5f" kindref="member">nrfy_uarte_tx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_buffer)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_buffer,<sp/>length);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gab54534a45e185cee807e27b4b2a77d75" kindref="member">nrf_uarte_tx_buffer_set</ref>(p_reg,<sp/>p_buffer,<sp/>length);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="577"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_tx_buffer_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__nrfy__uarte_1gaf15b967fc119bb1a83f1e0d58994a87e" kindref="member">nrfy_uarte_tx_buffer_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>ptr<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1gaa2591b6842b0ef1033a095e9484d0cd8" kindref="member">nrf_uarte_tx_buffer_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="586"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_tx_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga06b6f63f0b14a551ada08b2d9416c8de" kindref="member">nrfy_uarte_tx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>amount<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga4b52b1f7133577c0cf017143d5dc5ee0" kindref="member">nrf_uarte_tx_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="595"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_rx_buffer_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__uarte_1ga48e82453a4eaba4bdf563604a1bbc238" kindref="member">nrfy_uarte_rx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1bb25747646dd76f76f5939cc332abc9" kindref="member">nrf_uarte_rx_buffer_set</ref>(p_reg,<sp/>p_buffer,<sp/>length);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="604"><highlight class="comment">/**<sp/>@refhal{nrf_uarte_rx_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__uarte_1ga2e010b0c600aff747d464d441ec12e87" kindref="member">nrfy_uarte_rx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>amount<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" kindref="member">nrf_uarte_rx_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_uarte_event_enabled_clear(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_uarte_event_handle(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="642"><highlight class="normal">uint32_t<sp/>__nrfy_internal_uarte_events_process(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb7e7f48f8a385142af3ae249e8a15ae" kindref="member">NRF_UARTE_EVENT_CTS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaa9eadfafaf2bc8d8525973db6ad0fffa" kindref="member">NRF_UARTE_EVENT_NCTS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aad82cb8f90030dfd0a66ac658a29722ec" kindref="member">NRF_UARTE_EVENT_RXDRDY</ref>,<sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref>,<sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa41438c8cc0a6dd6a3c534e25640c5f15" kindref="member">NRF_UARTE_EVENT_TXDRDY</ref>,<sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" kindref="member">NRF_UARTE_EVENT_ENDTX</ref>,<sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb747c6d6000073aff543006fb6a67bf" kindref="member">NRF_UARTE_EVENT_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa3088313a496175a52d7f4b5e050c7702" kindref="member">NRF_UARTE_EVENT_RXSTARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa499f8441d47ff978989ed67aa6a6b27a" kindref="member">NRF_UARTE_EVENT_TXSTARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_uarte_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref>))</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__uarte__buffer__t_1a636425f62735952fe0a02e7aa4741cea" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__uarte__buffer__t_1a1477a3f8b894a9f948cc4179fcf649a1" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref>))</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" kindref="member">nrf_uarte_rx_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__uarte__buffer__t_1a636425f62735952fe0a02e7aa4741cea" kindref="member">p_buffer</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_uarte.h"/>
  </compounddef>
</doxygen>
