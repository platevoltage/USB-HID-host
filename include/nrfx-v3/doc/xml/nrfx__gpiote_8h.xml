<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfx__gpiote_8h" kind="file" language="C++">
    <compoundname>nrfx_gpiote.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrfy__gpiote_8h" local="no">haly/nrfy_gpiote.h</includes>
    <includes refid="nrfy__gpio_8h" local="no">haly/nrfy_gpio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>drivers/include/nrfx_gpiote.h</label>
        <link refid="nrfx__gpiote_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfx__gpiote__t" prot="public">nrfx_gpiote_t</innerclass>
    <innerclass refid="structnrfx__gpiote__task__config__t" prot="public">nrfx_gpiote_task_config_t</innerclass>
    <innerclass refid="structnrfx__gpiote__output__config__t" prot="public">nrfx_gpiote_output_config_t</innerclass>
    <innerclass refid="structnrfx__gpiote__trigger__config__t" prot="public">nrfx_gpiote_trigger_config_t</innerclass>
    <innerclass refid="structnrfx__gpiote__handler__config__t" prot="public">nrfx_gpiote_handler_config_t</innerclass>
    <innerclass refid="structnrfx__gpiote__input__config__t" prot="public">nrfx_gpiote_input_config_t</innerclass>
    <innerclass refid="structnrfx__gpiote__input__pin__config__t" prot="public">nrfx_gpiote_input_pin_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfx__gpiote_1ga0db64009bc074aeea1981c8a933703ff" prot="public" static="no">
        <name>NRFX_GPIOTE_INSTANCE</name>
        <param><defname>id</defname></param>
        <initializer>{                                                            \
    .p_reg        = <ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, GPIOTE, id),           \
    .drv_inst_idx = <ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRFX_GPIOTE, id, _INST_IDX), \
}</initializer>
        <briefdescription>
<para>Macro for creating an instance of the GPIOTE driver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="73" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__gpiote_1ga8e3cf3be0beef58b9926e4c307d0cc76" prot="public" static="no">
        <name>NRFX_GPIOTE_DEFAULT_OUTPUT_CONFIG</name>
        <initializer>{                                                   \
    .drive = <ref refid="group__nrf__gpio__hal_1ggabb86c9557487ac1eda0cec28f258a725a7430a2bb9ee97396d618b1de067add5f" kindref="member">NRF_GPIO_PIN_S0S1</ref>,                     \
    .input_connect = <ref refid="group__nrf__gpio__hal_1gga94d8c546b86a236b5f7636703b8f5fb3a42298cb252f14dd48d55f57c781cdec7" kindref="member">NRF_GPIO_PIN_INPUT_DISCONNECT</ref>, \
    .pull = <ref refid="group__nrf__gpio__hal_1gga07e0c8c0b30499cf0a7b79dbe62d3fcca13ffcb94eb78be866c66b5f5b516af65" kindref="member">NRF_GPIO_PIN_NOPULL</ref>                     \
}</initializer>
        <briefdescription>
<para>Output pin default configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="160" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__gpiote_1ga8f9c776bffc87fd21797819ae0724b60" prot="public" static="no">
        <name>NRFX_GPIOTE_APP_CHANNELS_MASK</name>
        <param><defname>idx</defname></param>
        <initializer>            (<ref refid="group__nrfx__common_1ga5297a05d3568750308e0f3e33074235c" kindref="member">NRFX_BIT_MASK</ref>(<ref refid="group__nrfx__common_1gaa78d21b07d22f7a4bfbd1feda51ef1f4" kindref="member">NRFX_CONCAT_3</ref>(GPIOTE, idx, _CH_NUM)) &amp; \
             ~(<ref refid="group__nrfx__common_1gaa78d21b07d22f7a4bfbd1feda51ef1f4" kindref="member">NRFX_CONCAT_3</ref>(NRFX_GPIOTE, idx, _CHANNELS_USED)))</initializer>
        <briefdescription>
<para>Bitfield representing all GPIOTE channels available to the application for the specified GPIOTE instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIOTE instance index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="172" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__gpiote_1gaa42b6f15ea18389b26a4859c5e44a0fd" prot="public" static="no">
        <name>NRFX_GPIOTE_INST_HANDLER_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__common_1gaa78d21b07d22f7a4bfbd1feda51ef1f4" kindref="member">NRFX_CONCAT_3</ref>(nrfx_gpiote_, idx, _irq_handler)</initializer>
        <briefdescription>
<para>Macro returning GPIOTE interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIOTE index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Interrupt handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="183" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__gpiote_1ga1aba8c01608409e7efc2e2c5d476ed7f" prot="public" static="no">
        <name>NRFX_GPIOTE_DEFAULT_PULL_CONFIG</name>
        <initializer><ref refid="group__nrf__gpio__hal_1gga07e0c8c0b30499cf0a7b79dbe62d3fcca13ffcb94eb78be866c66b5f5b516af65" kindref="member">NRF_GPIO_PIN_NOPULL</ref></initializer>
        <briefdescription>
<para>Input pin pull default configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="198" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrfx__gpiote_1ga12f2730a43e19cc57ebddecc459136c5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_gpiote_trigger_t</name>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5ad5dc717549e84bc53efd0e61f1934796" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_NONE</name>
          <briefdescription>
<para>No trigger on a pin. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a7fcf7cb9546d3ebe63c9eae376f41705" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_LOTOHI</name>
          <initializer>= GPIOTE_CONFIG_POLARITY_LoToHi</initializer>
          <briefdescription>
<para>Low to high edge trigger. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a805cd71271fb2c56ed5068afa527148c" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_HITOLO</name>
          <briefdescription>
<para>High to low edge trigger. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5ad0417fef083caf34f46da93931382180" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_TOGGLE</name>
          <briefdescription>
<para>Edge toggle trigger. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a485b6cc1ace20dc76e8005a5d8a81874" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_LOW</name>
          <briefdescription>
<para>Level low trigger. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a1a55bf97ddb9f61fcffc1e20d7c55c88" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_HIGH</name>
          <briefdescription>
<para>Level high trigger. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a785b15dde9a2cf0c46f5775a4e2c751a" prot="public">
          <name>NRFX_GPIOTE_TRIGGER_MAX</name>
          <briefdescription>
<para>Triggering options count. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Triggering options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="83" column="1" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="84" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t nrfx_gpiote_pin_t</definition>
        <argsstring></argsstring>
        <name>nrfx_gpiote_pin_t</name>
        <briefdescription>
<para>Pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="80" column="18" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* nrfx_gpiote_interrupt_handler_t) (nrfx_gpiote_pin_t pin, nrfx_gpiote_trigger_t trigger, void *p_context)</definition>
        <argsstring>)(nrfx_gpiote_pin_t pin, nrfx_gpiote_trigger_t trigger, void *p_context)</argsstring>
        <name>nrfx_gpiote_interrupt_handler_t</name>
        <briefdescription>
<para>Pin interrupt handler prototype. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin that triggered this event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>Trigger that led to this event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>User context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="101" column="9" bodyfile="drivers/include/nrfx_gpiote.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__gpiote_1ga67e74b6ed6625ac8849853f095dada01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrfx_gpiote_in_is_set</definition>
        <argsstring>(nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_in_is_set</name>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for checking if a GPIOTE input pin is set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The input pin is set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The input pin is not set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="193" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gaa3d1c62005297475db36587a6f4e798d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_init</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, uint8_t interrupt_priority)</argsstring>
        <name>nrfx_gpiote_init</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>interrupt_priority</declname>
        </param>
        <briefdescription>
<para>Function for initializing the GPIOTE driver instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_ALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver is already initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_STATE</parametername>
</parameternamelist>
<parameterdescription>
<para>The driver is already initialized. Deprecated - use <ref refid="group__nrfx__error__codes_1gga2449720f8fa17b22243218068459a24badc3fc33e8a7dc8b9a9547fe07b437efd" kindref="member">NRFX_ERROR_ALREADY</ref> instead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="211" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="211" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gabbba998dfdcd769ca89f73f62565a7ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrfx_gpiote_init_check</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance)</argsstring>
        <name>nrfx_gpiote_init_check</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <briefdescription>
<para>Function for checking if the GPIOTE driver instance is initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>The GPIOTE driver instance is a shared module. Therefore, check if the module is already initialized and skip initialization if it is.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The module is already initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The module is not initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="224" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="224" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gaaecafd630dd1c86c2610da5ea4a7daaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_uninit</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance)</argsstring>
        <name>nrfx_gpiote_uninit</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the GPIOTE driver instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="231" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="231" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga8650db1f5f5bcd7e3709552f16b1ac20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_channel_alloc</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, uint8_t *p_channel)</argsstring>
        <name>nrfx_gpiote_channel_alloc</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
<para>Function for allocating a GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allocates the first unused GPIOTE channel from pool defined in <ref refid="group__nrfx__gpiote_1ga8f9c776bffc87fd21797819ae0724b60" kindref="member">NRFX_GPIOTE_APP_CHANNELS_MASK</ref>.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga92160c3eaf43857deebeb9e9c063378c" kindref="member">nrfx_flag32_alloc</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Routines that allocate and free the GPIOTE channels are independent from the rest of the driver. In particular, the driver does not need to be initialized when this function is called.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the GPIOTE channel that has been allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel to be used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="249" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="249" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga45fb52b42b6044a5231ca31a04dcbe31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_channel_free</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, uint8_t channel)</argsstring>
        <name>nrfx_gpiote_channel_free</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for freeing a GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function frees a GPIOTE channel that was allocated using <ref refid="group__nrfx__gpiote_1ga8650db1f5f5bcd7e3709552f16b1ac20" kindref="member">nrfx_gpiote_channel_alloc</ref>.</para>
<para><simplesect kind="note"><para>Function is thread safe as it uses <ref refid="group__nrfx__flag32__allocator_1ga62a433fd3eaec5dbf39b9cebcb7998be" kindref="member">nrfx_flag32_free</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Routines that allocate and free the GPIOTE channels are independent from the rest of the driver. In particular, the driver does not need to be initialized when this function is called.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIOTE channel to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not user-configurable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="267" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="267" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga01f7439b68303c9f2e3cb412065a6fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_input_configure</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin, nrfx_gpiote_input_pin_config_t const *p_config)</argsstring>
        <name>nrfx_gpiote_input_configure</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="structnrfx__gpiote__input__pin__config__t" kindref="compound">nrfx_gpiote_input_pin_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the specified input pin and input event/interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para>Prior to calling this function pin can be uninitialized or configured as input or output. However, following transitions and configurations are invalid and result in error returned by the function:</para>
<para><itemizedlist>
<listitem><para>Setting level trigger (e.g. <ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a1a55bf97ddb9f61fcffc1e20d7c55c88" kindref="member">NRFX_GPIOTE_TRIGGER_HIGH</ref>) and using GPIOTE channel for the same pin.</para>
</listitem><listitem><para>Reconfiguring pin to input (<computeroutput>p_config-&gt;p_pull_config</computeroutput> not NULL) when pin was configured to use GPIOTE task. Prior to that, task must be disabled by configuring it with polarity set to <ref refid="group__nrf__gpiote__hal_1gga9a424db0997c11092f8f69d52155dd9dafe99b1b050f3c47625e588a0f14085c5" kindref="member">NRF_GPIOTE_POLARITY_NONE</ref>.</para>
</listitem><listitem><para>Configuring trigger using GPIOTE channel for pin previously configured as output pin. Only sensing can be used for an output pin.</para>
</listitem></itemizedlist>
</para>
<para>Function can be used to configure trigger and handler for sensing input changes on an output pin. In that case, prior to that output pin must be configured with input buffer connected. In that case <computeroutput>p_config-&gt;p_pull_config</computeroutput> is NULL to avoid reconfiguration of the pin.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with input pin configuration.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="296" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="296" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gabb841d0dcd3987241857601df6515748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_output_configure</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin, nrfx_gpiote_output_config_t const *p_config, nrfx_gpiote_task_config_t const *p_task_config)</argsstring>
        <name>nrfx_gpiote_output_configure</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="structnrfx__gpiote__output__config__t" kindref="compound">nrfx_gpiote_output_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <param>
          <type><ref refid="structnrfx__gpiote__task__config__t" kindref="compound">nrfx_gpiote_task_config_t</ref> const *</type>
          <declname>p_task_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the specified output pin to be used by the driver. </para>
        </briefdescription>
        <detaileddescription>
<para>Prior to calling this function pin can be uninitialized or configured as input or output. However, following transitions and configurations are invalid and result in error returned by the function:</para>
<para><itemizedlist>
<listitem><para>Reconfiguring pin to output when pin was configured as input with trigger using GPIOTE channel. Prior to that, trigger must be disabled by configuring it as <ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5ad5dc717549e84bc53efd0e61f1934796" kindref="member">NRFX_GPIOTE_TRIGGER_NONE</ref>.</para>
</listitem><listitem><para>Configuring pin as output without input buffer connected when prior to that trigger was configured. In that case input buffer must be connected.</para>
</listitem><listitem><para>Configuring GPIOTE task for pin which was previously configured as input. Before using GPIOTE task pin must be configured as output by providing <computeroutput>p_config</computeroutput>.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin configuration. If NULL pin configuration is not applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_task_config</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIOTE task configuration. If NULL task is not used.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="323" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="323" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gac2197cc0bf1fa39a1ad2474f1074740d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_pin_uninit</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_pin_uninit</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for deinitializing the specified pin. </para>
        </briefdescription>
        <detaileddescription>
<para>Specified pin and associated GPIOTE channel are restored to the default configuration.</para>
<para><simplesect kind="warning"><para>GPIOTE channel used by the pin is not freed.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Uninitialization was successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin not used by the driver. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="341" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="341" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gacdbd1b869a91b829dc865498af6cbcff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_trigger_enable</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin, bool int_enable)</argsstring>
        <name>nrfx_gpiote_trigger_enable</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>int_enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling trigger for the given pin. </para>
        </briefdescription>
        <detaileddescription>
<para>When GPIOTE event is used trigger can be enabled without enabling interrupt, e.g. for PPI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True to enable the interrupt. Must be true when sensing is used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="353" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="353" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga5b4e63198611af889fd9969b1869b2f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_trigger_disable</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_trigger_disable</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for disabling trigger for the given pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="363" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="363" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga24736cd1a8c9788130d98c9968047b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_global_callback_set</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_interrupt_handler_t handler, void *p_context)</argsstring>
        <name>nrfx_gpiote_global_callback_set</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" kindref="member">nrfx_gpiote_interrupt_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p_context</declname>
        </param>
        <briefdescription>
<para>Set global callback called for each event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Global handler. Can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context passed to the handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="372" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="372" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga24552e387ba31db8964b0f62b1d509a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gpiote_channel_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin, uint8_t *p_channel)</argsstring>
        <name>nrfx_gpiote_channel_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
<para>Function for retrieving Task/Event channel index associated with the given pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Location to write the channel index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel successfully written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin is not configured or not using Task or Event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="386" column="12" declfile="drivers/include/nrfx_gpiote.h" declline="386" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga06fe0af7f06bfaad25e89be175e15b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gpiote_channels_number_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance)</argsstring>
        <name>nrfx_gpiote_channels_number_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <briefdescription>
<para>Function for retrieving number of channels for specified GPIOTE instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of channels for specified GPIOTE instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="397" column="10" declfile="drivers/include/nrfx_gpiote.h" declline="397" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga2830029143234f5fcfcbe20d1fee9c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_set</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_set</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for setting a GPIOTE output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="405" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="405" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga13247899551001a8aac2a78f825830de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_clear</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_clear</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for clearing a GPIOTE output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="413" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="413" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga0bcdd0e314959e8043101b332bbc105c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_toggle</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_toggle</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for toggling a GPIOTE output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="421" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="421" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga02b1fa48af27b4138e9208ea3651cbf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_task_enable</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_task_enable</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for enabling a GPIOTE output pin task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="429" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="429" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga637f75bf2055efa238b444ed6713ce90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_task_disable</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_task_disable</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for disabling a GPIOTE output pin task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="437" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="437" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gaea03dfc964de3e650a0daa58f666d9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>nrf_gpiote_task_t nrfx_gpiote_out_task_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_task_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the OUT task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned task identifier can be used within <ref refid="group__nrf__gpiote__hal" kindref="compound">GPIOTE HAL</ref>, for example, to configure a DPPI channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OUT task associated with the specified output pin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="450" column="19" declfile="drivers/include/nrfx_gpiote.h" declline="450" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga15d43ac83f4717c839d3e22d2cda1299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gpiote_out_task_address_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_task_address_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the OUT task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of OUT task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="460" column="10" declfile="drivers/include/nrfx_gpiote.h" declline="460" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga22651ebd97a68dcfa81e4033282b6cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>nrf_gpiote_task_t nrfx_gpiote_set_task_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_set_task_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the SET task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned task identifier can be used within <ref refid="group__nrf__gpiote__hal" kindref="compound">GPIOTE HAL</ref>, for example, to configure a DPPI channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SET task associated with the specified output pin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="474" column="19" declfile="drivers/include/nrfx_gpiote.h" declline="474" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga9cdccafd28233ef75158a70a3561200a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gpiote_set_task_address_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_set_task_address_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the SET task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of SET task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="484" column="10" declfile="drivers/include/nrfx_gpiote.h" declline="484" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga520016d3df5cc917f0599cf67c0d2e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>nrf_gpiote_task_t nrfx_gpiote_clr_task_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_clr_task_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLR task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned task identifier can be used within <ref refid="group__nrf__gpiote__hal" kindref="compound">GPIOTE HAL</ref>, for example, to configure a DPPI channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CLR task associated with the specified output pin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="499" column="19" declfile="drivers/include/nrfx_gpiote.h" declline="499" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga89f350146eec2c0237402ce8b3555171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gpiote_clr_task_address_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_clr_task_address_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the SET task for the specified output pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of CLR task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="509" column="10" declfile="drivers/include/nrfx_gpiote.h" declline="509" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gabd2f054462f121d758dcd7c6e3b0f88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
        <definition>nrf_gpiote_event_t nrfx_gpiote_in_event_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_in_event_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the GPIOTE event for the specified input pin. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned event identifier can be used within <ref refid="group__nrf__gpiote__hal" kindref="compound">GPIOTE HAL</ref>, for example, to configure a DPPI channel. If the pin is configured to use low-accuracy mode, the PORT event is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Event associated with the specified input pin. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="525" column="20" declfile="drivers/include/nrfx_gpiote.h" declline="525" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gab687dd7ae8414c5d7713908be257b076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gpiote_in_event_address_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_in_event_address_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a GPIOTE input pin event. </para>
        </briefdescription>
        <detaileddescription>
<para>If the pin is configured to use low-accuracy mode, the address of the PORT event is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified input pin event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="537" column="10" declfile="drivers/include/nrfx_gpiote.h" declline="537" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gaaf7810b8ce54583693312dab4e50a510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_task_force</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin, uint8_t state)</argsstring>
        <name>nrfx_gpiote_out_task_force</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Function for forcing a specific state on the pin configured as task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="546" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="546" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga52dff40b255e3911b3744844a2c03124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_out_task_trigger</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_out_task_trigger</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for triggering the task OUT manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="556" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="556" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga53f9ac591fc2e985c947e5bb3d0a2d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_set_task_trigger</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_set_task_trigger</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for triggering the task SET manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="565" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="565" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1ga7c85e09b378f874e3ff95a3d5ca55b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gpiote_clr_task_trigger</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrfx_gpiote_pin_t pin)</argsstring>
        <name>nrfx_gpiote_clr_task_trigger</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Function for triggering the task CLR manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="575" column="6" declfile="drivers/include/nrfx_gpiote.h" declline="575" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gad7bf31fef85fcbae45d517541d643a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE void</type>
        <definition>NRFX_STATIC_INLINE void nrfx_gpiote_latency_set</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance, nrf_gpiote_latency_t latency)</argsstring>
        <name>nrfx_gpiote_latency_set</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref></type>
          <declname>latency</declname>
        </param>
        <briefdescription>
<para>Function for setting the latency mode for a given GPIOTE instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Available for event mode with rising or falling edge detection on the pin. Toggle task mode can only be used with low latency mode setting.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Latency mode to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="588" column="25" declfile="drivers/include/nrfx_gpiote.h" declline="588" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gpiote_1gab1d26bf3718105f843470175b00b5376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFX_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref></type>
        <definition>NRFX_STATIC_INLINE nrf_gpiote_latency_t nrfx_gpiote_latency_get</definition>
        <argsstring>(nrfx_gpiote_t const *p_instance)</argsstring>
        <name>nrfx_gpiote_latency_get</name>
        <param>
          <type><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <briefdescription>
<para>Function for getting the latency mode for a given GPIOTE instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the driver instance structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latency mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_gpiote.h" line="598" column="41" declfile="drivers/include/nrfx_gpiote.h" declline="598" declcolumn="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_GPIOTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;haly/nrfy_gpiote.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;haly/nrfy_gpio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>On<sp/>devices<sp/>with<sp/>single<sp/>instance<sp/>(with<sp/>no<sp/>ID)<sp/>use<sp/>instance<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF_GPIOTE)<sp/>&amp;&amp;<sp/>defined(NRFX_GPIOTE_ENABLED)<sp/>&amp;&amp;<sp/>!defined(NRFX_GPIOTE0_ENABLED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE0_ENABLED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfx_gpiote<sp/>GPIOTE<sp/>driver</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_gpiote</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>GPIO<sp/>Task<sp/>Event<sp/>(GPIOTE)<sp/>peripheral<sp/>driver.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">/**<sp/>@brief<sp/>Data<sp/>structure<sp/>of<sp/>the<sp/>GPIO<sp/>tasks<sp/>and<sp/>events<sp/>(GPIOTE)<sp/>driver<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structnrfx__gpiote__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_GPIOTE_Type<sp/>*<sp/>p_reg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>a<sp/>structure<sp/>containing<sp/>GPIOTE<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drv_inst_idx;<sp/></highlight><highlight class="comment">///&lt;<sp/>Index<sp/>of<sp/>the<sp/>driver<sp/>instance.<sp/>For<sp/>internal<sp/>use<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__NRFX_DOXYGEN__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>List<sp/>all<sp/>enabled<sp/>driver<sp/>instances<sp/>(in<sp/>the<sp/>format<sp/>NRFX_\&lt;instance_name\&gt;_INST_IDX).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__common_1ga97a94e1334c4262979cb718e0f5e6cec" kindref="member">NRFX_INSTANCE_ENUM_LIST</ref>(GPIOTE)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>NRFX_GPIOTE_ENABLED_COUNT</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>creating<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>GPIOTE<sp/>driver.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_INSTANCE(id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NRFX_CONCAT(NRF_,<sp/>GPIOTE,<sp/>id),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.drv_inst_idx<sp/>=<sp/>NRFX_CONCAT(NRFX_GPIOTE,<sp/>id,<sp/>_INST_IDX),<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**<sp/>@brief<sp/>Pin.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Triggering<sp/>options.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5ad5dc717549e84bc53efd0e61f1934796" kindref="member">NRFX_GPIOTE_TRIGGER_NONE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>No<sp/>trigger<sp/>on<sp/>a<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a7fcf7cb9546d3ebe63c9eae376f41705" kindref="member">NRFX_GPIOTE_TRIGGER_LOTOHI</ref><sp/>=<sp/>GPIOTE_CONFIG_POLARITY_LoToHi,<sp/></highlight><highlight class="comment">///&lt;<sp/>Low<sp/>to<sp/>high<sp/>edge<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a805cd71271fb2c56ed5068afa527148c" kindref="member">NRFX_GPIOTE_TRIGGER_HITOLO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>High<sp/>to<sp/>low<sp/>edge<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5ad0417fef083caf34f46da93931382180" kindref="member">NRFX_GPIOTE_TRIGGER_TOGGLE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Edge<sp/>toggle<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a485b6cc1ace20dc76e8005a5d8a81874" kindref="member">NRFX_GPIOTE_TRIGGER_LOW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Level<sp/>low<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a1a55bf97ddb9f61fcffc1e20d7c55c88" kindref="member">NRFX_GPIOTE_TRIGGER_HIGH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Level<sp/>high<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gga12f2730a43e19cc57ebddecc459136c5a785b15dde9a2cf0c46f5775a4e2c751a" kindref="member">NRFX_GPIOTE_TRIGGER_MAX</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Triggering<sp/>options<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><ref refid="group__nrfx__gpiote_1ga12f2730a43e19cc57ebddecc459136c5" kindref="member">nrfx_gpiote_trigger_t</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Pin<sp/>interrupt<sp/>handler<sp/>prototype.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>that<sp/>triggered<sp/>this<sp/>event.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>trigger<sp/><sp/><sp/>Trigger<sp/>that<sp/>led<sp/>to<sp/>this<sp/>event.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_context<sp/>User<sp/>context.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" kindref="member">nrfx_gpiote_interrupt_handler_t</ref>)(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga12f2730a43e19cc57ebddecc459136c5" kindref="member">nrfx_gpiote_trigger_t</ref><sp/>trigger,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_context);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>configuring<sp/>a<sp/>GPIOTE<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structnrfx__gpiote__task__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_ch;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>GPIOTE<sp/>channel<sp/>to<sp/>be<sp/>used.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Set<sp/>to<sp/>value<sp/>allocated<sp/>using</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>@ref<sp/>nrfx_gpiote_channel_alloc.<sp/>It<sp/>is<sp/>a<sp/>user</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>responsibility<sp/>to<sp/>free<sp/>the<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpiote__hal_1ga9a424db0997c11092f8f69d52155dd9d" kindref="member">nrf_gpiote_polarity_t</ref><sp/>polarity;<sp/></highlight><highlight class="comment">///&lt;<sp/>Task<sp/>polarity<sp/>configuration.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>@ref<sp/>NRF_GPIOTE_POLARITY_NONE<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>disable<sp/>previously<sp/>configured<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpiote__hal_1gab280bbb7269ab98a97e7b47d906ef9aa" kindref="member">nrf_gpiote_outinit_t</ref><sp/><sp/>init_val;<sp/></highlight><highlight class="comment">///&lt;<sp/>Initial<sp/>pin<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__task__config__t" kindref="compound">nrfx_gpiote_task_config_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>configuring<sp/>an<sp/>output<sp/>pin.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structnrfx__gpiote__output__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpio__hal_1gabb86c9557487ac1eda0cec28f258a725" kindref="member">nrf_gpio_pin_drive_t</ref><sp/>drive;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Drive<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpio__hal_1ga94d8c546b86a236b5f7636703b8f5fb3" kindref="member">nrf_gpio_pin_input_t</ref><sp/>input_connect;<sp/></highlight><highlight class="comment">///&lt;<sp/>Input<sp/>buffer<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpio__hal_1ga07e0c8c0b30499cf0a7b79dbe62d3fcc" kindref="member">nrf_gpio_pin_pull_t</ref><sp/><sp/>pull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pull<sp/>configuration.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Pull<sp/>setting<sp/>is<sp/>used<sp/>together<sp/>with</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>drive<sp/>configurations<sp/>D0<sp/>and<sp/>D1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__output__config__t" kindref="compound">nrfx_gpiote_output_config_t</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>configuring<sp/>pin<sp/>interrupt/event.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structnrfx__gpiote__trigger__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga12f2730a43e19cc57ebddecc459136c5" kindref="member">nrfx_gpiote_trigger_t</ref><sp/>trigger;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Specify<sp/>trigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_in_channel;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>GPIOTE<sp/>channel<sp/>for<sp/>IN<sp/>event.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>If<sp/>NULL,<sp/>the<sp/>sensing<sp/>mechanism<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>instead.<sp/>Note<sp/>that<sp/>when<sp/>channel<sp/>is<sp/>provided</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>only<sp/>edge<sp/>triggering<sp/>can<sp/>be<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__trigger__config__t" kindref="compound">nrfx_gpiote_trigger_config_t</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>configuring<sp/>a<sp/>pin<sp/>interrupt<sp/>handler.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structnrfx__gpiote__handler__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" kindref="member">nrfx_gpiote_interrupt_handler_t</ref><sp/>handler;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>User<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_context;<sp/></highlight><highlight class="comment">///&lt;<sp/>Context<sp/>passed<sp/>to<sp/>the<sp/>event<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__handler__config__t" kindref="compound">nrfx_gpiote_handler_config_t</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">/**<sp/>@brief<sp/>@deprecated<sp/>Structure<sp/>for<sp/>configuring<sp/>an<sp/>input<sp/>pin.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structnrfx__gpiote__input__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpio__hal_1ga07e0c8c0b30499cf0a7b79dbe62d3fcc" kindref="member">nrf_gpio_pin_pull_t</ref><sp/>pull;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pull<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__input__config__t" kindref="compound">nrfx_gpiote_input_config_t</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>configuring<sp/>an<sp/>input<sp/>pin.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structnrfx__gpiote__input__pin__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpio__hal_1ga07e0c8c0b30499cf0a7b79dbe62d3fcc" kindref="member">nrf_gpio_pin_pull_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pull_config;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pull<sp/>configuration.<sp/>If<sp/>NULL,<sp/>the<sp/>current<sp/>configuration<sp/>is<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__trigger__config__t" kindref="compound">nrfx_gpiote_trigger_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_trigger_config;<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt/event<sp/>configuration.<sp/>If<sp/>NULL,<sp/>the<sp/>current<sp/>configuration<sp/>is<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__handler__config__t" kindref="compound">nrfx_gpiote_handler_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_handler_config;<sp/></highlight><highlight class="comment">///&lt;<sp/>Handler<sp/>configuration.<sp/>If<sp/>NULL<sp/>it<sp/>is<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/><ref refid="structnrfx__gpiote__input__pin__config__t" kindref="compound">nrfx_gpiote_input_pin_config_t</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**<sp/>@brief<sp/>Output<sp/>pin<sp/>default<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_DEFAULT_OUTPUT_CONFIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.drive<sp/>=<sp/>NRF_GPIO_PIN_S0S1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.input_connect<sp/>=<sp/>NRF_GPIO_PIN_INPUT_DISCONNECT,<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.pull<sp/>=<sp/>NRF_GPIO_PIN_NOPULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">/**<sp/>@brief<sp/>Bitfield<sp/>representing<sp/>all<sp/>GPIOTE<sp/>channels<sp/>available<sp/>to<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>specified<sp/>GPIOTE<sp/>instance.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/>GPIOTE<sp/>instance<sp/>index.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_APP_CHANNELS_MASK(idx)<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NRFX_BIT_MASK(NRFX_CONCAT_3(GPIOTE,<sp/>idx,<sp/>_CH_NUM))<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~(NRFX_CONCAT_3(NRFX_GPIOTE,<sp/>idx,<sp/>_CHANNELS_USED)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>returning<sp/>GPIOTE<sp/>interrupt<sp/>handler.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/>GPIOTE<sp/>index.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@return<sp/>Interrupt<sp/>handler.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_INST_HANDLER_GET(idx)<sp/>NRFX_CONCAT_3(nrfx_gpiote_,<sp/>idx,<sp/>_irq_handler)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>a<sp/>GPIOTE<sp/>input<sp/>pin<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/>Pin.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>input<sp/>pin<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>input<sp/>pin<sp/>is<sp/>not<sp/>set.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga67e74b6ed6625ac8849853f095dada01" kindref="member">nrfx_gpiote_in_is_set</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_API_VER_AT_LEAST(3,<sp/>2,<sp/>0)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment">/**<sp/>@brief<sp/>Input<sp/>pin<sp/>pull<sp/>default<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_DEFAULT_PULL_CONFIG<sp/>NRF_GPIO_PIN_NOPULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>GPIOTE<sp/>driver<sp/>instance.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>interrupt_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialization<sp/>was<sp/>successful.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_ALREADY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>driver<sp/>is<sp/>already<sp/>initialized.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_STATE<sp/>The<sp/>driver<sp/>is<sp/>already<sp/>initialized.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Deprecated<sp/>-<sp/>use<sp/>@ref<sp/>NRFX_ERROR_ALREADY<sp/>instead.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gaa3d1c62005297475db36587a6f4e798d" kindref="member">nrfx_gpiote_init</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/>uint8_t<sp/>interrupt_priority);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>GPIOTE<sp/>driver<sp/>instance<sp/>is<sp/>initialized.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@details<sp/>The<sp/>GPIOTE<sp/>driver<sp/>instance<sp/>is<sp/>a<sp/>shared<sp/>module.<sp/>Therefore,<sp/>check<sp/>if</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>the<sp/>module<sp/>is<sp/>already<sp/>initialized<sp/>and<sp/>skip<sp/>initialization<sp/>if<sp/>it<sp/>is.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>module<sp/>is<sp/>already<sp/>initialized.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>module<sp/>is<sp/>not<sp/>initialized.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gabbba998dfdcd769ca89f73f62565a7ef" kindref="member">nrfx_gpiote_init_check</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>GPIOTE<sp/>driver<sp/>instance.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gaaecafd630dd1c86c2610da5ea4a7daaa" kindref="member">nrfx_gpiote_uninit</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>allocating<sp/>a<sp/>GPIOTE<sp/>channel.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>allocates<sp/>the<sp/>first<sp/>unused<sp/>GPIOTE<sp/>channel<sp/>from</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>defined<sp/>in<sp/>@ref<sp/>NRFX_GPIOTE_APP_CHANNELS_MASK.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_alloc.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@note<sp/>Routines<sp/>that<sp/>allocate<sp/>and<sp/>free<sp/>the<sp/>GPIOTE<sp/>channels<sp/>are<sp/>independent</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>driver.<sp/>In<sp/>particular,<sp/>the<sp/>driver<sp/>does<sp/>not<sp/>need</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>initialized<sp/>when<sp/>this<sp/>function<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_channel<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>GPIOTE<sp/>channel<sp/>that<sp/>has<sp/>been<sp/>allocated.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>allocated.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NO_MEM<sp/>There<sp/>is<sp/>no<sp/>available<sp/>channel<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga8650db1f5f5bcd7e3709552f16b1ac20" kindref="member">nrfx_gpiote_channel_alloc</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/>uint8_t<sp/>*<sp/>p_channel);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>freeing<sp/>a<sp/>GPIOTE<sp/>channel.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>frees<sp/>a<sp/>GPIOTE<sp/>channel<sp/>that<sp/>was<sp/>allocated<sp/>using</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrfx_gpiote_channel_alloc.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>@note<sp/>Function<sp/>is<sp/>thread<sp/>safe<sp/>as<sp/>it<sp/>uses<sp/>@ref<sp/>nrfx_flag32_free.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@note<sp/>Routines<sp/>that<sp/>allocate<sp/>and<sp/>free<sp/>the<sp/>GPIOTE<sp/>channels<sp/>are<sp/>independent</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>driver.<sp/>In<sp/>particular,<sp/>the<sp/>driver<sp/>does<sp/>not<sp/>need</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>be<sp/>initialized<sp/>when<sp/>this<sp/>function<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/><sp/><sp/>GPIOTE<sp/>channel<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>freed.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga45fb52b42b6044a5231ca31a04dcbe31" kindref="member">nrfx_gpiote_channel_free</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/>uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>specified<sp/>input<sp/>pin<sp/>and<sp/>input<sp/>event/interrupt.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>Prior<sp/>to<sp/>calling<sp/>this<sp/>function<sp/>pin<sp/>can<sp/>be<sp/>uninitialized<sp/>or<sp/>configured<sp/>as<sp/>input<sp/>or</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>output.<sp/>However,<sp/>following<sp/>transitions<sp/>and<sp/>configurations<sp/>are<sp/>invalid<sp/>and<sp/>result</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>in<sp/>error<sp/>returned<sp/>by<sp/>the<sp/>function:</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>-<sp/>Setting<sp/>level<sp/>trigger<sp/>(e.g.<sp/>@ref<sp/>NRFX_GPIOTE_TRIGGER_HIGH)<sp/>and<sp/>using<sp/>GPIOTE</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/><sp/><sp/>channel<sp/>for<sp/>the<sp/>same<sp/>pin.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>-<sp/>Reconfiguring<sp/>pin<sp/>to<sp/>input<sp/>(@p<sp/>p_config-&gt;p_pull_config<sp/>not<sp/>NULL)<sp/>when<sp/>pin<sp/>was<sp/>configured</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/><sp/><sp/>to<sp/>use<sp/>GPIOTE<sp/>task.<sp/>Prior<sp/>to<sp/>that,<sp/>task<sp/>must<sp/>be<sp/>disabled<sp/>by<sp/>configuring<sp/>it<sp/>with</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/><sp/><sp/>polarity<sp/>set<sp/>to<sp/>@ref<sp/>NRF_GPIOTE_POLARITY_NONE.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>-<sp/>Configuring<sp/>trigger<sp/>using<sp/>GPIOTE<sp/>channel<sp/>for<sp/>pin<sp/>previously<sp/>configured<sp/>as<sp/>output</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/><sp/><sp/>pin.<sp/>Only<sp/>sensing<sp/>can<sp/>be<sp/>used<sp/>for<sp/>an<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>Function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>configure<sp/>trigger<sp/>and<sp/>handler<sp/>for<sp/>sensing<sp/>input<sp/>changes</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>on<sp/>an<sp/>output<sp/>pin.<sp/>In<sp/>that<sp/>case,<sp/>prior<sp/>to<sp/>that<sp/>output<sp/>pin<sp/>must<sp/>be<sp/>configured<sp/>with</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>input<sp/>buffer<sp/>connected.<sp/>In<sp/>that<sp/>case<sp/>@p<sp/>p_config-&gt;p_pull_config<sp/>is<sp/>NULL<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>reconfiguration<sp/>of<sp/>the<sp/>pin.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>input<sp/>pin<sp/>configuration.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Configuration<sp/>was<sp/>successful.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Invalid<sp/>configuration.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga01f7439b68303c9f2e3cb412065a6fdf" kindref="member">nrfx_gpiote_input_configure</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_instance,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__input__pin__config__t" kindref="compound">nrfx_gpiote_input_pin_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>specified<sp/>output<sp/>pin<sp/>to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>driver.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>Prior<sp/>to<sp/>calling<sp/>this<sp/>function<sp/>pin<sp/>can<sp/>be<sp/>uninitialized<sp/>or<sp/>configured<sp/>as<sp/>input<sp/>or</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>output.<sp/>However,<sp/>following<sp/>transitions<sp/>and<sp/>configurations<sp/>are<sp/>invalid<sp/>and<sp/>result</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>in<sp/>error<sp/>returned<sp/>by<sp/>the<sp/>function:</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>-<sp/>Reconfiguring<sp/>pin<sp/>to<sp/>output<sp/>when<sp/>pin<sp/>was<sp/>configured<sp/>as<sp/>input<sp/>with<sp/>trigger<sp/>using</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GPIOTE<sp/>channel.<sp/>Prior<sp/>to<sp/>that,<sp/>trigger<sp/>must<sp/>be<sp/>disabled<sp/>by<sp/>configuring<sp/>it<sp/>as</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/><sp/><sp/>@ref<sp/>NRFX_GPIOTE_TRIGGER_NONE.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>-<sp/>Configuring<sp/>pin<sp/>as<sp/>output<sp/>without<sp/>input<sp/>buffer<sp/>connected<sp/>when<sp/>prior<sp/>to<sp/>that</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/><sp/><sp/>trigger<sp/>was<sp/>configured.<sp/>In<sp/>that<sp/>case<sp/>input<sp/>buffer<sp/>must<sp/>be<sp/>connected.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>-<sp/>Configuring<sp/>GPIOTE<sp/>task<sp/>for<sp/>pin<sp/>which<sp/>was<sp/>previously<sp/>configured<sp/>as<sp/>input.<sp/>Before</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/><sp/><sp/>using<sp/>GPIOTE<sp/>task<sp/>pin<sp/>must<sp/>be<sp/>configured<sp/>as<sp/>output<sp/>by<sp/>providing<sp/>@p<sp/>p_config.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>configuration.<sp/>If<sp/>NULL<sp/>pin<sp/>configuration<sp/>is<sp/>not<sp/>applied.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_task_config<sp/>GPIOTE<sp/>task<sp/>configuration.<sp/>If<sp/>NULL<sp/>task<sp/>is<sp/>not<sp/>used.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Configuration<sp/>was<sp/>successful.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Invalid<sp/>configuration.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gabb841d0dcd3987241857601df6515748" kindref="member">nrfx_gpiote_output_configure</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_instance,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__output__config__t" kindref="compound">nrfx_gpiote_output_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__task__config__t" kindref="compound">nrfx_gpiote_task_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_task_config);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>deinitializing<sp/>the<sp/>specified<sp/>pin.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>Specified<sp/>pin<sp/>and<sp/>associated<sp/>GPIOTE<sp/>channel<sp/>are<sp/>restored<sp/>to<sp/>the<sp/>default<sp/>configuration.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@warning<sp/>GPIOTE<sp/>channel<sp/>used<sp/>by<sp/>the<sp/>pin<sp/>is<sp/>not<sp/>freed.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Uninitialization<sp/>was<sp/>successful.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Pin<sp/>not<sp/>used<sp/>by<sp/>the<sp/>driver.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gac2197cc0bf1fa39a1ad2474f1074740d" kindref="member">nrfx_gpiote_pin_uninit</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>trigger<sp/>for<sp/>the<sp/>given<sp/>pin.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>When<sp/>GPIOTE<sp/>event<sp/>is<sp/>used<sp/>trigger<sp/>can<sp/>be<sp/>enabled<sp/>without<sp/>enabling<sp/>interrupt,</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>e.g.<sp/>for<sp/>PPI.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>int_enable<sp/>True<sp/>to<sp/>enable<sp/>the<sp/>interrupt.<sp/>Must<sp/>be<sp/>true<sp/>when<sp/>sensing<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gacdbd1b869a91b829dc865498af6cbcff" kindref="member">nrfx_gpiote_trigger_enable</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_enable);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>trigger<sp/>for<sp/>the<sp/>given<sp/>pin.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga5b4e63198611af889fd9969b1869b2f9" kindref="member">nrfx_gpiote_trigger_disable</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="365"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Set<sp/>global<sp/>callback<sp/>called<sp/>for<sp/>each<sp/>event.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>handler<sp/><sp/><sp/><sp/>Global<sp/>handler.<sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_context<sp/><sp/>Context<sp/>passed<sp/>to<sp/>the<sp/>handler.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga24736cd1a8c9788130d98c9968047b6d" kindref="member">nrfx_gpiote_global_callback_set</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_instance,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" kindref="member">nrfx_gpiote_interrupt_handler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_context);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>Task/Event<sp/>channel<sp/>index<sp/>associated<sp/>with<sp/>the<sp/>given<sp/>pin.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Absolute<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_channel<sp/><sp/>Location<sp/>to<sp/>write<sp/>the<sp/>channel<sp/>index.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>successfully<sp/>written.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>Pin<sp/>is<sp/>not<sp/>configured<sp/>or<sp/>not<sp/>using<sp/>Task<sp/>or<sp/>Event.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga24552e387ba31db8964b0f62b1d509a6" kindref="member">nrfx_gpiote_channel_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_channel);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>number<sp/>of<sp/>channels<sp/>for<sp/>specified<sp/>GPIOTE<sp/>instance.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>channels<sp/>for<sp/>specified<sp/>GPIOTE<sp/>instance.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga06fe0af7f06bfaad25e89be175e15b02" kindref="member">nrfx_gpiote_channels_number_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>a<sp/>GPIOTE<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga2830029143234f5fcfcbe20d1fee9c32" kindref="member">nrfx_gpiote_out_set</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>GPIOTE<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga13247899551001a8aac2a78f825830de" kindref="member">nrfx_gpiote_out_clear</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>toggling<sp/>a<sp/>GPIOTE<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga0bcdd0e314959e8043101b332bbc105c" kindref="member">nrfx_gpiote_out_toggle</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="423"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>GPIOTE<sp/>output<sp/>pin<sp/>task.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga02b1fa48af27b4138e9208ea3651cbf5" kindref="member">nrfx_gpiote_out_task_enable</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>GPIOTE<sp/>output<sp/>pin<sp/>task.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga637f75bf2055efa238b444ed6713ce90" kindref="member">nrfx_gpiote_out_task_disable</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="439"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>OUT<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@details<sp/>The<sp/>returned<sp/>task<sp/>identifier<sp/>can<sp/>be<sp/>used<sp/>within<sp/>@ref<sp/>nrf_gpiote_hal,</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>to<sp/>configure<sp/>a<sp/>DPPI<sp/>channel.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@return<sp/>OUT<sp/>task<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1gaea03dfc964de3e650a0daa58f666d9ac" kindref="member">nrfx_gpiote_out_task_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>OUT<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>OUT<sp/>task.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga15d43ac83f4717c839d3e22d2cda1299" kindref="member">nrfx_gpiote_out_task_address_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="463"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SET<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>@details<sp/>The<sp/>returned<sp/>task<sp/>identifier<sp/>can<sp/>be<sp/>used<sp/>within<sp/>@ref<sp/>nrf_gpiote_hal,</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>to<sp/>configure<sp/>a<sp/>DPPI<sp/>channel.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>@return<sp/>SET<sp/>task<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga22651ebd97a68dcfa81e4033282b6cc5" kindref="member">nrfx_gpiote_set_task_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>SET<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>SET<sp/>task.</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga9cdccafd28233ef75158a70a3561200a" kindref="member">nrfx_gpiote_set_task_address_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>CLR<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>@details<sp/>The<sp/>returned<sp/>task<sp/>identifier<sp/>can<sp/>be<sp/>used<sp/>within<sp/>@ref<sp/>nrf_gpiote_hal,</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>to<sp/>configure<sp/>a<sp/>DPPI<sp/>channel.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>@return<sp/>CLR<sp/>task<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga520016d3df5cc917f0599cf67c0d2e6e" kindref="member">nrfx_gpiote_clr_task_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>SET<sp/>task<sp/>for<sp/>the<sp/>specified<sp/>output<sp/>pin.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>CLR<sp/>task.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga89f350146eec2c0237402ce8b3555171" kindref="member">nrfx_gpiote_clr_task_address_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="512"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>GPIOTE<sp/>event<sp/>for<sp/>the<sp/>specified<sp/>input<sp/>pin.</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*<sp/>@details<sp/>The<sp/>returned<sp/>event<sp/>identifier<sp/>can<sp/>be<sp/>used<sp/>within<sp/>@ref<sp/>nrf_gpiote_hal,</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>to<sp/>configure<sp/>a<sp/>DPPI<sp/>channel.</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>pin<sp/>is<sp/>configured<sp/>to<sp/>use<sp/>low-accuracy<sp/>mode,<sp/>the<sp/>PORT<sp/>event</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>@return<sp/>Event<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>input<sp/>pin.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref><sp/><ref refid="group__nrfx__gpiote_1gabd2f054462f121d758dcd7c6e3b0f88a" kindref="member">nrfx_gpiote_in_event_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/>pin);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="528"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>a<sp/>GPIOTE<sp/>input<sp/>pin<sp/>event.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>@details<sp/>If<sp/>the<sp/>pin<sp/>is<sp/>configured<sp/>to<sp/>use<sp/>low-accuracy<sp/>mode,<sp/>the<sp/>address<sp/>of<sp/>the<sp/>PORT<sp/>event<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>input<sp/>pin<sp/>event.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1gab687dd7ae8414c5d7713908be257b076" kindref="member">nrfx_gpiote_in_event_address_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>forcing<sp/>a<sp/>specific<sp/>state<sp/>on<sp/>the<sp/>pin<sp/>configured<sp/>as<sp/>task.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>state<sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>state.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gaaf7810b8ce54583693312dab4e50a510" kindref="member">nrfx_gpiote_out_task_force</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>the<sp/>task<sp/>OUT<sp/>manually.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga52dff40b255e3911b3744844a2c03124" kindref="member">nrfx_gpiote_out_task_trigger</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="559"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>the<sp/>task<sp/>SET<sp/>manually.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga53f9ac591fc2e985c947e5bb3d0a2d1a" kindref="member">nrfx_gpiote_set_task_trigger</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="569"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>the<sp/>task<sp/>CLR<sp/>manually.</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pin<sp/>number.</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga7c85e09b378f874e3ff95a3d5ca55b5c" kindref="member">nrfx_gpiote_clr_task_trigger</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,<sp/><ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GPIOTE_HAS_LATENCY<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="579"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>latency<sp/>mode<sp/>for<sp/>a<sp/>given<sp/>GPIOTE<sp/>instance.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>@note<sp/>Available<sp/>for<sp/>event<sp/>mode<sp/>with<sp/>rising<sp/>or<sp/>falling<sp/>edge<sp/>detection<sp/>on<sp/>the<sp/>pin.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Toggle<sp/>task<sp/>mode<sp/>can<sp/>only<sp/>be<sp/>used<sp/>with<sp/>low<sp/>latency<sp/>mode<sp/>setting.</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>latency<sp/><sp/><sp/><sp/>Latency<sp/>mode<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gad7bf31fef85fcbae45d517541d643a6e" kindref="member">nrfx_gpiote_latency_set</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><sp/>latency);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="591"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>latency<sp/>mode<sp/>for<sp/>a<sp/>given<sp/>GPIOTE<sp/>instance.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_instance<sp/>Pointer<sp/>to<sp/>the<sp/>driver<sp/>instance<sp/>structure.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>@return<sp/>Latency<sp/>mode.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><ref refid="group__nrfx__gpiote_1gab1d26bf3718105f843470175b00b5376" kindref="member">nrfx_gpiote_latency_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GPIOTE_HAS_LATENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gad7bf31fef85fcbae45d517541d643a6e" kindref="member">nrfx_gpiote_latency_set</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><sp/>latency)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfy__gpiote_1gab83e37561bffaf4e38ae24c5509b92b0" kindref="member">nrfy_gpiote_latency_set</ref>(p_instance-&gt;<ref refid="structnrfx__gpiote__t_1a6f4f50d8514fb50ce5e16cd14c194988" kindref="member">p_reg</ref>,<sp/>latency);</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><ref refid="group__nrfx__gpiote_1gab1d26bf3718105f843470175b00b5376" kindref="member">nrfx_gpiote_latency_get</ref>(<ref refid="structnrfx__gpiote__t" kindref="compound">nrfx_gpiote_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_instance)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__gpiote_1ga80b8660709f2afa27bb5be3f2ecc2bba" kindref="member">nrfy_gpiote_latency_get</ref>(p_instance-&gt;<ref refid="structnrfx__gpiote__t_1a6f4f50d8514fb50ce5e16cd14c194988" kindref="member">p_reg</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_GPIOTE_HAS_LATENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_GPIOTE_INDEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Choose<sp/>the<sp/>instance<sp/>to<sp/>use<sp/>in<sp/>case<sp/>of<sp/>using<sp/>deprecated<sp/>single-instance<sp/>driver<sp/>variant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_GPIOTE_INDEX<sp/>130</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(LUMOS_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_GPIOTE_INDEX<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined(NRF5340_XXAA_APPLICATION)<sp/>||<sp/>defined(NRF91_SERIES))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>defined(NRF_TRUSTZONE_NONSECURE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_GPIOTE_INDEX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_GPIOTE_INDEX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(nrfx_gpiote_irq_handler)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nrfx_gpiote_irq_handler<sp/>NRFX_CONCAT(nrfx_gpiote_,<sp/>NRF_GPIOTE_INDEX,<sp/>_irq_handler)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_DEFAULT_INPUT_CONFIG<sp/>\</highlight></codeline>
<codeline lineno="639"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.pull<sp/>=<sp/>NRF_GPIO_PIN_NOPULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gaa3d1c62005297475db36587a6f4e798d" kindref="member">nrfx_gpiote_init</ref>(uint8_t<sp/>interrupt_priority);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nrfx_gpiote_is_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gaaecafd630dd1c86c2610da5ea4a7daaa" kindref="member">nrfx_gpiote_uninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga8650db1f5f5bcd7e3709552f16b1ac20" kindref="member">nrfx_gpiote_channel_alloc</ref>(uint8_t<sp/>*<sp/>p_channel);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga45fb52b42b6044a5231ca31a04dcbe31" kindref="member">nrfx_gpiote_channel_free</ref>(uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga01f7439b68303c9f2e3cb412065a6fdf" kindref="member">nrfx_gpiote_input_configure</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__input__config__t" kindref="compound">nrfx_gpiote_input_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_input_config,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__trigger__config__t" kindref="compound">nrfx_gpiote_trigger_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_trigger_config,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__handler__config__t" kindref="compound">nrfx_gpiote_handler_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_handler_config);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gabb841d0dcd3987241857601df6515748" kindref="member">nrfx_gpiote_output_configure</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__output__config__t" kindref="compound">nrfx_gpiote_output_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfx__gpiote__task__config__t" kindref="compound">nrfx_gpiote_task_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_task_config);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1gac2197cc0bf1fa39a1ad2474f1074740d" kindref="member">nrfx_gpiote_pin_uninit</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gacdbd1b869a91b829dc865498af6cbcff" kindref="member">nrfx_gpiote_trigger_enable</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>int_enable);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga5b4e63198611af889fd9969b1869b2f9" kindref="member">nrfx_gpiote_trigger_disable</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga24736cd1a8c9788130d98c9968047b6d" kindref="member">nrfx_gpiote_global_callback_set</ref>(<ref refid="group__nrfx__gpiote_1gaafc1939853a064a19f219123e2774947" kindref="member">nrfx_gpiote_interrupt_handler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_context);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga24552e387ba31db8964b0f62b1d509a6" kindref="member">nrfx_gpiote_channel_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin,<sp/>uint8_t<sp/>*p_channel);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga2830029143234f5fcfcbe20d1fee9c32" kindref="member">nrfx_gpiote_out_set</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga13247899551001a8aac2a78f825830de" kindref="member">nrfx_gpiote_out_clear</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga0bcdd0e314959e8043101b332bbc105c" kindref="member">nrfx_gpiote_out_toggle</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga02b1fa48af27b4138e9208ea3651cbf5" kindref="member">nrfx_gpiote_out_task_enable</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga637f75bf2055efa238b444ed6713ce90" kindref="member">nrfx_gpiote_out_task_disable</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1gaea03dfc964de3e650a0daa58f666d9ac" kindref="member">nrfx_gpiote_out_task_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga15d43ac83f4717c839d3e22d2cda1299" kindref="member">nrfx_gpiote_out_task_address_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga22651ebd97a68dcfa81e4033282b6cc5" kindref="member">nrfx_gpiote_set_task_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga9cdccafd28233ef75158a70a3561200a" kindref="member">nrfx_gpiote_set_task_address_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref><sp/><ref refid="group__nrfx__gpiote_1ga520016d3df5cc917f0599cf67c0d2e6e" kindref="member">nrfx_gpiote_clr_task_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1ga89f350146eec2c0237402ce8b3555171" kindref="member">nrfx_gpiote_clr_task_address_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref><sp/><ref refid="group__nrfx__gpiote_1gabd2f054462f121d758dcd7c6e3b0f88a" kindref="member">nrfx_gpiote_in_event_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gpiote_1gab687dd7ae8414c5d7713908be257b076" kindref="member">nrfx_gpiote_in_event_address_get</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gaaf7810b8ce54583693312dab4e50a510" kindref="member">nrfx_gpiote_out_task_force</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin,<sp/>uint8_t<sp/>state);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga52dff40b255e3911b3744844a2c03124" kindref="member">nrfx_gpiote_out_task_trigger</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_SET_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga53f9ac591fc2e985c947e5bb3d0a2d1a" kindref="member">nrfx_gpiote_set_task_trigger</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIOTE_FEATURE_CLR_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1ga7c85e09b378f874e3ff95a3d5ca55b5c" kindref="member">nrfx_gpiote_clr_task_trigger</ref>(<ref refid="group__nrfx__gpiote_1ga680c2fa22004fc1f110d1344cc55ac9f" kindref="member">nrfx_gpiote_pin_t</ref><sp/>pin);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GPIOTE_HAS_LATENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gad7bf31fef85fcbae45d517541d643a6e" kindref="member">nrfx_gpiote_latency_set</ref>(<ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/>latency);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><ref refid="group__nrfx__gpiote_1gab1d26bf3718105f843470175b00b5376" kindref="member">nrfx_gpiote_latency_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GPIOTE_HAS_LATENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">NRFX_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gpiote_1gad7bf31fef85fcbae45d517541d643a6e" kindref="member">nrfx_gpiote_latency_set</ref>(<ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/>latency)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfy__gpiote_1gab83e37561bffaf4e38ae24c5509b92b0" kindref="member">nrfy_gpiote_latency_set</ref>(<ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_,<sp/>GPIOTE,<sp/>NRF_GPIOTE_INDEX),<sp/>latency);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">NRFX_STATIC_INLINE<sp/><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref><sp/><ref refid="group__nrfx__gpiote_1gab1d26bf3718105f843470175b00b5376" kindref="member">nrfx_gpiote_latency_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__gpiote_1ga80b8660709f2afa27bb5be3f2ecc2bba" kindref="member">nrfy_gpiote_latency_get</ref>(<ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_,<sp/>GPIOTE,<sp/>NRF_GPIOTE_INDEX));</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_GPIOTE_HAS_LATENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_API_VER_AT_LEAST(3,<sp/>2,<sp/>0)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="736"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/>Declare<sp/>interrupt<sp/>handlers<sp/>for<sp/>all<sp/>enabled<sp/>driver<sp/>instances<sp/>in<sp/>the<sp/>following<sp/>format:</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/>nrfx_\&lt;periph_name\&gt;_\&lt;idx\&gt;_irq_handler<sp/>(for<sp/>example,<sp/>nrfx_gpiote_0_irq_handler).</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/>A<sp/>specific<sp/>interrupt<sp/>handler<sp/>for<sp/>the<sp/>driver<sp/>instance<sp/>can<sp/>be<sp/>retrieved<sp/>by<sp/>using</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/>the<sp/>NRFX_GPIOTE_INST_HANDLER_GET<sp/>macro.</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/>Here<sp/>is<sp/>a<sp/>sample<sp/>of<sp/>using<sp/>the<sp/>NRFX_GPIOTE_INST_HANDLER_GET<sp/>macro<sp/>to<sp/>map<sp/>an<sp/>interrupt<sp/>handler</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>Zephyr<sp/>application:</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*<sp/>IRQ_CONNECT(NRFX_IRQ_NUMBER_GET(NRF_GPIOTE_INST_GET(\&lt;instance_index\&gt;)),<sp/>\&lt;priority\&gt;,</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFX_GPIOTE_INST_HANDLER_GET(\&lt;instance_index\&gt;),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><ref refid="group__nrfx__common_1gae3bda8e976c1f0e657e9260af2def0ef" kindref="member">NRFX_INSTANCE_IRQ_HANDLERS_DECLARE</ref>(GPIOTE,<sp/>gpiote)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_GPIOTE_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/include/nrfx_gpiote.h"/>
  </compounddef>
</doxygen>
