<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__grtc_8h" kind="file" language="C++">
    <compoundname>nrfy_grtc.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__grtc_8h" local="no">hal/nrf_grtc.h</includes>
    <includes refid="nrfx__coredep_8h" local="no">soc/nrfx_coredep.h</includes>
    <includedby refid="nrfx__grtc_8h" local="no">drivers/include/nrfx_grtc.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_grtc.h</label>
        <link refid="nrfy__grtc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__grtc_1gabe17fb3b66ce6e7b23c02a13264cc711" prot="public" static="no">
        <name>NRFY_GRTC_HAS_EXTENDED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga61929b54151e67375d10be7abf7e1d12" kindref="member">NRF_GRTC_HAS_EXTENDED</ref>  Symbol indicating whether GRTC has extended functionality.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="70" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1gaeccd160489ec951851615ca3056d09c5" prot="public" static="no">
        <name>NRFY_GRTC_HAS_RTCOUNTER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga3b85ea347cb98f30e0c68ee41c4ae042" kindref="member">NRF_GRTC_HAS_RTCOUNTER</ref>  Symbol indicating whether GRTC has RTCOUNTER.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="77" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1ga3f76e993ca783dda332d6926db72c6ca" prot="public" static="no">
        <name>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gac4c995b5f8c088c4111b7df4eddea77c" kindref="member">NRF_GRTC_HAS_SYSCOUNTER_ARRAY</ref>  Symbol indicating whether GRTC has multiple SYSCOUNTER registers.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="84" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1ga989d55fe61124553a02dc1656c69caee" prot="public" static="no">
        <name>NRFY_GRTC_HAS_PWM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gab7b25f5a9aa326b09338a81444a606d7" kindref="member">NRF_GRTC_HAS_CLKOUT</ref>  Symbol indicating whether GRTC has clock output registers.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="91" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1gae7adc9af384596100230bc7c8ea8cec1" prot="public" static="no">
        <name>NRFY_GRTC_HAS_CLKOUT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gab7b25f5a9aa326b09338a81444a606d7" kindref="member">NRF_GRTC_HAS_CLKOUT</ref>  Symbol indicating whether GRTC has clock output registers.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="98" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1ga176437194883a853dcaa15934b6727bd" prot="public" static="no">
        <name>NRFY_GRTC_HAS_CLKSEL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga8efa4c87940880528af108038b17afc9" kindref="member">NRF_GRTC_HAS_CLKSEL</ref>  Symbol indicating whether GRTC has clock source selection.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="105" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__grtc_1ga6ce4f2e54cb7fde4d5c74ef3b0b8ae7f" prot="public" static="no">
        <name>NRFY_GRTC_SYSCOUNTER_RETRY_MASK</name>
        <initializer>    ((uint64_t)(<ref refid="group__nrf__grtc__hal_1gad1d60809dd90a494641564b20c4a10e0" kindref="member">NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK</ref> + <ref refid="group__nrf__grtc__hal_1ga03475a3749a02e9c20b83a611e3f3a10" kindref="member">NRF_GRTC_SYSCOUNTERH_BUSY_MASK</ref>) &lt;&lt; 32)</initializer>
        <briefdescription>
<para>Mask to determine whether the SYSCOUNTER value is reliable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="112" column="9" bodyfile="haly/nrfy_grtc.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__grtc_8h_1a4d0479d73a3ade88c9dc6912faffcd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_grtc_event_enabled_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask, nrf_grtc_event_t event)</argsstring>
        <name>__nrfy_internal_grtc_event_enabled_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="875" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="875" bodyend="883" declfile="haly/nrfy_grtc.h" declline="45" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__grtc_8h_1a9ea0324bcc8db4682af4200ce3512718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_grtc_event_handle</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask, nrf_grtc_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_grtc_event_handle</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="885" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="885" bodyend="900" declfile="haly/nrfy_grtc.h" declline="49" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__grtc_8h_1aa400dad1c3bfacffad4820cbeb81c6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_grtc_events_process</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>__nrfy_internal_grtc_events_process</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="902" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="902" bodyend="927" declfile="haly/nrfy_grtc.h" declline="54" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga8e863bb03d9fdfdd870f85f269d12ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_int_init</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_grtc_int_init</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified GRTC interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="126" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="126" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga5516d9650c648f4742b32c02b86087af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_int_uninit</definition>
        <argsstring>(NRF_GRTC_Type *p_reg)</argsstring>
        <name>nrfy_grtc_int_uninit</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the GRTC interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="156" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gadff1878f3d8582c8e6c47d753e49dadd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_events_process</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_events_process</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified GRTC events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="172" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga6212ff51984804297c0f7ac84d7777af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_prepare</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool busy_wait)</argsstring>
        <name>nrfy_grtc_prepare</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>busy_wait</declname>
        </param>
        <briefdescription>
<para>Function for preparing the GRTC peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function clears all shorts, interrupts, resets and starts the GRTC.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">busy_wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if wait for synchronization operation is to be performed, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="191" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="191" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga50eeb2a99f24a2db9f2565f726e9a8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_start</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool busy_wait)</argsstring>
        <name>nrfy_grtc_sys_counter_start</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>busy_wait</declname>
        </param>
        <briefdescription>
<para>Function for starting the SYSCOUNTER. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function enables the 1 MHz counter and set it as always active.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">busy_wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if wait for synchronization operation is to be performed, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="240" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="240" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga8269461bfd8d72dbe2ffa71680c1b99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint64_t</type>
        <definition>NRFY_STATIC_INLINE uint64_t nrfy_grtc_sys_counter_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for returning the SYSCOUNTER 1 MHz value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SYSCOUNTER value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="288" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="288" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaff572496f54961e136a9494c7f0eb407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_conter_ready_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_conter_ready_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking whether SYSCOUNTER value is ready to be read. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if SYSCOUNTER is ready to be read, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="305" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="305" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gad3d0380c7046368b47e4eacfc55a9ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint64_t</type>
        <definition>NRFY_STATIC_INLINE uint64_t nrfy_grtc_rt_counter_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_rt_counter_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for returning the RTCOUNTER 32 kHz value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RTCOUNTER value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="329" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga82c0076f93774098e199d3fd3a686c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_event_int_clear_enable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t channel, bool enable)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_int_clear_enable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling the GRTC compare event and optionally associated interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Event is implicitly cleared before enabling the associated interrupt.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel representing the GRTC compare event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if associated interrupt is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="345" column="6" bodyfile="haly/nrfy_grtc.h" bodystart="345" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga95f43262f3debbb0d81b300dca09e816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_compare_event_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the compare GRTC event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel of the corresponding event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="370" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="370" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaf5b0c8e0db4cb993893d87b73f741ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_event_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
<para>Function for clearing a compare GRTC event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel of the corresponding event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="385" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="385" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga87f20166e93ddf3761720c5587cb2c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_capture_subscribe_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel, uint8_t channel)</argsstring>
        <name>nrfy_grtc_sys_counter_capture_subscribe_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given GRTC capture channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="400" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="400" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gae439f450d795c60bb78de6899fef2b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_capture_subscribe_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_capture_subscribe_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given GRTC capture channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="415" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="415" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gacac3830342f55dd92c780f16af38689a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_publish_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel, uint8_t channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_publish_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given GRTC compare channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="430" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="430" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gab2295c43baf3838bca1181ccad3fe5ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_publish_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_publish_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given GRTC compare channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="445" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="445" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gab6221d36ce57429ad26109598fa94875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_cc_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel, uint64_t cc_value)</argsstring>
        <name>nrfy_grtc_sys_counter_cc_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cc_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaafb4da6fab8ddad328e0f8689e1e2ff5" kindref="member">nrf_grtc_sys_counter_cc_set</ref>  Function for setting the compare value of channel for the SYSCOUNTER.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The corresponding event is automatically disabled by hardware during the operation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified capture/compare channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare value to be set in 1 MHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="453" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="453" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga462e0fe5530b43223a2f15aeec37ce24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint64_t</type>
        <definition>NRFY_STATIC_INLINE uint64_t nrfy_grtc_sys_counter_cc_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_cc_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaa250ccd626fce4e373842b6df5e97096" kindref="member">nrf_grtc_sys_counter_cc_get</ref>  Function for getting the capture/compare value of channel for the SYSCOUNTER.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified capture/compare channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value from the specified capture/compare register in 1MHz units.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="462" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="462" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga30f11d6056e39127c63d142ff04a1263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_cc_add_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel, uint32_t value, nrf_grtc_cc_add_reference_t reference)</argsstring>
        <name>nrfy_grtc_sys_counter_cc_add_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga4e34fb922643e9f448f248b410e2e8e4" kindref="member">nrf_grtc_cc_add_reference_t</ref></type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gae7bc99a50731a75e6b76e8d058772bb7" kindref="member">nrf_grtc_sys_counter_cc_add_set</ref>  Function for setting the value to be added to capture/compare register for the SYSCOUNTER.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>There are two available configurations of adding operation: When <computeroutput>reference</computeroutput> value equals <ref refid="group__nrf__grtc__hal_1gga4e34fb922643e9f448f248b410e2e8e4a7d1e9d741d2bd841434da14196c05c34" kindref="member">NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER</ref> then the final value of capture/compare register is a sum of SYSCOUNTER current value and <computeroutput>value</computeroutput>. When <computeroutput>reference</computeroutput> value equals <ref refid="group__nrf__grtc__hal_1gga4e34fb922643e9f448f248b410e2e8e4a871b28e84ca812e2bd1a71a12b17354f" kindref="member">NRF_GRTC_CC_ADD_REFERENCE_CC</ref> then the final value of capture/compare register is a sum of current capture/compare value and <computeroutput>value</computeroutput>. If the capture/compare register overflows after this write, then the corresponding event is generated immediately.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified capture/compare channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be added in 1 MHz units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration of adding mode.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="472" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="472" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga6320534b7c245eb31fe2099308106f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_rt_counter_cc_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint64_t cc_value, bool sync)</argsstring>
        <name>nrfy_grtc_rt_counter_cc_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cc_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga45a090610eefa2264e4f12602b7f9d9b" kindref="member">nrf_grtc_rt_counter_cc_set</ref>  Function for setting a compare value for the RTCOUNTER.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The internal synchronization mechanism ensures that the desired value will be properly latched by the GRTC. However when <computeroutput>sync</computeroutput> parameter is true then the process of capturing the value lasts up to two 32 kHz cycles. If the <computeroutput>sync</computeroutput> parameter is false then the capturing the value will occur on the following rising edge of 32 kHz clock. In this case it is user&apos;s responsibility to execute the function between the 32 kHz rising edges.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare value to be set in 32 kHz units. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sync</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the internal synchronization mechanism shall be used, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="483" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="483" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga02808e3743592caaacb62c4857ea67b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint64_t</type>
        <definition>NRFY_STATIC_INLINE uint64_t nrfy_grtc_rt_counter_cc_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_rt_counter_cc_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga2f5e743ecea72ace3f5fb81816b56d94" kindref="member">nrf_grtc_rt_counter_cc_get</ref>  Function for returning the compare value for the RTCOUNTER.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value from the capture/compare register in 32 kHz units.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="492" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="492" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga42cb0d1471f94ca063606e794accbb8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_int_enable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_int_enable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gabc8bebf2390d859f55d96ae141499c11" kindref="member">nrf_grtc_int_enable</ref>  Function for enabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__grtc__hal_1gad1e632ee175d9af435e2246cd7927822" kindref="member">nrf_grtc_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="502" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gad8ed7e466b522334ddec1568b1f07d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_int_disable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_int_disable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga8b77b156aaa2a75e9faf07d52119342e" kindref="member">nrf_grtc_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__grtc__hal_1gad1e632ee175d9af435e2246cd7927822" kindref="member">nrf_grtc_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="509" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="509" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga2ae4eaec93768c1045de33d4710edf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_int_enable_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_int_enable_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gada5181d48f4f1d68d0f768efedf71c5c" kindref="member">nrf_grtc_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__grtc__hal_1gad1e632ee175d9af435e2246cd7927822" kindref="member">nrf_grtc_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="516" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="516" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga158c2b8721cb662dbb01474bc156f84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_int_pending_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_int_pending_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gafd34374e937c50084e2b9969913a591c" kindref="member">nrf_grtc_int_pending_get</ref>  Function for retrieving the state of pending interrupts.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>States of pending interrupt are saved as a bitmask. One set at particular position means that interrupt for event is pending.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitmask with information about pending interrupts. Use <ref refid="group__nrf__grtc__hal_1gad1e632ee175d9af435e2246cd7927822" kindref="member">nrf_grtc_int_mask_t</ref> values for bit masking.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="525" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="525" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga8bcadf0e254b6b7085b9ce68804e128f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_shorts_enable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_shorts_enable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gac5690d49bef4f831062094fc728bda33" kindref="member">nrf_grtc_shorts_enable</ref>  Function for enabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask of shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="535" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="535" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga21531bd339c06f1789d702ce74cbdf46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_shorts_disable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_shorts_disable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga03a9d5d7e98462b9c3cdd8bfabacd806" kindref="member">nrf_grtc_shorts_disable</ref>  Function for disabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask of shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="542" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="542" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga6d9605cb10ae67d4c53a6d7629358525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_shorts_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_shorts_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaf7747e1873e5594b2d2e4df6394f9ab9" kindref="member">nrf_grtc_shorts_set</ref>  Function for setting the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask of shortcuts to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="549" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="549" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga2358edee870ce5e12930cefa77e471db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_subscribe_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_grtc_subscribe_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga19e3d64a1f7fa2c2e524b63910135ef8" kindref="member">nrf_grtc_subscribe_set</ref>  Function for setting the subscribe configuration for a given GRTC task.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Not every task has its corresponding subscribe register. Refer to the Product Specification for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="557" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="557" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga66051bd59b63ee6fe7b140e1d98a10a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_subscribe_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_task_t task)</argsstring>
        <name>nrfy_grtc_subscribe_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gae8dbd19ec8fb112e7254ffc0a32aba40" kindref="member">nrf_grtc_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given GRTC task.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Not every task has its corresponding subscribe register. Refer to the Product Specification for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="566" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="566" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga9851ad2cd1340acf43299228a70df348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_publish_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_grtc_publish_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga28ca8bcda6222fc60e172767c67d7469" kindref="member">nrf_grtc_publish_set</ref>  Function for setting the publish configuration for a given GRTC event.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Not every event has its corresponding publish register. Refer to the Product Specification for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="573" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="573" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaa90e66c56bd8e58df57ae61bcf14fa26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_publish_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_event_t event)</argsstring>
        <name>nrfy_grtc_publish_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga1dde9445416963417a00e2b678de7121" kindref="member">nrf_grtc_publish_clear</ref>  Function for clearing the publish configuration for a given GRTC event.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Not every event has its corresponding publish register. Refer to the Product Specification for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="582" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="582" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga03445432d87df9968e3443f34ec491eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_event_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, nrf_grtc_event_t event)</argsstring>
        <name>nrfy_grtc_event_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>  Function for retrieving the state of the GRTC event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="589" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="589" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga5fbe6b175b77b5293998cd270db900f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_event_clear</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_event_t event)</argsstring>
        <name>nrfy_grtc_event_clear</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>  Function for clearing an event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="598" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="598" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gae17f226ce6fc9d3dff8533a5225826eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_overflow_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_overflow_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga9eab767581794e74e4ae08a70ea60c8b" kindref="member">nrf_grtc_sys_counter_overflow_check</ref>  Function for checking whether the lower 32-bits of SYSCOUNTER overflowed after last execution of <ref refid="group__nrf__grtc__hal_1ga0b0c5b513db954011586e86547ed1ce9" kindref="member">nrf_grtc_sys_counter_low_get</ref>.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>if the lower 32-bits of SYSCOUNTER overflowed, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="605" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="605" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga82c0416a5d37aec51daefee8dfb1f7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_event_address_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, nrf_grtc_event_t event)</argsstring>
        <name>nrfy_grtc_event_address_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga0ef4ff14ec092be3fb37ef38576514f0" kindref="member">nrf_grtc_event_address_get</ref>  Function for returning the address of an event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="614" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="614" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga943414a9733d513123455ee1d966edf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_task_address_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, nrf_grtc_task_t task)</argsstring>
        <name>nrfy_grtc_task_address_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga60e00f5ace03a5c5b72fa45acda805d2" kindref="member">nrf_grtc_task_address_get</ref>  Function for returning the address of a task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="621" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="621" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gafd3c3fe477a71912cd23eae6bf5ac525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_task_trigger</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_task_t task)</argsstring>
        <name>nrfy_grtc_task_trigger</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaa52de35bb6ecb5ebc17c22e2d28a6480" kindref="member">nrf_grtc_task_trigger</ref>  Function for starting a task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested task.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="628" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="628" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gac300fa79759ed9c782551d74400460bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_grtc_task_t nrfy_grtc_sys_counter_capture_task_get</definition>
        <argsstring>(uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_capture_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gade023fd81fb28e313e10352daf01d9e3" kindref="member">nrf_grtc_sys_counter_capture_task_get</ref>  Function for getting the 1 MHz SYSCOUNTER timer capture task associated with the specified channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Capture task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="635" column="36" bodyfile="haly/nrfy_grtc.h" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gad3734336eb27a16c51438d56826162e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_event_enable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_enable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga7d6f2b3291aaebfb0165d2487e3a03fd" kindref="member">nrf_grtc_sys_counter_compare_event_enable</ref>  Function for enabling SYSCOUNTER compare event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number of compare event to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="641" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="641" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gadfea9e230ba915d755cf9de2c394823c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_compare_event_disable</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_disable</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gae04c6f373955979278eb18060ff3a4a8" kindref="member">nrf_grtc_sys_counter_compare_event_disable</ref>  Function for disabling SYSCOUNTER compare event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number of compare event to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="649" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="649" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaec192772505605b7d789e28fc4fe93e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_grtc_event_t nrfy_grtc_sys_counter_compare_event_get</definition>
        <argsstring>(uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_compare_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>  Function for getting the SYSCOUNTER compare event associated with the specified compare cc_channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare channel number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested compare event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="657" column="37" bodyfile="haly/nrfy_grtc.h" bodystart="657" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga9e3c8bac529ed41a0c514e8dd1096811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_cc_enable_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, uint8_t cc_channel)</argsstring>
        <name>nrfy_grtc_sys_counter_cc_enable_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cc_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga7faf1283a0d67f2428ad6d8d6d03f53e" kindref="member">nrf_grtc_sys_counter_cc_enable_check</ref>  Function for checking whether the specified capture/compare channel is enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified channel is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified channel is disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="663" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="663" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga465c62a2f10c77885d20b7d1ffeb6a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_grtc_sys_counter_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga86af4577d105dafbdae927ed086b8b2f" kindref="member">nrf_grtc_sys_counter_set</ref>  Function for setting the SYSCOUNTER.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>When the SYSCOUNTER is disabled the GRTC uses RTCOUNTER by default.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if SYSCOUNTER is to be enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="674" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="674" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga2c75e47f370027cf04629db902381592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_auto_mode_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_grtc_sys_counter_auto_mode_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaafb45e5bee0a2344906f9a02f4d59a71" kindref="member">nrf_grtc_sys_counter_auto_mode_set</ref>  Function for setting automatic mode for the SYSCOUNTER.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>When <computeroutput>enable</computeroutput> is false then the SYSCOUNTER remains active when KEEPRUNNING is set, or any task register, INT register or SYSCOUNTER register is being accessed. When <computeroutput>enable</computeroutput> is true then in addition the SYSCOUNTER remains active when any local CPU that is not sleeping keeps the SYSCOUNTER active.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the automatic mode is to be enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="681" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="681" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga3e5036c8cde696e946c88933c9e13216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_auto_mode_check</definition>
        <argsstring>(NRF_GRTC_Type *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_auto_mode_check</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga9dab8e70b7c645b97fc70833003f4dda" kindref="member">nrf_grtc_sys_counter_auto_mode_check</ref>  Function for checking whether the SYSCOUNTER has automatic mode enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True Automatic mode is enabled. </para>
</simplesect>
<simplesect kind="return"><para>False Automatic mode is disabled.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="688" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="688" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gab1a7f37c3112baac32c02f69e1793b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_active_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_grtc_sys_counter_active_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga5c1bce12a2b33339177c00b29bf8e332" kindref="member">nrf_grtc_sys_counter_active_set</ref>  Function for setting the request to keep the specified SYSCOUNTER channel active.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the SYSCOUNTER channel is to be kept active, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="699" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="699" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga36b06cb1dfaaa86fe4a8b0d5f4254cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_active_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_active_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaf2aab3b971214da6438ece86ec435146" kindref="member">nrf_grtc_sys_counter_active_check</ref>  Function for checking whether the specified SYSCOUNTER channel is requested to remain active.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>if SYSCOUNTER channel is requested to remain active, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="706" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="706" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga906ee96a82ba05db47948cfd2ca71026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_check</definition>
        <argsstring>(NRF_GRTC_Type *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_check</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga3289a3d075afcbc7b8562a8c5a48adae" kindref="member">nrf_grtc_sys_counter_check</ref>  Function for checking whether the SYSCOUNTER is in active state.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>if the SYSCOUNTER is active, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="716" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gab3027ac6eaa2445c8c70d12400567fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_active_state_request_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_grtc_sys_counter_active_state_request_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gac0d0dba9e8fbfd84eef88aad1d048b86" kindref="member">nrf_grtc_sys_counter_active_state_request_set</ref>  Function for setting the request to keep the SYSCOUNTER active.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>This function modifies the KEEPRUNNING register, which possesses information whether any local CPU needs keeping the SYSCOUNTER active.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the automatic mode is to be enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="722" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="722" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga2a63f688b80706c120e2b6e6cd8d1353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_sys_counter_active_state_request_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_active_state_request_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaa1f8757bb0c09e0bf86e0cdefa9af124" kindref="member">nrf_grtc_sys_counter_active_state_request_check</ref>  Function for checking whether the SYSCOUNTER is requested to remain active.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>if request for keeping the SYSCOUNTER is active, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="731" column="6" bodyfile="haly/nrfy_grtc.h" bodystart="731" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga23e78db84de6b0484fd95e38223d05f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_sys_counter_active_state_request_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_grtc_sys_counter_active_state_request_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga26a1b100c80264f41628f7578e330d9f" kindref="member">nrf_grtc_sys_counter_active_state_request_get</ref>  Function for getting the domains that requested the SYSCOUNTER to remain active.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Domains mask.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Bitmask</parametername>
</parameternamelist>
<parameterdescription>
<para>of domains that keep the SYSCOUNTER active.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="741" column="10" bodyfile="haly/nrfy_grtc.h" bodystart="741" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gabefa34e9e3a1efa00091cfe6b20afebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_sys_counter_interval_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t value)</argsstring>
        <name>nrfy_grtc_sys_counter_interval_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga467b68e18e9c2cfc248baf75b587810f" kindref="member">nrf_grtc_sys_counter_interval_set</ref>  Function for setting the periodic compare event for capture/compare channel 0.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Period value in 1 MHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="752" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="752" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaba27bc33b69c4f557887335e6585202b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_sys_counter_interval_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_sys_counter_interval_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga2d1cad3bd0f794e0c8b5c9d5be80e813" kindref="member">nrf_grtc_sys_counter_interval_get</ref>  Function for getting the value of interval for periodic capture/compare event for channel 0.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the interval in 1 MHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="759" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="759" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga7739a66deace8228bee7557a28b2891e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_timeout_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t value)</argsstring>
        <name>nrfy_grtc_timeout_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga8b3480c8301f0beb550f8cf8247a3452" kindref="member">nrf_grtc_timeout_set</ref>  Function for setting the timeout value for GRTC.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>Timeout between all CPUs going to sleep and stopping the SYSCOUNTER.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout value in 32 kHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="768" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="768" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga3bcd654a7242986b24bf63f9af92831e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_timeout_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_timeout_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gae1ce6ee813308fce0a2901fb55459678" kindref="member">nrf_grtc_timeout_get</ref>  Function for getting the value of the timeout value for GRTC.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the timeout in 32 kHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="775" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="775" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga0ad9690419cdf9e08a28ee73a217bc51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_waketime_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t value)</argsstring>
        <name>nrfy_grtc_waketime_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gabf6543ddb24a2c79a2ef1ab8aeb335f1" kindref="member">nrf_grtc_waketime_set</ref>  Function for setting the wake time value for GRTC.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>The wake time is maximum number of 32 kHz cycles takes to restore the APB registers when waking from sleep state.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Wake time value in 32 kHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="784" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="784" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga58a180c979f29bf131e4872b429c4dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_waketime_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_waketime_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga19246ff59e790e2a5d11219c8ad60c8d" kindref="member">nrf_grtc_waketime_get</ref>  Function for getting the wake time value.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>of wake time in 32 kHz units.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="791" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="791" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gafd203ab35167c43a329c257f54738cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_pwm_compare_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t value)</argsstring>
        <name>nrfy_grtc_pwm_compare_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga421c91decb698f3e46897b94ad9ab4c9" kindref="member">nrf_grtc_pwm_compare_set</ref>  Function for setting the PWM compare value.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM compare value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="802" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="802" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga5498d27b248275ede2627ae4456bd8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_pwm_compare_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_pwm_compare_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gae208d47c196fd01485ff5916d0c7a882" kindref="member">nrf_grtc_pwm_compare_get</ref>  Function for getting the PWM compare value.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Value</parametername>
</parameternamelist>
<parameterdescription>
<para>of PWM compare.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="809" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="809" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga8862129a895d3df6f064b29723c0f18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_clkout_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_clkout_t clkout, bool enable)</argsstring>
        <name>nrfy_grtc_clkout_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1gacdc216d006ac43c34a154cffdf0ca69a" kindref="member">nrf_grtc_clkout_t</ref></type>
          <declname>clkout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1gaecaf461188701a90c6be463db4298f9e" kindref="member">nrf_grtc_clkout_set</ref>  Function for setting the specified clock source to be connected to output pin.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clkout</parametername>
</parameternamelist>
<parameterdescription>
<para>Selected clkout source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the clkout source is to be enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="820" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="820" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaa60bbe83662f0540d6a320e167bbbfd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_grtc_clkout_enable_check</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg, nrf_grtc_clkout_t clkout)</argsstring>
        <name>nrfy_grtc_clkout_enable_check</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1gacdc216d006ac43c34a154cffdf0ca69a" kindref="member">nrf_grtc_clkout_t</ref></type>
          <declname>clkout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga03419f816fcd0f2380d0b9e45d44e55c" kindref="member">nrf_grtc_clkout_enable_check</ref>  Function for checking whether clock source is connected to clkout pin.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clkout</parametername>
</parameternamelist>
<parameterdescription>
<para>Selected clkout source.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>if the clkout source is enabled, false otherwise.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="829" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="829" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gaf87d6a0734928399c7c8f718e188d247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_clkout_divider_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, uint32_t value)</argsstring>
        <name>nrfy_grtc_clkout_divider_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga6aed79f13e1b69ba1a6d9167d2b876d4" kindref="member">nrf_grtc_clkout_divider_set</ref>  Function for setting the fast clock divisor value of clock output.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Fast clock divisor value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="839" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="839" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1gadd23a5ac64a2556e3c483465ba37277c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_grtc_clkout_divider_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_clkout_divider_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga3371a887f116e28c9476de431d1145b3" kindref="member">nrf_grtc_clkout_divider_get</ref>  Function for getting the fast clock divisor value of clock output.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Fast</parametername>
</parameternamelist>
<parameterdescription>
<para>clock divisor value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="846" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="846" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga032d85d3e74fba5c4db6b42677b5c3cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_grtc_clksel_set</definition>
        <argsstring>(NRF_GRTC_Type *p_reg, nrf_grtc_clksel_t clksel)</argsstring>
        <name>nrfy_grtc_clksel_set</name>
        <param>
          <type>NRF_GRTC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__grtc__hal_1gae439fae87a8f39984fe088a02960a7ae" kindref="member">nrf_grtc_clksel_t</ref></type>
          <declname>clksel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga8210f5a14a3afcadf3c40435dcf0fed0" kindref="member">nrf_grtc_clksel_set</ref>  Function for setting the clock source for the GRTC low-frequency clock.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clksel</parametername>
</parameternamelist>
<parameterdescription>
<para>Selected clock source.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="857" column="25" bodyfile="haly/nrfy_grtc.h" bodystart="857" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__grtc_1ga084b580af47f1735a4f96c3867d2a9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__grtc__hal_1gae439fae87a8f39984fe088a02960a7ae" kindref="member">nrf_grtc_clksel_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_grtc_clksel_t nrfy_grtc_clksel_get</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>nrfy_grtc_clksel_get</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__grtc__hal_1ga3fc756bda45d4b3626a953c47540b635" kindref="member">nrf_grtc_clksel_get</ref>  Function for getting the clock source of the GRTC low-frequency clock.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Clock source configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="864" column="38" bodyfile="haly/nrfy_grtc.h" bodystart="864" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__grtc_8h_1a8782c42cdd20a70b0d7108ab07675e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint64_t</type>
        <definition>NRFY_STATIC_INLINE uint64_t __nrfy_internal_grtc_rt_counter_read</definition>
        <argsstring>(NRF_GRTC_Type const *p_reg)</argsstring>
        <name>__nrfy_internal_grtc_rt_counter_read</name>
        <param>
          <type>NRF_GRTC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_grtc.h" line="930" column="29" bodyfile="haly/nrfy_grtc.h" bodystart="930" bodyend="937"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_GRTC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_grtc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;soc/nrfx_coredep.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_grtc_event_enabled_clear(NRF_GRTC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_grtc_event_handle(NRF_GRTC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_grtc_events_process(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/>__nrfy_internal_grtc_rt_counter_read(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_grtc<sp/>GRTC<sp/>HALY</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_grtc</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>GRTC<sp/>peripheral.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_EXTENDED<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_EXTENDED}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_EXTENDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_EXTENDED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_RTCOUNTER<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_RTCOUNTER}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_RTCOUNTER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_RTCOUNTER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_SYSCOUNTER_ARRAY<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_SYSCOUNTER_ARRAY}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_PWM<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_CLKOUT}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_PWM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_PWM<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_CLKOUT<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_CLKOUT}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_CLKOUT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_CLKOUT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_CLKSEL<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**<sp/>@refhal{NRF_GRTC_HAS_CLKSEL}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_CLKSEL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_HAS_CLKSEL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_GRTC_HAS_SYSCOUNTER_ARRAY<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**<sp/>@brief<sp/>Mask<sp/>to<sp/>determine<sp/>whether<sp/>the<sp/>SYSCOUNTER<sp/>value<sp/>is<sp/>reliable.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_SYSCOUNTER_RETRY_MASK<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((uint64_t)(NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK<sp/>+<sp/>NRF_GRTC_SYSCOUNTERH_BUSY_MASK)<sp/>&lt;&lt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_GRTC_SYSCOUNTER_RETRY_MASK<sp/>((uint64_t)(NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK)<sp/>&lt;&lt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>GRTC<sp/>interrupts.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>interrupts<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga8e863bb03d9fdfdd870f85f269d12ac4" kindref="member">nrfy_grtc_int_init</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>cc_channel<sp/>=<sp/>0;<sp/>cc_channel<sp/>&lt;<sp/><ref refid="group__nrf__grtc__hal_1gac03efae4e8b2495c871b4d341e5dc91f" kindref="member">NRF_GRTC_SYSCOUNTER_CC_COUNT</ref>;<sp/>cc_channel++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_grtc_event_enabled_clear(p_reg,<sp/>mask,<sp/>event);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_grtc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65aaf77e55d0b716fe06c2b56f2faa275a4" kindref="member">NRF_GRTC_EVENT_RTCOMPARE</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_grtc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65ae7e815bcad2414fc4de6025fc9329e7c" kindref="member">NRF_GRTC_EVENT_RTCOMPARESYNC</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(GRTC_IRQn,<sp/>irq_priority);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(GRTC_IRQn);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gabc8bebf2390d859f55d96ae141499c11" kindref="member">nrf_grtc_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>GRTC<sp/>interrupts.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga5516d9650c648f4742b32c02b86087af" kindref="member">nrfy_grtc_int_uninit</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)p_reg;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(GRTC_IRQn);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>GRTC<sp/>events.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1gadff1878f3d8582c8e6c47d753e49dadd" kindref="member">nrfy_grtc_events_process</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_grtc_events_process(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>preparing<sp/>the<sp/>GRTC<sp/>peripheral.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>clears<sp/>all<sp/>shorts,<sp/>interrupts,<sp/>resets<sp/>and<sp/>starts<sp/>the<sp/>GRTC.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>busy_wait<sp/>True<sp/>if<sp/>wait<sp/>for<sp/>synchronization<sp/>operation<sp/>is<sp/>to<sp/>be<sp/>performed,</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga6212ff51984804297c0f7ac84d7777af" kindref="member">nrfy_grtc_prepare</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>busy_wait)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga86af4577d105dafbdae927ed086b8b2f" kindref="member">nrf_grtc_sys_counter_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga03a9d5d7e98462b9c3cdd8bfabacd806" kindref="member">nrf_grtc_shorts_disable</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga123d5e58c5e2a9fc7f7ff2d3aa4f82dfac9e912a90becb727d32dc58faf9aefb3" kindref="member">NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga8b77b156aaa2a75e9faf07d52119342e" kindref="member">nrf_grtc_int_disable</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga779ea44eefe93b1659368937c6d92b9d" kindref="member">NRF_GRTC_INTEN_MASK</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>cc_channel<sp/>=<sp/>0;<sp/>cc_channel<sp/>&lt;<sp/><ref refid="group__nrf__grtc__hal_1gac03efae4e8b2495c871b4d341e5dc91f" kindref="member">NRF_GRTC_SYSCOUNTER_CC_COUNT</ref>;<sp/>cc_channel++)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga1dde9445416963417a00e2b678de7121" kindref="member">nrf_grtc_publish_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae8dbd19ec8fb112e7254ffc0a32aba40" kindref="member">nrf_grtc_subscribe_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gade023fd81fb28e313e10352daf01d9e3" kindref="member">nrf_grtc_sys_counter_capture_task_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga1dde9445416963417a00e2b678de7121" kindref="member">nrf_grtc_publish_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65aaf77e55d0b716fe06c2b56f2faa275a4" kindref="member">NRF_GRTC_EVENT_RTCOMPARE</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa52de35bb6ecb5ebc17c22e2d28a6480" kindref="member">nrf_grtc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga3ead45038f169b586ca21cd6ef8acde9a9bdac9230cd2cfee5b1612f638846356" kindref="member">NRF_GRTC_TASK_CLEAR</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa52de35bb6ecb5ebc17c22e2d28a6480" kindref="member">nrf_grtc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga3ead45038f169b586ca21cd6ef8acde9af0bbe53668b3def13ca5427c7155d8aa" kindref="member">NRF_GRTC_TASK_START</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(busy_wait)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>RTCOUNTER<sp/>is<sp/>cleared<sp/>and<sp/>does<sp/>not<sp/>contain<sp/>the<sp/>old<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(__nrfy_internal_grtc_rt_counter_read(p_reg)<sp/>&gt;<sp/>1ULL)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>one<sp/>32k<sp/>cycle<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>RTCOUNTER<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>t<sp/>=<sp/>__nrfy_internal_grtc_rt_counter_read(p_reg);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(__nrfy_internal_grtc_rt_counter_read(p_reg)<sp/>==<sp/>t)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>3<sp/>32k<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`NRFX_DELAY_US()`<sp/>macro<sp/>cannot<sp/>be<sp/>used<sp/>here<sp/>because<sp/>in<sp/>Zephyr<sp/>environment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>calls<sp/>`k_busy_wait()`.<sp/>This<sp/>function<sp/>relies<sp/>on<sp/>system<sp/>timer<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>started<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__coredep_1ga3311d54fcf27b1579b8cc3eb0bf063b9" kindref="member">nrfx_coredep_delay_us</ref>(93);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>SYSCOUNTER.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>enables<sp/>the<sp/>1<sp/>MHz<sp/>counter<sp/>and<sp/>set<sp/>it<sp/>as<sp/>always<sp/>active.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>busy_wait<sp/>True<sp/>if<sp/>wait<sp/>for<sp/>synchronization<sp/>operation<sp/>is<sp/>to<sp/>be<sp/>performed,</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga50eeb2a99f24a2db9f2565f726e9a8eb" kindref="member">nrfy_grtc_sys_counter_start</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>busy_wait)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga86af4577d105dafbdae927ed086b8b2f" kindref="member">nrf_grtc_sys_counter_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(busy_wait)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gaf2aab3b971214da6438ece86ec435146" kindref="member">nrf_grtc_sys_counter_active_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga5c1bce12a2b33339177c00b29bf8e332" kindref="member">nrf_grtc_sys_counter_active_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gaa1f8757bb0c09e0bf86e0cdefa9af124" kindref="member">nrf_grtc_sys_counter_active_state_request_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gac0d0dba9e8fbfd84eef88aad1d048b86" kindref="member">nrf_grtc_sys_counter_active_state_request_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65ab123f82a38ece536dd9de212c385046d" kindref="member">NRF_GRTC_EVENT_SYSCOUNTERVALID</ref>))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga5c1bce12a2b33339177c00b29bf8e332" kindref="member">nrf_grtc_sys_counter_active_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gac0d0dba9e8fbfd84eef88aad1d048b86" kindref="member">nrf_grtc_sys_counter_active_state_request_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>SYSCOUNTER<sp/>1<sp/>MHz<sp/>value.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>@return<sp/>SYSCOUNTER<sp/>value.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrfy__grtc_1ga8269461bfd8d72dbe2ffa71680c1b99b" kindref="member">nrfy_grtc_sys_counter_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>counter;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gac24bd3d8ecf7ddab6443e854ac0eadb7" kindref="member">nrf_grtc_sys_counter_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(counter<sp/>&amp;<sp/><ref refid="group__nrfy__grtc_1ga6ce4f2e54cb7fde4d5c74ef3b0b8ae7f" kindref="member">NRFY_GRTC_SYSCOUNTER_RETRY_MASK</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>counter;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>SYSCOUNTER<sp/>value<sp/>is<sp/>ready<sp/>to<sp/>be<sp/>read.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>SYSCOUNTER<sp/>is<sp/>ready<sp/>to<sp/>be<sp/>read,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gaff572496f54961e136a9494c7f0eb407" kindref="member">nrfy_grtc_sys_conter_ready_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga0b0c5b513db954011586e86547ed1ce9" kindref="member">nrf_grtc_sys_counter_low_get</ref>(p_reg);<sp/></highlight><highlight class="comment">//<sp/>Dummy<sp/>read,<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/>((<ref refid="group__nrf__grtc__hal_1ga80b9dd38536653a93d61443bc6e0d2a0" kindref="member">nrf_grtc_sys_counter_high_get</ref>(p_reg)<sp/>&amp;<sp/>GRTC_SYSCOUNTER_SYSCOUNTERH_BUSY_Msk)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>GRTC_SYSCOUNTER_SYSCOUNTERH_BUSY_Pos)<sp/>==<sp/>GRTC_SYSCOUNTER_SYSCOUNTERH_BUSY_Ready;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65ab123f82a38ece536dd9de212c385046d" kindref="member">NRF_GRTC_EVENT_SYSCOUNTERVALID</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="322"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>RTCOUNTER<sp/>32<sp/>kHz<sp/>value.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@return<sp/>RTCOUNTER<sp/>value.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrfy__grtc_1gad3d0380c7046368b47e4eacfc55a9ef6" kindref="member">nrfy_grtc_rt_counter_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__nrfy_internal_grtc_rt_counter_read(p_reg);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>GRTC<sp/>compare<sp/>event<sp/>and<sp/>optionally<sp/>associated<sp/>interrupt.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@note<sp/>Event<sp/>is<sp/>implicitly<sp/>cleared<sp/>before<sp/>enabling<sp/>the<sp/>associated<sp/>interrupt.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>representing<sp/>the<sp/>GRTC<sp/>compare<sp/>event.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/>True<sp/>if<sp/>associated<sp/>interrupt<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga82c0076f93774098e199d3fd3a686c40" kindref="member">nrfy_grtc_sys_counter_compare_event_int_clear_enable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(channel);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gabc8bebf2390d859f55d96ae141499c11" kindref="member">nrf_grtc_int_enable</ref>(p_reg,<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7d6f2b3291aaebfb0165d2487e3a03fd" kindref="member">nrf_grtc_sys_counter_compare_event_enable</ref>(p_reg,<sp/>channel);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="361"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>compare<sp/>GRTC<sp/>event.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>of<sp/>the<sp/>corresponding<sp/>event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga95f43262f3debbb0d81b300dca09e816" kindref="member">nrfy_grtc_sys_counter_compare_event_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="379"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>compare<sp/>GRTC<sp/>event.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>of<sp/>the<sp/>corresponding<sp/>event<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gaf5b0c8e0db4cb993893d87b73f741ecb" kindref="member">nrfy_grtc_sys_counter_compare_event_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRTC<sp/>capture<sp/>channel.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/><sp/><sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga87f20166e93ddf3761720c5587cb2c19" kindref="member">nrfy_grtc_sys_counter_capture_subscribe_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga19e3d64a1f7fa2c2e524b63910135ef8" kindref="member">nrf_grtc_subscribe_set</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gade023fd81fb28e313e10352daf01d9e3" kindref="member">nrf_grtc_sys_counter_capture_task_get</ref>(cc_channel),<sp/>channel);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="408"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRTC<sp/>capture<sp/>channel.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gae439f450d795c60bb78de6899fef2b54" kindref="member">nrfy_grtc_sys_counter_capture_subscribe_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae8dbd19ec8fb112e7254ffc0a32aba40" kindref="member">nrf_grtc_subscribe_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gade023fd81fb28e313e10352daf01d9e3" kindref="member">nrf_grtc_sys_counter_capture_task_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRTC<sp/>compare<sp/>channel.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/><sp/><sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gacac3830342f55dd92c780f16af38689a" kindref="member">nrfy_grtc_sys_counter_compare_publish_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga28ca8bcda6222fc60e172767c67d7469" kindref="member">nrf_grtc_publish_set</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel),<sp/>channel);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GRTC<sp/>compare<sp/>channel.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>cc_channel<sp/>Compare<sp/>channel<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gab2295c43baf3838bca1181ccad3fe5ac" kindref="member">nrfy_grtc_sys_counter_compare_publish_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga1dde9445416963417a00e2b678de7121" kindref="member">nrf_grtc_publish_clear</ref>(p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_cc_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gab6221d36ce57429ad26109598fa94875" kindref="member">nrfy_grtc_sys_counter_cc_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_value)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaafb4da6fab8ddad328e0f8689e1e2ff5" kindref="member">nrf_grtc_sys_counter_cc_set</ref>(p_reg,<sp/>cc_channel,<sp/>cc_value);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="461"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_cc_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrfy__grtc_1ga462e0fe5530b43223a2f15aeec37ce24" kindref="member">nrfy_grtc_sys_counter_cc_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>cc<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gaa250ccd626fce4e373842b6df5e97096" kindref="member">nrf_grtc_sys_counter_cc_get</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_cc_add_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga30f11d6056e39127c63d142ff04a1263" kindref="member">nrfy_grtc_sys_counter_cc_add_set</ref>(NRF_GRTC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga4e34fb922643e9f448f248b410e2e8e4" kindref="member">nrf_grtc_cc_add_reference_t</ref><sp/>reference)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae7bc99a50731a75e6b76e8d058772bb7" kindref="member">nrf_grtc_sys_counter_cc_add_set</ref>(p_reg,<sp/>cc_channel,<sp/>value,<sp/>reference);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_rt_counter_cc_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga6320534b7c245eb31fe2099308106f15" kindref="member">nrfy_grtc_rt_counter_cc_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_value,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sync)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga45a090610eefa2264e4f12602b7f9d9b" kindref="member">nrf_grtc_rt_counter_cc_set</ref>(p_reg,<sp/>cc_value,<sp/>sync);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_rt_counter_cc_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrfy__grtc_1ga02808e3743592caaacb62c4857ea67b2" kindref="member">nrfy_grtc_rt_counter_cc_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>cc<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga2f5e743ecea72ace3f5fb81816b56d94" kindref="member">nrf_grtc_rt_counter_cc_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga42cb0d1471f94ca063606e794accbb8b" kindref="member">nrfy_grtc_int_enable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gabc8bebf2390d859f55d96ae141499c11" kindref="member">nrf_grtc_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gad8ed7e466b522334ddec1568b1f07d42" kindref="member">nrfy_grtc_int_disable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga8b77b156aaa2a75e9faf07d52119342e" kindref="member">nrf_grtc_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="515"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga2ae4eaec93768c1045de33d4710edf31" kindref="member">nrfy_grtc_int_enable_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gada5181d48f4f1d68d0f768efedf71c5c" kindref="member">nrf_grtc_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_int_pending_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga158c2b8721cb662dbb01474bc156f84c" kindref="member">nrfy_grtc_int_pending_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pending<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gafd34374e937c50084e2b9969913a591c" kindref="member">nrf_grtc_int_pending_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_shorts_enable}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga8bcadf0e254b6b7085b9ce68804e128f" kindref="member">nrfy_grtc_shorts_enable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gac5690d49bef4f831062094fc728bda33" kindref="member">nrf_grtc_shorts_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_shorts_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga21531bd339c06f1789d702ce74cbdf46" kindref="member">nrfy_grtc_shorts_disable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga03a9d5d7e98462b9c3cdd8bfabacd806" kindref="member">nrf_grtc_shorts_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_shorts_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga6d9605cb10ae67d4c53a6d7629358525" kindref="member">nrfy_grtc_shorts_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaf7747e1873e5594b2d2e4df6394f9ab9" kindref="member">nrf_grtc_shorts_set</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_subscribe_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga2358edee870ce5e12930cefa77e471db" kindref="member">nrfy_grtc_subscribe_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga19e3d64a1f7fa2c2e524b63910135ef8" kindref="member">nrf_grtc_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="565"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga66051bd59b63ee6fe7b140e1d98a10a9" kindref="member">nrfy_grtc_subscribe_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae8dbd19ec8fb112e7254ffc0a32aba40" kindref="member">nrf_grtc_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="572"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga9851ad2cd1340acf43299228a70df348" kindref="member">nrfy_grtc_publish_set</ref>(NRF_GRTC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga28ca8bcda6222fc60e172767c67d7469" kindref="member">nrf_grtc_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gaa90e66c56bd8e58df57ae61bcf14fa26" kindref="member">nrfy_grtc_publish_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga1dde9445416963417a00e2b678de7121" kindref="member">nrf_grtc_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="588"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga03445432d87df9968e3443f34ec491eb" kindref="member">nrfy_grtc_event_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="597"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga5fbe6b175b77b5293998cd270db900f6" kindref="member">nrfy_grtc_event_clear</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="604"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_overflow_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gae17f226ce6fc9d3dff8533a5225826eb" kindref="member">nrfy_grtc_sys_counter_overflow_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga9eab767581794e74e4ae08a70ea60c8b" kindref="member">nrf_grtc_sys_counter_overflow_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga82c0416a5d37aec51daefee8dfb1f7b5" kindref="member">nrfy_grtc_event_address_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__grtc__hal_1ga0ef4ff14ec092be3fb37ef38576514f0" kindref="member">nrf_grtc_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="620"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga943414a9733d513123455ee1d966edf8" kindref="member">nrfy_grtc_task_address_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__grtc__hal_1ga60e00f5ace03a5c5b72fa45acda805d2" kindref="member">nrf_grtc_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="627"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gafd3c3fe477a71912cd23eae6bf5ac525" kindref="member">nrfy_grtc_task_trigger</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa52de35bb6ecb5ebc17c22e2d28a6480" kindref="member">nrf_grtc_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="634"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_capture_task_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__grtc__hal_1ga3ead45038f169b586ca21cd6ef8acde9" kindref="member">nrf_grtc_task_t</ref><sp/><ref refid="group__nrfy__grtc_1gac300fa79759ed9c782551d74400460bb" kindref="member">nrfy_grtc_sys_counter_capture_task_get</ref>(uint8_t<sp/>cc_channel)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__grtc__hal_1gade023fd81fb28e313e10352daf01d9e3" kindref="member">nrf_grtc_sys_counter_capture_task_get</ref>(cc_channel);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="640"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_compare_event_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gad3734336eb27a16c51438d56826162e9" kindref="member">nrfy_grtc_sys_counter_compare_event_enable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7d6f2b3291aaebfb0165d2487e3a03fd" kindref="member">nrf_grtc_sys_counter_compare_event_enable</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="648"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_compare_event_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gadfea9e230ba915d755cf9de2c394823c" kindref="member">nrfy_grtc_sys_counter_compare_event_disable</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae04c6f373955979278eb18060ff3a4a8" kindref="member">nrf_grtc_sys_counter_compare_event_disable</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="656"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_compare_event_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/><ref refid="group__nrfy__grtc_1gaec192772505605b7d789e28fc4fe93e5" kindref="member">nrfy_grtc_sys_counter_compare_event_get</ref>(uint8_t<sp/>cc_channel)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel);</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="662"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_cc_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga9e3c8bac529ed41a0c514e8dd1096811" kindref="member">nrfy_grtc_sys_counter_cc_enable_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga7faf1283a0d67f2428ad6d8d6d03f53e" kindref="member">nrf_grtc_sys_counter_cc_enable_check</ref>(p_reg,<sp/>cc_channel);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="673"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga465c62a2f10c77885d20b7d1ffeb6a79" kindref="member">nrfy_grtc_sys_counter_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga86af4577d105dafbdae927ed086b8b2f" kindref="member">nrf_grtc_sys_counter_set</ref>(p_reg,<sp/>enable);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="680"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_auto_mode_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga2c75e47f370027cf04629db902381592" kindref="member">nrfy_grtc_sys_counter_auto_mode_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaafb45e5bee0a2344906f9a02f4d59a71" kindref="member">nrf_grtc_sys_counter_auto_mode_set</ref>(p_reg,<sp/>enable);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="687"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_auto_mode_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga3e5036c8cde696e946c88933c9e13216" kindref="member">nrfy_grtc_sys_counter_auto_mode_check</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga9dab8e70b7c645b97fc70833003f4dda" kindref="member">nrf_grtc_sys_counter_auto_mode_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="698"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_active_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gab1a7f37c3112baac32c02f69e1793b51" kindref="member">nrfy_grtc_sys_counter_active_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga5c1bce12a2b33339177c00b29bf8e332" kindref="member">nrf_grtc_sys_counter_active_set</ref>(p_reg,<sp/>enable);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="705"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_active_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga36b06cb1dfaaa86fe4a8b0d5f4254cd8" kindref="member">nrfy_grtc_sys_counter_active_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gaf2aab3b971214da6438ece86ec435146" kindref="member">nrf_grtc_sys_counter_active_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_SYSCOUNTER_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="715"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga906ee96a82ba05db47948cfd2ca71026" kindref="member">nrfy_grtc_sys_counter_check</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__grtc__hal_1ga3289a3d075afcbc7b8562a8c5a48adae" kindref="member">nrf_grtc_sys_counter_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_active_state_request_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gab3027ac6eaa2445c8c70d12400567fce" kindref="member">nrfy_grtc_sys_counter_active_state_request_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gac0d0dba9e8fbfd84eef88aad1d048b86" kindref="member">nrf_grtc_sys_counter_active_state_request_set</ref>(p_reg,<sp/>enable);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="729"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_active_state_request_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga2a63f688b80706c120e2b6e6cd8d1353" kindref="member">nrfy_grtc_sys_counter_active_state_request_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gaa1f8757bb0c09e0bf86e0cdefa9af124" kindref="member">nrf_grtc_sys_counter_active_state_request_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="739"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_active_state_request_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="741"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfy__grtc_1ga23e78db84de6b0484fd95e38223d05f7" kindref="member">nrfy_grtc_sys_counter_active_state_request_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>request<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga26a1b100c80264f41628f7578e330d9f" kindref="member">nrf_grtc_sys_counter_active_state_request_get</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="751"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_interval_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gabefa34e9e3a1efa00091cfe6b20afebf" kindref="member">nrfy_grtc_sys_counter_interval_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga467b68e18e9c2cfc248baf75b587810f" kindref="member">nrf_grtc_sys_counter_interval_set</ref>(p_reg,<sp/>value);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="758"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_sys_counter_interval_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1gaba27bc33b69c4f557887335e6585202b" kindref="member">nrfy_grtc_sys_counter_interval_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>interval<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga2d1cad3bd0f794e0c8b5c9d5be80e813" kindref="member">nrf_grtc_sys_counter_interval_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interval;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="767"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_timeout_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga7739a66deace8228bee7557a28b2891e" kindref="member">nrfy_grtc_timeout_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga8b3480c8301f0beb550f8cf8247a3452" kindref="member">nrf_grtc_timeout_set</ref>(p_reg,<sp/>value);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="774"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_timeout_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga3bcd654a7242986b24bf63f9af92831e" kindref="member">nrfy_grtc_timeout_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>timeout<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gae1ce6ee813308fce0a2901fb55459678" kindref="member">nrf_grtc_timeout_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeout;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_waketime_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga0ad9690419cdf9e08a28ee73a217bc51" kindref="member">nrfy_grtc_waketime_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gabf6543ddb24a2c79a2ef1ab8aeb335f1" kindref="member">nrf_grtc_waketime_set</ref>(p_reg,<sp/>value);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="790"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_waketime_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga58a180c979f29bf131e4872b429c4dec" kindref="member">nrfy_grtc_waketime_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>waketime<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga19246ff59e790e2a5d11219c8ad60c8d" kindref="member">nrf_grtc_waketime_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>waketime;</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_PWM</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="801"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_pwm_compare_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gafd203ab35167c43a329c257f54738cb2" kindref="member">nrfy_grtc_pwm_compare_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga421c91decb698f3e46897b94ad9ab4c9" kindref="member">nrf_grtc_pwm_compare_set</ref>(p_reg,<sp/>value);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_pwm_compare_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1ga5498d27b248275ede2627ae4456bd8da" kindref="member">nrfy_grtc_pwm_compare_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>compare<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gae208d47c196fd01485ff5916d0c7a882" kindref="member">nrf_grtc_pwm_compare_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_CLKOUT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="819"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clkout_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga8862129a895d3df6f064b29723c0f18d" kindref="member">nrfy_grtc_clkout_set</ref>(NRF_GRTC_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gacdc216d006ac43c34a154cffdf0ca69a" kindref="member">nrf_grtc_clkout_t</ref><sp/>clkout,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaecaf461188701a90c6be463db4298f9e" kindref="member">nrf_grtc_clkout_set</ref>(p_reg,<sp/>clkout,<sp/>enable);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="828"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clkout_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gaa60bbe83662f0540d6a320e167bbbfd5" kindref="member">nrfy_grtc_clkout_enable_check</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gacdc216d006ac43c34a154cffdf0ca69a" kindref="member">nrf_grtc_clkout_t</ref><sp/><sp/><sp/><sp/><sp/>clkout)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga03419f816fcd0f2380d0b9e45d44e55c" kindref="member">nrf_grtc_clkout_enable_check</ref>(p_reg,<sp/>clkout);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="838"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clkout_divider_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1gaf87d6a0734928399c7c8f718e188d247" kindref="member">nrfy_grtc_clkout_divider_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga6aed79f13e1b69ba1a6d9167d2b876d4" kindref="member">nrf_grtc_clkout_divider_set</ref>(p_reg,<sp/>value);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="845"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clkout_divider_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__grtc_1gadd23a5ac64a2556e3c483465ba37277c" kindref="member">nrfy_grtc_clkout_divider_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>divider<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga3371a887f116e28c9476de431d1145b3" kindref="member">nrf_grtc_clkout_divider_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>divider;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_CLKOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_CLKSEL</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="856"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clksel_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__grtc_1ga032d85d3e74fba5c4db6b42677b5c3cc" kindref="member">nrfy_grtc_clksel_set</ref>(NRF_GRTC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__grtc__hal_1gae439fae87a8f39984fe088a02960a7ae" kindref="member">nrf_grtc_clksel_t</ref><sp/>clksel)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga8210f5a14a3afcadf3c40435dcf0fed0" kindref="member">nrf_grtc_clksel_set</ref>(p_reg,<sp/>clksel);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="863"><highlight class="comment">/**<sp/>@refhal{nrf_grtc_clksel_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__grtc__hal_1gae439fae87a8f39984fe088a02960a7ae" kindref="member">nrf_grtc_clksel_t</ref><sp/><ref refid="group__nrfy__grtc_1ga084b580af47f1735a4f96c3867d2a9c2" kindref="member">nrfy_grtc_clksel_get</ref>(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gae439fae87a8f39984fe088a02960a7ae" kindref="member">nrf_grtc_clksel_t</ref><sp/>clksel<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga3fc756bda45d4b3626a953c47540b635" kindref="member">nrf_grtc_clksel_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clksel;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_CLKSEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_grtc_event_enabled_clear(NRF_GRTC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="878"><highlight class="normal">{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_grtc_event_handle(NRF_GRTC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__grtc__hal_1ga8c4cf763128d803a8e653669afac8918" kindref="member">nrf_grtc_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gaa9967aaf0b8cf60576ac6625e2a56759" kindref="member">nrf_grtc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_grtc_events_process(NRF_GRTC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>event_mask<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>channel_mask<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gadeccbbfcabae01bb49072784d90df213" kindref="member">NRF_GRTC_SYSCOUNTER_ALL_CHANNELS_INT_MASK</ref><sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(channel_mask)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_channel<sp/>=<sp/>(uint8_t)NRF_CTZ(channel_mask);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1ga7ae05a37545fa5a2c94e90d048bb2b65" kindref="member">nrf_grtc_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga32ea992e597b134f4b3d41a8c62f5879" kindref="member">nrf_grtc_sys_counter_compare_event_get</ref>(cc_channel);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_grtc_event_handle(p_reg,<sp/>mask,<sp/>event,<sp/>&amp;event_mask);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask<sp/>&amp;=<sp/>~NRF_GRTC_CHANNEL_INT_MASK(cc_channel);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_grtc_event_handle(p_reg,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65aaf77e55d0b716fe06c2b56f2faa275a4" kindref="member">NRF_GRTC_EVENT_RTCOMPARE</ref>,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;event_mask);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_grtc_event_handle(p_reg,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__grtc__hal_1gga7ae05a37545fa5a2c94e90d048bb2b65ae7e815bcad2414fc4de6025fc9329e7c" kindref="member">NRF_GRTC_EVENT_RTCOMPARESYNC</ref>,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;event_mask);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event_mask;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint64_t<sp/>__nrfy_internal_grtc_rt_counter_read(NRF_GRTC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>counter_l<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1gae364666c46ac47cc496a071195194ae0" kindref="member">nrf_grtc_rt_counter_low_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>counter_h<sp/>=<sp/><ref refid="group__nrf__grtc__hal_1ga2aaf34328a3c13cb8912fa89f51354c8" kindref="member">nrf_grtc_rt_counter_high_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint64_t)counter_l<sp/>|<sp/>((uint64_t)counter_h<sp/>&lt;&lt;<sp/>32);</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_HAS_RTCOUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_GRTC_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_grtc.h"/>
  </compounddef>
</doxygen>
