<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfx__glue_8h" kind="file" language="C++">
    <compoundname>nrfx_glue.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" prot="public" static="no">
        <name>NRFX_ASSERT</name>
        <param><defname>expression</defname></param>
        <briefdescription>
<para>Macro for placing a runtime assertion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="67" column="9" bodyfile="templates/nrfx_glue.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gab3edd9fe23f460c77b83defb81fc4983" prot="public" static="no">
        <name>NRFX_STATIC_ASSERT</name>
        <param><defname>expression</defname></param>
        <briefdescription>
<para>Macro for placing a compile time assertion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>Expression to be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="74" column="9" bodyfile="templates/nrfx_glue.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" prot="public" static="no">
        <name>NRFX_IRQ_PRIORITY_SET</name>
        <param><defname>irq_number</defname></param>
        <param><defname>priority</defname></param>
        <briefdescription>
<para>Macro for setting the priority of a specific IRQ. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="84" column="9" bodyfile="templates/nrfx_glue.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" prot="public" static="no">
        <name>NRFX_IRQ_ENABLE</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for enabling a specific IRQ. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="91" column="9" bodyfile="templates/nrfx_glue.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga331709a975e89d34ee35d1e912c676a3" prot="public" static="no">
        <name>NRFX_IRQ_IS_ENABLED</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for checking if a specific IRQ is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If the IRQ is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="101" column="9" bodyfile="templates/nrfx_glue.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" prot="public" static="no">
        <name>NRFX_IRQ_DISABLE</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for disabling a specific IRQ. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="108" column="9" bodyfile="templates/nrfx_glue.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga8a87989ffd59eb59521dbfddc4725326" prot="public" static="no">
        <name>NRFX_IRQ_PENDING_SET</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for setting a specific IRQ as pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="115" column="9" bodyfile="templates/nrfx_glue.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga3c3deb5e5ab361f99a15d1807e049dbf" prot="public" static="no">
        <name>NRFX_IRQ_PENDING_CLEAR</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for clearing the pending status of a specific IRQ. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>IRQ number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="122" column="9" bodyfile="templates/nrfx_glue.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga16b25c47c153dd12325ec6db2cf769a8" prot="public" static="no">
        <name>NRFX_IRQ_IS_PENDING</name>
        <param><defname>irq_number</defname></param>
        <briefdescription>
<para>Macro for checking the pending status of a specific IRQ. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If the IRQ is pending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="130" column="9" bodyfile="templates/nrfx_glue.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga1c1dcfdd988c74825404d06d9a422ea2" prot="public" static="no">
        <name>NRFX_CRITICAL_SECTION_ENTER</name>
        <param></param>
        <briefdescription>
<para>Macro for entering into a critical section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="133" column="9" bodyfile="templates/nrfx_glue.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga42a57ef447c1a527fda2db8e920b838c" prot="public" static="no">
        <name>NRFX_CRITICAL_SECTION_EXIT</name>
        <param></param>
        <briefdescription>
<para>Macro for exiting from a critical section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="136" column="9" bodyfile="templates/nrfx_glue.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga2032622ef2676c1409cd7530a30cf031" prot="public" static="no">
        <name>NRFX_DELAY_DWT_BASED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>When set to a non-zero value, this macro specifies that <ref refid="group__nrfx__coredep_1ga3311d54fcf27b1579b8cc3eb0bf063b9" kindref="member">nrfx_coredep_delay_us</ref> uses a precise DWT-based solution. A compilation error is generated if the DWT unit is not present in the SoC used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="146" column="9" bodyfile="templates/nrfx_glue.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga97d116463eb34d7e7b6317861b905d7b" prot="public" static="no">
        <name>NRFX_DELAY_US</name>
        <param><defname>us_time</defname></param>
        <briefdescription>
<para>Macro for delaying the code execution for at least the specified time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>us_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of microseconds to wait. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="153" column="9" bodyfile="templates/nrfx_glue.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga5c369f6aae1199f71a2b1899dd65cc15" prot="public" static="no">
        <name>nrfx_atomic_t</name>
        <briefdescription>
<para>Atomic 32-bit unsigned type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="158" column="9" bodyfile="templates/nrfx_glue.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga10787acb96f2da064969363b91b46463" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_STORE</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for storing a value to an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to store.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="168" column="9" bodyfile="templates/nrfx_glue.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gafb9bdf30cc447412345e59fea53ff91c" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_OR</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for running a bitwise OR operation on an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the second operand in the OR operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="178" column="9" bodyfile="templates/nrfx_glue.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga04cc6976c428414c79addf9f415d4870" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_AND</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for running a bitwise AND operation on an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the second operand in the AND operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="189" column="9" bodyfile="templates/nrfx_glue.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga55c279ae8949e5d81aef93ea0e9917b5" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_XOR</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for running a bitwise XOR operation on an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the second operand in the XOR operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="200" column="9" bodyfile="templates/nrfx_glue.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga07ad1ed1f438c34fa3910b9e2a8239a1" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_ADD</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for running an addition operation on an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the second operand in the ADD operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="211" column="9" bodyfile="templates/nrfx_glue.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga0dabe8b13d30a25162e0b15660e843a0" prot="public" static="no">
        <name>NRFX_ATOMIC_FETCH_SUB</name>
        <param><defname>p_data</defname></param>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for running a subtraction operation on an atomic object and returning its previous value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the second operand in the SUB operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Previous value of the atomic object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="222" column="9" bodyfile="templates/nrfx_glue.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga11dea9855bb80c01a3cff42e8543b228" prot="public" static="no">
        <name>NRFX_ATOMIC_CAS</name>
        <param><defname>p_data</defname></param>
        <param><defname>old_value</defname></param>
        <param><defname>new_value</defname></param>
        <briefdescription>
<para>Macro for running compare and swap on an atomic object. </para>
        </briefdescription>
        <detaileddescription>
<para>Value is updated to the new value only if it previously equaled old value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Atomic memory pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Expected old value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_value</parametername>
</parameternamelist>
<parameterdescription>
<para>New value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If value was updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If value was not updated because location was not equal to <computeroutput>old_value</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="236" column="9" bodyfile="templates/nrfx_glue.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga1fc5f31b46651407bdea454e28700d2f" prot="public" static="no">
        <name>NRFX_CLZ</name>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for counting leading zeros. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>A word value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of leading 0-bits in <computeroutput>value</computeroutput>, starting at the most significant bit position. If x is 0, the result is undefined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="246" column="9" bodyfile="templates/nrfx_glue.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga0f858b26d4214ea63aef51fbafdca7b0" prot="public" static="no">
        <name>NRFX_CTZ</name>
        <param><defname>value</defname></param>
        <briefdescription>
<para>Macro for counting trailing zeros. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>A word value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of trailing 0-bits in <computeroutput>value</computeroutput>, starting at the least significant bit position. If x is 0, the result is undefined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="256" column="9" bodyfile="templates/nrfx_glue.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga3516a002820b1e93e223380e311a94ee" prot="public" static="no">
        <name>NRFX_CUSTOM_ERROR_CODES</name>
        <initializer>0</initializer>
        <briefdescription>
<para>When set to a non-zero value, this macro specifies that the <ref refid="group__nrfx__error__codes" kindref="compound">Global Error Codes</ref> and the <ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref> type itself are defined in a customized way and the default definitions from <computeroutput>&lt;nrfx_error.h&gt;</computeroutput> should not be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="266" column="9" bodyfile="templates/nrfx_glue.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gae710bedb9d8c9dd221dbe76738183ea8" prot="public" static="no">
        <name>NRFX_EVENT_READBACK_ENABLED</name>
        <initializer>1</initializer>
        <briefdescription>
<para>When set to a non-zero value, this macro specifies that inside HALs the event registers are read back after clearing, on devices that otherwise could defer the actual register modification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="275" column="9" bodyfile="templates/nrfx_glue.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga1e40cebfc1184b8b3e04fe494e7ce1cf" prot="public" static="no">
        <name>NRFY_CACHE_WB</name>
        <param><defname>p_buffer</defname></param>
        <param><defname>size</defname></param>
        <briefdescription>
<para>Macro for writing back cache lines associated with the specified buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Macro should be empty if data cache is disabled or not present.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="287" column="9" bodyfile="templates/nrfx_glue.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gaadc8e2bfb18e296b553ab5daba23fa7a" prot="public" static="no">
        <name>NRFY_CACHE_INV</name>
        <param><defname>p_buffer</defname></param>
        <param><defname>size</defname></param>
        <briefdescription>
<para>Macro for invalidating cache lines associated with the specified buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Macro should be empty if data cache is disabled or not present.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="297" column="9" bodyfile="templates/nrfx_glue.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gae6a4ed0b0547a24babb71a4bc2335252" prot="public" static="no">
        <name>NRFY_CACHE_WBINV</name>
        <param><defname>p_buffer</defname></param>
        <param><defname>size</defname></param>
        <briefdescription>
<para>Macro for writing back and invalidating cache lines associated with the specified buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Macro should be empty if data cache is disabled or not present.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="308" column="9" bodyfile="templates/nrfx_glue.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga37b24e9edb6405ce2b4e5550f732dbb7" prot="public" static="no">
        <name>NRFX_DPPI_CHANNELS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines DPPI channels that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="313" column="9" bodyfile="templates/nrfx_glue.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga5e713756e01eccb03653e7285f9b1abd" prot="public" static="no">
        <name>NRFX_DPPI_GROUPS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines DPPI groups that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="316" column="9" bodyfile="templates/nrfx_glue.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga746e0cb5bec951bfad0dca1135176392" prot="public" static="no">
        <name>NRFX_PPI_CHANNELS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines PPI channels that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="319" column="9" bodyfile="templates/nrfx_glue.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gae12509ae47924b274993f410d86a1d9a" prot="public" static="no">
        <name>NRFX_PPI_GROUPS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines PPI groups that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="322" column="9" bodyfile="templates/nrfx_glue.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1ga16fba5c8f0a48f4004a6db7bda373daa" prot="public" static="no">
        <name>NRFX_GPIOTE_CHANNELS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines GPIOTE channels that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="325" column="9" bodyfile="templates/nrfx_glue.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gaa5e0f2b88f5300380652f3fa7b02f679" prot="public" static="no">
        <name>NRFX_EGUS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines EGU instances that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="328" column="9" bodyfile="templates/nrfx_glue.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__glue_1gaa1580d2a7d2a6ec67c471fac00b84576" prot="public" static="no">
        <name>NRFX_TIMERS_USED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Bitmask that defines TIMER instances that are reserved for use outside of the nrfx library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="templates/nrfx_glue.h" line="331" column="9" bodyfile="templates/nrfx_glue.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_GLUE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GLUE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>IS<sp/>A<sp/>TEMPLATE<sp/>FILE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>copied<sp/>to<sp/>a<sp/>suitable<sp/>location<sp/>within<sp/>the<sp/>host<sp/>environment<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>nrfx<sp/>is<sp/>integrated,<sp/>and<sp/>the<sp/>following<sp/>macros<sp/>should<sp/>be<sp/>provided<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>And<sp/>this<sp/>comment<sp/>should<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>customized<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfx_glue<sp/>nrfx_glue.h</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrfx</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>file<sp/>contains<sp/>macros<sp/>that<sp/>should<sp/>be<sp/>implemented<sp/>according<sp/>to</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>needs<sp/>of<sp/>the<sp/>host<sp/>environment<sp/>into<sp/>which<sp/>@em<sp/>nrfx<sp/>is<sp/>integrated.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uncomment<sp/>this<sp/>line<sp/>to<sp/>use<sp/>the<sp/>standard<sp/>MDK<sp/>way<sp/>of<sp/>binding<sp/>IRQ<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>linking<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;soc/nrfx_irqs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>placing<sp/>a<sp/>runtime<sp/>assertion.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@param<sp/>expression<sp/>Expression<sp/>to<sp/>be<sp/>evaluated.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ASSERT(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>placing<sp/>a<sp/>compile<sp/>time<sp/>assertion.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@param<sp/>expression<sp/>Expression<sp/>to<sp/>be<sp/>evaluated.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_STATIC_ASSERT(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>setting<sp/>the<sp/>priority<sp/>of<sp/>a<sp/>specific<sp/>IRQ.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@param<sp/>priority<sp/><sp/><sp/>Priority<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_PRIORITY_SET(irq_number,<sp/>priority)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>enabling<sp/>a<sp/>specific<sp/>IRQ.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_ENABLE(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>checking<sp/>if<sp/>a<sp/>specific<sp/>IRQ<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>If<sp/>the<sp/>IRQ<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Otherwise.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_IS_ENABLED(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>disabling<sp/>a<sp/>specific<sp/>IRQ.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_DISABLE(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>setting<sp/>a<sp/>specific<sp/>IRQ<sp/>as<sp/>pending.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_PENDING_SET(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>clearing<sp/>the<sp/>pending<sp/>status<sp/>of<sp/>a<sp/>specific<sp/>IRQ.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@param<sp/>irq_number<sp/>IRQ<sp/>number.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_PENDING_CLEAR(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>checking<sp/>the<sp/>pending<sp/>status<sp/>of<sp/>a<sp/>specific<sp/>IRQ.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>If<sp/>the<sp/>IRQ<sp/>is<sp/>pending.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Otherwise.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_IRQ_IS_PENDING(irq_number)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>entering<sp/>into<sp/>a<sp/>critical<sp/>section.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_CRITICAL_SECTION_ENTER()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>exiting<sp/>from<sp/>a<sp/>critical<sp/>section.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_CRITICAL_SECTION_EXIT()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>@brief<sp/>When<sp/>set<sp/>to<sp/>a<sp/>non-zero<sp/>value,<sp/>this<sp/>macro<sp/>specifies<sp/>that</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrfx_coredep_delay_us<sp/>uses<sp/>a<sp/>precise<sp/>DWT-based<sp/>solution.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>compilation<sp/>error<sp/>is<sp/>generated<sp/>if<sp/>the<sp/>DWT<sp/>unit<sp/>is<sp/>not<sp/>present</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>SoC<sp/>used.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_DELAY_DWT_BASED<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>delaying<sp/>the<sp/>code<sp/>execution<sp/>for<sp/>at<sp/>least<sp/>the<sp/>specified<sp/>time.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@param<sp/>us_time<sp/>Number<sp/>of<sp/>microseconds<sp/>to<sp/>wait.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_DELAY_US(us_time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment">/**<sp/>@brief<sp/>Atomic<sp/>32-bit<sp/>unsigned<sp/>type.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>nrfx_atomic_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>storing<sp/>a<sp/>value<sp/>to<sp/>an<sp/>atomic<sp/>object<sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>to<sp/>store.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_STORE(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>a<sp/>bitwise<sp/>OR<sp/>operation<sp/>on<sp/>an<sp/>atomic<sp/>object<sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>in<sp/>the<sp/>OR<sp/>operation.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_OR(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>a<sp/>bitwise<sp/>AND<sp/>operation<sp/>on<sp/>an<sp/>atomic<sp/>object</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>in<sp/>the<sp/>AND<sp/>operation.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_AND(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>a<sp/>bitwise<sp/>XOR<sp/>operation<sp/>on<sp/>an<sp/>atomic<sp/>object</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>in<sp/>the<sp/>XOR<sp/>operation.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_XOR(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>an<sp/>addition<sp/>operation<sp/>on<sp/>an<sp/>atomic<sp/>object</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>in<sp/>the<sp/>ADD<sp/>operation.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_ADD(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>a<sp/>subtraction<sp/>operation<sp/>on<sp/>an<sp/>atomic<sp/>object</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>returning<sp/>its<sp/>previous<sp/>value.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_data<sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/><sp/>Value<sp/>of<sp/>the<sp/>second<sp/>operand<sp/>in<sp/>the<sp/>SUB<sp/>operation.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@return<sp/>Previous<sp/>value<sp/>of<sp/>the<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_FETCH_SUB(p_data,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>running<sp/>compare<sp/>and<sp/>swap<sp/>on<sp/>an<sp/>atomic<sp/>object.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>Value<sp/>is<sp/>updated<sp/>to<sp/>the<sp/>new<sp/>value<sp/>only<sp/>if<sp/>it<sp/>previously<sp/>equaled<sp/>old<sp/>value.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param[in,out]<sp/>p_data<sp/><sp/><sp/><sp/>Atomic<sp/>memory<sp/>pointer.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/><sp/><sp/><sp/>old_value<sp/>Expected<sp/>old<sp/>value.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/><sp/><sp/><sp/>new_value<sp/>New<sp/>value.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>If<sp/>value<sp/>was<sp/>updated.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>If<sp/>value<sp/>was<sp/>not<sp/>updated<sp/>because<sp/>location<sp/>was<sp/>not<sp/>equal<sp/>to<sp/>@p<sp/>old_value.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_ATOMIC_CAS(p_data,<sp/>old_value,<sp/>new_value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>counting<sp/>leading<sp/>zeros.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/>A<sp/>word<sp/>value.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>leading<sp/>0-bits<sp/>in<sp/>@p<sp/>value,<sp/>starting<sp/>at<sp/>the<sp/>most<sp/>significant<sp/>bit<sp/>position.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>x<sp/>is<sp/>0,<sp/>the<sp/>result<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_CLZ(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>counting<sp/>trailing<sp/>zeros.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>value<sp/>A<sp/>word<sp/>value.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>trailing<sp/>0-bits<sp/>in<sp/>@p<sp/>value,<sp/>starting<sp/>at<sp/>the<sp/>least<sp/>significant<sp/>bit<sp/>position.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>x<sp/>is<sp/>0,<sp/>the<sp/>result<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_CTZ(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@brief<sp/>When<sp/>set<sp/>to<sp/>a<sp/>non-zero<sp/>value,<sp/>this<sp/>macro<sp/>specifies<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrfx_error_codes<sp/>and<sp/>the<sp/>@ref<sp/>nrfx_err_t<sp/>type<sp/>itself<sp/>are<sp/>defined</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>customized<sp/>way<sp/>and<sp/>the<sp/>default<sp/>definitions<sp/>from<sp/>@c<sp/>&lt;nrfx_error.h&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>not<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_CUSTOM_ERROR_CODES<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="270"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@brief<sp/>When<sp/>set<sp/>to<sp/>a<sp/>non-zero<sp/>value,<sp/>this<sp/>macro<sp/>specifies<sp/>that<sp/>inside<sp/>HALs</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>event<sp/>registers<sp/>are<sp/>read<sp/>back<sp/>after<sp/>clearing,<sp/>on<sp/>devices<sp/>that</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>could<sp/>defer<sp/>the<sp/>actual<sp/>register<sp/>modification.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_EVENT_READBACK_ENABLED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>writing<sp/>back<sp/>cache<sp/>lines<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>buffer.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@note<sp/>Macro<sp/>should<sp/>be<sp/>empty<sp/>if<sp/>data<sp/>cache<sp/>is<sp/>disabled<sp/>or<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_CACHE_WB(p_buffer,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>invalidating<sp/>cache<sp/>lines<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>buffer.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@note<sp/>Macro<sp/>should<sp/>be<sp/>empty<sp/>if<sp/>data<sp/>cache<sp/>is<sp/>disabled<sp/>or<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_CACHE_INV(p_buffer,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>writing<sp/>back<sp/>and<sp/>invalidating<sp/>cache<sp/>lines<sp/>associated<sp/>with</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>buffer.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@note<sp/>Macro<sp/>should<sp/>be<sp/>empty<sp/>if<sp/>data<sp/>cache<sp/>is<sp/>disabled<sp/>or<sp/>not<sp/>present.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_CACHE_WBINV(p_buffer,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>DPPI<sp/>channels<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_DPPI_CHANNELS_USED<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>DPPI<sp/>groups<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_DPPI_GROUPS_USED<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>PPI<sp/>channels<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_CHANNELS_USED<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>PPI<sp/>groups<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_PPI_GROUPS_USED<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>GPIOTE<sp/>channels<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPIOTE_CHANNELS_USED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>EGU<sp/>instances<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_EGUS_USED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">/**<sp/>@brief<sp/>Bitmask<sp/>that<sp/>defines<sp/>TIMER<sp/>instances<sp/>that<sp/>are<sp/>reserved<sp/>for<sp/>use<sp/>outside<sp/>of<sp/>the<sp/>nrfx<sp/>library.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_TIMERS_USED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_GLUE_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="templates/nrfx_glue.h"/>
  </compounddef>
</doxygen>
