<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__gpiote__hal" kind="group">
    <compoundname>nrf_gpiote_hal</compoundname>
    <title>GPIOTE HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1ga9a424db0997c11092f8f69d52155dd9d" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_polarity_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1gga9a424db0997c11092f8f69d52155dd9dafe99b1b050f3c47625e588a0f14085c5" prot="public">
          <name>NRF_GPIOTE_POLARITY_NONE</name>
          <initializer>= GPIOTE_CONFIG_POLARITY_None</initializer>
          <briefdescription>
<para>None. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9a424db0997c11092f8f69d52155dd9da59dda358a841a81671bd372058b46498" prot="public">
          <name>NRF_GPIOTE_POLARITY_LOTOHI</name>
          <initializer>= GPIOTE_CONFIG_POLARITY_LoToHi</initializer>
          <briefdescription>
<para>Low to high. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9a424db0997c11092f8f69d52155dd9da97c193ac03f0691bea38c2283b55fa8a" prot="public">
          <name>NRF_GPIOTE_POLARITY_HITOLO</name>
          <initializer>= GPIOTE_CONFIG_POLARITY_HiToLo</initializer>
          <briefdescription>
<para>High to low. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9a424db0997c11092f8f69d52155dd9da00487cd8286ff071ca751cd4a00295d5" prot="public">
          <name>NRF_GPIOTE_POLARITY_TOGGLE</name>
          <initializer>= GPIOTE_CONFIG_POLARITY_Toggle</initializer>
          <briefdescription>
<para>Toggle. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Polarity for the GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="179" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1gab280bbb7269ab98a97e7b47d906ef9aa" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_outinit_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1ggab280bbb7269ab98a97e7b47d906ef9aaae0df1a0e930bfe3b198a9692d9916667" prot="public">
          <name>NRF_GPIOTE_INITIAL_VALUE_LOW</name>
          <initializer>= GPIOTE_CONFIG_OUTINIT_Low</initializer>
          <briefdescription>
<para>Low to high. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggab280bbb7269ab98a97e7b47d906ef9aaa1fc9af8ce3fcd7165b3c090b564e9aa4" prot="public">
          <name>NRF_GPIOTE_INITIAL_VALUE_HIGH</name>
          <initializer>= GPIOTE_CONFIG_OUTINIT_High</initializer>
          <briefdescription>
<para>High to low. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Initial output value for the GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="188" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_latency_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1ggae4c435e11fb73e29b2729740eff50207a959d8dad575961cdf7eba397b04d32d9" prot="public">
          <name>NRF_GPIOTE_LATENCY_LOWPOWER</name>
          <initializer>= GPIOTE_LATENCY_LATENCY_LowPower</initializer>
          <briefdescription>
<para>Low Power. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggae4c435e11fb73e29b2729740eff50207a0f66f665ab7ef5919c5a58811e387cae" prot="public">
          <name>NRF_GPIOTE_LATENCY_LOWLATENCY</name>
          <initializer>= GPIOTE_LATENCY_LATENCY_LowLatency</initializer>
          <briefdescription>
<para>Low Latency. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Latency setting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="196" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_task_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa9bb91d2dfe6686571929e645639c8b9d" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_0</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[0])</initializer>
          <briefdescription>
<para>Out task 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa1f0a1403222943322d684495f3a50edd" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_1</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[1])</initializer>
          <briefdescription>
<para>Out task 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aaa433d565fceecc1f6b66ac7ab9e82621" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_2</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[2])</initializer>
          <briefdescription>
<para>Out task 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa5052b79eff202542296ec01891149f19" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_3</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[3])</initializer>
          <briefdescription>
<para>Out task 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa4c7fb065470f4462dd8c329dc00a6c0b" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_4</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[4])</initializer>
          <briefdescription>
<para>Out task 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aaef010e51897470096452a7d963c2450e" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_5</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[5])</initializer>
          <briefdescription>
<para>Out task 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa89079dc4bc9ceccbb49c906e7336ca2b" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_6</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[6])</initializer>
          <briefdescription>
<para>Out task 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aaa1ee1c7dc315bddcee51d07eedd5f49d" prot="public">
          <name>NRF_GPIOTE_TASK_OUT_7</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_OUT[7])</initializer>
          <briefdescription>
<para>Out task 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aac95607d1ad881fde39616f52a9717a19" prot="public">
          <name>NRF_GPIOTE_TASK_SET_0</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[0])</initializer>
          <briefdescription>
<para>Set task 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa505d2320176bbf6761d9fe793c030f91" prot="public">
          <name>NRF_GPIOTE_TASK_SET_1</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[1])</initializer>
          <briefdescription>
<para>Set task 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa38de61669cfa61c2be664c2f4caacc2d" prot="public">
          <name>NRF_GPIOTE_TASK_SET_2</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[2])</initializer>
          <briefdescription>
<para>Set task 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aadf4f495e75b9e4623ccc93682e30b209" prot="public">
          <name>NRF_GPIOTE_TASK_SET_3</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[3])</initializer>
          <briefdescription>
<para>Set task 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa2b92173d8779498c652a1492a7b307c5" prot="public">
          <name>NRF_GPIOTE_TASK_SET_4</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[4])</initializer>
          <briefdescription>
<para>Set task 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aafc494a1da5567682b4ee81ca2487aae0" prot="public">
          <name>NRF_GPIOTE_TASK_SET_5</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[5])</initializer>
          <briefdescription>
<para>Set task 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa5cb08bc55237b51d445b5043c841daec" prot="public">
          <name>NRF_GPIOTE_TASK_SET_6</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[6])</initializer>
          <briefdescription>
<para>Set task 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aacaddf966f5fa88f9d6c9fd640d9808f4" prot="public">
          <name>NRF_GPIOTE_TASK_SET_7</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_SET[7])</initializer>
          <briefdescription>
<para>Set task 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa738ba3f27ee177b5342aed8587974b5b" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_0</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[0])</initializer>
          <briefdescription>
<para>Clear task 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa804d36695a1c11ffbfa7f02a3a27038e" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_1</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[1])</initializer>
          <briefdescription>
<para>Clear task 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa441e852bb4c1956ecf00729d61273187" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_2</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[2])</initializer>
          <briefdescription>
<para>Clear task 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa9bef69cbed6d7629c656c3c37939d73f" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_3</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[3])</initializer>
          <briefdescription>
<para>Clear task 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aad3a65156da13c17ba1334df677a5de7a" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_4</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[4])</initializer>
          <briefdescription>
<para>Clear task 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa5b3fe2d39533c084ee7f567dc9c59e1a" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_5</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[5])</initializer>
          <briefdescription>
<para>Clear task 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa2bd41ccb91f5ff9f523f805c15a7e98c" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_6</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[6])</initializer>
          <briefdescription>
<para>Clear task 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1gga9942884dceccf6c235f66cd780a2bd2aa98ccd1ba7b4b9615d32f1c624104f8fd" prot="public">
          <name>NRF_GPIOTE_TASK_CLR_7</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, TASKS_CLR[7])</initializer>
          <briefdescription>
<para>Clear task 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>GPIOTE tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="204" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="205" bodyend="236"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_event_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ead037d4c4835befb49628eb4f26cb901d" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_0</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[0])</initializer>
          <briefdescription>
<para>In event 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea1f3f7f5d560988d8476431c70ce24ddd" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_1</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[1])</initializer>
          <briefdescription>
<para>In event 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea23f2bff9cf3366e7e90d30469259ca28" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_2</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[2])</initializer>
          <briefdescription>
<para>In event 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea1cbb689e14eb0032319294b44f90b24b" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_3</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[3])</initializer>
          <briefdescription>
<para>In event 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea2f2bb8a9d2ec7b957bce2ca963169be0" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_4</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[4])</initializer>
          <briefdescription>
<para>In event 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea53b630f136f8e26dd1e733760d8d2ff6" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_5</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[5])</initializer>
          <briefdescription>
<para>In event 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea02160e7cc83387a45fca316af7d0965b" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_6</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[6])</initializer>
          <briefdescription>
<para>In event 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea3d7e3841b720c8eb97e2f79032e2726a" prot="public">
          <name>NRF_GPIOTE_EVENT_IN_7</name>
          <initializer>= offsetof(NRF_GPIOTE_Type, EVENTS_IN[7])</initializer>
          <briefdescription>
<para>In event 7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggafb8cdf47efbb10b2c7167adedcc53b9ea5c9d876efe7a641a7727ed6917cc3323" prot="public">
          <name>NRF_GPIOTE_EVENT_PORT</name>
          <initializer>= offsetof(NRF_GPIOTE_Type,  EVENTS_PORT )</initializer>
          <briefdescription>
<para>Port event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>GPIOTE events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="239" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="240" bodyend="252"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_gpiote_int_t</name>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8adbeca001cf38e6a09e3324640c89fbfe" prot="public">
          <name>NRF_GPIOTE_INT_IN0_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN0_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a5c25c5ff63d5053cd29f806b79f7bf57" prot="public">
          <name>NRF_GPIOTE_INT_IN1_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN1_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a64260e6c32c4ee3ecf3d2ea8bc686591" prot="public">
          <name>NRF_GPIOTE_INT_IN2_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN2_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a24b832a6c0d4fd65720d0b60ae9d691a" prot="public">
          <name>NRF_GPIOTE_INT_IN3_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN3_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a443c71eef54898563c3f49dc4e9b6410" prot="public">
          <name>NRF_GPIOTE_INT_IN4_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN4_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8abf564c03a5de77d965ee255f00b46777" prot="public">
          <name>NRF_GPIOTE_INT_IN5_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN5_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8aa31d216cbee1a4e2354054e0980f968e" prot="public">
          <name>NRF_GPIOTE_INT_IN6_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN6_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a347d6b81ee86b6bd808da9036e979a12" prot="public">
          <name>NRF_GPIOTE_INT_IN7_MASK</name>
          <initializer>= NRFX_CONCAT(GPIOTE_INTENSET,  GPIOTE_IRQ_GROUP , _IN7_Msk)</initializer>
          <briefdescription>
<para>GPIOTE interrupt from IN7. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__gpiote__hal_1ggac8fb94d0a0cbdadc3fca32874c4ad1c8a8d642531efba9d3f2102003af2a450a3" prot="public">
          <name>NRF_GPIOTE_INT_PORT_MASK</name>
          <initializer>= (int) GPIOTE_INTENSET_PORT_Msk</initializer>
          <briefdescription>
<para>GPIOTE interrupt from PORT event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>GPIOTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="259" column="1" bodyfile="hal/nrf_gpiote.h" bodystart="260" bodyend="276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaafd262deed218a5d1016b28e2e58d389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_task_trigger</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_task_t task)</argsstring>
        <name>nrf_gpiote_task_trigger</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="627" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="627" bodyend="630" declfile="hal/nrf_gpiote.h" declline="291" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga744932a043aeff264664e91b4de35a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_gpiote_task_address_get</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, nrf_gpiote_task_t task)</argsstring>
        <name>nrf_gpiote_task_address_get</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="632" column="28" bodyfile="hal/nrf_gpiote.h" bodystart="632" bodyend="636" declfile="hal/nrf_gpiote.h" declline="301" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga1559e341e960805d18da83d432a1ba1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_gpiote_event_check</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, nrf_gpiote_event_t event)</argsstring>
        <name>nrf_gpiote_event_check</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the state of the specified GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event is set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event is not set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="638" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="638" bodyend="642" declfile="hal/nrf_gpiote.h" declline="313" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga6afb73e2d078671e7703e1fd4058d606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_event_clear</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_event_t event)</argsstring>
        <name>nrf_gpiote_event_clear</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="644" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="644" bodyend="648" declfile="hal/nrf_gpiote.h" declline="322" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga519351da19c3da9b79cd388654d365fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_gpiote_event_address_get</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, nrf_gpiote_event_t event)</argsstring>
        <name>nrf_gpiote_event_address_get</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="650" column="28" bodyfile="hal/nrf_gpiote.h" bodystart="650" bodyend="654" declfile="hal/nrf_gpiote.h" declline="332" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga013d965ef3cf9bdfacbd168ddf0e155e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_int_enable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_enable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="656" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="656" bodyend="659" declfile="hal/nrf_gpiote.h" declline="342" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga7caee4eeac2ebbad824ca4eb819c0804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_int_disable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_disable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="661" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="661" bodyend="664" declfile="hal/nrf_gpiote.h" declline="351" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga79704b18e21630ee689004f97b2b2dd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_gpiote_int_enable_check</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_enable_check</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="666" column="28" bodyfile="hal/nrf_gpiote.h" bodystart="666" bodyend="669" declfile="hal/nrf_gpiote.h" declline="362" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga037d268697089a6118c1e099ff8b9dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_int_group_enable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_group_enable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling interrupts in the specified group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="672" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="672" bodyend="713" declfile="hal/nrf_gpiote.h" declline="374" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga508063f42a084ca80e6e6d71b92b91d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_int_group_disable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_group_disable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupts in the specified group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="715" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="715" bodyend="756" declfile="hal/nrf_gpiote.h" declline="386" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga4fcf8b28778b88dcefb1b809dfd71b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_gpiote_int_group_enable_check</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_gpiote_int_group_enable_check</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts from a given group are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__gpiote__hal_1gac8fb94d0a0cbdadc3fca32874c4ad1c8" kindref="member">nrf_gpiote_int_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="758" column="28" bodyfile="hal/nrf_gpiote.h" bodystart="758" bodyend="792" declfile="hal/nrf_gpiote.h" declline="400" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gac1bbb5d0d172fbaeb2438ffaed269037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_subscribe_set</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_task_t task, uint8_t channel)</argsstring>
        <name>nrf_gpiote_subscribe_set</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="414" column="24" declfile="hal/nrf_gpiote.h" declline="414" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga2491579f899bec6cc0ae50c7aeffb347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_subscribe_clear</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_task_t task)</argsstring>
        <name>nrf_gpiote_subscribe_clear</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="425" column="24" declfile="hal/nrf_gpiote.h" declline="425" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga39b586ec60cdbc7101df1d4a977c86e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_publish_set</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_event_t event, uint8_t channel)</argsstring>
        <name>nrf_gpiote_publish_set</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="435" column="24" declfile="hal/nrf_gpiote.h" declline="435" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaf2fda317a7d0b0cc409b4915cc1a8e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_publish_clear</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_event_t event)</argsstring>
        <name>nrf_gpiote_publish_clear</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="446" column="24" declfile="hal/nrf_gpiote.h" declline="446" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga9795c1bed9892e03977c67bccd6a6d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_event_enable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_event_enable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for enabling a GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="823" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="823" bodyend="826" declfile="hal/nrf_gpiote.h" declline="455" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaf6adcd3c0e9a471e3951b88a831c4510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_event_disable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_event_disable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for disabling a GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="828" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="828" bodyend="831" declfile="hal/nrf_gpiote.h" declline="463" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga54b500b582225fc3843efb3342ac027b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_event_configure</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx, uint32_t pin, nrf_gpiote_polarity_t polarity)</argsstring>
        <name>nrf_gpiote_event_configure</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9a424db0997c11092f8f69d52155dd9d" kindref="member">nrf_gpiote_polarity_t</ref></type>
          <declname>polarity</declname>
        </param>
        <briefdescription>
<para>Function for configuring a GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin associated with event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">polarity</parametername>
</parameternamelist>
<parameterdescription>
<para>Transition that should generate an event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="833" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="833" bodyend="841" declfile="hal/nrf_gpiote.h" declline="473" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga64784132f8461e6af18945287b43b5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_gpiote_event_pin_get</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_event_pin_get</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the pin associated with a GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pin number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="843" column="28" bodyfile="hal/nrf_gpiote.h" bodystart="843" bodyend="846" declfile="hal/nrf_gpiote.h" declline="486" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaf2dc87c2ef209b0d3093eb84535ac9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1ga9a424db0997c11092f8f69d52155dd9d" kindref="member">nrf_gpiote_polarity_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_polarity_t nrf_gpiote_event_polarity_get</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_event_polarity_get</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the polarity associated with a GPIOTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Polarity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="848" column="41" bodyfile="hal/nrf_gpiote.h" bodystart="848" bodyend="853" declfile="hal/nrf_gpiote.h" declline="496" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga9f1756f4e06f9c10e70b0b2d9afa1dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_task_enable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_task_enable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for enabling a GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="855" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="855" bodyend="871" declfile="hal/nrf_gpiote.h" declline="505" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaac59f62db0c82e474276eaed8cc66ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_task_disable</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_task_disable</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for disabling a GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="873" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="873" bodyend="876" declfile="hal/nrf_gpiote.h" declline="513" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gac2572e65960d3012a9c609d4251e7c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_task_configure</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx, uint32_t pin, nrf_gpiote_polarity_t polarity, nrf_gpiote_outinit_t init_val)</argsstring>
        <name>nrf_gpiote_task_configure</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1ga9a424db0997c11092f8f69d52155dd9d" kindref="member">nrf_gpiote_polarity_t</ref></type>
          <declname>polarity</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gab280bbb7269ab98a97e7b47d906ef9aa" kindref="member">nrf_gpiote_outinit_t</ref></type>
          <declname>init_val</declname>
        </param>
        <briefdescription>
<para>Function for configuring a GPIOTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function is not configuring mode field so task is disabled after this function is called.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin associated with event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">polarity</parametername>
</parameternamelist>
<parameterdescription>
<para>Transition that should generate an event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">init_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the pin. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="878" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="878" bodyend="891" declfile="hal/nrf_gpiote.h" declline="526" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gae14d43cda8b1bd8491f44fcdfffe3ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_task_force</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx, nrf_gpiote_outinit_t init_val)</argsstring>
        <name>nrf_gpiote_task_force</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gab280bbb7269ab98a97e7b47d906ef9aa" kindref="member">nrf_gpiote_outinit_t</ref></type>
          <declname>init_val</declname>
        </param>
        <briefdescription>
<para>Function for forcing the specified state on the pin connected to GPIOTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">init_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="893" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="893" bodyend="899" declfile="hal/nrf_gpiote.h" declline="539" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga99b50fc5127a1654599651a2eb372142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_te_default</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_te_default</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for resetting a GPIOTE task event configuration to the default state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="901" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="901" bodyend="907" declfile="hal/nrf_gpiote.h" declline="549" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga3e663e182d9ae1fd10aec6bad6272671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_gpiote_te_is_enabled</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg, uint32_t idx)</argsstring>
        <name>nrf_gpiote_te_is_enabled</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Function for checking if particular Task-Event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Task-Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The Task-Event mode is set to Task or Event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The Task-Event mode is set to Disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="909" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="909" bodyend="912" declfile="hal/nrf_gpiote.h" declline="560" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gaaa12c58ec7a644af4cbf749866e9c1c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_task_t nrf_gpiote_out_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_gpiote_out_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the OUT task associated with the specified GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested OUT task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="914" column="37" bodyfile="hal/nrf_gpiote.h" bodystart="914" bodyend="918" declfile="hal/nrf_gpiote.h" declline="569" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gac4004210adba6cc5813d93fd12a1dc4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_task_t nrf_gpiote_set_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_gpiote_set_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the SET task associated with the specified GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested SET task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="579" column="37" declfile="hal/nrf_gpiote.h" declline="579" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1gac3b8715b38908c97aae3f1b85fa9ee9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1ga9942884dceccf6c235f66cd780a2bd2a" kindref="member">nrf_gpiote_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_task_t nrf_gpiote_clr_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_gpiote_clr_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLR task associated with the specified GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested CLR task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="590" column="37" declfile="hal/nrf_gpiote.h" declline="590" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga968dda896c257cf39633e64322276db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1gafb8cdf47efbb10b2c7167adedcc53b9e" kindref="member">nrf_gpiote_event_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_event_t nrf_gpiote_in_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_gpiote_in_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the IN event associated with the specified GPIOTE channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested IN event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="936" column="38" bodyfile="hal/nrf_gpiote.h" bodystart="936" bodyend="940" declfile="hal/nrf_gpiote.h" declline="600" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga296a418322ac666bfb3f1d0cd95257a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_gpiote_latency_set</definition>
        <argsstring>(NRF_GPIOTE_Type *p_reg, nrf_gpiote_latency_t latency)</argsstring>
        <name>nrf_gpiote_latency_set</name>
        <param>
          <type>NRF_GPIOTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref></type>
          <declname>latency</declname>
        </param>
        <briefdescription>
<para>Function for setting the latency setting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Available for event mode with rising or falling edge detection on the pin. Toggle task mode can only be used with low latency setting.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Latency setting to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="943" column="24" bodyfile="hal/nrf_gpiote.h" bodystart="943" bodyend="947" declfile="hal/nrf_gpiote.h" declline="612" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__gpiote__hal_1ga3f56e5a98bf4cbe4c26b54269565460d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__gpiote__hal_1gae4c435e11fb73e29b2729740eff50207" kindref="member">nrf_gpiote_latency_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_gpiote_latency_t nrf_gpiote_latency_get</definition>
        <argsstring>(NRF_GPIOTE_Type const *p_reg)</argsstring>
        <name>nrf_gpiote_latency_get</name>
        <param>
          <type>NRF_GPIOTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the latency setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latency setting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="949" column="40" bodyfile="hal/nrf_gpiote.h" bodystart="949" bodyend="953" declfile="hal/nrf_gpiote.h" declline="622" declcolumn="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga129b54403b5f5d17195f2e20809c03a7" prot="public" static="no">
        <name>NRF_GPIOTE_INST_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, GPIOTE, idx)</initializer>
        <briefdescription>
<para>Macro for getting a pointer to the structure of registers of the GPIOTE peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIOTE instance index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the structure of registers of the GPIOTE peripheral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="106" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga5283347ae35d66ae3323d2f9bb7feb02" prot="public" static="no">
        <name>GPIOTE_CONFIG_PORT_PIN_Msk</name>
        <initializer>(GPIOTE_CONFIG_PORT_Msk | GPIOTE_CONFIG_PSEL_Msk)</initializer>
        <briefdescription>
<para>Mask for covering port and pin bits in registers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="110" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga9609b228f6c7c0d37c72b92a05e6e0ab" prot="public" static="no">
        <name>NRF_GPIOTE_HAS_LATENCY</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of the latency setting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="117" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1gaeec8ff4e1b1e939da62f8b5349ae250e" prot="public" static="no">
        <name>NRF_GPIOTE_HAS_INT_GROUPS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether GPIOTE interrupt groups are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="124" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga48eef32af17b9ce053e48c4a085d3264" prot="public" static="no">
        <name>NRF_GPIOTE_IRQ_GROUP</name>
        <initializer>GPIOTE_IRQ_GROUP</initializer>
        <briefdescription>
<para>Symbol indicating which interrupt group to use. Empty if there are no groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="131" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga1f0e0b62dd3c93cd57d517d3080a14b9" prot="public" static="no">
        <name>NRF_GPIOTE_SECURE_SUFFIX</name>
        <briefdescription>
<para>Symbol indicating a TrustZone suffix added to the register name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="147" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga6707e7a02edff6e4d23fda06c239404c" prot="public" static="no">
        <name>NRF_GPIOTE_EVENTS_PORT_REG</name>
        <initializer>EVENTS_PORT</initializer>
        <briefdescription>
<para>Symbol indicating a name of PORT event register to be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="172" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1ga5a7a0725786f748e4ee85ae81cc207aa" prot="public" static="no">
        <name>NRF_GPIOTE_INT_PORT_MASK_NAME</name>
        <initializer>GPIOTE_INTENSET_PORT_Msk</initializer>
        <briefdescription>
<para>Symbol specifying interrupt bitmask associated with the PORT event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="175" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__gpiote__hal_1gadfe7ae9295a3508febb160aae12ff0d6" prot="public" static="no">
        <name>NRF_GPIOTE_INT_IN_MASK</name>
        <initializer>(<ref refid="group__nrfx__utils_1gaec8b3bf0959011b5e1eda4252a8f329a" kindref="member">NRFX_LISTIFY</ref>(GPIOTE_CH_NUM, NRF_GPIOTE_INT_IN, (|), _))</initializer>
        <briefdescription>
<para>Symbol specifying bitmask collecting all IN events interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_gpiote.h" line="283" column="9" bodyfile="hal/nrf_gpiote.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer (HAL) for managing the GPIOTE peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
