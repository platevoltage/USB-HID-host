<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__resetinfo_8h" kind="file" language="C++">
    <compoundname>nrf_resetinfo.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_resetinfo.h</label>
        <link refid="nrf__resetinfo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__resetinfo__hal_1ga2c1c894a29f7a5078637a881667d9258" prot="public" static="no">
        <name>NRF_RESETINFO_HAS_RESETREAS_STRUCT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether intermediate RESETREAS structure is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="52" column="9" bodyfile="hal/nrf_resetinfo.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__resetinfo__hal_1ga704fd7a11501b5388bc4b03f1699af88" prot="public" static="no">
        <name>NRF_RESETINFO_HAS_MULTIPLE_SECWDT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether multiple secure domain watchdog resets are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="59" column="9" bodyfile="hal/nrf_resetinfo.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__resetinfo__hal_1gaabc19dc65433a5dabe1896f81cae34f8" prot="public" static="no">
        <name>NRF_RESETINFO_HAS_MASKLOCKUP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CPU lockup signal masking is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="66" column="9" bodyfile="hal/nrf_resetinfo.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__resetinfo__hal_1gae75557a631d5683e148496f8f5e1d02f" prot="public" static="no">
        <name>NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CROSSDOMAIN local reset reason is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="73" column="9" bodyfile="hal/nrf_resetinfo.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__resetinfo__hal_1ga7c1a8fb09d4118cad844bb2a9288748e" prot="public" static="no">
        <name>NRF_RESETINFO_ERROR_STATUS_MAX</name>
        <initializer>RESETINFO_ERROR_STATUS_ERRORSTATUS_Msk</initializer>
        <briefdescription>
<para>Maximum value of error status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="80" column="9" bodyfile="hal/nrf_resetinfo.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__resetinfo__hal_1gaaa248cd4faf645456d58c8c3157040d5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_resetinfo_resetreas_global_mask_t</name>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a37d6b175d04d6665bfa035eb31e3df84" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_RESETPOR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from power on reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a332c7e3ed5a703b63d689a25fbb97843" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_RESETPIN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from pin reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5ab733faabe8b155ba2469a05c8c356a07" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_DOG_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from the SysCtrl watchdog timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a55ac7cf5bcc0d27cdb0e27506547b114" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_CTRLAP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from CTRL-AP. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a89de58be72aadf69cdf9fd1ced61f6de" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_SECSREQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to secure domain system reset request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a6867f907a8ee14c1af04ef66265490f9" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_SECWDT0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to secure domain watchdog 0 timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5ab94da3a976b43a5b36a33b108da80a4b" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_SECWDT1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to secure domain watchdog 1 timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5aaf8721565a17784df23d420eb096dc94" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to secure domain lockup. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a528c14bb7c752fb4edaf387d5a9e07e9" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_SECTAMPER_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to secure domain tamper detected. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a72570be78dbb84504e2d145e6e6814a0" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_OFF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by DETECT signal from GPIO. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a971577685e0ecd401b4d8fd1d98f4ec5" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_LPCOMP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by LPCOMP. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a7820813d3a2a95a6845ac275dd7cb783" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_DIF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by entering debug interface mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a563a79aff2dbecaf3c0ef83d8886a9ee" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_GRTC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by GRTC interrupt. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a44a6c06d1cb326b04c4ed1f94c543b9a" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_NFC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by NRF field detection in sense mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a4665992dcac52a6dc6f77a6138e7275a" prot="public">
          <name>NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK</name>
          <initializer>= RESETINFO_RESETREAS_GLOBAL_VUSB_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wakeup from System OFF triggered by VBUS rising into valid range. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Global reset reason mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="86" column="1" bodyfile="hal/nrf_resetinfo.h" bodystart="87" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__resetinfo__hal_1ga67d288fe674ad1d9955666038a6db801" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_resetinfo_resetreas_local_mask_t</name>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a494a117d13dee34534c9d04d61429119" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_DOG_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from the local watchdog timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801ac246432fb33b6b4d919d15b371f8b65c" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_DOGNS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from the local non-secure watchdog timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a80fb72a87c870d9f12307800b3af5b35" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_SREQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from the local soft reset request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a834efc7f9ec6f79328011450be380e46" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_LOCKUP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset from local CPU lockup. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801abe7f183cecfc2d2913c685e29147de1b" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to cross domain reset source. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a9995131f157a432a0537fcc24185324a" prot="public">
          <name>NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK</name>
          <initializer>= RESETINFO_RESETREAS_LOCAL_UNRETAINEDWAKE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to wake from unretained state. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Local reset reason mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="110" column="1" bodyfile="hal/nrf_resetinfo.h" bodystart="111" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga090c958653fc428debbbf09462695f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_resetreas_global_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_resetinfo_resetreas_global_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the global reset reason. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of reasons to be set, constructed from <ref refid="group__nrf__resetinfo__hal_1gaaa248cd4faf645456d58c8c3157040d5" kindref="member">nrf_resetinfo_resetreas_global_mask_t</ref> enumerator values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="241" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="241" bodyend="245" declfile="hal/nrf_resetinfo.h" declline="129" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1gab01fad7e287b739c9474affc90c10f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_resetinfo_resetreas_global_get</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_resetreas_global_get</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the global reset reason. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of detected global reset reasons constructed with <ref refid="group__nrf__resetinfo__hal_1gaaa248cd4faf645456d58c8c3157040d5" kindref="member">nrf_resetinfo_resetreas_global_mask_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="247" column="28" bodyfile="hal/nrf_resetinfo.h" bodystart="247" bodyend="250" declfile="hal/nrf_resetinfo.h" declline="139" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga9d2de65409fe394896e0115b290f6c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_resetreas_local_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_resetinfo_resetreas_local_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the local reset reason. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of reasons to be set, constructed from <ref refid="group__nrf__resetinfo__hal_1ga67d288fe674ad1d9955666038a6db801" kindref="member">nrf_resetinfo_resetreas_local_mask_t</ref> enumerator values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="252" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="252" bodyend="256" declfile="hal/nrf_resetinfo.h" declline="148" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga5252397ca7381a86bcc15706fe4dc7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_resetinfo_resetreas_local_get</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_resetreas_local_get</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the local reset reason. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of detected local reset reasons constructed with <ref refid="group__nrf__resetinfo__hal_1ga67d288fe674ad1d9955666038a6db801" kindref="member">nrf_resetinfo_resetreas_local_mask_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="258" column="28" bodyfile="hal/nrf_resetinfo.h" bodystart="258" bodyend="261" declfile="hal/nrf_resetinfo.h" declline="158" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1gab3abe465e95cd2c084c41871b874c6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_error_status_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, uint8_t status)</argsstring>
        <name>nrf_resetinfo_error_status_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Function for setting the reset error status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset error status to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="263" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="263" bodyend="271" declfile="hal/nrf_resetinfo.h" declline="166" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga99fddd35932550a866bfab4ea0f61c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_resetinfo_error_status_get</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_error_status_get</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the reset error status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reset error status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="273" column="27" bodyfile="hal/nrf_resetinfo.h" bodystart="273" bodyend="280" declfile="hal/nrf_resetinfo.h" declline="175" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga922b39cf0c3e16b680ad73cac8e18463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_error_address_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, uint32_t address)</argsstring>
        <name>nrf_resetinfo_error_address_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Function for setting the reset error address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset error address to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="282" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="282" bodyend="290" declfile="hal/nrf_resetinfo.h" declline="183" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga9eef6be489a303469809a4638e4901c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_resetinfo_error_address_get</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_error_address_get</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the reset error address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reset error address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="292" column="28" bodyfile="hal/nrf_resetinfo.h" bodystart="292" bodyend="299" declfile="hal/nrf_resetinfo.h" declline="193" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1gab5fbf49c6e79a413cf60e3b8ed27bca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_restore_valid_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, bool enable)</argsstring>
        <name>nrf_resetinfo_restore_valid_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the flag indicating presence of valid restore image in RAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if valid restore image is present in RAM, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="301" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="301" bodyend="306" declfile="hal/nrf_resetinfo.h" declline="201" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga734a99987981122724e86052a11781ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_resetinfo_restore_valid_check</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_restore_valid_check</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the flag indicating presence of valid restore image in RAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid restore image is present in RAM. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Valid restore image is not present in RAM. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="308" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="308" bodyend="313" declfile="hal/nrf_resetinfo.h" declline="211" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga863be79e0156ad8c01dd42487657b966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_resetinfo_mask_lockup_set</definition>
        <argsstring>(NRF_RESETINFO_Type *p_reg, bool enable)</argsstring>
        <name>nrf_resetinfo_mask_lockup_set</name>
        <param>
          <type>NRF_RESETINFO_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the flag indicating if CPU lockup signal is to be masked. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Prevents the CPU lockup signal from triggering a local reset. Needed to be able to start debug session.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if lockup signal is to be masked, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="316" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="316" bodyend="321" declfile="hal/nrf_resetinfo.h" declline="223" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__resetinfo__hal_1ga055edfaa595fb4d79c369ad6ead6dcea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_resetinfo_mask_lockup_check</definition>
        <argsstring>(NRF_RESETINFO_Type const *p_reg)</argsstring>
        <name>nrf_resetinfo_mask_lockup_check</name>
        <param>
          <type>NRF_RESETINFO_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the flag indicating if CPU lockup signal is to be masked. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Prevents the CPU lockup signal from triggering a local reset. Needed to be able to start debug session.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU lockup signal is to be masked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU lockup signal is not to be masked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_resetinfo.h" line="323" column="24" bodyfile="hal/nrf_resetinfo.h" bodystart="323" bodyend="328" declfile="hal/nrf_resetinfo.h" declline="236" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_RESETINFO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_resetinfo_hal<sp/>RESETINFO<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_resetinfo</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Reset<sp/>information<sp/>peripheral<sp/>(RESETINFO).</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESETINFO_RESETREAS_ERROR_STATUS_ERRORSTATUS_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>intermediate<sp/>RESETREAS<sp/>structure<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESETINFO_RESETREAS_GLOBAL_SECWDT0_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>multiple<sp/>secure<sp/>domain<sp/>watchdog<sp/>resets<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_MULTIPLE_SECWDT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_MULTIPLE_SECWDT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESETINFO_MASKLOCKUP_MASK_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CPU<sp/>lockup<sp/>signal<sp/>masking<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_MASKLOCKUP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_MASKLOCKUP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CROSSDOMAIN<sp/>local<sp/>reset<sp/>reason<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESETINFO_ERROR_STATUS_ERRORSTATUS_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**<sp/>@brief<sp/>Maximum<sp/>value<sp/>of<sp/>error<sp/>status.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_ERROR_STATUS_MAX<sp/>RESETINFO_ERROR_STATUS_ERRORSTATUS_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESETINFO_ERROR_STATUS_MAX<sp/>RESETINFO_RESETREAS_ERROR_STATUS_ERRORSTATUS_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">/**<sp/>@brief<sp/>Global<sp/>reset<sp/>reason<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a37d6b175d04d6665bfa035eb31e3df84" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_RESETPOR_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>power<sp/>on<sp/>reset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a332c7e3ed5a703b63d689a25fbb97843" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_RESETPIN_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>pin<sp/>reset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5ab733faabe8b155ba2469a05c8c356a07" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_DOG_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>the<sp/>SysCtrl<sp/>watchdog<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a55ac7cf5bcc0d27cdb0e27506547b114" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_CTRLAP_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>CTRL-AP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a89de58be72aadf69cdf9fd1ced61f6de" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK</ref><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECSREQ_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>system<sp/>reset<sp/>request.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_MULTIPLE_SECWDT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a6867f907a8ee14c1af04ef66265490f9" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK</ref><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECWDT0_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>watchdog<sp/>0<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5ab94da3a976b43a5b36a33b108da80a4b" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK</ref><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECWDT1_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>watchdog<sp/>1<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a6867f907a8ee14c1af04ef66265490f9" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK</ref><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECWDT_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>watchdog<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5aaf8721565a17784df23d420eb096dc94" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK</ref><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>lockup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a528c14bb7c752fb4edaf387d5a9e07e9" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK</ref><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_SECTAMPER_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>secure<sp/>domain<sp/>tamper<sp/>detected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a72570be78dbb84504e2d145e6e6814a0" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_OFF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>DETECT<sp/>signal<sp/>from<sp/>GPIO.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a971577685e0ecd401b4d8fd1d98f4ec5" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_LPCOMP_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>LPCOMP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a7820813d3a2a95a6845ac275dd7cb783" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_DIF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>entering<sp/>debug<sp/>interface<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a563a79aff2dbecaf3c0ef83d8886a9ee" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_GRTC_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>GRTC<sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a44a6c06d1cb326b04c4ed1f94c543b9a" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_NFC_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>NRF<sp/>field<sp/>detection<sp/>in<sp/>sense<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1ggaaa248cd4faf645456d58c8c3157040d5a4665992dcac52a6dc6f77a6138e7275a" kindref="member">NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_GLOBAL_VUSB_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wakeup<sp/>from<sp/>System<sp/>OFF<sp/>triggered<sp/>by<sp/>VBUS<sp/>rising<sp/>into<sp/>valid<sp/>range.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/><ref refid="group__nrf__resetinfo__hal_1gaaa248cd4faf645456d58c8c3157040d5" kindref="member">nrf_resetinfo_resetreas_global_mask_t</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/**<sp/>@brief<sp/>Local<sp/>reset<sp/>reason<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a494a117d13dee34534c9d04d61429119" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_DOG_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>the<sp/>local<sp/>watchdog<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801ac246432fb33b6b4d919d15b371f8b65c" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_DOGNS_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>the<sp/>local<sp/>non-secure<sp/>watchdog<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a80fb72a87c870d9f12307800b3af5b35" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_SREQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>the<sp/>local<sp/>soft<sp/>reset<sp/>request.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a834efc7f9ec6f79328011450be380e46" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_LOCKUP_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>from<sp/>local<sp/>CPU<sp/>lockup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801abe7f183cecfc2d2913c685e29147de1b" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK</ref><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>cross<sp/>domain<sp/>reset<sp/>source.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__resetinfo__hal_1gga67d288fe674ad1d9955666038a6db801a9995131f157a432a0537fcc24185324a" kindref="member">NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK</ref><sp/><sp/>=<sp/>RESETINFO_RESETREAS_LOCAL_UNRETAINEDWAKE_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Reset<sp/>due<sp/>to<sp/>wake<sp/>from<sp/>unretained<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><ref refid="group__nrf__resetinfo__hal_1ga67d288fe674ad1d9955666038a6db801" kindref="member">nrf_resetinfo_resetreas_local_mask_t</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>global<sp/>reset<sp/>reason.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>reasons<sp/>to<sp/>be<sp/>set,</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructed<sp/>from<sp/>@ref<sp/>nrf_resetinfo_resetreas_global_mask_t<sp/>enumerator<sp/>values.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga090c958653fc428debbbf09462695f52" kindref="member">nrf_resetinfo_resetreas_global_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>global<sp/>reset<sp/>reason.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>detected<sp/>global<sp/>reset<sp/>reasons<sp/>constructed<sp/>with<sp/>@ref<sp/>nrf_resetinfo_resetreas_global_mask_t.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1gab01fad7e287b739c9474affc90c10f9c" kindref="member">nrf_resetinfo_resetreas_global_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>local<sp/>reset<sp/>reason.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>reasons<sp/>to<sp/>be<sp/>set,</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructed<sp/>from<sp/>@ref<sp/>nrf_resetinfo_resetreas_local_mask_t<sp/>enumerator<sp/>values.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga9d2de65409fe394896e0115b290f6c0d" kindref="member">nrf_resetinfo_resetreas_local_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>local<sp/>reset<sp/>reason.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>detected<sp/>local<sp/>reset<sp/>reasons<sp/>constructed<sp/>with<sp/>@ref<sp/>nrf_resetinfo_resetreas_local_mask_t.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga5252397ca7381a86bcc15706fe4dc7b7" kindref="member">nrf_resetinfo_resetreas_local_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>reset<sp/>error<sp/>status.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>status<sp/>Reset<sp/>error<sp/>status<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1gab3abe465e95cd2c084c41871b874c6a6" kindref="member">nrf_resetinfo_error_status_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/>uint8_t<sp/>status);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>reset<sp/>error<sp/>status.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@return<sp/>Reset<sp/>error<sp/>status.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga99fddd35932550a866bfab4ea0f61c57" kindref="member">nrf_resetinfo_error_status_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>reset<sp/>error<sp/>address.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>address<sp/>Reset<sp/>error<sp/>address<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga922b39cf0c3e16b680ad73cac8e18463" kindref="member">nrf_resetinfo_error_address_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>reset<sp/>error<sp/>address.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@return<sp/>Reset<sp/>error<sp/>address.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga9eef6be489a303469809a4638e4901c0" kindref="member">nrf_resetinfo_error_address_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="195"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>flag<sp/>indicating<sp/>presence<sp/>of<sp/>valid<sp/>restore<sp/>image<sp/>in<sp/>RAM.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>valid<sp/>restore<sp/>image<sp/>is<sp/>present<sp/>in<sp/>RAM,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1gab5fbf49c6e79a413cf60e3b8ed27bca0" kindref="member">nrf_resetinfo_restore_valid_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>flag<sp/>indicating<sp/>presence<sp/>of<sp/>valid<sp/>restore<sp/>image<sp/>in<sp/>RAM.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Valid<sp/>restore<sp/>image<sp/>is<sp/>present<sp/>in<sp/>RAM.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Valid<sp/>restore<sp/>image<sp/>is<sp/>not<sp/>present<sp/>in<sp/>RAM.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga734a99987981122724e86052a11781ba" kindref="member">nrf_resetinfo_restore_valid_check</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_MASKLOCKUP</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>flag<sp/>indicating<sp/>if<sp/>CPU<sp/>lockup<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>masked.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@note<sp/>Prevents<sp/>the<sp/>CPU<sp/>lockup<sp/>signal<sp/>from<sp/>triggering<sp/>a<sp/>local<sp/>reset.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Needed<sp/>to<sp/>be<sp/>able<sp/>to<sp/>start<sp/>debug<sp/>session.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>lockup<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>masked,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga863be79e0156ad8c01dd42487657b966" kindref="member">nrf_resetinfo_mask_lockup_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>flag<sp/>indicating<sp/>if<sp/>CPU<sp/>lockup<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>masked.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@note<sp/>Prevents<sp/>the<sp/>CPU<sp/>lockup<sp/>signal<sp/>from<sp/>triggering<sp/>a<sp/>local<sp/>reset.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Needed<sp/>to<sp/>be<sp/>able<sp/>to<sp/>start<sp/>debug<sp/>session.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>CPU<sp/>lockup<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>masked.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>CPU<sp/>lockup<sp/>signal<sp/>is<sp/>not<sp/>to<sp/>be<sp/>masked.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga055edfaa595fb4d79c369ad6ead6dcea" kindref="member">nrf_resetinfo_mask_lockup_check</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga090c958653fc428debbbf09462695f52" kindref="member">nrf_resetinfo_resetreas_global_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESETREAS.GLOBAL<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1gab01fad7e287b739c9474affc90c10f9c" kindref="member">nrf_resetinfo_resetreas_global_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RESETREAS.GLOBAL;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga9d2de65409fe394896e0115b290f6c0d" kindref="member">nrf_resetinfo_resetreas_local_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESETREAS.LOCAL<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga5252397ca7381a86bcc15706fe4dc7b7" kindref="member">nrf_resetinfo_resetreas_local_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RESETREAS.LOCAL;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1gab3abe465e95cd2c084c41871b874c6a6" kindref="member">nrf_resetinfo_error_status_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/>uint8_t<sp/>status)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(status<sp/>&lt;=<sp/><ref refid="group__nrf__resetinfo__hal_1ga7c1a8fb09d4118cad844bb2a9288748e" kindref="member">NRF_RESETINFO_ERROR_STATUS_MAX</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESETREAS.ERROR.STATUS<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ERROR.STATUS<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga99fddd35932550a866bfab4ea0f61c57" kindref="member">nrf_resetinfo_error_status_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)p_reg-&gt;RESETREAS.ERROR.STATUS;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)p_reg-&gt;ERROR.STATUS;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga922b39cf0c3e16b680ad73cac8e18463" kindref="member">nrf_resetinfo_error_address_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESETREAS.ERROR.ADDRESS<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ERROR.ADDRESS<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__resetinfo__hal_1ga9eef6be489a303469809a4638e4901c0" kindref="member">nrf_resetinfo_error_address_get</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_RESETREAS_STRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RESETREAS.ERROR.ADDRESS;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ERROR.ADDRESS;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1gab5fbf49c6e79a413cf60e3b8ed27bca0" kindref="member">nrf_resetinfo_restore_valid_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESTOREVALID<sp/>=<sp/>(enable<sp/>?<sp/>RESETINFO_RESTOREVALID_RESTOREVALID_Present<sp/>:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESETINFO_RESTOREVALID_RESTOREVALID_NotPreset)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>RESETINFO_RESTOREVALID_RESTOREVALID_Pos;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga734a99987981122724e86052a11781ba" kindref="member">nrf_resetinfo_restore_valid_check</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;RESTOREVALID<sp/>&amp;<sp/>RESETINFO_RESTOREVALID_RESTOREVALID_Msk)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>RESETINFO_RESTOREVALID_RESTOREVALID_Pos)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>RESETINFO_RESTOREVALID_RESTOREVALID_Present;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESETINFO_HAS_MASKLOCKUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga863be79e0156ad8c01dd42487657b966" kindref="member">nrf_resetinfo_mask_lockup_set</ref>(NRF_RESETINFO_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MASKLOCKUP<sp/>=<sp/>(enable<sp/>?<sp/>RESETINFO_MASKLOCKUP_MASK_Mask<sp/>:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESETINFO_MASKLOCKUP_MASK_NotMask)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>RESETINFO_MASKLOCKUP_MASK_Pos;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__resetinfo__hal_1ga055edfaa595fb4d79c369ad6ead6dcea" kindref="member">nrf_resetinfo_mask_lockup_check</ref>(NRF_RESETINFO_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;MASKLOCKUP<sp/>&amp;<sp/>RESETINFO_MASKLOCKUP_MASK_Msk)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>RESETINFO_MASKLOCKUP_MASK_Pos)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>RESETINFO_MASKLOCKUP_MASK_Mask;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NRF_RESETINFO_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_resetinfo.h"/>
  </compounddef>
</doxygen>
