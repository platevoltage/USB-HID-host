<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__spis_8h" kind="file" language="C++">
    <compoundname>nrf_spis.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfx__spis_8h" local="no">drivers/include/nrfx_spis.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_spis.h</label>
        <link refid="nrf__spis_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__spis__hal_1gac9009691817f3143f93cc9fc24b2b101" prot="public" static="no">
        <name>NRF_SPIS_HAS_DMA_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether dedicated DMA register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="60" column="9" bodyfile="hal/nrf_spis.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spis__hal_1gaa3b2986ca058e972864dd7540907c9f4" prot="public" static="no">
        <name>NRF_SPIS_HAS_DMA_TASKS_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPIS DMA tasks and events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="69" column="9" bodyfile="hal/nrf_spis.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" prot="public" static="no">
        <name>NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</name>
        <initializer>SPIS_DMA_RX_MATCH_CANDIDATE_MaxCount</initializer>
        <briefdescription>
<para>Maximum number of RX patterns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="76" column="9" bodyfile="hal/nrf_spis.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spis__hal_1ga77aebc7776593b90fd53e86b04b55e46" prot="public" static="no">
        <name>NRF_SPIS_INST_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, SPIS, idx)</initializer>
        <briefdescription>
<para>Macro getting pointer to the structure of registers of the SPIS peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SPIS instance index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the structure of registers of the SPIS peripheral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="86" column="9" bodyfile="hal/nrf_spis.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spis__hal_1gacb5fedfd2641e3d94b70cb0981a6ae59" prot="public" static="no">
        <name>NRF_SPIS_PIN_NOT_CONNECTED</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
<para>This value can be used as a parameter for the <ref refid="group__nrf__spis__hal_1gae9c6ef2cf55a287cd4d4dadc5d86af9b" kindref="member">nrf_spis_pins_set</ref> function to specify that a given SPI signal (SCK, MOSI, or MISO) shall not be connected to a physical pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="93" column="9" bodyfile="hal/nrf_spis.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_task_t</name>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba088ac4bf4328dcc120151a8d22f03ba3" prot="public">
          <name>NRF_SPIS_TASK_ACQUIRE</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_ACQUIRE)</initializer>
          <briefdescription>
<para>Acquire SPI semaphore. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebaa845613836457fc5c6c1707d3b7ba545" prot="public">
          <name>NRF_SPIS_TASK_RELEASE</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_RELEASE)</initializer>
          <briefdescription>
<para>Release SPI semaphore, enabling the SPI slave to acquire it. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba5c443c2826b58510ee71c5099aef8d10" prot="public">
          <name>NRF_SPIS_TASK_ENABLERXMATCH0</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.ENABLEMATCH[0])</initializer>
          <briefdescription>
<para>Enable SPI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba7dd1d73163b8e1a4e879e772a370bdbe" prot="public">
          <name>NRF_SPIS_TASK_ENABLERXMATCH1</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.ENABLEMATCH[1])</initializer>
          <briefdescription>
<para>Enable SPI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba01f9eab2bd09a662bb6df885a5b59de6" prot="public">
          <name>NRF_SPIS_TASK_ENABLERXMATCH2</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.ENABLEMATCH[2])</initializer>
          <briefdescription>
<para>Enable SPI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba77785947849146663df5920c2e74a72b" prot="public">
          <name>NRF_SPIS_TASK_ENABLERXMATCH3</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.ENABLEMATCH[3])</initializer>
          <briefdescription>
<para>Enable SPI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebab3f510d7d6ba1158219792cbb3d6ec29" prot="public">
          <name>NRF_SPIS_TASK_DISABLERXMATCH0</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.DISABLEMATCH[0])</initializer>
          <briefdescription>
<para>Disable SPI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba6f63f866d6c802ae640ddd42aa93c385" prot="public">
          <name>NRF_SPIS_TASK_DISABLERXMATCH1</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.DISABLEMATCH[1])</initializer>
          <briefdescription>
<para>Disable SPI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba9796420e2ca94f6fab8997120e96f953" prot="public">
          <name>NRF_SPIS_TASK_DISABLERXMATCH2</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.DISABLEMATCH[2])</initializer>
          <briefdescription>
<para>Disable SPI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebac2c5dd1806fa514d0ab8758c9b47fb94" prot="public">
          <name>NRF_SPIS_TASK_DISABLERXMATCH3</name>
          <initializer>= offsetof(NRF_SPIS_Type, TASKS_DMA.RX.DISABLEMATCH[3])</initializer>
          <briefdescription>
<para>Disable SPI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPIS tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="96" column="1" bodyfile="hal/nrf_spis.h" bodystart="97" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_event_t</name>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a5a9da458d7e87562ae44c5a58f3cd111" prot="public">
          <name>NRF_SPIS_EVENT_RXSTARTED</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.READY)</initializer>
          <briefdescription>
<para>Receive sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a78bc0593ec85de702992f002105eb29d" prot="public">
          <name>NRF_SPIS_EVENT_RXBUSERROR</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the RX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a78769f6211712688c42830accc117611" prot="public">
          <name>NRF_SPIS_EVENT_RXMATCH0</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.MATCH[0])</initializer>
          <briefdescription>
<para>Pattern match for pattern 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a2a1a9938215a091c636d3e7de571d347" prot="public">
          <name>NRF_SPIS_EVENT_RXMATCH1</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.MATCH[1])</initializer>
          <briefdescription>
<para>Pattern match for pattern 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ae911dbe436deaf088e1a2bb9caa1c52d" prot="public">
          <name>NRF_SPIS_EVENT_RXMATCH2</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.MATCH[2])</initializer>
          <briefdescription>
<para>Pattern match for pattern 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994aaaccca49d039d1a5aff45a06606e612e" prot="public">
          <name>NRF_SPIS_EVENT_RXMATCH3</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.MATCH[3])</initializer>
          <briefdescription>
<para>Pattern match for pattern 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a4464c9bc5c56880903a3543df31912ec" prot="public">
          <name>NRF_SPIS_EVENT_TXSTARTED</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.TX.READY)</initializer>
          <briefdescription>
<para>Transmit sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994aa3672fac328cc0594e0d1ad862b5f850" prot="public">
          <name>NRF_SPIS_EVENT_TXBUSERROR</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.TX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the TX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ade011613d62d6785c1ed22cdb8fb20b6" prot="public">
          <name>NRF_SPIS_EVENT_ENDRX</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.RX.END)</initializer>
          <briefdescription>
<para>End of RXD buffer reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a7c084a16ac8273d1981b57bd5b7ad7ab" prot="public">
          <name>NRF_SPIS_EVENT_ENDTX</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_DMA.TX.END)</initializer>
          <briefdescription>
<para>End of TXD buffer reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a2530f94800ff5bac39640242b17d6d42" prot="public">
          <name>NRF_SPIS_EVENT_END</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_END)</initializer>
          <briefdescription>
<para>Granted transaction completed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ac886f6e0ce7503def700cb4a7fdbfbe8" prot="public">
          <name>NRF_SPIS_EVENT_ACQUIRED</name>
          <initializer>= offsetof(NRF_SPIS_Type, EVENTS_ACQUIRED)</initializer>
          <briefdescription>
<para>Semaphore acquired. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPIS events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="113" column="1" bodyfile="hal/nrf_spis.h" bodystart="114" bodyend="129"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1ga12e7018a7e25e50cf65e1a3317006978" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_short_mask_t</name>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a0a3db07907b733bbb4ea324a867cda30" prot="public">
          <name>NRF_SPIS_SHORT_END_ACQUIRE</name>
          <initializer>= SPIS_SHORTS_END_ACQUIRE_Msk</initializer>
          <briefdescription>
<para>Shortcut between END event and ACQUIRE task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ad76130c0bed7e88e0c04074a3f20f298" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.ENABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ab3c8d84e63f3c270220ab776f9967028" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.ENABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978afcc3d27c97cf6275a90ba7b56a45a6c3" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.ENABLEMATCH3 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a07c7fda4808f6afd6879867036787a21" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.ENABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ae18293608f195b184c55ef02e29b9017" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.DISABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a5f8021aa78f7a064225958a893af8811" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.DISABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a4e2db6f88e9601fa4166608002398661" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.DISABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a02caf25f2bd8567791a906f8b8d7355e" prot="public">
          <name>NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</name>
          <initializer>= SPIS_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.DISABLEMATCH3 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978aae2cccd94d277d93a92938cfa3743033" prot="public">
          <name>NRF_SPIS_ALL_SHORTS_MASK</name>
          <initializer>= NRF_SPIS_SHORT_END_ACQUIRE

                                  | NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK
                                  | NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK
                                  | NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK
                                  | NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK
                                  | NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK
                                  | NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK
                                  | NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK
                                  | NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</initializer>
          <briefdescription>
<para>All SPIS shortcuts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPIS shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="132" column="1" bodyfile="hal/nrf_spis.h" bodystart="133" bodyend="156"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1gadb4640353785b50122bc2098c316d712" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_int_mask_t</name>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a82002d6960c1d86f727ba8538e9861d6" prot="public">
          <name>NRF_SPIS_INT_END_MASK</name>
          <initializer>= SPIS_INTENSET_END_Msk</initializer>
          <briefdescription>
<para>Interrupt on END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab97e121bc56b8bb5d728747ad1b29e9b" prot="public">
          <name>NRF_SPIS_INT_ACQUIRED_MASK</name>
          <initializer>= SPIS_INTENSET_ACQUIRED_Msk</initializer>
          <briefdescription>
<para>Interrupt on ACQUIRED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712aaefc53d4929619e8736f570c64daff0c" prot="public">
          <name>NRF_SPIS_INT_RXREADY_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab412248d8514c3c6024deb0ad52ff20d" prot="public">
          <name>NRF_SPIS_INT_RXBUSERROR_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a472d2ac9533749cbd96858f85cc950a2" prot="public">
          <name>NRF_SPIS_INT_RXMATCH0_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXMATCH0_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH0 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a3570ac4a73a388d117ac81d34de3a738" prot="public">
          <name>NRF_SPIS_INT_RXMATCH1_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXMATCH1_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH1 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2b2f63bf028d155bb520cd9e03376adb" prot="public">
          <name>NRF_SPIS_INT_RXMATCH2_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXMATCH2_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH2 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ae05328a9b0beda9cbc43807f3e51cbe0" prot="public">
          <name>NRF_SPIS_INT_RXMATCH3_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXMATCH3_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH3 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a998b1b541893511e92e7f91d98edb2c5" prot="public">
          <name>NRF_SPIS_INT_TXREADY_MASK</name>
          <initializer>= SPIS_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a286fc478728b9856fc9c058e1dce519b" prot="public">
          <name>NRF_SPIS_INT_TXBUSERROR_MASK</name>
          <initializer>= SPIS_INTENSET_DMATXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2fe06075051e66e48b066337cc46c79a" prot="public">
          <name>NRF_SPIS_INT_ENDRX_MASK</name>
          <initializer>= SPIS_INTENSET_DMARXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on ENDRX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2481beeb106dd4746dda38d9ca1c90ba" prot="public">
          <name>NRF_SPIS_INT_ENDTX_MASK</name>
          <initializer>= SPIS_INTENSET_DMATXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on ENDTX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712aa55aea76c655b26fb55c05c95747d91e" prot="public">
          <name>NRF_SPIS_ALL_INTS_MASK</name>
          <initializer>= NRF_SPIS_INT_END_MASK
                                 | NRF_SPIS_INT_ACQUIRED_MASK

                                 | NRF_SPIS_INT_RXREADY_MASK
                                 | NRF_SPIS_INT_RXBUSERROR_MASK
                                 | NRF_SPIS_INT_RXMATCH0_MASK
                                 | NRF_SPIS_INT_RXMATCH1_MASK
                                 | NRF_SPIS_INT_RXMATCH2_MASK
                                 | NRF_SPIS_INT_RXMATCH3_MASK
                                 | NRF_SPIS_INT_TXREADY_MASK
                                 | NRF_SPIS_INT_TXBUSERROR_MASK
                                 | NRF_SPIS_INT_ENDRX_MASK
                                 | NRF_SPIS_INT_ENDTX_MASK</initializer>
          <briefdescription>
<para>All SPIS interrupts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPIS interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="159" column="1" bodyfile="hal/nrf_spis.h" bodystart="160" bodyend="189"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1gabdceacd5f5f545e35342fe117adf57d8" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_mode_t</name>
        <enumvalue id="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ae8847dcb4746aebce69827f05ae8063b" prot="public">
          <name>NRF_SPIS_MODE_0</name>
          <briefdescription>
<para>SCK active high, sample on leading edge of clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ad8ad67126c2df0e63e4e33ff88c96dc3" prot="public">
          <name>NRF_SPIS_MODE_1</name>
          <briefdescription>
<para>SCK active high, sample on trailing edge of clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a79bb0d16600dc650db523db073619e8c" prot="public">
          <name>NRF_SPIS_MODE_2</name>
          <briefdescription>
<para>SCK active low, sample on leading edge of clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a6ce9e0b63adf5b7aba24b783aec27af0" prot="public">
          <name>NRF_SPIS_MODE_3</name>
          <briefdescription>
<para>SCK active low, sample on trailing edge of clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPI modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="192" column="1" bodyfile="hal/nrf_spis.h" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1ga45fe2b8b4074fdffa1afc5d4da0baacc" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_bit_order_t</name>
        <enumvalue id="group__nrf__spis__hal_1gga45fe2b8b4074fdffa1afc5d4da0baacca710fa90e8fc75221f6a019666e2b56c6" prot="public">
          <name>NRF_SPIS_BIT_ORDER_MSB_FIRST</name>
          <initializer>= SPIS_CONFIG_ORDER_MsbFirst</initializer>
          <briefdescription>
<para>Most significant bit shifted out first. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga45fe2b8b4074fdffa1afc5d4da0baacca5a0f1182a58df9489e8a1771ef65047a" prot="public">
          <name>NRF_SPIS_BIT_ORDER_LSB_FIRST</name>
          <initializer>= SPIS_CONFIG_ORDER_LsbFirst</initializer>
          <briefdescription>
<para>Least significant bit shifted out first. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPI bit orders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="201" column="1" bodyfile="hal/nrf_spis.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_semstat_t</name>
        <enumvalue id="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a64b5f229d3696fdce2eeacc069196c6a" prot="public">
          <name>NRF_SPIS_SEMSTAT_FREE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Semaphore is free. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a0657f67153a7f2a59539aba1259b0dea" prot="public">
          <name>NRF_SPIS_SEMSTAT_CPU</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Semaphore is assigned to the CPU. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a37cc3d4e768479f6310a4aff2de9f99c" prot="public">
          <name>NRF_SPIS_SEMSTAT_SPIS</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Semaphore is assigned to the SPI slave. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925aa91d8f884ace35f86ef95b24ceda68bb" prot="public">
          <name>NRF_SPIS_SEMSTAT_CPUPENDING</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Semaphore is assigned to the SPI, but a handover to the CPU is pending. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPI semaphore status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="208" column="1" bodyfile="hal/nrf_spis.h" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spis_status_mask_t</name>
        <enumvalue id="group__nrf__spis__hal_1ggab9def61d7198f840bebee496dd51ec50a2a21e3b425bac272deb707927e3bdfef" prot="public">
          <name>NRF_SPIS_STATUS_OVERREAD</name>
          <initializer>= SPIS_STATUS_OVERREAD_Msk</initializer>
          <briefdescription>
<para>TX buffer over-read detected and prevented. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spis__hal_1ggab9def61d7198f840bebee496dd51ec50a0f3bdf85c7553679dba370da244d29e7" prot="public">
          <name>NRF_SPIS_STATUS_OVERFLOW</name>
          <initializer>= SPIS_STATUS_OVERFLOW_Msk</initializer>
          <briefdescription>
<para>RX buffer overflow detected and prevented. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPIS status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="217" column="1" bodyfile="hal/nrf_spis.h" bodystart="218" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__spis__hal_1ga12255b4e10b6df3aef7c33dcbb7e53e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_task_trigger</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_task_t task)</argsstring>
        <name>nrf_spis_task_trigger</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified SPIS task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="702" column="24" bodyfile="hal/nrf_spis.h" bodystart="702" bodyend="706" declfile="hal/nrf_spis.h" declline="230" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga43a0b18176df4752cceb043c6c98dbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_task_address_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, nrf_spis_task_t task)</argsstring>
        <name>nrf_spis_task_address_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified SPIS task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="708" column="28" bodyfile="hal/nrf_spis.h" bodystart="708" bodyend="712" declfile="hal/nrf_spis.h" declline="241" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga20d37e83bbb50b7bc428c266467217e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_event_clear</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_event_t event)</argsstring>
        <name>nrf_spis_event_clear</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified SPIS event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="714" column="24" bodyfile="hal/nrf_spis.h" bodystart="714" bodyend="719" declfile="hal/nrf_spis.h" declline="250" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga0f5628fe5d0b75a3fcdfdb66c8ddd33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_event_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, nrf_spis_event_t event)</argsstring>
        <name>nrf_spis_event_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the SPIS event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="721" column="24" bodyfile="hal/nrf_spis.h" bodystart="721" bodyend="725" declfile="hal/nrf_spis.h" declline="262" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga6dc6dd86fd3b452bdd20b95de2fa728f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_event_address_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, nrf_spis_event_t event)</argsstring>
        <name>nrf_spis_event_address_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified SPIS event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="727" column="28" bodyfile="hal/nrf_spis.h" bodystart="727" bodyend="731" declfile="hal/nrf_spis.h" declline="273" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga730f7a0e156952af4b86007863972d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_shorts_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spis_shorts_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="733" column="24" bodyfile="hal/nrf_spis.h" bodystart="733" bodyend="737" declfile="hal/nrf_spis.h" declline="282" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gac805ae076f3405fecd31d53f66785542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_shorts_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spis_shorts_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="739" column="24" bodyfile="hal/nrf_spis.h" bodystart="739" bodyend="743" declfile="hal/nrf_spis.h" declline="291" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga9a4dae413afbdc7e2d33d7450c5b0edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_int_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spis_int_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__spis__hal_1gadb4640353785b50122bc2098c316d712" kindref="member">nrf_spis_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="745" column="24" bodyfile="hal/nrf_spis.h" bodystart="745" bodyend="749" declfile="hal/nrf_spis.h" declline="301" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga4f1c111b9e60d033b7d7dd560bbff316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_int_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spis_int_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__spis__hal_1gadb4640353785b50122bc2098c316d712" kindref="member">nrf_spis_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="751" column="24" bodyfile="hal/nrf_spis.h" bodystart="751" bodyend="755" declfile="hal/nrf_spis.h" declline="311" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga66ed394f602119cd6b1bd8e3bc7fcd72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_int_enable_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spis_int_enable_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__spis__hal_1gadb4640353785b50122bc2098c316d712" kindref="member">nrf_spis_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="757" column="28" bodyfile="hal/nrf_spis.h" bodystart="757" bodyend="760" declfile="hal/nrf_spis.h" declline="323" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga3effaff924a28c57479ccb4de3eefc52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_subscribe_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_task_t task, uint8_t channel)</argsstring>
        <name>nrf_spis_subscribe_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given SPIS task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="334" column="24" declfile="hal/nrf_spis.h" declline="334" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga20bc57578d44b8e5dfe14a143e073e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_subscribe_clear</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_task_t task)</argsstring>
        <name>nrf_spis_subscribe_clear</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given SPIS task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="345" column="24" declfile="hal/nrf_spis.h" declline="345" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaa6b1b94233852d47e91478a0693b7f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_publish_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_event_t event, uint8_t channel)</argsstring>
        <name>nrf_spis_publish_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given SPIS event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="356" column="24" declfile="hal/nrf_spis.h" declline="356" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga519213f835ebad3ed753aedb6ee2cb5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_publish_clear</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_event_t event)</argsstring>
        <name>nrf_spis_publish_clear</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given SPIS event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="367" column="24" declfile="hal/nrf_spis.h" declline="367" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga63e5e7dcdbcc799e3935a280b0899414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the SPIS peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="792" column="24" bodyfile="hal/nrf_spis.h" bodystart="792" bodyend="795" declfile="hal/nrf_spis.h" declline="376" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaf4b63a301304908e94840cabb919c5fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the SPIS peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="797" column="24" bodyfile="hal/nrf_spis.h" bodystart="797" bodyend="800" declfile="hal/nrf_spis.h" declline="383" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga7fb7b6210fe5c0a9043fb45d3aaf5e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_enable_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_enable_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the SPIS peripheral is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The SPIS is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The SPIS is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="802" column="24" bodyfile="hal/nrf_spis.h" bodystart="802" bodyend="805" declfile="hal/nrf_spis.h" declline="393" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaeef8d8e99f32e9b59b1e73679d80095d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" kindref="member">nrf_spis_semstat_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_spis_semstat_t nrf_spis_semaphore_status_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_semaphore_status_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SPIS semaphore status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current semaphore status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="807" column="38" bodyfile="hal/nrf_spis.h" bodystart="807" bodyend="811" declfile="hal/nrf_spis.h" declline="402" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gacc7d1fd7a0069d45ef26317eebf03bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" kindref="member">nrf_spis_status_mask_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_spis_status_mask_t nrf_spis_status_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_status_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SPIS status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current SPIS status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="813" column="42" bodyfile="hal/nrf_spis.h" bodystart="813" bodyend="816" declfile="hal/nrf_spis.h" declline="411" declcolumn="42"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gae9c6ef2cf55a287cd4d4dadc5d86af9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_pins_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint32_t sck_pin, uint32_t mosi_pin, uint32_t miso_pin, uint32_t csn_pin)</argsstring>
        <name>nrf_spis_pins_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sck_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mosi_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>miso_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>csn_pin</declname>
        </param>
        <briefdescription>
<para>Function for configuring SPIS pins. </para>
        </briefdescription>
        <detaileddescription>
<para>If a given signal is not needed, pass the <ref refid="group__nrf__spis__hal_1gacb5fedfd2641e3d94b70cb0981a6ae59" kindref="member">NRF_SPIS_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sck_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SCK pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mosi_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>MOSI pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">miso_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>MISO pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">csn_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>CSN pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="818" column="24" bodyfile="hal/nrf_spis.h" bodystart="818" bodyend="835" declfile="hal/nrf_spis.h" declline="425" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga02f8510cc967a8e85b4f2479ed6fdf0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_sck_pin_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_sck_pin_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="837" column="28" bodyfile="hal/nrf_spis.h" bodystart="837" bodyend="844" declfile="hal/nrf_spis.h" declline="438" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga18a0ee9e743e415f7271937cda50e118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_mosi_pin_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_mosi_pin_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the MOSI pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MOSI pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="846" column="28" bodyfile="hal/nrf_spis.h" bodystart="846" bodyend="853" declfile="hal/nrf_spis.h" declline="447" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaf767a185d395f8005180fcc9c9332b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_miso_pin_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_miso_pin_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the MISO pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MISO pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="855" column="28" bodyfile="hal/nrf_spis.h" bodystart="855" bodyend="862" declfile="hal/nrf_spis.h" declline="456" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga42e68684e28a076b96f618dc19ff488c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_csn_pin_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_csn_pin_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the CSN pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CSN pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="864" column="28" bodyfile="hal/nrf_spis.h" bodystart="864" bodyend="871" declfile="hal/nrf_spis.h" declline="465" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga5650f142b9201323a9139f553f69cdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_tx_buffer_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrf_spis_tx_buffer_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer that contains the data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="873" column="24" bodyfile="hal/nrf_spis.h" bodystart="873" bodyend="887" declfile="hal/nrf_spis.h" declline="474" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga2c54e780277cb8eefada45a1aa32a82a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_buffer_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrf_spis_rx_buffer_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="889" column="24" bodyfile="hal/nrf_spis.h" bodystart="889" bodyend="903" declfile="hal/nrf_spis.h" declline="485" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaf5e65a1a12a1f67a15d3aa54cfe1f80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_spis_tx_amount_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_tx_amount_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes transmitted in the last granted transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes transmitted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="905" column="26" bodyfile="hal/nrf_spis.h" bodystart="905" bodyend="914" declfile="hal/nrf_spis.h" declline="497" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga2fc76cac3a50a357cd4358e04a236f82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_spis_rx_amount_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_rx_amount_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes received in the last granted transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes received. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="916" column="26" bodyfile="hal/nrf_spis.h" bodystart="916" bodyend="925" declfile="hal/nrf_spis.h" declline="507" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga14df219a457669168356017a698069ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_configure</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, nrf_spis_mode_t spi_mode, nrf_spis_bit_order_t spi_bit_order)</argsstring>
        <name>nrf_spis_configure</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1gabdceacd5f5f545e35342fe117adf57d8" kindref="member">nrf_spis_mode_t</ref></type>
          <declname>spi_mode</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spis__hal_1ga45fe2b8b4074fdffa1afc5d4da0baacc" kindref="member">nrf_spis_bit_order_t</ref></type>
          <declname>spi_bit_order</declname>
        </param>
        <briefdescription>
<para>Function for setting the SPI configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spi_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spi_bit_order</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI bit order. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="927" column="24" bodyfile="hal/nrf_spis.h" bodystart="927" bodyend="958" declfile="hal/nrf_spis.h" declline="516" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gab4fa594751d1c5778e4a581d95b1ece5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_def_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t def)</argsstring>
        <name>nrf_spis_def_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>def</declname>
        </param>
        <briefdescription>
<para>Function for setting the default character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">def</parametername>
</parameternamelist>
<parameterdescription>
<para>Default character that is clocked out in case of an overflow of the RXD buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="966" column="24" bodyfile="hal/nrf_spis.h" bodystart="966" bodyend="970" declfile="hal/nrf_spis.h" declline="527" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gab2ea6cc75d3ef4e4a84f6092e2d1ebf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_orc_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t orc)</argsstring>
        <name>nrf_spis_orc_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>orc</declname>
        </param>
        <briefdescription>
<para>Function for setting the over-read character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">orc</parametername>
</parameternamelist>
<parameterdescription>
<para>Over-read character that is clocked out in case of an over-read of the TXD buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="960" column="24" bodyfile="hal/nrf_spis.h" bodystart="960" bodyend="964" declfile="hal/nrf_spis.h" declline="537" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga7a370739915623984418734718fa682d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_tx_list_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_tx_list_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="546" column="24" declfile="hal/nrf_spis.h" declline="546" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga9749f3ecfdb8a5176d0cd21322875244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_tx_list_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_tx_list_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="553" column="24" declfile="hal/nrf_spis.h" declline="553" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga7e886b4c414d7a7c0b1111f4252a7d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_list_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_rx_list_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="562" column="24" declfile="hal/nrf_spis.h" declline="562" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gacc1aace7f963393905e12f328038ba41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_list_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_rx_list_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="569" column="24" declfile="hal/nrf_spis.h" declline="569" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga1c3660dafd8fca2c92d45dd1ff50aed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_pattern_match_enable_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t index, bool enable)</argsstring>
        <name>nrf_spis_rx_pattern_match_enable_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling individual pattern match filters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if pattern match filter is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="997" column="24" bodyfile="hal/nrf_spis.h" bodystart="997" bodyend="1040" declfile="hal/nrf_spis.h" declline="580" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaf2c9042e0ce66ff8b947bf5571b00013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_rx_pattern_match_enable_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spis_rx_pattern_match_enable_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified pattern match filter is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1042" column="24" bodyfile="hal/nrf_spis.h" bodystart="1042" bodyend="1068" declfile="hal/nrf_spis.h" declline="593" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga8ae798708c20465b6f3d658d8acf7ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_pattern_match_one_shot_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_spis_rx_pattern_match_one_shot_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for enabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1070" column="24" bodyfile="hal/nrf_spis.h" bodystart="1070" bodyend="1092" declfile="hal/nrf_spis.h" declline="602" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga1a0cf4001ebfdef77b338e24c9e4a6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_pattern_match_one_shot_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_spis_rx_pattern_match_one_shot_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for disabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1094" column="24" bodyfile="hal/nrf_spis.h" bodystart="1094" bodyend="1116" declfile="hal/nrf_spis.h" declline="611" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gae7e362063a90b178ca344bda1ae0399d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_rx_pattern_match_one_shot_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spis_rx_pattern_match_one_shot_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if specified pattern match filter is configured as one-shot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as one-shot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as continuous. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1118" column="24" bodyfile="hal/nrf_spis.h" bodystart="1118" bodyend="1144" declfile="hal/nrf_spis.h" declline="623" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gab7b277eb71d7fad3658afc9a5ec3868f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_pattern_match_candidate_set</definition>
        <argsstring>(NRF_SPIS_Type *p_reg, uint8_t index, uint32_t pattern)</argsstring>
        <name>nrf_spis_rx_pattern_match_candidate_set</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Function for setting the pattern to be looked for by the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern to be looked for. Match will trigger the corresponding event, if enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1146" column="24" bodyfile="hal/nrf_spis.h" bodystart="1146" bodyend="1152" declfile="hal/nrf_spis.h" declline="634" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaa71c188db4afd17bbcab6c0ae01089c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spis_rx_pattern_match_candidate_get</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spis_rx_pattern_match_candidate_get</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the pattern that the specified match filter is looking for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pattern that the specified match filter is looking for. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1154" column="28" bodyfile="hal/nrf_spis.h" bodystart="1154" bodyend="1159" declfile="hal/nrf_spis.h" declline="646" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gaaf75523c892bfacda1a2112ac9b0a00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_terminate_on_bus_error_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_rx_terminate_on_bus_error_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the termination of the RX transaction after detecting the BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1163" column="24" bodyfile="hal/nrf_spis.h" bodystart="1163" bodyend="1166" declfile="hal/nrf_spis.h" declline="656" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1gabbc312664f1c9a05287b240147f30a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_rx_terminate_on_bus_error_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_rx_terminate_on_bus_error_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the termination of the RX transaction after detecting the BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1168" column="24" bodyfile="hal/nrf_spis.h" bodystart="1168" bodyend="1171" declfile="hal/nrf_spis.h" declline="663" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga83728829600243a0d9d1a6837dcb59c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_rx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_rx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if RX transaction termination after detecting the BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>RX transaction termination after detecting a BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>RX transaction termination after detecting a BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1173" column="24" bodyfile="hal/nrf_spis.h" bodystart="1173" bodyend="1178" declfile="hal/nrf_spis.h" declline="673" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga4d780eefdf77bbb1f769a5024098ad4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_tx_terminate_on_bus_error_enable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_tx_terminate_on_bus_error_enable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the termination of the TX transaction after detecting the BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1180" column="24" bodyfile="hal/nrf_spis.h" bodystart="1180" bodyend="1183" declfile="hal/nrf_spis.h" declline="680" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga28417a94fc1fe6a8ce2c86235a236828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spis_tx_terminate_on_bus_error_disable</definition>
        <argsstring>(NRF_SPIS_Type *p_reg)</argsstring>
        <name>nrf_spis_tx_terminate_on_bus_error_disable</name>
        <param>
          <type>NRF_SPIS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the termination of the TX transaction after detecting the BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1185" column="24" bodyfile="hal/nrf_spis.h" bodystart="1185" bodyend="1188" declfile="hal/nrf_spis.h" declline="687" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spis__hal_1ga26663baf6c9c605ac5c58a7d78274393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spis_tx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_SPIS_Type const *p_reg)</argsstring>
        <name>nrf_spis_tx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_SPIS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if TX transaction termination after detecting the BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>TX transaction termination after detecting a BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>TX transaction termination after detecting a BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spis.h" line="1190" column="24" bodyfile="hal/nrf_spis.h" bodystart="1190" bodyend="1195" declfile="hal/nrf_spis.h" declline="697" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_SPIS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF54H20_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_CLOCKPIN_MISO_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_CLOCKPIN_SCK_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_spis_hal<sp/>SPIS<sp/>HAL</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_spis</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>SPIS<sp/>peripheral.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPIS_DMA_TX_PTR_PTR_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>dedicated<sp/>DMA<sp/>register<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_HAS_DMA_REG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_HAS_DMA_REG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(SPIS_TASKS_DMA_RX_ENABLEMATCH_ENABLEMATCH_Msk)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>defined(SPIS_EVENTS_DMA_RX_END_END_Msk))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPIS<sp/>DMA<sp/>tasks<sp/>and<sp/>events<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@brief<sp/>Maximum<sp/>number<sp/>of<sp/>RX<sp/>patterns.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT<sp/>SPIS_DMA_RX_MATCH_CANDIDATE_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>getting<sp/>pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>SPIS<sp/>peripheral.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/>SPIS<sp/>instance<sp/>index.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>SPIS<sp/>peripheral.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_INST_GET(idx)<sp/>NRFX_CONCAT(NRF_,<sp/>SPIS,<sp/>idx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>value<sp/>can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>parameter<sp/>for<sp/>the<sp/>@ref<sp/>nrf_spis_pins_set</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>to<sp/>specify<sp/>that<sp/>a<sp/>given<sp/>SPI<sp/>signal<sp/>(SCK,<sp/>MOSI,<sp/>or<sp/>MISO)</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>connected<sp/>to<sp/>a<sp/>physical<sp/>pin.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPIS_PIN_NOT_CONNECTED<sp/><sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">/**<sp/>@brief<sp/>SPIS<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba088ac4bf4328dcc120151a8d22f03ba3" kindref="member">NRF_SPIS_TASK_ACQUIRE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_ACQUIRE),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Acquire<sp/>SPI<sp/>semaphore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebaa845613836457fc5c6c1707d3b7ba545" kindref="member">NRF_SPIS_TASK_RELEASE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_RELEASE),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Release<sp/>SPI<sp/>semaphore,<sp/>enabling<sp/>the<sp/>SPI<sp/>slave<sp/>to<sp/>acquire<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba5c443c2826b58510ee71c5099aef8d10" kindref="member">NRF_SPIS_TASK_ENABLERXMATCH0</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[0]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba7dd1d73163b8e1a4e879e772a370bdbe" kindref="member">NRF_SPIS_TASK_ENABLERXMATCH1</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[1]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba01f9eab2bd09a662bb6df885a5b59de6" kindref="member">NRF_SPIS_TASK_ENABLERXMATCH2</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[2]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba77785947849146663df5920c2e74a72b" kindref="member">NRF_SPIS_TASK_ENABLERXMATCH3</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.ENABLEMATCH[3]),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebab3f510d7d6ba1158219792cbb3d6ec29" kindref="member">NRF_SPIS_TASK_DISABLERXMATCH0</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[0]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba6f63f866d6c802ae640ddd42aa93c385" kindref="member">NRF_SPIS_TASK_DISABLERXMATCH1</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[1]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62eba9796420e2ca94f6fab8997120e96f953" kindref="member">NRF_SPIS_TASK_DISABLERXMATCH2</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[2]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga1efe3bf5da314ab27af84b33941e62ebac2c5dd1806fa514d0ab8758c9b47fb94" kindref="member">NRF_SPIS_TASK_DISABLERXMATCH3</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>TASKS_DMA.RX.DISABLEMATCH[3])<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>SPI<sp/>pattern<sp/>matching<sp/>functionality<sp/>for<sp/>pattern<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">/**<sp/>@brief<sp/>SPIS<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a5a9da458d7e87562ae44c5a58f3cd111" kindref="member">NRF_SPIS_EVENT_RXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.READY),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a78bc0593ec85de702992f002105eb29d" kindref="member">NRF_SPIS_EVENT_RXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.BUSERROR),<sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>RX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a78769f6211712688c42830accc117611" kindref="member">NRF_SPIS_EVENT_RXMATCH0</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.MATCH[0]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>0<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a2a1a9938215a091c636d3e7de571d347" kindref="member">NRF_SPIS_EVENT_RXMATCH1</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.MATCH[1]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>1<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ae911dbe436deaf088e1a2bb9caa1c52d" kindref="member">NRF_SPIS_EVENT_RXMATCH2</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.MATCH[2]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>2<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994aaaccca49d039d1a5aff45a06606e612e" kindref="member">NRF_SPIS_EVENT_RXMATCH3</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.MATCH[3]),<sp/></highlight><highlight class="comment">///&lt;<sp/>Pattern<sp/>match<sp/>for<sp/>pattern<sp/>3<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a4464c9bc5c56880903a3543df31912ec" kindref="member">NRF_SPIS_EVENT_TXSTARTED</ref><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.TX.READY),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmit<sp/>sequence<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994aa3672fac328cc0594e0d1ad862b5f850" kindref="member">NRF_SPIS_EVENT_TXBUSERROR</ref><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.TX.BUSERROR),<sp/></highlight><highlight class="comment">///&lt;<sp/>Memory<sp/>bus<sp/>error<sp/>occurred<sp/>during<sp/>the<sp/>TX<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ade011613d62d6785c1ed22cdb8fb20b6" kindref="member">NRF_SPIS_EVENT_ENDRX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.RX.END),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>End<sp/>of<sp/>RXD<sp/>buffer<sp/>reached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a7c084a16ac8273d1981b57bd5b7ad7ab" kindref="member">NRF_SPIS_EVENT_ENDTX</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_DMA.TX.END),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>End<sp/>of<sp/>TXD<sp/>buffer<sp/>reached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994a2530f94800ff5bac39640242b17d6d42" kindref="member">NRF_SPIS_EVENT_END</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_END),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Granted<sp/>transaction<sp/>completed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga6d8f5c9cf2777e030f97792f09dc9994ac886f6e0ce7503def700cb4a7fdbfbe8" kindref="member">NRF_SPIS_EVENT_ACQUIRED</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPIS_Type,<sp/>EVENTS_ACQUIRED)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Semaphore<sp/>acquired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>@brief<sp/>SPIS<sp/>shortcuts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a0a3db07907b733bbb4ea324a867cda30" kindref="member">NRF_SPIS_SHORT_END_ACQUIRE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPIS_SHORTS_END_ACQUIRE_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>END<sp/>event<sp/>and<sp/>ACQUIRE<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ad76130c0bed7e88e0c04074a3f20f298" kindref="member">NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</ref><sp/><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH0<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH1<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ab3c8d84e63f3c270220ab776f9967028" kindref="member">NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</ref><sp/><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH1<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH2<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978afcc3d27c97cf6275a90ba7b56a45a6c3" kindref="member">NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</ref><sp/><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH2<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH3<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a07c7fda4808f6afd6879867036787a21" kindref="member">NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</ref><sp/><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH3<sp/>event<sp/>and<sp/>DMA.RX.ENABLEMATCH0<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ae18293608f195b184c55ef02e29b9017" kindref="member">NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</ref><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH0<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH0<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a5f8021aa78f7a064225958a893af8811" kindref="member">NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</ref><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH1<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH1<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a4e2db6f88e9601fa4166608002398661" kindref="member">NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</ref><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH2<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH2<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a02caf25f2bd8567791a906f8b8d7355e" kindref="member">NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</ref><sp/>=<sp/>SPIS_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>DMA.RX.MATCH3<sp/>event<sp/>and<sp/>DMA.RX.DISABLEMATCH3<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978aae2cccd94d277d93a92938cfa3743033" kindref="member">NRF_SPIS_ALL_SHORTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a0a3db07907b733bbb4ea324a867cda30" kindref="member">NRF_SPIS_SHORT_END_ACQUIRE</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ad76130c0bed7e88e0c04074a3f20f298" kindref="member">NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ab3c8d84e63f3c270220ab776f9967028" kindref="member">NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978afcc3d27c97cf6275a90ba7b56a45a6c3" kindref="member">NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a07c7fda4808f6afd6879867036787a21" kindref="member">NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978ae18293608f195b184c55ef02e29b9017" kindref="member">NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a5f8021aa78f7a064225958a893af8811" kindref="member">NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a4e2db6f88e9601fa4166608002398661" kindref="member">NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1gga12e7018a7e25e50cf65e1a3317006978a02caf25f2bd8567791a906f8b8d7355e" kindref="member">NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>All<sp/>SPIS<sp/>shortcuts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1ga12e7018a7e25e50cf65e1a3317006978" kindref="member">nrf_spis_short_mask_t</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**<sp/>@brief<sp/>SPIS<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a82002d6960c1d86f727ba8538e9861d6" kindref="member">NRF_SPIS_INT_END_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_END_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab97e121bc56b8bb5d728747ad1b29e9b" kindref="member">NRF_SPIS_INT_ACQUIRED_MASK</ref><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_ACQUIRED_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ACQUIRED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712aaefc53d4929619e8736f570c64daff0c" kindref="member">NRF_SPIS_INT_RXREADY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.READY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab412248d8514c3c6024deb0ad52ff20d" kindref="member">NRF_SPIS_INT_RXBUSERROR_MASK</ref><sp/>=<sp/>SPIS_INTENSET_DMARXBUSERROR_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.BUSERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a472d2ac9533749cbd96858f85cc950a2" kindref="member">NRF_SPIS_INT_RXMATCH0_MASK</ref><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXMATCH0_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH0<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a3570ac4a73a388d117ac81d34de3a738" kindref="member">NRF_SPIS_INT_RXMATCH1_MASK</ref><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXMATCH1_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH1<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2b2f63bf028d155bb520cd9e03376adb" kindref="member">NRF_SPIS_INT_RXMATCH2_MASK</ref><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXMATCH2_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH2<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ae05328a9b0beda9cbc43807f3e51cbe0" kindref="member">NRF_SPIS_INT_RXMATCH3_MASK</ref><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXMATCH3_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.RX.MATCH3<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a998b1b541893511e92e7f91d98edb2c5" kindref="member">NRF_SPIS_INT_TXREADY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMATXREADY_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.TX.READY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a286fc478728b9856fc9c058e1dce519b" kindref="member">NRF_SPIS_INT_TXBUSERROR_MASK</ref><sp/>=<sp/>SPIS_INTENSET_DMATXBUSERROR_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>DMA.TX.BUSERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2fe06075051e66e48b066337cc46c79a" kindref="member">NRF_SPIS_INT_ENDRX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMARXEND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDRX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2481beeb106dd4746dda38d9ca1c90ba" kindref="member">NRF_SPIS_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPIS_INTENSET_DMATXEND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDTX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712aa55aea76c655b26fb55c05c95747d91e" kindref="member">NRF_SPIS_ALL_INTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a82002d6960c1d86f727ba8538e9861d6" kindref="member">NRF_SPIS_INT_END_MASK</ref></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab97e121bc56b8bb5d728747ad1b29e9b" kindref="member">NRF_SPIS_INT_ACQUIRED_MASK</ref></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712aaefc53d4929619e8736f570c64daff0c" kindref="member">NRF_SPIS_INT_RXREADY_MASK</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ab412248d8514c3c6024deb0ad52ff20d" kindref="member">NRF_SPIS_INT_RXBUSERROR_MASK</ref></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a472d2ac9533749cbd96858f85cc950a2" kindref="member">NRF_SPIS_INT_RXMATCH0_MASK</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a3570ac4a73a388d117ac81d34de3a738" kindref="member">NRF_SPIS_INT_RXMATCH1_MASK</ref></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2b2f63bf028d155bb520cd9e03376adb" kindref="member">NRF_SPIS_INT_RXMATCH2_MASK</ref></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712ae05328a9b0beda9cbc43807f3e51cbe0" kindref="member">NRF_SPIS_INT_RXMATCH3_MASK</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a998b1b541893511e92e7f91d98edb2c5" kindref="member">NRF_SPIS_INT_TXREADY_MASK</ref></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a286fc478728b9856fc9c058e1dce519b" kindref="member">NRF_SPIS_INT_TXBUSERROR_MASK</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2fe06075051e66e48b066337cc46c79a" kindref="member">NRF_SPIS_INT_ENDRX_MASK</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="group__nrf__spis__hal_1ggadb4640353785b50122bc2098c316d712a2481beeb106dd4746dda38d9ca1c90ba" kindref="member">NRF_SPIS_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>All<sp/>SPIS<sp/>interrupts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1gadb4640353785b50122bc2098c316d712" kindref="member">nrf_spis_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">/**<sp/>@brief<sp/>SPI<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ae8847dcb4746aebce69827f05ae8063b" kindref="member">NRF_SPIS_MODE_0</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>active<sp/>high,<sp/>sample<sp/>on<sp/>leading<sp/>edge<sp/>of<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ad8ad67126c2df0e63e4e33ff88c96dc3" kindref="member">NRF_SPIS_MODE_1</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>active<sp/>high,<sp/>sample<sp/>on<sp/>trailing<sp/>edge<sp/>of<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a79bb0d16600dc650db523db073619e8c" kindref="member">NRF_SPIS_MODE_2</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>active<sp/>low,<sp/>sample<sp/>on<sp/>leading<sp/>edge<sp/>of<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a6ce9e0b63adf5b7aba24b783aec27af0" kindref="member">NRF_SPIS_MODE_3</ref><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>active<sp/>low,<sp/>sample<sp/>on<sp/>trailing<sp/>edge<sp/>of<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1gabdceacd5f5f545e35342fe117adf57d8" kindref="member">nrf_spis_mode_t</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment">/**<sp/>@brief<sp/>SPI<sp/>bit<sp/>orders.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga45fe2b8b4074fdffa1afc5d4da0baacca710fa90e8fc75221f6a019666e2b56c6" kindref="member">NRF_SPIS_BIT_ORDER_MSB_FIRST</ref><sp/>=<sp/>SPIS_CONFIG_ORDER_MsbFirst,<sp/></highlight><highlight class="comment">///&lt;<sp/>Most<sp/>significant<sp/>bit<sp/>shifted<sp/>out<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga45fe2b8b4074fdffa1afc5d4da0baacca5a0f1182a58df9489e8a1771ef65047a" kindref="member">NRF_SPIS_BIT_ORDER_LSB_FIRST</ref><sp/>=<sp/>SPIS_CONFIG_ORDER_LsbFirst<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Least<sp/>significant<sp/>bit<sp/>shifted<sp/>out<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1ga45fe2b8b4074fdffa1afc5d4da0baacc" kindref="member">nrf_spis_bit_order_t</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">/**<sp/>@brief<sp/>SPI<sp/>semaphore<sp/>status.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a64b5f229d3696fdce2eeacc069196c6a" kindref="member">NRF_SPIS_SEMSTAT_FREE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">///&lt;<sp/>Semaphore<sp/>is<sp/>free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a0657f67153a7f2a59539aba1259b0dea" kindref="member">NRF_SPIS_SEMSTAT_CPU</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">///&lt;<sp/>Semaphore<sp/>is<sp/>assigned<sp/>to<sp/>the<sp/>CPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925a37cc3d4e768479f6310a4aff2de9f99c" kindref="member">NRF_SPIS_SEMSTAT_SPIS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/></highlight><highlight class="comment">///&lt;<sp/>Semaphore<sp/>is<sp/>assigned<sp/>to<sp/>the<sp/>SPI<sp/>slave.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gga975a3f646017a75d1644e84d18b39925aa91d8f884ace35f86ef95b24ceda68bb" kindref="member">NRF_SPIS_SEMSTAT_CPUPENDING</ref><sp/>=<sp/>3<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Semaphore<sp/>is<sp/>assigned<sp/>to<sp/>the<sp/>SPI,<sp/>but<sp/>a<sp/>handover<sp/>to<sp/>the<sp/>CPU<sp/>is<sp/>pending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" kindref="member">nrf_spis_semstat_t</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment">/**<sp/>@brief<sp/>SPIS<sp/>status.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggab9def61d7198f840bebee496dd51ec50a2a21e3b425bac272deb707927e3bdfef" kindref="member">NRF_SPIS_STATUS_OVERREAD</ref><sp/>=<sp/>SPIS_STATUS_OVERREAD_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>TX<sp/>buffer<sp/>over-read<sp/>detected<sp/>and<sp/>prevented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ggab9def61d7198f840bebee496dd51ec50a0f3bdf85c7553679dba370da244d29e7" kindref="member">NRF_SPIS_STATUS_OVERFLOW</ref><sp/>=<sp/>SPIS_STATUS_OVERFLOW_Msk<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>RX<sp/>buffer<sp/>overflow<sp/>detected<sp/>and<sp/>prevented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}<sp/><ref refid="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" kindref="member">nrf_spis_status_mask_t</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>activating<sp/>the<sp/>specified<sp/>SPIS<sp/>task.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga12255b4e10b6df3aef7c33dcbb7e53e3" kindref="member">nrf_spis_task_trigger</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>SPIS<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>The<sp/>specified<sp/>task.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga43a0b18176df4752cceb043c6c98dbff" kindref="member">nrf_spis_task_address_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>SPIS<sp/>event.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga20d37e83bbb50b7bc428c266467217e9" kindref="member">nrf_spis_event_clear</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>SPIS<sp/>event.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga0f5628fe5d0b75a3fcdfdb66c8ddd33c" kindref="member">nrf_spis_event_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>SPIS<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>The<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga6dc6dd86fd3b452bdd20b95de2fa728f" kindref="member">nrf_spis_event_address_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>specified<sp/>shortcuts.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga730f7a0e156952af4b86007863972d53" kindref="member">nrf_spis_shorts_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>specified<sp/>shortcuts.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gac805ae076f3405fecd31d53f66785542" kindref="member">nrf_spis_shorts_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spis_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga9a4dae413afbdc7e2d33d7450c5b0edd" kindref="member">nrf_spis_int_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spis_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga4f1c111b9e60d033b7d7dd560bbff316" kindref="member">nrf_spis_int_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spis_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga66ed394f602119cd6b1bd8e3bc7fcd72" kindref="member">nrf_spis_int_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="326"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS<sp/>task.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga3effaff924a28c57479ccb4de3eefc52" kindref="member">nrf_spis_subscribe_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS<sp/>task.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga20bc57578d44b8e5dfe14a143e073e4f" kindref="member">nrf_spis_subscribe_clear</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS<sp/>event.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaa6b1b94233852d47e91478a0693b7f3b" kindref="member">nrf_spis_publish_set</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS<sp/>event.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga519213f835ebad3ed753aedb6ee2cb5d" kindref="member">nrf_spis_publish_clear</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>SPIS<sp/>peripheral.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga63e5e7dcdbcc799e3935a280b0899414" kindref="member">nrf_spis_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>SPIS<sp/>peripheral.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf4b63a301304908e94840cabb919c5fe" kindref="member">nrf_spis_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="385"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>SPIS<sp/>peripheral<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>SPIS<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>SPIS<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7fb7b6210fe5c0a9043fb45d3aaf5e8d" kindref="member">nrf_spis_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>SPIS<sp/>semaphore<sp/>status.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Current<sp/>semaphore<sp/>status.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" kindref="member">nrf_spis_semstat_t</ref><sp/><ref refid="group__nrf__spis__hal_1gaeef8d8e99f32e9b59b1e73679d80095d" kindref="member">nrf_spis_semaphore_status_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>SPIS<sp/>status.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Current<sp/>SPIS<sp/>status.</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" kindref="member">nrf_spis_status_mask_t</ref><sp/><ref refid="group__nrf__spis__hal_1gacc7d1fd7a0069d45ef26317eebf03bce" kindref="member">nrf_spis_status_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>SPIS<sp/>pins.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>given<sp/>signal<sp/>is<sp/>not<sp/>needed,<sp/>pass<sp/>the<sp/>@ref<sp/>NRF_SPIS_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>value<sp/>instead<sp/>of<sp/>its<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>sck_pin<sp/><sp/>SCK<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mosi_pin<sp/>MOSI<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>miso_pin<sp/>MISO<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>csn_pin<sp/><sp/>CSN<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gae9c6ef2cf55a287cd4d4dadc5d86af9b" kindref="member">nrf_spis_pins_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sck_pin,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mosi_pin,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miso_pin,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csn_pin);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>@return<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga02f8510cc967a8e85b4f2479ed6fdf0e" kindref="member">nrf_spis_sck_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MOSI<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>@return<sp/>MOSI<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga18a0ee9e743e415f7271937cda50e118" kindref="member">nrf_spis_mosi_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="449"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MISO<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>@return<sp/>MISO<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1gaf767a185d395f8005180fcc9c9332b1d" kindref="member">nrf_spis_miso_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="458"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>CSN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>@return<sp/>CSN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga42e68684e28a076b96f618dc19ff488c" kindref="member">nrf_spis_csn_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>that<sp/>contains<sp/>the<sp/>data<sp/>to<sp/>send.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>transmit.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga5650f142b9201323a9139f553f69cdb4" kindref="member">nrf_spis_tx_buffer_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="478"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>for<sp/>received<sp/>data.</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>receive.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga2c54e780277cb8eefada45a1aa32a82a" kindref="member">nrf_spis_rx_buffer_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="489"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>transmitted</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>last<sp/>granted<sp/>transaction.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Number<sp/>of<sp/>bytes<sp/>transmitted.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf5e65a1a12a1f67a15d3aa54cfe1f80d" kindref="member">nrf_spis_tx_amount_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>received</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>last<sp/>granted<sp/>transaction.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Number<sp/>of<sp/>bytes<sp/>received.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga2fc76cac3a50a357cd4358e04a236f82" kindref="member">nrf_spis_rx_amount_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="509"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>SPI<sp/>configuration.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>spi_mode<sp/><sp/><sp/><sp/><sp/><sp/>SPI<sp/>mode.</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>spi_bit_order<sp/>SPI<sp/>bit<sp/>order.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga14df219a457669168356017a698069ea" kindref="member">nrf_spis_configure</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gabdceacd5f5f545e35342fe117adf57d8" kindref="member">nrf_spis_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>spi_mode,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga45fe2b8b4074fdffa1afc5d4da0baacc" kindref="member">nrf_spis_bit_order_t</ref><sp/>spi_bit_order);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>default<sp/>character.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>def<sp/><sp/><sp/>Default<sp/>character<sp/>that<sp/>is<sp/>clocked<sp/>out<sp/>in<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>overflow<sp/>of<sp/>the<sp/>RXD<sp/>buffer.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab4fa594751d1c5778e4a581d95b1ece5" kindref="member">nrf_spis_def_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>over-read<sp/>character.</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>orc<sp/><sp/><sp/>Over-read<sp/>character<sp/>that<sp/>is<sp/>clocked<sp/>out<sp/>in<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>over-read<sp/>of<sp/>the<sp/>TXD<sp/>buffer.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab2ea6cc75d3ef4e4a84f6092e2d1ebf0" kindref="member">nrf_spis_orc_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orc);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPIS_TXD_LIST_LIST_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7a370739915623984418734718fa682d" kindref="member">nrf_spis_tx_list_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga9749f3ecfdb8a5176d0cd21322875244" kindref="member">nrf_spis_tx_list_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(SPIS_TXD_LIST_LIST_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPIS_RXD_LIST_LIST_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="557"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7e886b4c414d7a7c0b1111f4252a7d8e" kindref="member">nrf_spis_rx_list_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gacc1aace7f963393905e12f328038ba41" kindref="member">nrf_spis_rx_list_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(SPIS_RXD_LIST_LIST_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="573"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>individual<sp/>pattern<sp/>match<sp/>filters.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga1c3660dafd8fca2c92d45dd1ff50aed4" kindref="member">nrf_spis_rx_pattern_match_enable_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf2c9042e0ce66ff8b947bf5571b00013" kindref="member">nrf_spis_rx_pattern_match_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>one-shot<sp/>operation<sp/>for<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga8ae798708c20465b6f3d658d8acf7ea7" kindref="member">nrf_spis_rx_pattern_match_one_shot_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>one-shot<sp/>operation<sp/>for<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga1a0cf4001ebfdef77b338e24c9e4a6f7" kindref="member">nrf_spis_rx_pattern_match_one_shot_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="614"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>specified<sp/>pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>one-shot.</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>one-shot.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Pattern<sp/>match<sp/>filter<sp/>is<sp/>configured<sp/>as<sp/>continuous.</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gae7e362063a90b178ca344bda1ae0399d" kindref="member">nrf_spis_rx_pattern_match_one_shot_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="626"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pattern<sp/>to<sp/>be<sp/>looked<sp/>for<sp/>by<sp/>the<sp/>specified<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pattern<sp/>Pattern<sp/>to<sp/>be<sp/>looked<sp/>for.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Match<sp/>will<sp/>trigger<sp/>the<sp/>corresponding<sp/>event,<sp/>if<sp/>enabled.</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab7b277eb71d7fad3658afc9a5ec3868f" kindref="member">nrf_spis_rx_pattern_match_candidate_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="638"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pattern<sp/>that<sp/>the<sp/>specified<sp/>match<sp/>filter<sp/>is<sp/>looking<sp/>for.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Index<sp/>of<sp/>pattern<sp/>match<sp/>filter.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pattern<sp/>that<sp/>the<sp/>specified<sp/>match<sp/>filter<sp/>is<sp/>looking<sp/>for.</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1gaa71c188db4afd17bbcab6c0ae01089c4" kindref="member">nrf_spis_rx_pattern_match_candidate_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="651"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>termination<sp/>of<sp/>the<sp/>RX<sp/>transaction<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaaf75523c892bfacda1a2112ac9b0a00b" kindref="member">nrf_spis_rx_terminate_on_bus_error_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="658"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>termination<sp/>of<sp/>the<sp/>RX<sp/>transaction<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gabbc312664f1c9a05287b240147f30a45" kindref="member">nrf_spis_rx_terminate_on_bus_error_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="665"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>RX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>RX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>RX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga83728829600243a0d9d1a6837dcb59c1" kindref="member">nrf_spis_rx_terminate_on_bus_error_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="675"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>termination<sp/>of<sp/>the<sp/>TX<sp/>transaction<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga4d780eefdf77bbb1f769a5024098ad4e" kindref="member">nrf_spis_tx_terminate_on_bus_error_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="682"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>termination<sp/>of<sp/>the<sp/>TX<sp/>transaction<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga28417a94fc1fe6a8ce2c86235a236828" kindref="member">nrf_spis_tx_terminate_on_bus_error_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="689"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>TX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>the<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>TX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>TX<sp/>transaction<sp/>termination<sp/>after<sp/>detecting<sp/>a<sp/>BUSERROR<sp/>event<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga26663baf6c9c605ac5c58a7d78274393" kindref="member">nrf_spis_tx_terminate_on_bus_error_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga12255b4e10b6df3aef7c33dcbb7e53e3" kindref="member">nrf_spis_task_trigger</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga43a0b18176df4752cceb043c6c98dbff" kindref="member">nrf_spis_task_address_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)p_reg<sp/>+<sp/>(uint32_t)task;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga20d37e83bbb50b7bc428c266467217e9" kindref="member">nrf_spis_event_clear</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga0f5628fe5d0b75a3fcdfdb66c8ddd33c" kindref="member">nrf_spis_event_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga6dc6dd86fd3b452bdd20b95de2fa728f" kindref="member">nrf_spis_event_address_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)p_reg<sp/>+<sp/>(uint32_t)event;</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga730f7a0e156952af4b86007863972d53" kindref="member">nrf_spis_shorts_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gac805ae076f3405fecd31d53f66785542" kindref="member">nrf_spis_shorts_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>&amp;=<sp/>~(mask);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga9a4dae413afbdc7e2d33d7450c5b0edd" kindref="member">nrf_spis_int_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga4f1c111b9e60d033b7d7dd560bbff316" kindref="member">nrf_spis_int_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga66ed394f602119cd6b1bd8e3bc7fcd72" kindref="member">nrf_spis_int_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga3effaff924a28c57479ccb4de3eefc52" kindref="member">nrf_spis_subscribe_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga20bc57578d44b8e5dfe14a143e073e4f" kindref="member">nrf_spis_subscribe_clear</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga1efe3bf5da314ab27af84b33941e62eb" kindref="member">nrf_spis_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaa6b1b94233852d47e91478a0693b7f3b" kindref="member">nrf_spis_publish_set</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga519213f835ebad3ed753aedb6ee2cb5d" kindref="member">nrf_spis_publish_clear</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga6d8f5c9cf2777e030f97792f09dc9994" kindref="member">nrf_spis_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga63e5e7dcdbcc799e3935a280b0899414" kindref="member">nrf_spis_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(SPIS_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>SPIS_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf4b63a301304908e94840cabb919c5fe" kindref="member">nrf_spis_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(SPIS_ENABLE_ENABLE_Disabled<sp/>&lt;&lt;<sp/>SPIS_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7fb7b6210fe5c0a9043fb45d3aaf5e8d" kindref="member">nrf_spis_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ENABLE<sp/>==<sp/>SPIS_ENABLE_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" kindref="member">nrf_spis_semstat_t</ref><sp/><ref refid="group__nrf__spis__hal_1gaeef8d8e99f32e9b59b1e73679d80095d" kindref="member">nrf_spis_semaphore_status_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__spis__hal_1ga975a3f646017a75d1644e84d18b39925" kindref="member">nrf_spis_semstat_t</ref>)<sp/>((p_reg-&gt;SEMSTAT<sp/>&amp;<sp/>SPIS_SEMSTAT_SEMSTAT_Msk)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_SEMSTAT_SEMSTAT_Pos);</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" kindref="member">nrf_spis_status_mask_t</ref><sp/><ref refid="group__nrf__spis__hal_1gacc7d1fd7a0069d45ef26317eebf03bce" kindref="member">nrf_spis_status_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__spis__hal_1gab9def61d7198f840bebee496dd51ec50" kindref="member">nrf_spis_status_mask_t</ref>)<sp/>p_reg-&gt;STATUS;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gae9c6ef2cf55a287cd4d4dadc5d86af9b" kindref="member">nrf_spis_pins_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sck_pin,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mosi_pin,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miso_pin,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csn_pin)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELSCK<sp/><sp/>=<sp/>sck_pin;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELMOSI<sp/>=<sp/>mosi_pin;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELMISO<sp/>=<sp/>miso_pin;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSELCSN<sp/><sp/>=<sp/>csn_pin;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SCK<sp/><sp/>=<sp/>sck_pin;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.MOSI<sp/>=<sp/>mosi_pin;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.MISO<sp/>=<sp/>miso_pin;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.CSN<sp/><sp/>=<sp/>csn_pin;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga02f8510cc967a8e85b4f2479ed6fdf0e" kindref="member">nrf_spis_sck_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELSCK;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SCK;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga18a0ee9e743e415f7271937cda50e118" kindref="member">nrf_spis_mosi_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELMOSI;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.MOSI;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1gaf767a185d395f8005180fcc9c9332b1d" kindref="member">nrf_spis_miso_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELMISO;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.MISO;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1ga42e68684e28a076b96f618dc19ff488c" kindref="member">nrf_spis_csn_pin_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSELCSN;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.CSN;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga5650f142b9201323a9139f553f69cdb4" kindref="member">nrf_spis_tx_buffer_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXDPTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MAXTX<sp/><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga2c54e780277cb8eefada45a1aa32a82a" kindref="member">nrf_spis_rx_buffer_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXDPTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MAXRX<sp/><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf5e65a1a12a1f67a15d3aa54cfe1f80d" kindref="member">nrf_spis_tx_amount_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;AMOUNTTX;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.TX.AMOUNT;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;TXD.AMOUNT;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga2fc76cac3a50a357cd4358e04a236f82" kindref="member">nrf_spis_rx_amount_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(NRF51)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;AMOUNTRX;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.AMOUNT;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RXD.AMOUNT;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga14df219a457669168356017a698069ea" kindref="member">nrf_spis_configure</ref>(NRF_SPIS_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1gabdceacd5f5f545e35342fe117adf57d8" kindref="member">nrf_spis_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>spi_mode,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spis__hal_1ga45fe2b8b4074fdffa1afc5d4da0baacc" kindref="member">nrf_spis_bit_order_t</ref><sp/>spi_bit_order)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>config<sp/>=<sp/>(spi_bit_order<sp/>==<sp/><ref refid="group__nrf__spis__hal_1gga45fe2b8b4074fdffa1afc5d4da0baacca710fa90e8fc75221f6a019666e2b56c6" kindref="member">NRF_SPIS_BIT_ORDER_MSB_FIRST</ref><sp/>?</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_CONFIG_ORDER_MsbFirst<sp/>:<sp/>SPIS_CONFIG_ORDER_LsbFirst);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(spi_mode)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ae8847dcb4746aebce69827f05ae8063b" kindref="member">NRF_SPIS_MODE_0</ref>:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>|=<sp/>(SPIS_CONFIG_CPOL_ActiveHigh<sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPOL_Pos)<sp/>|</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIS_CONFIG_CPHA_Leading<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPHA_Pos);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8ad8ad67126c2df0e63e4e33ff88c96dc3" kindref="member">NRF_SPIS_MODE_1</ref>:</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>|=<sp/>(SPIS_CONFIG_CPOL_ActiveHigh<sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPOL_Pos)<sp/>|</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIS_CONFIG_CPHA_Trailing<sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPHA_Pos);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a79bb0d16600dc650db523db073619e8c" kindref="member">NRF_SPIS_MODE_2</ref>:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>|=<sp/>(SPIS_CONFIG_CPOL_ActiveLow<sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPOL_Pos)<sp/>|</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIS_CONFIG_CPHA_Leading<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPHA_Pos);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ggabdceacd5f5f545e35342fe117adf57d8a6ce9e0b63adf5b7aba24b783aec27af0" kindref="member">NRF_SPIS_MODE_3</ref>:</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>|=<sp/>(SPIS_CONFIG_CPOL_ActiveLow<sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPOL_Pos)<sp/>|</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIS_CONFIG_CPHA_Trailing<sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_CONFIG_CPHA_Pos);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab2ea6cc75d3ef4e4a84f6092e2d1ebf0" kindref="member">nrf_spis_orc_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orc)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ORC<sp/>=<sp/>orc;</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab4fa594751d1c5778e4a581d95b1ece5" kindref="member">nrf_spis_def_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DEF<sp/>=<sp/>def;</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPIS_TXD_LIST_LIST_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7a370739915623984418734718fa682d" kindref="member">nrf_spis_tx_list_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.LIST<sp/>=<sp/>SPIS_TXD_LIST_LIST_ArrayList<sp/>&lt;&lt;<sp/>SPIS_TXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga9749f3ecfdb8a5176d0cd21322875244" kindref="member">nrf_spis_tx_list_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.LIST<sp/>=<sp/>SPIS_TXD_LIST_LIST_Disabled<sp/>&lt;&lt;<sp/>SPIS_TXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(SPIS_TXD_LIST_LIST_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPIS_RXD_LIST_LIST_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga7e886b4c414d7a7c0b1111f4252a7d8e" kindref="member">nrf_spis_rx_list_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.LIST<sp/>=<sp/>SPIS_RXD_LIST_LIST_ArrayList<sp/>&lt;&lt;<sp/>SPIS_RXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gacc1aace7f963393905e12f328038ba41" kindref="member">nrf_spis_rx_list_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.LIST<sp/>=<sp/>SPIS_RXD_LIST_LIST_Disabled<sp/>&lt;&lt;<sp/>SPIS_RXD_LIST_LIST_Pos;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(SPIS_RXD_LIST_LIST_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga1c3660dafd8fca2c92d45dd1ff50aed4" kindref="member">nrf_spis_rx_pattern_match_enable_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Disabled)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Pos));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Disabled)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Pos));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Disabled)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Pos));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>=<sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Enabled<sp/>:</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Disabled)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Pos));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaf2c9042e0ce66ff8b947bf5571b00013" kindref="member">nrf_spis_rx_pattern_match_enable_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Msk)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE0_Enabled;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Msk)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE1_Enabled;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Msk)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE2_Enabled;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Msk)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ENABLE3_Enabled;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga8ae798708c20465b6f3d658d8acf7ea7" kindref="member">nrf_spis_rx_pattern_match_one_shot_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>|=<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga1a0cf4001ebfdef77b338e24c9e4a6f7" kindref="member">nrf_spis_rx_pattern_match_one_shot_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(SPIS_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(SPIS_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(SPIS_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;=<sp/>~(SPIS_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gae7e362063a90b178ca344bda1ae0399d" kindref="member">nrf_spis_rx_pattern_match_one_shot_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(index)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT0_Msk)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT0_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT0_Oneshot;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT1_Msk)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT1_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT1_Oneshot;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT2_Msk)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT2_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT2_Oneshot;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.MATCH.CONFIG<sp/>&amp;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT3_Msk)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT3_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_MATCH_CONFIG_ONESHOT3_Oneshot;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gab7b277eb71d7fad3658afc9a5ec3868f" kindref="member">nrf_spis_rx_pattern_match_candidate_set</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MATCH.CANDIDATE[index]<sp/>=<sp/>pattern;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spis__hal_1gaa71c188db4afd17bbcab6c0ae01089c4" kindref="member">nrf_spis_rx_pattern_match_candidate_get</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spis__hal_1gaf3cfc9cb240f89ea8e1118d476633033" kindref="member">NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.MATCH.CANDIDATE[index];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPIS_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gaaf75523c892bfacda1a2112ac9b0a00b" kindref="member">nrf_spis_rx_terminate_on_bus_error_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.TERMINATEONBUSERROR<sp/>|=<sp/>SPIS_DMA_RX_TERMINATEONBUSERROR_ENABLE_Msk;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1gabbc312664f1c9a05287b240147f30a45" kindref="member">nrf_spis_rx_terminate_on_bus_error_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.TERMINATEONBUSERROR<sp/>&amp;=<sp/>~(SPIS_DMA_RX_TERMINATEONBUSERROR_ENABLE_Msk);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga83728829600243a0d9d1a6837dcb59c1" kindref="member">nrf_spis_rx_terminate_on_bus_error_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.RX.TERMINATEONBUSERROR<sp/>&amp;<sp/>SPIS_DMA_RX_TERMINATEONBUSERROR_ENABLE_Msk)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_RX_TERMINATEONBUSERROR_ENABLE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_RX_TERMINATEONBUSERROR_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga4d780eefdf77bbb1f769a5024098ad4e" kindref="member">nrf_spis_tx_terminate_on_bus_error_enable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.TERMINATEONBUSERROR<sp/>|=<sp/>SPIS_DMA_TX_TERMINATEONBUSERROR_ENABLE_Msk;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga28417a94fc1fe6a8ce2c86235a236828" kindref="member">nrf_spis_tx_terminate_on_bus_error_disable</ref>(NRF_SPIS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.TERMINATEONBUSERROR<sp/>&amp;=<sp/>~(SPIS_DMA_TX_TERMINATEONBUSERROR_ENABLE_Msk);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spis__hal_1ga26663baf6c9c605ac5c58a7d78274393" kindref="member">nrf_spis_tx_terminate_on_bus_error_check</ref>(NRF_SPIS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DMA.TX.TERMINATEONBUSERROR<sp/>&amp;<sp/>SPIS_DMA_TX_TERMINATEONBUSERROR_ENABLE_Msk)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPIS_DMA_TX_TERMINATEONBUSERROR_ENABLE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIS_DMA_TX_TERMINATEONBUSERROR_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPIS_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1200"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPIS_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_spis.h"/>
  </compounddef>
</doxygen>
