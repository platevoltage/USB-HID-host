<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfy__vpr" kind="group">
    <compoundname>nrfy_vpr</compoundname>
    <title>VPR HALY</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfy__vpr_1ga3b8050db7722ab27340441756d9cba8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_task_trigger</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrfy_vpr_task_trigger</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga907c3749057d799427e19910a19c3d78" kindref="member">nrf_vpr_task_trigger</ref>  Function for triggering the specified VPR task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be triggered.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="52" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1gae5a8daae6b3dac55e55adb4abdbf8470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_vpr_task_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrfy_vpr_task_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga01815ed892820f3ecd7f7b2581061213" kindref="member">nrf_vpr_task_address_get</ref>  Function for getting the address of the specified VPR task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="59" column="29" bodyfile="haly/nrfy_vpr.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga9ddd80deb430359c6dee9f9fa45a6c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_vpr_task_t nrfy_vpr_trigger_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrfy_vpr_trigger_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1gaa2da678a2b9a3737b0ec4b8a0f82bc67" kindref="member">nrf_vpr_trigger_task_get</ref>  Function for getting the specified VPR TRIGGER task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Task index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGER task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="66" column="35" bodyfile="haly/nrfy_vpr.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga34445ccffb35b65458545cb420210931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_event_clear</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrfy_vpr_event_clear</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1gad961b33210d4937bd0c7075f8c25cc5a" kindref="member">nrf_vpr_event_clear</ref>  Function for clearing the specified VPR event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="72" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga7f5e0142535437542b5f25cf9c6adc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_vpr_event_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrfy_vpr_event_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga978f5d9abfae2e413c84334b291b407a" kindref="member">nrf_vpr_event_check</ref>  Function for retrieving the state of the VPR event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="79" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1gaa7aef5df70c119ea09df8904a4499dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_vpr_event_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrfy_vpr_event_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga46d1cac15ba0cb54eafc067aca7d6ec8" kindref="member">nrf_vpr_event_address_get</ref>  Function for getting the address of the specified VPR event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="89" column="29" bodyfile="haly/nrfy_vpr.h" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga8683db4720e2ea4bc6fa5d23d6c2c1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_vpr_event_t nrfy_vpr_triggered_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrfy_vpr_triggered_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga72b26e3e399d99b3fb484307a8c6c7e8" kindref="member">nrf_vpr_triggered_event_get</ref>  Function for getting the specified VPR TRIGGERED event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGERED event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="96" column="36" bodyfile="haly/nrfy_vpr.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga9277ca2a4d52fa2f6aa7fa99a45426b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_int_enable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_vpr_int_enable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga7398319240c3fe8efd7b5df8aa3b1c56" kindref="member">nrf_vpr_int_enable</ref>  Function for enabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="102" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga0bae29787a62d242f6bed84b8aa92531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_int_disable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_vpr_int_disable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga9d4752073b984bcd01e269d426939f88" kindref="member">nrf_vpr_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="110" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga0930465f606a8684deed4d01ce8d040a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_vpr_int_enable_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_vpr_int_enable_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga438dab7243ef940d2dce027b7786a4af" kindref="member">nrf_vpr_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="118" column="29" bodyfile="haly/nrfy_vpr.h" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga8f8ccf6b8f1083f28be9aafef99aa400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_cpurun_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_vpr_cpurun_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga012a27945c573679f902f2e345fc7792" kindref="member">nrf_vpr_cpurun_set</ref>  Function for setting the state of the CPU after core reset.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU is to be running, false if stopped.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="129" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1gae553c9eee675e1d888a44c513da7959c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_vpr_cpurun_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrfy_vpr_cpurun_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga87c5af83ac3f0680747f8949cf9dfb4d" kindref="member">nrf_vpr_cpurun_get</ref>  Function for getting the state of the CPU after core reset.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be running after core reset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be stopped after core reset.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="137" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1gafdcd9fcf0f71a1b12d39eea4f94f85fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_initpc_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t pc)</argsstring>
        <name>nrfy_vpr_initpc_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga274fb49feaa99361a3f996131d8beb0e" kindref="member">nrf_vpr_initpc_set</ref>  Function for setting the initial value of the program counter after CPU reset.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>This address value must be 64-bit aligned.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pc</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the program counter to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="147" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1gaeed45c21be888fa2eb351cd42e811701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_vpr_initpc_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrfy_vpr_initpc_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga18503be618285e03dfcdbcaa8d1070be" kindref="member">nrf_vpr_initpc_get</ref>  Function for getting the initial value of the program counter after CPU reset.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Initial value of the program counter.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="155" column="29" bodyfile="haly/nrfy_vpr.h" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga44f9c079311ca673283c41fb353b9b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_vpr_debugif_dmcontrol_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_dmcontrol_t signal, bool enable)</argsstring>
        <name>nrfy_vpr_debugif_dmcontrol_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1gaba0ea17e2364214ca0a36705e094a67e" kindref="member">nrf_vpr_debugif_dmcontrol_set</ref>  Function for setting the specified debug mode control signal.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if signal is to be 1, false if 0.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="165" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__vpr_1ga89256a1adeed37e4183f65c46aee7842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_vpr_debugif_dmcontrol_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_dmcontrol_t signal)</argsstring>
        <name>nrfy_vpr_debugif_dmcontrol_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__vpr__hal_1ga9300eb8dd279fffc9434d6ddae7e60c5" kindref="member">nrf_vpr_debugif_dmcontrol_get</ref>  Function for getting the debug mode control signals.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 0.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_vpr.h" line="174" column="25" bodyfile="haly/nrfy_vpr.h" bodystart="174" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer with cache and barrier support for managing the VPR peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
