<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__twim__hal" kind="group">
    <compoundname>nrf_twim_hal</compoundname>
    <title>TWIM HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_task_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aab6746392435f2b57a8d1a2258fdeb69" prot="public">
          <name>NRF_TWIM_TASK_STARTRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.START)</initializer>
          <briefdescription>
<para>Start TWI receive operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a78f179e48e0b4a7c2db554ce41b89ae7" prot="public">
          <name>NRF_TWIM_TASK_STOPRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.STOP)</initializer>
          <briefdescription>
<para>Stop TWI receive operation using easyDMA. This does not trigger an END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a75915573dd56ea04d2f89f533aea68d7" prot="public">
          <name>NRF_TWIM_TASK_STARTTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.TX.START)</initializer>
          <briefdescription>
<para>Start TWI transmit operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a581d6021f1ffdbf19c7c008c65316527" prot="public">
          <name>NRF_TWIM_TASK_STOPTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.TX.STOP)</initializer>
          <briefdescription>
<para>Stop TWI transmit operation using easyDMA to load the values. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aabecd8d112f2da94a10bef955a8a6fc6" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[0])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3af309f23ecabcc6fcfd8335083ac8703c" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[1])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3ac0a328e75f58a4ca911b5204c29743e9" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[2])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a00b58a1dd42b7f236164d4d759bf6f0b" prot="public">
          <name>NRF_TWIM_TASK_ENABLERXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.ENABLEMATCH[3])</initializer>
          <briefdescription>
<para>Enable TWI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3afec9b8c2bc535c4e9ff59ebd387ec3fb" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[0])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a601ed051fdf4e2a8ad7d6860d0074803" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[1])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a196b85af0db8c82779ace992cc63f312" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[2])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a1b349927a00dceb01a0f2b8058b37962" prot="public">
          <name>NRF_TWIM_TASK_DISABLERXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_DMA.RX.DISABLEMATCH[3])</initializer>
          <briefdescription>
<para>Disable TWI pattern matching functionality for pattern 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" prot="public">
          <name>NRF_TWIM_TASK_STOP</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stop TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a39b462e4d1fcc2c3f96a9de8fe95d9b2" prot="public">
          <name>NRF_TWIM_TASK_SUSPEND</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_SUSPEND)</initializer>
          <briefdescription>
<para>Suspend TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a080a36834935e231d07ea4f75eb488fd" prot="public">
          <name>NRF_TWIM_TASK_RESUME</name>
          <initializer>= offsetof(NRF_TWIM_Type, TASKS_RESUME)</initializer>
          <briefdescription>
<para>Resume TWI transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="125" column="1" bodyfile="hal/nrf_twim.h" bodystart="126" bodyend="147"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_event_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" prot="public">
          <name>NRF_TWIM_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>TWI stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" prot="public">
          <name>NRF_TWIM_EVENT_ERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_ERROR)</initializer>
          <briefdescription>
<para>TWI error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" prot="public">
          <name>NRF_TWIM_EVENT_SUSPENDED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_SUSPENDED)</initializer>
          <briefdescription>
<para>TWI suspended. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea1f0e474171b2ad6544b3cf062bba669b" prot="public">
          <name>NRF_TWIM_EVENT_ENDRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.END)</initializer>
          <briefdescription>
<para>Receive sequence finished. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" prot="public">
          <name>NRF_TWIM_EVENT_RXSTARTED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.READY)</initializer>
          <briefdescription>
<para>Receive sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea95416dcbb39121b8c81bbc00d1e68168" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH0</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[0])</initializer>
          <briefdescription>
<para>Pattern match for pattern 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea297ed03308b31e8a69249b1f456cabbc" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH1</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[1])</initializer>
          <briefdescription>
<para>Pattern match for pattern 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea9cf8af4e0176c6e18ae438d71cc124e7" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH2</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[2])</initializer>
          <briefdescription>
<para>Pattern match for pattern 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea6c5d75d98dae2ac3e2914e5b97a8134b" prot="public">
          <name>NRF_TWIM_EVENT_RXMATCH3</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.MATCH[3])</initializer>
          <briefdescription>
<para>Pattern match for pattern 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa189609f1ce5610dc4a5ee4439007486" prot="public">
          <name>NRF_TWIM_EVENT_ENDTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.END)</initializer>
          <briefdescription>
<para>Transmit sequence finished. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" prot="public">
          <name>NRF_TWIM_EVENT_TXSTARTED</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.READY)</initializer>
          <briefdescription>
<para>Transmit sequence started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fead374f8ea3d70d216c78e4bbade0f2169" prot="public">
          <name>NRF_TWIM_EVENT_RXBUSERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.RX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the RX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feafb95f90f73d93500eb1fd294d66381f7" prot="public">
          <name>NRF_TWIM_EVENT_TXBUSERROR</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_DMA.TX.BUSERROR)</initializer>
          <briefdescription>
<para>Memory bus error occurred during the TX transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" prot="public">
          <name>NRF_TWIM_EVENT_LASTRX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_LASTRX)</initializer>
          <briefdescription>
<para>Byte boundary, starting to receive the last byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" prot="public">
          <name>NRF_TWIM_EVENT_LASTTX</name>
          <initializer>= offsetof(NRF_TWIM_Type, EVENTS_LASTTX)</initializer>
          <briefdescription>
<para>Byte boundary, starting to transmit the last byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="150" column="1" bodyfile="hal/nrf_twim.h" bodystart="151" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1gadd0664ac6080208c547d3352d082a8e4" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_short_mask_t</name>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a0a8df7ede7f011f77c76e7b05fa08706" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_SUSPEND_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and SUSPEND task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad540ff8b6b5ac0904d50e08b6778faff" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_STOP_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5456148732b958fba77fc6900c9b4573" prot="public">
          <name>NRF_TWIM_SHORT_LASTRX_STOP_MASK</name>
          <initializer>= TWIM_SHORTS_LASTRX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTRX event and STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a56a462f3bafab3dab5ca3634cf2a5169" prot="public">
          <name>NRF_TWIM_SHORT_LASTTX_STARTRX_MASK</name>
          <initializer>= TWIM_SHORTS_LASTTX_DMA_RX_START_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTTX event and STARTRX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad605e2387dc4121e16d17ee9f496fc79" prot="public">
          <name>NRF_TWIM_SHORT_LASTRX_STARTTX_MASK</name>
          <initializer>= TWIM_SHORTS_LASTRX_DMA_TX_START_Msk</initializer>
          <briefdescription>
<para>Shortcut between LASTRX event and STARTTX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a36c084c9eafd6d73c5af95e07cc0bebc" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.ENABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a5661b5d8b7450423886c4bd3b0ac6f95" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.ENABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aeb61eae619ab8562fc31d375a3a6ed5d" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.ENABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a2cc9a45323724addf649c07ac67bfe18" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.ENABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a4a749247bd0e37c575eead73dabc2d9d" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH0 event and DMA.RX.DISABLEMATCH0 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ac994257b33ba12659a202fede3e9de1c" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH1 event and DMA.RX.DISABLEMATCH1 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a1fd3325b3fd4ff2845e74d6e8b111336" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH2 event and DMA.RX.DISABLEMATCH2 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4aa45220849e131709c398d96e0880ce37" prot="public">
          <name>NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK</name>
          <initializer>= TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk</initializer>
          <briefdescription>
<para>Shortcut between DMA.RX.MATCH3 event and DMA.RX.DISABLEMATCH3 task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4adf591f39db80005910acf9a5aa124f9d" prot="public">
          <name>NRF_TWIM_ALL_SHORTS_MASK</name>
          <initializer>=

                                                   TWIM_SHORTS_LASTTX_DMA_RX_START_Msk                |
                                                   TWIM_SHORTS_LASTRX_DMA_TX_START_Msk                |





                                                   TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_ENABLEMATCH1_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_ENABLEMATCH2_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_ENABLEMATCH3_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_ENABLEMATCH0_Msk  |
                                                   TWIM_SHORTS_DMA_RX_MATCH0_DMA_RX_DISABLEMATCH0_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH1_DMA_RX_DISABLEMATCH1_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH2_DMA_RX_DISABLEMATCH2_Msk |
                                                   TWIM_SHORTS_DMA_RX_MATCH3_DMA_RX_DISABLEMATCH3_Msk |

                                                   TWIM_SHORTS_LASTTX_SUSPEND_Msk                     |
                                                   TWIM_SHORTS_LASTTX_STOP_Msk                        |
                                                   TWIM_SHORTS_LASTRX_STOP_Msk</initializer>
          <briefdescription>
<para>All TWIM shortcuts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="181" column="1" bodyfile="hal/nrf_twim.h" bodystart="182" bodyend="224"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_int_mask_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acab603ecc0e6031acd4700d742e2c12421" prot="public">
          <name>NRF_TWIM_INT_STOPPED_MASK</name>
          <initializer>= TWIM_INTENSET_STOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on STOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca347a32ca9593b31de5d0d920cd10443f" prot="public">
          <name>NRF_TWIM_INT_ERROR_MASK</name>
          <initializer>= TWIM_INTENSET_ERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on ERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca31222ebdb3bb548504f718ef16ea5c9a" prot="public">
          <name>NRF_TWIM_INT_SUSPENDED_MASK</name>
          <initializer>= TWIM_INTENSET_SUSPENDED_Msk</initializer>
          <briefdescription>
<para>Interrupt on SUSPENDED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa4f9166c76e49f82f5c4f28421d4e352" prot="public">
          <name>NRF_TWIM_INT_RXSTARTED_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acacf284b01c09624da1f88959aab8b38c7" prot="public">
          <name>NRF_TWIM_INT_TXSTARTED_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca890d041f5d4f5e38c7db6f3fe9ecbca7" prot="public">
          <name>NRF_TWIM_INT_ENDRX_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaf5becfa8469cb1081f4522ea8b342e1b" prot="public">
          <name>NRF_TWIM_INT_RXREADY_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad874dad87f10c787b025f64d6b1fef4e" prot="public">
          <name>NRF_TWIM_INT_RXBUSERROR_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca61367af0766747a929fdd690ec7f0c4f" prot="public">
          <name>NRF_TWIM_INT_RXMATCH0_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH0_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH0 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca09fabb82fca97e6ff93b231ae2bb5a26" prot="public">
          <name>NRF_TWIM_INT_RXMATCH1_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH1_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH1 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca4d23baa47c53821f641250b830ff718e" prot="public">
          <name>NRF_TWIM_INT_RXMATCH2_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH2_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH2 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acad1cf35986f0b558a74514c8c9384fc78" prot="public">
          <name>NRF_TWIM_INT_RXMATCH3_MASK</name>
          <initializer>= TWIM_INTENSET_DMARXMATCH3_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.RX.MATCH3 event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca161c1a5f210de592778da09b28590d1c" prot="public">
          <name>NRF_TWIM_INT_ENDTX_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca663b9dbeb5e66081b714c8fb9aaf01ce" prot="public">
          <name>NRF_TWIM_INT_TXREADY_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.READY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca282d4ee80e48758b8645371032669bcc" prot="public">
          <name>NRF_TWIM_INT_TXBUSERROR_MASK</name>
          <initializer>= TWIM_INTENSET_DMATXBUSERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on DMA.TX.BUSERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acac80810b77e2b204b8491858b1b96ce0e" prot="public">
          <name>NRF_TWIM_INT_LASTRX_MASK</name>
          <initializer>= TWIM_INTENSET_LASTRX_Msk</initializer>
          <briefdescription>
<para>Interrupt on LASTRX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5acaa360137e749de8dc1a2816778451b2bf" prot="public">
          <name>NRF_TWIM_INT_LASTTX_MASK</name>
          <initializer>= TWIM_INTENSET_LASTTX_Msk</initializer>
          <briefdescription>
<para>Interrupt on LASTTX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca91edd9c8686edbdd2c0f9ecc3a7c5882" prot="public">
          <name>NRF_TWIM_ALL_INTS_MASK</name>
          <initializer>= NRF_TWIM_INT_STOPPED_MASK    |
                                   NRF_TWIM_INT_ERROR_MASK      |
                                   NRF_TWIM_INT_SUSPENDED_MASK  |
                                   NRF_TWIM_INT_RXSTARTED_MASK  |
                                   NRF_TWIM_INT_TXSTARTED_MASK  |

                                   NRF_TWIM_INT_ENDRX_MASK      |
                                   NRF_TWIM_INT_RXREADY_MASK    |
                                   NRF_TWIM_INT_RXBUSERROR_MASK |
                                   NRF_TWIM_INT_RXMATCH0_MASK   |
                                   NRF_TWIM_INT_RXMATCH1_MASK   |
                                   NRF_TWIM_INT_RXMATCH2_MASK   |
                                   NRF_TWIM_INT_RXMATCH3_MASK   |
                                   NRF_TWIM_INT_ENDTX_MASK      |
                                   NRF_TWIM_INT_TXREADY_MASK    |
                                   NRF_TWIM_INT_TXBUSERROR_MASK |

                                   NRF_TWIM_INT_LASTRX_MASK     |
                                   NRF_TWIM_INT_LASTTX_MASK</initializer>
          <briefdescription>
<para>All TWIM interrupts. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="227" column="1" bodyfile="hal/nrf_twim.h" bodystart="228" bodyend="270"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_frequency_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a85f5bb1285c0b1f13513aa3e056c1473" prot="public">
          <name>NRF_TWIM_FREQ_100K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K100</initializer>
          <briefdescription>
<para>100 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7ae760f2404075e102e0898a8c35d358f9" prot="public">
          <name>NRF_TWIM_FREQ_250K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K250</initializer>
          <briefdescription>
<para>250 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a2506fcae2808e2997513ac4d842d253f" prot="public">
          <name>NRF_TWIM_FREQ_400K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K400</initializer>
          <briefdescription>
<para>400 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga63248331964302df70fdc0fbd85ce6b7a25991e182681ca3c0f6024340997641c" prot="public">
          <name>NRF_TWIM_FREQ_1000K</name>
          <initializer>= TWIM_FREQUENCY_FREQUENCY_K1000</initializer>
          <briefdescription>
<para>1000 kbps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM master clock frequency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="273" column="1" bodyfile="hal/nrf_twim.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__twim__hal_1ga1b0f04ff557a603935d12650d2f255b2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_twim_error_t</name>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2a24dfbf415012297514bf25bfc0e755cd" prot="public">
          <name>NRF_TWIM_ERROR_ADDRESS_NACK</name>
          <initializer>= TWIM_ERRORSRC_ANACK_Msk</initializer>
          <briefdescription>
<para>NACK received after sending the address. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2aa5b0ed2e59ccecf820ea3a3c02a02a13" prot="public">
          <name>NRF_TWIM_ERROR_DATA_NACK</name>
          <initializer>= TWIM_ERRORSRC_DNACK_Msk</initializer>
          <briefdescription>
<para>NACK received after sending a data byte. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__twim__hal_1gga1b0f04ff557a603935d12650d2f255b2af4952f4ca2ceb7d571f01846c58a363b" prot="public">
          <name>NRF_TWIM_ERROR_OVERRUN</name>
          <initializer>= TWIM_ERRORSRC_OVERRUN_Msk</initializer>
          <briefdescription>
<para>Overrun error. </para>
          </briefdescription>
          <detaileddescription>
<para>A new byte was received before the previous byte was handled by peripheral. (previous data is lost). </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWIM error source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="284" column="1" bodyfile="hal/nrf_twim.h" bodystart="285" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_task_trigger</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_task_trigger</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="762" column="24" bodyfile="hal/nrf_twim.h" bodystart="762" bodyend="766" declfile="hal/nrf_twim.h" declline="300" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_task_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_task_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TWIM task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="768" column="28" bodyfile="hal/nrf_twim.h" bodystart="768" bodyend="772" declfile="hal/nrf_twim.h" declline="311" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_event_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="774" column="24" bodyfile="hal/nrf_twim.h" bodystart="774" bodyend="779" declfile="hal/nrf_twim.h" declline="320" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_event_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="781" column="24" bodyfile="hal/nrf_twim.h" bodystart="781" bodyend="785" declfile="hal/nrf_twim.h" declline="332" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_event_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_event_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TWIM event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="787" column="28" bodyfile="hal/nrf_twim.h" bodystart="787" bodyend="791" declfile="hal/nrf_twim.h" declline="343" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="793" column="24" bodyfile="hal/nrf_twim.h" bodystart="793" bodyend="797" declfile="hal/nrf_twim.h" declline="352" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="799" column="24" bodyfile="hal/nrf_twim.h" bodystart="799" bodyend="803" declfile="hal/nrf_twim.h" declline="361" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_int_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="805" column="24" bodyfile="hal/nrf_twim.h" bodystart="805" bodyend="809" declfile="hal/nrf_twim.h" declline="371" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_int_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="811" column="24" bodyfile="hal/nrf_twim.h" bodystart="811" bodyend="815" declfile="hal/nrf_twim.h" declline="381" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_int_enable_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_int_enable_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="817" column="28" bodyfile="hal/nrf_twim.h" bodystart="817" bodyend="820" declfile="hal/nrf_twim.h" declline="393" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_subscribe_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task, uint8_t channel)</argsstring>
        <name>nrf_twim_subscribe_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="404" column="24" declfile="hal/nrf_twim.h" declline="404" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_subscribe_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrf_twim_subscribe_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given TWIM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="415" column="24" declfile="hal/nrf_twim.h" declline="415" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_publish_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event, uint8_t channel)</argsstring>
        <name>nrf_twim_publish_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="426" column="24" declfile="hal/nrf_twim.h" declline="426" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_publish_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrf_twim_publish_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given TWIM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="437" column="24" declfile="hal/nrf_twim.h" declline="437" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="852" column="24" bodyfile="hal/nrf_twim.h" bodystart="852" bodyend="855" declfile="hal/nrf_twim.h" declline="446" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="857" column="24" bodyfile="hal/nrf_twim.h" bodystart="857" bodyend="860" declfile="hal/nrf_twim.h" declline="453" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_pins_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t scl_pin, uint32_t sda_pin)</argsstring>
        <name>nrf_twim_pins_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>scl_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sda_pin</declname>
        </param>
        <briefdescription>
<para>Function for configuring TWI pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scl_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SCL pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sda_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SDA pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="862" column="24" bodyfile="hal/nrf_twim.h" bodystart="862" bodyend="868" declfile="hal/nrf_twim.h" declline="462" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_scl_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_scl_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SCL pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="870" column="28" bodyfile="hal/nrf_twim.h" bodystart="870" bodyend="873" declfile="hal/nrf_twim.h" declline="473" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_sda_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_sda_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the SDA pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDA pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="875" column="28" bodyfile="hal/nrf_twim.h" bodystart="875" bodyend="878" declfile="hal/nrf_twim.h" declline="482" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_frequency_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_frequency_t frequency)</argsstring>
        <name>nrf_twim_frequency_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Function for setting the TWI master clock frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>TWI frequency. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="880" column="24" bodyfile="hal/nrf_twim.h" bodystart="880" bodyend="884" declfile="hal/nrf_twim.h" declline="490" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_errorsrc_get_and_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_errorsrc_get_and_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking the TWI error source. </para>
        </briefdescription>
        <detaileddescription>
<para>The error flags are cleared after reading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask with error source flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="886" column="28" bodyfile="hal/nrf_twim.h" bodystart="886" bodyend="894" declfile="hal/nrf_twim.h" declline="502" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_address_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t address)</argsstring>
        <name>nrf_twim_address_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Function for setting the address to be used in TWI transfers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to be used in transfers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="896" column="24" bodyfile="hal/nrf_twim.h" bodystart="896" bodyend="900" declfile="hal/nrf_twim.h" declline="510" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga10b2fe5d9eb8f4288fdc52c80e796ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_twim_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the address to be used in TWI transfers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address to be used in TWI transfers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="902" column="27" bodyfile="hal/nrf_twim.h" bodystart="902" bodyend="905" declfile="hal/nrf_twim.h" declline="520" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga69598fbbb9293d1c116a998103050a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrf_twim_tx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="907" column="24" bodyfile="hal/nrf_twim.h" bodystart="907" bodyend="918" declfile="hal/nrf_twim.h" declline="529" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaad43bb3e7ec6c84080609df5fcfc4373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrf_twim_rx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="920" column="24" bodyfile="hal/nrf_twim.h" bodystart="920" bodyend="931" declfile="hal/nrf_twim.h" declline="540" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_shorts_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_twim_shorts_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="933" column="24" bodyfile="hal/nrf_twim.h" bodystart="933" bodyend="937" declfile="hal/nrf_twim.h" declline="550" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_shorts_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_shorts_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the shortcut setting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current shortcut configuration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="939" column="28" bodyfile="hal/nrf_twim.h" bodystart="939" bodyend="942" declfile="hal/nrf_twim.h" declline="560" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_txd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_txd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of transmitted bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of transmitted bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="944" column="26" bodyfile="hal/nrf_twim.h" bodystart="944" bodyend="951" declfile="hal/nrf_twim.h" declline="572" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_rxd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rxd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of received bytes in the last transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of received bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="953" column="26" bodyfile="hal/nrf_twim.h" bodystart="953" bodyend="960" declfile="hal/nrf_twim.h" declline="584" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga29e6df5473d7c8ac95fd407e97549bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_txd_curr_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_txd_curr_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of transmitted bytes in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Number of bytes is continuously updated during transmission.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of transmitted bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="963" column="26" bodyfile="hal/nrf_twim.h" bodystart="963" bodyend="966" declfile="hal/nrf_twim.h" declline="596" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4368126c5327b396a2be6dacf9b57639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE size_t</type>
        <definition>NRF_STATIC_INLINE size_t nrf_twim_rxd_curr_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rxd_curr_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the amount of received bytes in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Number of bytes is continuously updated during reception.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of received bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="968" column="26" bodyfile="hal/nrf_twim.h" bodystart="968" bodyend="971" declfile="hal/nrf_twim.h" declline="607" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_tx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="975" column="24" bodyfile="hal/nrf_twim.h" bodystart="975" bodyend="982" declfile="hal/nrf_twim.h" declline="616" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_tx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="984" column="24" bodyfile="hal/nrf_twim.h" bodystart="984" bodyend="991" declfile="hal/nrf_twim.h" declline="623" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_rx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="993" column="24" bodyfile="hal/nrf_twim.h" bodystart="993" bodyend="1000" declfile="hal/nrf_twim.h" declline="630" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrf_twim_rx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1002" column="24" bodyfile="hal/nrf_twim.h" bodystart="1002" bodyend="1009" declfile="hal/nrf_twim.h" declline="637" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga03b45ee52443abc4bb84a68da58d3983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index, bool enable)</argsstring>
        <name>nrf_twim_rx_pattern_match_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling individual pattern match filters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if pattern match filter is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1013" column="24" bodyfile="hal/nrf_twim.h" bodystart="1013" bodyend="1056" declfile="hal/nrf_twim.h" declline="648" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga4229f51c36a9fb8ba02ca5d2677853dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_pattern_match_enable_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_enable_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified pattern match filter is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1058" column="24" bodyfile="hal/nrf_twim.h" bodystart="1058" bodyend="1084" declfile="hal/nrf_twim.h" declline="661" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga3d97f46ab5862e06288d301e6d872f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_one_shot_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for enabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1086" column="24" bodyfile="hal/nrf_twim.h" bodystart="1086" bodyend="1108" declfile="hal/nrf_twim.h" declline="670" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga2db46980e65275d25e2064ff6007a821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_one_shot_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for disabling one-shot operation for the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1110" column="24" bodyfile="hal/nrf_twim.h" bodystart="1110" bodyend="1132" declfile="hal/nrf_twim.h" declline="679" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga7886b5d343f1faea1fe22596cc81232f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_pattern_match_one_shot_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_one_shot_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for checking if specified pattern match filter is configured as one-shot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as one-shot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern match filter is configured as continuous. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1134" column="24" bodyfile="hal/nrf_twim.h" bodystart="1134" bodyend="1160" declfile="hal/nrf_twim.h" declline="691" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga6d85eb808398073ce89e868b856120e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_pattern_match_candidate_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t index, uint32_t pattern)</argsstring>
        <name>nrf_twim_rx_pattern_match_candidate_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Function for setting the pattern to be looked for by the specified match filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern to be looked for. Match will trigger the corresponding event, if enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1162" column="24" bodyfile="hal/nrf_twim.h" bodystart="1162" bodyend="1168" declfile="hal/nrf_twim.h" declline="702" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga37e0f06d8c38b7125c1ef5e5712ce054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_twim_rx_pattern_match_candidate_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_twim_rx_pattern_match_candidate_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the pattern that the specified match filter is looking for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of pattern match filter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pattern that the specified match filter is looking for. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1170" column="28" bodyfile="hal/nrf_twim.h" bodystart="1170" bodyend="1175" declfile="hal/nrf_twim.h" declline="714" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1ga62f37342881aaa9fab3523d6c4000dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_rx_terminate_on_bus_error_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrf_twim_rx_terminate_on_bus_error_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling RX transaction termination on the detection of a BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the RX transaction termination is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1179" column="24" bodyfile="hal/nrf_twim.h" bodystart="1179" bodyend="1185" declfile="hal/nrf_twim.h" declline="725" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaa2a21a1edfee4d03f24797ed1188bfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_rx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_rx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the RX transaction termination on the detection of a BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1187" column="24" bodyfile="hal/nrf_twim.h" bodystart="1187" bodyend="1192" declfile="hal/nrf_twim.h" declline="737" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gaa8582ba6d468ddd837563d6c848478e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_twim_tx_terminate_on_bus_error_enable_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrf_twim_tx_terminate_on_bus_error_enable_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling TX transaction termination on the detection of a BUSERROR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the TX transaction termination is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1194" column="24" bodyfile="hal/nrf_twim.h" bodystart="1194" bodyend="1200" declfile="hal/nrf_twim.h" declline="745" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__twim__hal_1gadecaa8529db79c2100bbb3d932d91b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_twim_tx_terminate_on_bus_error_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrf_twim_tx_terminate_on_bus_error_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the TX transaction termination on the detection of a BUSERROR event is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Transaction termination on BUSERROR event is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="1202" column="24" bodyfile="hal/nrf_twim.h" bodystart="1202" bodyend="1207" declfile="hal/nrf_twim.h" declline="757" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__twim__hal_1ga9f2ca642bbf7172f071271ab24d04bd1" prot="public" static="no">
        <name>NRF_TWIM_INST_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, TWIM, idx)</initializer>
        <briefdescription>
<para>Macro getting pointer to the structure of registers of the TWIM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>TWIM instance index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the structure of registers of the TWIM peripheral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="65" column="9" bodyfile="hal/nrf_twim.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gacaf46a6e0ec7f27a8c0c36ecb1caaa1a" prot="public" static="no">
        <name>NRF_TWIM_HAS_1000_KHZ_FREQ</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether 1000 kHz clock frequency is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="69" column="9" bodyfile="hal/nrf_twim.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga2819d1e2c146013c30fb943d92387043" prot="public" static="no">
        <name>NRF_TWIM_HAS_ARRAY_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether EasyDMA array list feature is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="77" column="9" bodyfile="hal/nrf_twim.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gac85663d9e6662cc179209d11d3a9e09a" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether dedicated DMA register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="84" column="9" bodyfile="hal/nrf_twim.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga5d9d297054339585df08b905dcb183f5" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether DMA CURRENTAMOUNT registers are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="91" column="9" bodyfile="hal/nrf_twim.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga6470f177142717ff78fe9db56fae3d9c" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_TASKS_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM DMA tasks and events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="99" column="9" bodyfile="hal/nrf_twim.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1gafe92d1e6956b2fbf5ccfdedfd19a06c2" prot="public" static="no">
        <name>NRF_TWIM_HAS_DMA_SHORTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM DMA shortcuts are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="106" column="9" bodyfile="hal/nrf_twim.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga171dbf7b1feb8e8cb6e8c4e104404935" prot="public" static="no">
        <name>NRF_TWIM_HAS_BUS_ERROR_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TWIM BUSERROR events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="114" column="9" bodyfile="hal/nrf_twim.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__twim__hal_1ga382b75df2d53668d677ac68c9cbbc9dd" prot="public" static="no">
        <name>NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT</name>
        <initializer>TWIM_DMA_RX_MATCH_CANDIDATE_MaxCount</initializer>
        <briefdescription>
<para>Max number of RX patterns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_twim.h" line="121" column="9" bodyfile="hal/nrf_twim.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the TWIM peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
