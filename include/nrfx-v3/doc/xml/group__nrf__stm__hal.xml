<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__stm__hal" kind="group">
    <compoundname>nrf_stm_hal</compoundname>
    <title>STM HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_feature_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3adce2faa78cf8ca8a9a39dc9a143d7eb6" prot="public">
          <name>NRF_STM_FEATURE_HETER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event trigger enable register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3aaaf8d05b3d2d6c4c426e68c74a62b877" prot="public">
          <name>NRF_STM_FEATURE_HEERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event error detection support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a12803b33652de89f067213c9e90aef17" prot="public">
          <name>NRF_STM_FEATURE_HEMASTR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event master number register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acdb1133365105e0f0fd55d14e782c9aa" prot="public">
          <name>NRF_STM_FEATURE_STM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Global STM enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ab44ef608d1f75ab9dc8e6971cecaeb57" prot="public">
          <name>NRF_STM_FEATURE_TSEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamping enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a263f62dbca83a60cffa2cb3d2edebdd8" prot="public">
          <name>NRF_STM_FEATURE_SYNCEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Synchronization control register implemented. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a029892032af051a9aa0e9a9364f28a11" prot="public">
          <name>NRF_STM_FEATURE_COMPEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compression enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3af3582cc106502dbb75ff03330bdcbe03" prot="public">
          <name>NRF_STM_FEATURE_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STM busy status. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a515fc75aec87be1fc333be6a018a1dd0" prot="public">
          <name>NRF_STM_FEATURE_FIFOAF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Auto-flush enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acff8a30c048bcaf9c988f2925648b064" prot="public">
          <name>NRF_STM_FEATURE_ASYNCPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Async priority escalation enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae2a46ba1b5f722f4d9eeba80b5aac5b8" prot="public">
          <name>NRF_STM_FEATURE_PRIORINVDIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority inversion enable. RW (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0ba88513eb1fed36e13c764efc03cc25" prot="public">
          <name>NRF_STM_FEATURE_CLKON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Override for architectural clock gate enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a26c701e87490ed6ed398097b95d80fd6" prot="public">
          <name>NRF_STM_FEATURE_AFREADYHIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Override for the AFREADY output enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ae9956a4efc6b834df312f9bb7041039f" prot="public">
          <name>NRF_STM_FEATURE_TSFREQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamp frequency indication configuration. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a5116ce804989b6fd9e220b263d549f8e" prot="public">
          <name>NRF_STM_FEATURE_FORCETS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>timestamp stimulus register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a64158dfffd2703dfd829fd3129a5df73" prot="public">
          <name>NRF_STM_FEATURE_TSPRESCALE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamp prescale support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7d315648f184f9470302f7f36fe2ace4" prot="public">
          <name>NRF_STM_FEATURE_HWTEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware event trace packet emission support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3acba57954942870229cbdbe62de66f84c" prot="public">
          <name>NRF_STM_FEATURE_SWOEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Anynchronous-specific usage model for timestamps support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a4f84f1a3469ee1ca754bc5ef609c09f3" prot="public">
          <name>NRF_STM_FEATURE_SPTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port trigger enable register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0a2cd8a8b4a487c682cf00429087516e" prot="public">
          <name>NRF_STM_FEATURE_SPER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port enable register support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a38c2b458da9f2b856370747a73fa0989" prot="public">
          <name>NRF_STM_FEATURE_SPOVERRIDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stimulus port override register support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a0447402de8222a4c65da0dba8eb76194" prot="public">
          <name>NRF_STM_FEATURE_PRIVMASK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace privilege register support. RO (1) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7c9641161804e4f37826d9a5ecf7f697" prot="public">
          <name>NRF_STM_FEATURE_INTEGRATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integration mode enable. RW </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3ad81a7f836966ad4b0a6f60bcc3ebff86" prot="public">
          <name>NRF_STM_FEATURE_LC_PRESENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lock control mechanism support. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a7b32bcfb2a48f60e1a682f8a783cdf9b" prot="public">
          <name>NRF_STM_FEATURE_LC_LOCKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Lock write access enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a90bfbecd6d8a64dccbe543b4ce1e80d0" prot="public">
          <name>NRF_STM_FEATURE_NSID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for non-secure invasive debug enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a066e54c7ec9c1279b68d3ca57b58c043" prot="public">
          <name>NRF_STM_FEATURE_NSNID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for non-secure non-invasive debug enable. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a03f8a9f043ac0db1a88189b0c6995bcc" prot="public">
          <name>NRF_STM_FEATURE_SID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for secure invasive debug. RO </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1ggad30b6a2d18490263d8ab08f6973414e3a06f03c2191b03dfa9ba9e7ccfb6e7c71" prot="public">
          <name>NRF_STM_FEATURE_SNID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Security for secure non-invasive debug. RO </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM features. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Registers marked with (1) signal negative situation (disabled, not supported) using non-zero value. Therefore the register value is negated when retrieving their setting with nrf_stm_feature_present_check() or setting it with <ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set()</ref>. This is to ensure that true always means enabled/supported and false disabled/not supported.</para>
</simplesect>
<simplesect kind="note"><para>Registers marked RO are read-only and may be only used in <ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref> function. Registers marked RW are read-write and may be used with both <ref refid="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" kindref="member">nrf_stm_feature_check</ref> and <ref refid="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" kindref="member">nrf_stm_feature_set</ref> functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="62" column="1" bodyfile="hal/nrf_stm.h" bodystart="62" bodyend="92"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_output_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a72df215a47918c62a3e8a63cbbc832fa" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTSPTE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Match using STMSPTER trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a85b2f71fe2cd9f4b5eed3837b86690fd" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTSW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write to TRIG location trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a80c2ead1689445a2968b794c80604bc4" prot="public">
          <name>NRF_STM_OUTPUT_TRIGOUTHETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Match using STMHETER trigger event output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afdbdcd5d7abf1ba7857ecb2bd790eb16" prot="public">
          <name>NRF_STM_OUTPUT_ASYNCOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alignment synchronization output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a757fc0e01ada2474e478c41dd7994307" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[0] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979abd9fea5043097b6965b5177d61c3e92c" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[7] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a95e794012f50c6a67d7a4ad2d367bcec" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[15] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979aa7b2b30b3f8356ed739b8e1693dbec36" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[23] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979afb76dbdff520210ad889ea2bd381c997" prot="public">
          <name>NRF_STM_OUTPUT_ATDATAM_31</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace data ATDATAM[31] output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979ae81f042a3a5f27ba314f77c139e54259" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 0 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979adc85945dca636164bcb5a69bde365d37" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 1 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979af4f3bbd0493a30331a698084fe94955b" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 2 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a65b24f39ef3e7d1e6123651940d4fc1d" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 3 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a900e23ab509039492055191e5242b4a9" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 4 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a69c47b277e3a0340362b29ef9025f741" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 5 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a64fc6ea30c211bc2edd93bc1eca9a043" prot="public">
          <name>NRF_STM_OUTPUT_ATIDM_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace source ID bit 6 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a7ce62552a74cb3e6d7e983081e18244b" prot="public">
          <name>NRF_STM_OUTPUT_ATVALIDM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer valid output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a18c56477cf0d59c09222b674246fb951" prot="public">
          <name>NRF_STM_OUTPUT_AFREADYM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ATB flush acknowledge output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a666fa358fce59dc59d755addef45dc6a" prot="public">
          <name>NRF_STM_OUTPUT_ATBYTESM_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of bytes on ATDATA to be captured bit 0 output. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga2023d1218150d9155653d415ee1c9979a6d4303e03818db1c8b820ea20c7dee16" prot="public">
          <name>NRF_STM_OUTPUT_ATBYTESM_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of bytes on ATDATA to be captured bit 1 output. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM outputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="95" column="1" bodyfile="hal/nrf_stm.h" bodystart="95" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_input_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18a41baa86bfede312703ac64a49676ef92" prot="public">
          <name>NRF_STM_INPUT_ATREADYM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slave is ready to accept data input. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga9f5129dae942d61b1c9954992fe99f18ab300a4225cbd755fff9585c7b2d9991f" prot="public">
          <name>NRF_STM_INPUT_AFVALIDM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ATB flush request input. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM inputs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="119" column="1" bodyfile="hal/nrf_stm.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_dma_sens_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a02c75ef7a7719a23498bde4b46c93f98" prot="public">
          <name>NRF_STM_DMACTLR_LT25</name>
          <initializer>= STM_DMACTLR_SENS_LT25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;25% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367abf4f73fe5228db6d6e16b26d0f5e26ea" prot="public">
          <name>NRF_STM_DMACTLR_LT50</name>
          <initializer>= STM_DMACTLR_SENS_LT50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;50% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a232c8ae015b550d2f8cb26656e5132ca" prot="public">
          <name>NRF_STM_DMACTLR_LT75</name>
          <initializer>= STM_DMACTLR_SENS_LT75</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;75% full. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga5a6029066843268ced913425459b6367a06de203a4af67d0c82fdeaf132823e3e" prot="public">
          <name>NRF_STM_DMACTLR_LT100</name>
          <initializer>= STM_DMACTLR_SENS_LT100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Buffer is &lt;100% full. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensitivity of the DMA request to the current buffer level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="125" column="1" bodyfile="hal/nrf_stm.h" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_heidr_class_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga352f76bedc5d968021504cb00722a0fdaeabac641e36ebe87dd99618973c89873" prot="public">
          <name>NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL</name>
          <initializer>= STM_HEIDR_CLASS_HardwareEventControl</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hardware Event Control programmer&apos;s model. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Programmer&apos;s models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="133" column="1" bodyfile="hal/nrf_stm.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_prot_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggac0470ee751b493a19e8c9058f84d72b1a89ae0ef3e62934e2476bb078bd3a842e" prot="public">
          <name>NRF_STM_SFPEAT1R_PROT_STPV2</name>
          <initializer>= STM_SPFEAT1R_PROT_STPV2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STPv2 protocol. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STM protocols. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="138" column="1" bodyfile="hal/nrf_stm.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_ts_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga4fd6df5453ad35fa180d76f1db2cafd2a11de44c4051801bb3580c0fd444946c2" prot="public">
          <name>NRF_STM_SPFEAT1R_TS_ABSOLUTE</name>
          <initializer>= STM_SPFEAT1R_TS_Absolute</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Absolute timestaps implemented. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Timestamp support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="143" column="1" bodyfile="hal/nrf_stm.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat1r_syncen_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga05c9b6dec27640c39f688a9df8859693a7566a07942596d133f6b93540f8d371d" prot="public">
          <name>NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE</name>
          <initializer>= STM_SPFEAT1R_SYNCEN_ReadAsOne</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>STMTCSR.SYNCEN implemented, but always reads as 1. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>STMTCSR.SYNCEN support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="148" column="1" bodyfile="hal/nrf_stm.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_spcomp_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga030d058810829d0923d694d0a344848baa77d631a6f3adf09edf040f3eb26d2e4" prot="public">
          <name>NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE</name>
          <initializer>= STM_SPFEAT2R_SPCOMP_Programmable</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data compression support is programmable. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Data compression on stimulus port support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="153" column="1" bodyfile="hal/nrf_stm.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_sptrtype_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggac08d86dd80030677445378b24c98aea5a647280d15a303b8de7ffa5727486e42f" prot="public">
          <name>NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED</name>
          <initializer>= STM_SPFEAT2R_SPTRTYPE_InvariantAndGuaranteed</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Both invariant timing and guaranteed transactions are supported. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Stimulus port transaction type support modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="158" column="1" bodyfile="hal/nrf_stm.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_spfeat2r_dsize_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga48f1800c2e2e6e2b2049a2f9cfbeff9faec508f881d213fe0fcba236c6c756281" prot="public">
          <name>NRF_STM_SPFEAT2R_DSIZE_32</name>
          <initializer>= STM_SPFEAT2R_DSIZE_Bits32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32-bit data. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Fundamental data size modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="163" column="1" bodyfile="hal/nrf_stm.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_lsr_type_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa57df22935771184d287486a6048a078f" prot="public">
          <name>NRF_STM_LSR_TYPE_8</name>
          <initializer>= STM_LSR_TYPE_Bits8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>8-bit Lock Access Register implemented. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__stm__hal_1gga17f001384ccef241278c0bca734f7e2aa2d0235c34df91750bd0bd513a4eef9bc" prot="public">
          <name>NRF_STM_LSR_TYPE_32</name>
          <initializer>= STM_LSR_TYPE_Bits32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32-bit Lock Access Register implemented. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Lock Access Register implementation modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="168" column="1" bodyfile="hal/nrf_stm.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_devtype_major_t</name>
        <enumvalue id="group__nrf__stm__hal_1gga088a57aa0aa611e20101bb50f5c06308a3ce4747eab7d59e477af8f8674ca2426" prot="public">
          <name>NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE</name>
          <initializer>= STM_DEVTYPE_MAJOR_TraceSource</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is a trace source. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Major classification grouping for this debug or trace component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="174" column="1" bodyfile="hal/nrf_stm.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_stm_devtype_sub_t</name>
        <enumvalue id="group__nrf__stm__hal_1ggaf8de504a65b510debcff6e857db0cacba37c7eb94cde1d2d1c5afc9fa117b82eb" prot="public">
          <name>NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE</name>
          <initializer>= STM_DEVTYPE_SUB_StimulusTrace</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is a stimulus trace source. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sub-classification for this debug or trace component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="179" column="1" bodyfile="hal/nrf_stm.h" bodystart="179" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__stm__hal_1gacb00f80a74d7c1c61afb2902a222106f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_stm_feature_check</definition>
        <argsstring>(NRF_STM_Type const *p_reg, nrf_stm_feature_t feature)</argsstring>
        <name>nrf_stm_feature_check</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of a feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature is supported/enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature is not supported/disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="433" column="24" bodyfile="hal/nrf_stm.h" bodystart="433" bodyend="500" declfile="hal/nrf_stm.h" declline="192" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gaaaf52be2ab39e084458616079d1c9c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_feature_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_feature_t feature, bool enable)</argsstring>
        <name>nrf_stm_feature_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1gad30b6a2d18490263d8ab08f6973414e3" kindref="member">nrf_stm_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of a feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Only features that are RW may be used in this function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>State to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="502" column="24" bodyfile="hal/nrf_stm.h" bodystart="502" bodyend="556" declfile="hal/nrf_stm.h" declline="204" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad9d1bc58630ef8ff845df867123e3258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_stm_input_check</definition>
        <argsstring>(NRF_STM_Type const *p_reg, nrf_stm_input_t input)</argsstring>
        <name>nrf_stm_input_check</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga9f5129dae942d61b1c9954992fe99f18" kindref="member">nrf_stm_input_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of an input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The input is high. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The input is low. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="558" column="24" bodyfile="hal/nrf_stm.h" bodystart="558" bodyend="572" declfile="hal/nrf_stm.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga6f3c2f880ef6c7248e010ad7af132e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_output_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_output_t output, bool enable)</argsstring>
        <name>nrf_stm_output_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga2023d1218150d9155653d415ee1c9979" kindref="member">nrf_stm_output_t</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of an output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>State to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="574" column="24" bodyfile="hal/nrf_stm.h" bodystart="574" bodyend="662" declfile="hal/nrf_stm.h" declline="226" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga90e1a0037bb5742c748f8af71ad43605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_dmactlr_sens_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, nrf_stm_dma_sens_t sens)</argsstring>
        <name>nrf_stm_dmactlr_sens_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref></type>
          <declname>sens</declname>
        </param>
        <briefdescription>
<para>Function for setting the sensivity of the DMA request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sens</parametername>
</parameternamelist>
<parameterdescription>
<para>Sensivity to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="664" column="24" bodyfile="hal/nrf_stm.h" bodystart="664" bodyend="667" declfile="hal/nrf_stm.h" declline="234" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8810049e00a731e08d3ea24051f4ea93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga5a6029066843268ced913425459b6367" kindref="member">nrf_stm_dma_sens_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_dma_sens_t nrf_stm_dmactlr_sens_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_dmactlr_sens_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the sensivity of the DMA request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sensivity of the DMA request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="669" column="38" bodyfile="hal/nrf_stm.h" bodystart="669" bodyend="673" declfile="hal/nrf_stm.h" declline="243" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga0db55e2fcae1eb60bd18a4917a8c906f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_stm_hemastr_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_hemastr_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of the hardware event trace of the STPv2 master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of the hardware event trace of the STPv2 master. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="675" column="28" bodyfile="hal/nrf_stm.h" bodystart="675" bodyend="678" declfile="hal/nrf_stm.h" declline="252" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga54742fb32613f0751c2d960d7cb05394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_stm_hefeat1r_numhe_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_hefeat1r_numhe_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of hardware events suppoted by the STM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of hardware events suppoted by the STM. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="680" column="28" bodyfile="hal/nrf_stm.h" bodystart="680" bodyend="683" declfile="hal/nrf_stm.h" declline="261" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad16b30409ee18cfcb61f75ba89fe708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga352f76bedc5d968021504cb00722a0fd" kindref="member">nrf_stm_heidr_class_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_heidr_class_t nrf_stm_heidr_class_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_class_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the programmer&apos;s model of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Programmer&apos;s model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="685" column="41" bodyfile="hal/nrf_stm.h" bodystart="685" bodyend="688" declfile="hal/nrf_stm.h" declline="270" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga67e9bf6b18d87aa4934792966f2b5c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_heidr_classrev_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_classrev_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the revision of the programmer&apos;s model of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Revision of the programmer&apos;s model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="690" column="27" bodyfile="hal/nrf_stm.h" bodystart="690" bodyend="693" declfile="hal/nrf_stm.h" declline="279" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga0d01e99c084bbf0bd0b8d763212eea49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_heidr_vendspec_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_heidr_vendspec_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting vendor specific modifications or mappings of hardware event tracking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vendor specific modifications or mappings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="695" column="27" bodyfile="hal/nrf_stm.h" bodystart="695" bodyend="698" declfile="hal/nrf_stm.h" declline="288" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8e65172e62c09c9d8bb7034e4723d694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_tcsr_traceid_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, uint8_t trace_id)</argsstring>
        <name>nrf_stm_tcsr_traceid_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trace_id</declname>
        </param>
        <briefdescription>
<para>Function for setting the ATB Trace ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trace_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ATB Trace ID to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="700" column="24" bodyfile="hal/nrf_stm.h" bodystart="700" bodyend="703" declfile="hal/nrf_stm.h" declline="296" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gae247a74733974cddc0e6dfbb1e78142d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_tcsr_traceid_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_tcsr_traceid_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the ATB Trace ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ATB Trace ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="705" column="27" bodyfile="hal/nrf_stm.h" bodystart="705" bodyend="708" declfile="hal/nrf_stm.h" declline="305" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga2692161b5e49fc7063f655509a9f9325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gac0470ee751b493a19e8c9058f84d72b1" kindref="member">nrf_stm_spfeat1r_prot_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_prot_t nrf_stm_spfeat1r_prot_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_prot_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the implemented STM protocol. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Implemented STM protocol. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="710" column="43" bodyfile="hal/nrf_stm.h" bodystart="710" bodyend="714" declfile="hal/nrf_stm.h" declline="314" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga8276574f255a79eb6710df7e5de0f0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga4fd6df5453ad35fa180d76f1db2cafd2" kindref="member">nrf_stm_spfeat1r_ts_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_ts_t nrf_stm_spfeat1r_ts_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_ts_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the timestamp support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timestamp support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="716" column="41" bodyfile="hal/nrf_stm.h" bodystart="716" bodyend="720" declfile="hal/nrf_stm.h" declline="323" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gab17b787cd3ac51e7a5d94484515d74ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat1r_tracebus_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_tracebus_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the trace bus support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trace bus support. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="722" column="27" bodyfile="hal/nrf_stm.h" bodystart="722" bodyend="725" declfile="hal/nrf_stm.h" declline="332" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga5fc547f121c05051e6b30691ccc496b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat1r_trigctl_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_trigctl_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the trigger control support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trigger control support. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="727" column="27" bodyfile="hal/nrf_stm.h" bodystart="727" bodyend="730" declfile="hal/nrf_stm.h" declline="341" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gab09657647c5c58da070c77acdadfb46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga05c9b6dec27640c39f688a9df8859693" kindref="member">nrf_stm_spfeat1r_syncen_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat1r_syncen_t nrf_stm_spfeat1r_syncen_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat1r_syncen_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the STMTCSR.SYNCEN support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STMTCSR.SYNCEN support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="732" column="45" bodyfile="hal/nrf_stm.h" bodystart="732" bodyend="736" declfile="hal/nrf_stm.h" declline="350" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga59695eaa3f52253833d9f2001a9b5604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga030d058810829d0923d694d0a344848b" kindref="member">nrf_stm_spfeat2r_spcomp_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_spcomp_t nrf_stm_spfeat2r_spcomp_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_spcomp_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the data compression on stimulus port support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data compression on stimulus port support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="738" column="45" bodyfile="hal/nrf_stm.h" bodystart="738" bodyend="742" declfile="hal/nrf_stm.h" declline="359" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga38e2d9744618f6552fcfbe8a24a8aba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gac08d86dd80030677445378b24c98aea5" kindref="member">nrf_stm_spfeat2r_sptrtype_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_sptrtype_t nrf_stm_spfeat2r_sptrtype_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_sptrtype_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the stimulus port transaction type support mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stimulus port transaction type support mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="744" column="47" bodyfile="hal/nrf_stm.h" bodystart="744" bodyend="748" declfile="hal/nrf_stm.h" declline="368" declcolumn="47"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gad76e68bb327e2adeafbdb4faa7d713f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga48f1800c2e2e6e2b2049a2f9cfbeff9f" kindref="member">nrf_stm_spfeat2r_dsize_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_spfeat2r_dsize_t nrf_stm_spfeat2r_dsize_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat2r_dsize_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the fundamental data size mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Fundamental data size mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="750" column="44" bodyfile="hal/nrf_stm.h" bodystart="750" bodyend="754" declfile="hal/nrf_stm.h" declline="377" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga4067e4ab6dbb67eca77d20eb3fec448c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t</type>
        <definition>NRF_STATIC_INLINE uint8_t nrf_stm_spfeat3r_nummast_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_spfeat3r_nummast_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of stimulus ports masters implemented, minus 1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of stimulus ports masters implemented, minus 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="756" column="27" bodyfile="hal/nrf_stm.h" bodystart="756" bodyend="759" declfile="hal/nrf_stm.h" declline="386" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1gafc1dd4fc2765caef3c99cbbe16b15b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_stm_lar_access_set</definition>
        <argsstring>(NRF_STM_Type *p_reg, uint32_t value)</argsstring>
        <name>nrf_stm_lar_access_set</name>
        <param>
          <type>NRF_STM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the enable write access register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be set for enable write access register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="761" column="24" bodyfile="hal/nrf_stm.h" bodystart="761" bodyend="764" declfile="hal/nrf_stm.h" declline="394" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga54d9f6d735e88667ba538e51ae9a8628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga17f001384ccef241278c0bca734f7e2a" kindref="member">nrf_stm_lsr_type_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_lsr_type_t nrf_stm_lsr_type_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_lsr_type_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the Lock Access Register implementation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lock Access Register implementation mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="766" column="38" bodyfile="hal/nrf_stm.h" bodystart="766" bodyend="769" declfile="hal/nrf_stm.h" declline="403" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga2533343dd7998329bc0701493e0edf96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_stm_devid_numsp_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devid_numsp_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of stimulus ports implemented. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of stimulus ports implemented. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="771" column="28" bodyfile="hal/nrf_stm.h" bodystart="771" bodyend="774" declfile="hal/nrf_stm.h" declline="412" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga528f48aef946aa8ff0165517966f2e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1ga088a57aa0aa611e20101bb50f5c06308" kindref="member">nrf_stm_devtype_major_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_devtype_major_t nrf_stm_devtype_major_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devtype_major_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the major classification grouping for this debug or trace component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Major classification grouping for this debug or trace component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="776" column="43" bodyfile="hal/nrf_stm.h" bodystart="776" bodyend="780" declfile="hal/nrf_stm.h" declline="421" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__stm__hal_1ga79598ccbad5d8df946e91a3131ffbab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__stm__hal_1gaf8de504a65b510debcff6e857db0cacb" kindref="member">nrf_stm_devtype_sub_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_stm_devtype_sub_t nrf_stm_devtype_sub_get</definition>
        <argsstring>(NRF_STM_Type const *p_reg)</argsstring>
        <name>nrf_stm_devtype_sub_get</name>
        <param>
          <type>NRF_STM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the sub-classification for this debug or trace component. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sub-classification for this debug or trace component. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_stm.h" line="782" column="41" bodyfile="hal/nrf_stm.h" bodystart="782" bodyend="785" declfile="hal/nrf_stm.h" declline="430" declcolumn="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the System Trace Macrocell (STM) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
