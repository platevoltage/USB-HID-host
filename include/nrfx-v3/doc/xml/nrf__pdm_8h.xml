<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__pdm_8h" kind="file" language="C++">
    <compoundname>nrf_pdm.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__pdm_8h" local="no">haly/nrfy_pdm.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_pdm.h</label>
        <link refid="nrf__pdm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__pdm__hal_1gaf67a901cdd622ecdb230c578b08b9fe2" prot="public" static="no">
        <name>NRF_PDM_HAS_MCLKCONFIG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether master clock source configuration is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="55" column="9" bodyfile="hal/nrf_pdm.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1gaa83396f4675042ff22c8b3cf2f72a4da" prot="public" static="no">
        <name>NRF_PDM_HAS_RATIO_CONFIG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether ratio configuration is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="62" column="9" bodyfile="hal/nrf_pdm.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1ga9043c59a076aa2bf542c07b771d4d1ea" prot="public" static="no">
        <name>NRF_PDM_HAS_DMA_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether dedicated DMA register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="69" column="9" bodyfile="hal/nrf_pdm.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1ga0c9502ce75fd9329cd8a16ab51d667c0" prot="public" static="no">
        <name>NRF_PDM_HAS_DMA_TASKS_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether PDM DMA tasks and events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="77" column="9" bodyfile="hal/nrf_pdm.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1gaf9419ffcb671a926d8e6946d1272049a" prot="public" static="no">
        <name>NRF_PDM_GAIN_MINIMUM</name>
        <initializer>0x00</initializer>
        <briefdescription>
<para>Minimum value of PDM gain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="83" column="9" bodyfile="hal/nrf_pdm.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1gaf2dbf0024fadb324a3575bdce121b720" prot="public" static="no">
        <name>NRF_PDM_GAIN_DEFAULT</name>
        <initializer>0x28</initializer>
        <briefdescription>
<para>Default value of PDM gain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="85" column="9" bodyfile="hal/nrf_pdm.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__pdm__hal_1gac45fef57f7faed3003b61d575f706e7d" prot="public" static="no">
        <name>NRF_PDM_GAIN_MAXIMUM</name>
        <initializer>0x50</initializer>
        <briefdescription>
<para>Maximum value of PDM gain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="87" column="9" bodyfile="hal/nrf_pdm.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_task_t</name>
        <enumvalue id="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609ae89ac91cd8802a6bff946480f34b40e2" prot="public">
          <name>NRF_PDM_TASK_START</name>
          <initializer>= offsetof(NRF_PDM_Type, TASKS_DMA.START)</initializer>
          <briefdescription>
<para>Starts continuous PDM transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609a125576e624bc26cf4c87f3826c53b2b9" prot="public">
          <name>NRF_PDM_TASK_STOP</name>
          <initializer>= offsetof(NRF_PDM_Type, TASKS_DMA.STOP)</initializer>
          <briefdescription>
<para>Stops PDM transfer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="94" column="1" bodyfile="hal/nrf_pdm.h" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_event_t</name>
        <enumvalue id="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4a7524dfd91be0dc0c2074148ce40647f4" prot="public">
          <name>NRF_PDM_EVENT_STARTED</name>
          <initializer>= offsetof(NRF_PDM_Type, EVENTS_STARTED)</initializer>
          <briefdescription>
<para>PDM transfer is started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4a2421d4f365c410552760f4ff15e77f3f" prot="public">
          <name>NRF_PDM_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_PDM_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>PDM transfer is finished. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4ac5d4065f36b43520cae1fd3e435ea58d" prot="public">
          <name>NRF_PDM_EVENT_END</name>
          <initializer>= offsetof(NRF_PDM_Type, EVENTS_DMA.END)</initializer>
          <briefdescription>
<para>The PDM has written the last sample specified by MAXCNT (or the last sample after a STOP task has been received) to Data RAM. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="106" column="1" bodyfile="hal/nrf_pdm.h" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1ga86b84c2a22cbcb80053f3ce0e46da4f2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_int_mask_t</name>
        <enumvalue id="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2a483deab8fa99434a1e5ea554318452e7" prot="public">
          <name>NRF_PDM_INT_STARTED</name>
          <initializer>= PDM_INTENSET_STARTED_Msk</initializer>
          <briefdescription>
<para>Interrupt on EVENTS_STARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2ad960479235be06958d1c9633d196f86d" prot="public">
          <name>NRF_PDM_INT_STOPPED</name>
          <initializer>= PDM_INTENSET_STOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on EVENTS_STOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2af05de1ee4ffa578bc6ae91d9ac9d5326" prot="public">
          <name>NRF_PDM_INT_END</name>
          <initializer>= PDM_INTENSET_DMAEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on EVENTS_END event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM interrupt masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="118" column="1" bodyfile="hal/nrf_pdm.h" bodystart="119" bodyend="127"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_freq_t</name>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da21a922e95fbf816179d93d61ed9468a2" prot="public">
          <name>NRF_PDM_FREQ_1000K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_1000K</initializer>
          <briefdescription>
<para>PDM_CLK = 1.000 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da93c505a45c079de603a778e538f916c2" prot="public">
          <name>NRF_PDM_FREQ_1032K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_Default</initializer>
          <briefdescription>
<para>PDM_CLK = 1.032 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da141c4dae8d2e36dcb0ce48f3c7311beb" prot="public">
          <name>NRF_PDM_FREQ_1067K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_1067K</initializer>
          <briefdescription>
<para>PDM_CLK = 1.067 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da429bf427ab6cb49187e234bcd09153d6" prot="public">
          <name>NRF_PDM_FREQ_1231K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_1231K</initializer>
          <briefdescription>
<para>PDM_CLK = 1.231 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da3e9aec69d3dedad85a80d1c3e4a055f8" prot="public">
          <name>NRF_PDM_FREQ_1280K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_1280K</initializer>
          <briefdescription>
<para>PDM_CLK = 1.280 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da4a9beeb46a8313e53e46602010570575" prot="public">
          <name>NRF_PDM_FREQ_1333K</name>
          <initializer>= PDM_PDMCLKCTRL_FREQ_1333K</initializer>
          <briefdescription>
<para>PDM_CLK = 1.333 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM clock frequency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="130" column="1" bodyfile="hal/nrf_pdm.h" bodystart="131" bodyend="144"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1gaa440ffa5a57cc209736e6d66ff1b9088" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_ratio_t</name>
        <enumvalue id="group__nrf__pdm__hal_1ggaa440ffa5a57cc209736e6d66ff1b9088aa165fd177221dc7be65cf727fd8be40a" prot="public">
          <name>NRF_PDM_RATIO_64X</name>
          <initializer>= PDM_RATIO_RATIO_Ratio64</initializer>
          <briefdescription>
<para>Ratio of 64. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1ggaa440ffa5a57cc209736e6d66ff1b9088a7751765dfa324acc1a8ab08bf340f0f1" prot="public">
          <name>NRF_PDM_RATIO_80X</name>
          <initializer>= PDM_RATIO_RATIO_Ratio80</initializer>
          <briefdescription>
<para>Ratio of 80. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM ratio between PDM_CLK and output sample rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="149" column="1" bodyfile="hal/nrf_pdm.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_mode_t</name>
        <enumvalue id="group__nrf__pdm__hal_1ggadc5bd87887dfb140a868d6ba14df0a42ad2914cf718183eece935c17771a61a7c" prot="public">
          <name>NRF_PDM_MODE_STEREO</name>
          <initializer>= PDM_MODE_OPERATION_Stereo</initializer>
          <briefdescription>
<para>Sample and store one pair (Left + Right) of 16-bit samples per RAM word. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1ggadc5bd87887dfb140a868d6ba14df0a42a4958b92efb70f1debb0147cea68eb459" prot="public">
          <name>NRF_PDM_MODE_MONO</name>
          <initializer>= PDM_MODE_OPERATION_Mono</initializer>
          <briefdescription>
<para>Sample and store two successive Left samples (16 bit each) per RAM word. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM operation mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="157" column="1" bodyfile="hal/nrf_pdm.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_edge_t</name>
        <enumvalue id="group__nrf__pdm__hal_1ggacf1325c08d54c6953c2446dacf835217a0b89e686051d527a7e5f2f9fe10072fb" prot="public">
          <name>NRF_PDM_EDGE_LEFTFALLING</name>
          <initializer>= PDM_MODE_EDGE_LeftFalling</initializer>
          <briefdescription>
<para>Left (or mono) is sampled on falling edge of PDM_CLK. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1ggacf1325c08d54c6953c2446dacf835217a4a0a048d1c58b61dd7552d5ebd0e0e01" prot="public">
          <name>NRF_PDM_EDGE_LEFTRISING</name>
          <initializer>= PDM_MODE_EDGE_LeftRising</initializer>
          <briefdescription>
<para>Left (or mono) is sampled on rising edge of PDM_CLK. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM sampling mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="164" column="1" bodyfile="hal/nrf_pdm.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__pdm__hal_1ga2de024db84f169477a537aef3f1a0a92" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_pdm_mclksrc_t</name>
        <enumvalue id="group__nrf__pdm__hal_1gga2de024db84f169477a537aef3f1a0a92a2a5d19fc35b24eee2d2f7a6e71c99638" prot="public">
          <name>NRF_PDM_MCLKSRC_PCLK32M</name>
          <initializer>= PDM_MCLKCONFIG_SRC_PCLK32M</initializer>
          <briefdescription>
<para>32MHz peripheral clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__pdm__hal_1gga2de024db84f169477a537aef3f1a0a92a617dcee2bcb0673887863ca0bac021c6" prot="public">
          <name>NRF_PDM_MCLKSRC_ACLK</name>
          <initializer>= PDM_MCLKCONFIG_SRC_ACLK</initializer>
          <briefdescription>
<para>Audio PLL clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDM master clock source selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="172" column="1" bodyfile="hal/nrf_pdm.h" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t nrf_pdm_gain_t</definition>
        <argsstring></argsstring>
        <name>nrf_pdm_gain_t</name>
        <briefdescription>
<para>PDM gain type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="91" column="17" bodyfile="hal/nrf_pdm.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__pdm__hal_1gaa20eeff5e9ce2633d33850c7880746ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_task_trigger</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_task_t task)</argsstring>
        <name>nrf_pdm_task_trigger</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for triggering a PDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="467" column="24" bodyfile="hal/nrf_pdm.h" bodystart="467" bodyend="470" declfile="hal/nrf_pdm.h" declline="185" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gad68d6c8d5185c9bda1b5d3f2d4b6f7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_pdm_task_address_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, nrf_pdm_task_t task)</argsstring>
        <name>nrf_pdm_task_address_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a PDM task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified PDM task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="472" column="28" bodyfile="hal/nrf_pdm.h" bodystart="472" bodyend="475" declfile="hal/nrf_pdm.h" declline="195" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gafede3329a79865da467ddf1a2dccb9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_pdm_event_check</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, nrf_pdm_event_t event)</argsstring>
        <name>nrf_pdm_event_check</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the PDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="477" column="24" bodyfile="hal/nrf_pdm.h" bodystart="477" bodyend="480" declfile="hal/nrf_pdm.h" declline="207" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga18fbcbf09943bebb076d7392e723e717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_event_clear</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_event_t event)</argsstring>
        <name>nrf_pdm_event_clear</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing a PDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="482" column="24" bodyfile="hal/nrf_pdm.h" bodystart="482" bodyend="486" declfile="hal/nrf_pdm.h" declline="215" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga2f9b6599215604e62fd93c8eac08b076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_pdm_event_address_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, nrf_pdm_event_t event)</argsstring>
        <name>nrf_pdm_event_address_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a PDM event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified PDM event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="488" column="28" bodyfile="hal/nrf_pdm.h" bodystart="488" bodyend="492" declfile="hal/nrf_pdm.h" declline="225" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga64441adea754e237e275b82d5651f2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_int_enable</definition>
        <argsstring>(NRF_PDM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_pdm_int_enable</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling PDM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__pdm__hal_1ga86b84c2a22cbcb80053f3ce0e46da4f2" kindref="member">nrf_pdm_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="494" column="24" bodyfile="hal/nrf_pdm.h" bodystart="494" bodyend="497" declfile="hal/nrf_pdm.h" declline="235" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga7df3ab546e429882e0f34ae9117f1909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_pdm_int_enable_check</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_pdm_int_enable_check</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__pdm__hal_1ga86b84c2a22cbcb80053f3ce0e46da4f2" kindref="member">nrf_pdm_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="499" column="28" bodyfile="hal/nrf_pdm.h" bodystart="499" bodyend="502" declfile="hal/nrf_pdm.h" declline="246" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga778a47046ee0b7bb71be2f8f80a4db97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_int_disable</definition>
        <argsstring>(NRF_PDM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_pdm_int_disable</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__pdm__hal_1ga86b84c2a22cbcb80053f3ce0e46da4f2" kindref="member">nrf_pdm_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="504" column="24" bodyfile="hal/nrf_pdm.h" bodystart="504" bodyend="507" declfile="hal/nrf_pdm.h" declline="255" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga0c41c54ed3e08ad68c31729fc7ece694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_subscribe_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_task_t task, uint8_t channel)</argsstring>
        <name>nrf_pdm_subscribe_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given PDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="266" column="24" declfile="hal/nrf_pdm.h" declline="266" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga89efa8e6085257047287d92a9b742c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_subscribe_clear</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_task_t task)</argsstring>
        <name>nrf_pdm_subscribe_clear</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given PDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="277" column="24" declfile="hal/nrf_pdm.h" declline="277" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gae1cf72b720c53c87f46b5024b5f952ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_publish_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_event_t event, uint8_t channel)</argsstring>
        <name>nrf_pdm_publish_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given PDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="287" column="24" declfile="hal/nrf_pdm.h" declline="287" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga33b6ba79f528c33efb31140d3e007906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_publish_clear</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_event_t event)</argsstring>
        <name>nrf_pdm_publish_clear</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given PDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="298" column="24" declfile="hal/nrf_pdm.h" declline="298" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gac707149ccdaaf098b93fb99d40b46f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_enable</definition>
        <argsstring>(NRF_PDM_Type *p_reg)</argsstring>
        <name>nrf_pdm_enable</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the PDM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The PDM peripheral must be enabled before use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="537" column="24" bodyfile="hal/nrf_pdm.h" bodystart="537" bodyend="540" declfile="hal/nrf_pdm.h" declline="308" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga7bdfd17fa37b4b3b73e55d8af56dc30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_disable</definition>
        <argsstring>(NRF_PDM_Type *p_reg)</argsstring>
        <name>nrf_pdm_disable</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the PDM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="542" column="24" bodyfile="hal/nrf_pdm.h" bodystart="542" bodyend="545" declfile="hal/nrf_pdm.h" declline="315" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga3032c46804835e95b644307c7c5504f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_pdm_enable_check</definition>
        <argsstring>(NRF_PDM_Type const *p_reg)</argsstring>
        <name>nrf_pdm_enable_check</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the PDM peripheral is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDM peripheral is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDM peripheral is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="547" column="24" bodyfile="hal/nrf_pdm.h" bodystart="547" bodyend="550" declfile="hal/nrf_pdm.h" declline="325" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga46df3d7bde70ea30bfd0ff19d214cefd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_mode_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_mode_t pdm_mode, nrf_pdm_edge_t pdm_edge)</argsstring>
        <name>nrf_pdm_mode_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref></type>
          <declname>pdm_mode</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref></type>
          <declname>pdm_edge</declname>
        </param>
        <briefdescription>
<para>Function for setting the PDM operation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pdm_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM operation mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pdm_edge</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM sampling mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="552" column="24" bodyfile="hal/nrf_pdm.h" bodystart="552" bodyend="558" declfile="hal/nrf_pdm.h" declline="334" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gafded470ca8489a1c117ec70fd859e09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_mode_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, nrf_pdm_mode_t *p_pdm_mode, nrf_pdm_edge_t *p_pdm_edge)</argsstring>
        <name>nrf_pdm_mode_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref> *</type>
          <declname>p_pdm_mode</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref> *</type>
          <declname>p_pdm_edge</declname>
        </param>
        <briefdescription>
<para>Function for getting the PDM operation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pdm_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM operation mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pdm_edge</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM sampling mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="560" column="24" bodyfile="hal/nrf_pdm.h" bodystart="560" bodyend="567" declfile="hal/nrf_pdm.h" declline="345" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gab571afca8dc52370df56a27daa0c6c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_clock_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_freq_t pdm_freq)</argsstring>
        <name>nrf_pdm_clock_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref></type>
          <declname>pdm_freq</declname>
        </param>
        <briefdescription>
<para>Function for setting the PDM clock frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pdm_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>PDM clock frequency. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="569" column="24" bodyfile="hal/nrf_pdm.h" bodystart="569" bodyend="572" declfile="hal/nrf_pdm.h" declline="355" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga972c21836ef6d94098f7b9add19616c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_pdm_freq_t nrf_pdm_clock_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg)</argsstring>
        <name>nrf_pdm_clock_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the PDM clock frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PDM clock frequency. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="574" column="34" bodyfile="hal/nrf_pdm.h" bodystart="574" bodyend="578" declfile="hal/nrf_pdm.h" declline="364" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga6f9d46c104f75b4be3d0f054a4a44aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_psel_connect</definition>
        <argsstring>(NRF_PDM_Type *p_reg, uint32_t psel_clk, uint32_t psel_din)</argsstring>
        <name>nrf_pdm_psel_connect</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>psel_clk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>psel_din</declname>
        </param>
        <briefdescription>
<para>Function for setting up the PDM pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">psel_clk</parametername>
</parameternamelist>
<parameterdescription>
<para>CLK pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">psel_din</parametername>
</parameternamelist>
<parameterdescription>
<para>DIN pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="580" column="24" bodyfile="hal/nrf_pdm.h" bodystart="580" bodyend="586" declfile="hal/nrf_pdm.h" declline="373" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga331f6bce46d78ab4c858ff6b9c440248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_pdm_clk_pin_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg)</argsstring>
        <name>nrf_pdm_clk_pin_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CLK pin selection; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="588" column="28" bodyfile="hal/nrf_pdm.h" bodystart="588" bodyend="591" declfile="hal/nrf_pdm.h" declline="384" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga2ef58dd5d2d8ed1d23e32391aed0cc1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_pdm_din_pin_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg)</argsstring>
        <name>nrf_pdm_din_pin_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the DIN pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DIN pin selection; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="593" column="28" bodyfile="hal/nrf_pdm.h" bodystart="593" bodyend="596" declfile="hal/nrf_pdm.h" declline="393" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga5afa96d2c1c7adb19bd8c2c49051a535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_psel_disconnect</definition>
        <argsstring>(NRF_PDM_Type *p_reg)</argsstring>
        <name>nrf_pdm_psel_disconnect</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disconnecting the PDM pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="598" column="24" bodyfile="hal/nrf_pdm.h" bodystart="598" bodyend="604" declfile="hal/nrf_pdm.h" declline="400" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga5972d0587ee12dae9d7d2601b6a9352e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_gain_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_gain_t gain_l, nrf_pdm_gain_t gain_r)</argsstring>
        <name>nrf_pdm_gain_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref></type>
          <declname>gain_l</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref></type>
          <declname>gain_r</declname>
        </param>
        <briefdescription>
<para>Function for setting the PDM gain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel gain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="606" column="24" bodyfile="hal/nrf_pdm.h" bodystart="606" bodyend="612" declfile="hal/nrf_pdm.h" declline="409" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga97217da60d8f7be0826237320c1a11fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_gain_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg, nrf_pdm_gain_t *p_gain_l, nrf_pdm_gain_t *p_gain_r)</argsstring>
        <name>nrf_pdm_gain_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref> *</type>
          <declname>p_gain_l</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref> *</type>
          <declname>p_gain_r</declname>
        </param>
        <briefdescription>
<para>Function for getting the PDM gain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_gain_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel gain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_gain_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="614" column="24" bodyfile="hal/nrf_pdm.h" bodystart="614" bodyend="620" declfile="hal/nrf_pdm.h" declline="420" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gabaf334bcac9fc1dfc74c4b363a73ea65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_buffer_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, uint32_t *p_buffer, uint32_t num)</argsstring>
        <name>nrf_pdm_buffer_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Function for setting the PDM sample buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>The amount of allocated RAM depends on the operation mode.<itemizedlist>
<listitem><para>For stereo mode: N 32-bit words.</para>
</listitem><listitem><para>For mono mode: Ceil(N/2) 32-bit words.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the RAM address where samples are to be written with EasyDMA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples to allocate memory for in EasyDMA mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="622" column="24" bodyfile="hal/nrf_pdm.h" bodystart="622" bodyend="631" declfile="hal/nrf_pdm.h" declline="435" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1ga827366e0010c6d97f2999f05545837dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t *</type>
        <definition>NRF_STATIC_INLINE uint32_t * nrf_pdm_buffer_get</definition>
        <argsstring>(NRF_PDM_Type const *p_reg)</argsstring>
        <name>nrf_pdm_buffer_get</name>
        <param>
          <type>NRF_PDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the current PDM sample buffer address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the current sample buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="633" column="29" bodyfile="hal/nrf_pdm.h" bodystart="633" bodyend="640" declfile="hal/nrf_pdm.h" declline="444" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gab68b48a26e8dad9f5a832f72f9838a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_ratio_set</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_ratio_t ratio)</argsstring>
        <name>nrf_pdm_ratio_set</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1gaa440ffa5a57cc209736e6d66ff1b9088" kindref="member">nrf_pdm_ratio_t</ref></type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Function for setting ratio between PDM_CLK and output sample rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>Ratio between PDM_CLK and output sample rate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="643" column="24" bodyfile="hal/nrf_pdm.h" bodystart="643" bodyend="646" declfile="hal/nrf_pdm.h" declline="453" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__pdm__hal_1gaa0900e673cec609d9e859f5b9588972d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_pdm_mclksrc_configure</definition>
        <argsstring>(NRF_PDM_Type *p_reg, nrf_pdm_mclksrc_t mclksrc)</argsstring>
        <name>nrf_pdm_mclksrc_configure</name>
        <param>
          <type>NRF_PDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pdm__hal_1ga2de024db84f169477a537aef3f1a0a92" kindref="member">nrf_pdm_mclksrc_t</ref></type>
          <declname>mclksrc</declname>
        </param>
        <briefdescription>
<para>Function for configuring PDM master clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mclksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Master Clock source selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_pdm.h" line="650" column="24" bodyfile="hal/nrf_pdm.h" bodystart="650" bodyend="653" declfile="hal/nrf_pdm.h" declline="463" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_PDM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_PDM0)<sp/>&amp;&amp;<sp/>defined(NRF_PDM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM0<sp/>NRF_PDM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_pdm_hal<sp/>PDM<sp/>HAL</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_pdm</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Pulse<sp/>Density<sp/>Modulation<sp/>(PDM)<sp/>peripheral.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_MCLKCONFIG_SRC_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>master<sp/>clock<sp/>source<sp/>configuration<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_MCLKCONFIG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_MCLKCONFIG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_RATIO_RATIO_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>ratio<sp/>configuration<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_RATIO_CONFIG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_RATIO_CONFIG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_DMA_PTR_PTR_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>dedicated<sp/>DMA<sp/>register<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_DMA_REG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_DMA_REG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(PDM_TASKS_DMA_START_START_Msk)<sp/>&amp;&amp;<sp/>defined(PDM_EVENTS_DMA_END_END_Msk))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>PDM<sp/>DMA<sp/>tasks<sp/>and<sp/>events<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_DMA_TASKS_EVENTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_HAS_DMA_TASKS_EVENTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Minimum<sp/>value<sp/>of<sp/>PDM<sp/>gain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_GAIN_MINIMUM<sp/><sp/>0x00</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment">/**<sp/>@brief<sp/>Default<sp/>value<sp/>of<sp/>PDM<sp/>gain.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_GAIN_DEFAULT<sp/><sp/>0x28</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**<sp/>@brief<sp/>Maximum<sp/>value<sp/>of<sp/>PDM<sp/>gain.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PDM_GAIN_MAXIMUM<sp/><sp/>0x50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>gain<sp/>type.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609ae89ac91cd8802a6bff946480f34b40e2" kindref="member">NRF_PDM_TASK_START</ref><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>TASKS_DMA.START),<sp/></highlight><highlight class="comment">///&lt;<sp/>Starts<sp/>continuous<sp/>PDM<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609a125576e624bc26cf4c87f3826c53b2b9" kindref="member">NRF_PDM_TASK_STOP</ref><sp/><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>TASKS_DMA.STOP),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stops<sp/>PDM<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609ae89ac91cd8802a6bff946480f34b40e2" kindref="member">NRF_PDM_TASK_START</ref><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>TASKS_START),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Starts<sp/>continuous<sp/>PDM<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6848dcee43c9bb51bf52965d7ec07609a125576e624bc26cf4c87f3826c53b2b9" kindref="member">NRF_PDM_TASK_STOP</ref><sp/><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>TASKS_STOP),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stops<sp/>PDM<sp/>transfer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4a7524dfd91be0dc0c2074148ce40647f4" kindref="member">NRF_PDM_EVENT_STARTED</ref><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>EVENTS_STARTED),<sp/></highlight><highlight class="comment">///&lt;<sp/>PDM<sp/>transfer<sp/>is<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4a2421d4f365c410552760f4ff15e77f3f" kindref="member">NRF_PDM_EVENT_STOPPED</ref><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>EVENTS_STOPPED),<sp/></highlight><highlight class="comment">///&lt;<sp/>PDM<sp/>transfer<sp/>is<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4ac5d4065f36b43520cae1fd3e435ea58d" kindref="member">NRF_PDM_EVENT_END</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>EVENTS_DMA.END),<sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>PDM<sp/>has<sp/>written<sp/>the<sp/>last<sp/>sample<sp/>specified<sp/>by<sp/>MAXCNT<sp/>(or<sp/>the<sp/>last<sp/>sample<sp/>after<sp/>a<sp/>STOP<sp/>task<sp/>has<sp/>been<sp/>received)<sp/>to<sp/>Data<sp/>RAM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggabd47039f89fd8698f53f31dbf8e7d1e4ac5d4065f36b43520cae1fd3e435ea58d" kindref="member">NRF_PDM_EVENT_END</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_PDM_Type,<sp/>EVENTS_END),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>PDM<sp/>has<sp/>written<sp/>the<sp/>last<sp/>sample<sp/>specified<sp/>by<sp/>MAXCNT<sp/>(or<sp/>the<sp/>last<sp/>sample<sp/>after<sp/>a<sp/>STOP<sp/>task<sp/>has<sp/>been<sp/>received)<sp/>to<sp/>Data<sp/>RAM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>interrupt<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2a483deab8fa99434a1e5ea554318452e7" kindref="member">NRF_PDM_INT_STARTED</ref><sp/>=<sp/>PDM_INTENSET_STARTED_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_STARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2ad960479235be06958d1c9633d196f86d" kindref="member">NRF_PDM_INT_STOPPED</ref><sp/>=<sp/>PDM_INTENSET_STOPPED_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_STOPPED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2af05de1ee4ffa578bc6ae91d9ac9d5326" kindref="member">NRF_PDM_INT_END</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>PDM_INTENSET_DMAEND_Msk<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga86b84c2a22cbcb80053f3ce0e46da4f2af05de1ee4ffa578bc6ae91d9ac9d5326" kindref="member">NRF_PDM_INT_END</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>PDM_INTENSET_END_Msk<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_END<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1ga86b84c2a22cbcb80053f3ce0e46da4f2" kindref="member">nrf_pdm_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>clock<sp/>frequency.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da21a922e95fbf816179d93d61ed9468a2" kindref="member">NRF_PDM_FREQ_1000K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_1000K,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.000<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da93c505a45c079de603a778e538f916c2" kindref="member">NRF_PDM_FREQ_1032K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_Default,<sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.032<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da141c4dae8d2e36dcb0ce48f3c7311beb" kindref="member">NRF_PDM_FREQ_1067K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_1067K,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.067<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_PDMCLKCTRL_FREQ_1231K)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da429bf427ab6cb49187e234bcd09153d6" kindref="member">NRF_PDM_FREQ_1231K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_1231K,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.231<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_PDMCLKCTRL_FREQ_1280K)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da3e9aec69d3dedad85a80d1c3e4a055f8" kindref="member">NRF_PDM_FREQ_1280K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_1280K,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.280<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PDM_PDMCLKCTRL_FREQ_1333K)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga6703930305da65cc2f258ad1f68f863da4a9beeb46a8313e53e46602010570575" kindref="member">NRF_PDM_FREQ_1333K</ref><sp/>=<sp/>PDM_PDMCLKCTRL_FREQ_1333K<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>PDM_CLK<sp/>=<sp/>1.333<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_RATIO_CONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>ratio<sp/>between<sp/>PDM_CLK<sp/>and<sp/>output<sp/>sample<sp/>rate.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggaa440ffa5a57cc209736e6d66ff1b9088aa165fd177221dc7be65cf727fd8be40a" kindref="member">NRF_PDM_RATIO_64X</ref><sp/>=<sp/>PDM_RATIO_RATIO_Ratio64,<sp/></highlight><highlight class="comment">///&lt;<sp/>Ratio<sp/>of<sp/>64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggaa440ffa5a57cc209736e6d66ff1b9088a7751765dfa324acc1a8ab08bf340f0f1" kindref="member">NRF_PDM_RATIO_80X</ref><sp/>=<sp/>PDM_RATIO_RATIO_Ratio80<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Ratio<sp/>of<sp/>80.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1gaa440ffa5a57cc209736e6d66ff1b9088" kindref="member">nrf_pdm_ratio_t</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>operation<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggadc5bd87887dfb140a868d6ba14df0a42ad2914cf718183eece935c17771a61a7c" kindref="member">NRF_PDM_MODE_STEREO</ref><sp/>=<sp/>PDM_MODE_OPERATION_Stereo,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sample<sp/>and<sp/>store<sp/>one<sp/>pair<sp/>(Left<sp/>+<sp/>Right)<sp/>of<sp/>16-bit<sp/>samples<sp/>per<sp/>RAM<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggadc5bd87887dfb140a868d6ba14df0a42a4958b92efb70f1debb0147cea68eb459" kindref="member">NRF_PDM_MODE_MONO</ref><sp/><sp/><sp/>=<sp/>PDM_MODE_OPERATION_Mono<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sample<sp/>and<sp/>store<sp/>two<sp/>successive<sp/>Left<sp/>samples<sp/>(16<sp/>bit<sp/>each)<sp/>per<sp/>RAM<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>sampling<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggacf1325c08d54c6953c2446dacf835217a0b89e686051d527a7e5f2f9fe10072fb" kindref="member">NRF_PDM_EDGE_LEFTFALLING</ref><sp/>=<sp/>PDM_MODE_EDGE_LeftFalling,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Left<sp/>(or<sp/>mono)<sp/>is<sp/>sampled<sp/>on<sp/>falling<sp/>edge<sp/>of<sp/>PDM_CLK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ggacf1325c08d54c6953c2446dacf835217a4a0a048d1c58b61dd7552d5ebd0e0e01" kindref="member">NRF_PDM_EDGE_LEFTRISING</ref><sp/><sp/>=<sp/>PDM_MODE_EDGE_LeftRising<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Left<sp/>(or<sp/>mono)<sp/>is<sp/>sampled<sp/>on<sp/>rising<sp/>edge<sp/>of<sp/>PDM_CLK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_MCLKCONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**<sp/>@brief<sp/>PDM<sp/>master<sp/>clock<sp/>source<sp/>selection.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga2de024db84f169477a537aef3f1a0a92a2a5d19fc35b24eee2d2f7a6e71c99638" kindref="member">NRF_PDM_MCLKSRC_PCLK32M</ref><sp/>=<sp/>PDM_MCLKCONFIG_SRC_PCLK32M,<sp/></highlight><highlight class="comment">///&lt;<sp/>32MHz<sp/>peripheral<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gga2de024db84f169477a537aef3f1a0a92a617dcee2bcb0673887863ca0bac021c6" kindref="member">NRF_PDM_MCLKSRC_ACLK</ref><sp/><sp/><sp/><sp/>=<sp/>PDM_MCLKCONFIG_SRC_ACLK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Audio<sp/>PLL<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/><ref refid="group__nrf__pdm__hal_1ga2de024db84f169477a537aef3f1a0a92" kindref="member">nrf_pdm_mclksrc_t</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>a<sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gaa20eeff5e9ce2633d33850c7880746ce" kindref="member">nrf_pdm_task_trigger</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>a<sp/>PDM<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1gad68d6c8d5185c9bda1b5d3f2d4b6f7df" kindref="member">nrf_pdm_task_address_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gafede3329a79865da467ddf1a2dccb9dd" kindref="member">nrf_pdm_event_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga18fbcbf09943bebb076d7392e723e717" kindref="member">nrf_pdm_event_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>a<sp/>PDM<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga2f9b6599215604e62fd93c8eac08b076" kindref="member">nrf_pdm_event_address_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>PDM<sp/>interrupts.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_pdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga64441adea754e237e275b82d5651f2a1" kindref="member">nrf_pdm_int_enable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_pdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga7df3ab546e429882e0f34ae9117f1909" kindref="member">nrf_pdm_int_enable_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>interrupts.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_pdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga778a47046ee0b7bb71be2f8f80a4db97" kindref="member">nrf_pdm_int_disable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga0c41c54ed3e08ad68c31729fc7ece694" kindref="member">nrf_pdm_subscribe_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="270"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDM<sp/>task.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga89efa8e6085257047287d92a9b742c5f" kindref="member">nrf_pdm_subscribe_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gae1cf72b720c53c87f46b5024b5f952ea" kindref="member">nrf_pdm_publish_set</ref>(NRF_PDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDM<sp/>event.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga33b6ba79f528c33efb31140d3e007906" kindref="member">nrf_pdm_publish_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>PDM<sp/>peripheral.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>The<sp/>PDM<sp/>peripheral<sp/>must<sp/>be<sp/>enabled<sp/>before<sp/>use.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gac707149ccdaaf098b93fb99d40b46f85" kindref="member">nrf_pdm_enable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>PDM<sp/>peripheral.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga7bdfd17fa37b4b3b73e55d8af56dc30b" kindref="member">nrf_pdm_disable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>PDM<sp/>peripheral<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>PDM<sp/>peripheral<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>PDM<sp/>peripheral<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga3032c46804835e95b644307c7c5504f4" kindref="member">nrf_pdm_enable_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>PDM<sp/>operation<sp/>mode.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pdm_mode<sp/>PDM<sp/>operation<sp/>mode.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pdm_edge<sp/>PDM<sp/>sampling<sp/>mode.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga46df3d7bde70ea30bfd0ff19d214cefd" kindref="member">nrf_pdm_mode_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref><sp/>pdm_mode,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref><sp/>pdm_edge);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>PDM<sp/>operation<sp/>mode.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pdm_mode<sp/>PDM<sp/>operation<sp/>mode.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pdm_edge<sp/>PDM<sp/>sampling<sp/>mode.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gafded470ca8489a1c117ec70fd859e09a" kindref="member">nrf_pdm_mode_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_pdm_mode,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_pdm_edge);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>PDM<sp/>clock<sp/>frequency.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pdm_freq<sp/>PDM<sp/>clock<sp/>frequency.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gab571afca8dc52370df56a27daa0c6c84" kindref="member">nrf_pdm_clock_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref><sp/>pdm_freq);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>PDM<sp/>clock<sp/>frequency.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@return<sp/>PDM<sp/>clock<sp/>frequency.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref><sp/><ref refid="group__nrf__pdm__hal_1ga972c21836ef6d94098f7b9add19616c9" kindref="member">nrf_pdm_clock_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>PDM<sp/>pins.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>psel_clk<sp/>CLK<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>psel_din<sp/>DIN<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga6f9d46c104f75b4be3d0f054a4a44aca" kindref="member">nrf_pdm_psel_connect</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>psel_clk,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>psel_din);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>CLK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@return<sp/>CLK<sp/>pin<sp/>selection;</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga331f6bce46d78ab4c858ff6b9c440248" kindref="member">nrf_pdm_clk_pin_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>DIN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@return<sp/>DIN<sp/>pin<sp/>selection;</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga2ef58dd5d2d8ed1d23e32391aed0cc1b" kindref="member">nrf_pdm_din_pin_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disconnecting<sp/>the<sp/>PDM<sp/>pins.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga5afa96d2c1c7adb19bd8c2c49051a535" kindref="member">nrf_pdm_psel_disconnect</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>PDM<sp/>gain.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>gain_l<sp/>Left<sp/>channel<sp/>gain.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>gain_r<sp/>Right<sp/>channel<sp/>gain.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga5972d0587ee12dae9d7d2601b6a9352e" kindref="member">nrf_pdm_gain_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>gain_l,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>gain_r);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>PDM<sp/>gain.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_gain_l<sp/>Left<sp/>channel<sp/>gain.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_gain_r<sp/>Right<sp/>channel<sp/>gain.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga97217da60d8f7be0826237320c1a11fe" kindref="member">nrf_pdm_gain_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_gain_l,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_gain_r);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="424"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>PDM<sp/>sample<sp/>buffer.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>The<sp/>amount<sp/>of<sp/>allocated<sp/>RAM<sp/>depends<sp/>on<sp/>the<sp/>operation<sp/>mode.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>-<sp/>For<sp/>stereo<sp/>mode:<sp/>N<sp/>32-bit<sp/>words.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>-<sp/>For<sp/>mono<sp/>mode:<sp/>Ceil(N/2)<sp/>32-bit<sp/>words.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>RAM<sp/>address<sp/>where<sp/>samples<sp/>are<sp/>to<sp/>be<sp/>written<sp/>with<sp/>EasyDMA.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>num<sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>samples<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>in<sp/>EasyDMA<sp/>mode.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gabaf334bcac9fc1dfc74c4b363a73ea65" kindref="member">nrf_pdm_buffer_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>*<sp/>p_buffer,<sp/>uint32_t<sp/>num);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>current<sp/>PDM<sp/>sample<sp/>buffer<sp/>address.</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>sample<sp/>buffer.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__pdm__hal_1ga827366e0010c6d97f2999f05545837dd" kindref="member">nrf_pdm_buffer_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_RATIO_CONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>ratio<sp/>between<sp/>PDM_CLK<sp/>and<sp/>output<sp/>sample<sp/>rate.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ratio<sp/>Ratio<sp/>between<sp/>PDM_CLK<sp/>and<sp/>output<sp/>sample<sp/>rate.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gab68b48a26e8dad9f5a832f72f9838a30" kindref="member">nrf_pdm_ratio_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gaa440ffa5a57cc209736e6d66ff1b9088" kindref="member">nrf_pdm_ratio_t</ref><sp/>ratio);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_MCLKCONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>PDM<sp/>master<sp/>clock<sp/>source.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mclksrc<sp/>Master<sp/>Clock<sp/>source<sp/>selection.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gaa0900e673cec609d9e859f5b9588972d" kindref="member">nrf_pdm_mclksrc_configure</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga2de024db84f169477a537aef3f1a0a92" kindref="member">nrf_pdm_mclksrc_t</ref><sp/>mclksrc);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gaa20eeff5e9ce2633d33850c7880746ce" kindref="member">nrf_pdm_task_trigger</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1gad68d6c8d5185c9bda1b5d3f2d4b6f7df" kindref="member">nrf_pdm_task_address_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gafede3329a79865da467ddf1a2dccb9dd" kindref="member">nrf_pdm_event_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga18fbcbf09943bebb076d7392e723e717" kindref="member">nrf_pdm_event_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga2f9b6599215604e62fd93c8eac08b076" kindref="member">nrf_pdm_event_address_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga64441adea754e237e275b82d5651f2a1" kindref="member">nrf_pdm_int_enable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga7df3ab546e429882e0f34ae9117f1909" kindref="member">nrf_pdm_int_enable_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga778a47046ee0b7bb71be2f8f80a4db97" kindref="member">nrf_pdm_int_disable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga0c41c54ed3e08ad68c31729fc7ece694" kindref="member">nrf_pdm_subscribe_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga89efa8e6085257047287d92a9b742c5f" kindref="member">nrf_pdm_subscribe_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6848dcee43c9bb51bf52965d7ec07609" kindref="member">nrf_pdm_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gae1cf72b720c53c87f46b5024b5f952ea" kindref="member">nrf_pdm_publish_set</ref>(NRF_PDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga33b6ba79f528c33efb31140d3e007906" kindref="member">nrf_pdm_publish_clear</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gabd47039f89fd8698f53f31dbf8e7d1e4" kindref="member">nrf_pdm_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gac707149ccdaaf098b93fb99d40b46f85" kindref="member">nrf_pdm_enable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(PDM_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>PDM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga7bdfd17fa37b4b3b73e55d8af56dc30b" kindref="member">nrf_pdm_disable</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(PDM_ENABLE_ENABLE_Disabled<sp/>&lt;&lt;<sp/>PDM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga3032c46804835e95b644307c7c5504f4" kindref="member">nrf_pdm_enable_check</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;ENABLE<sp/>==<sp/>(PDM_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>PDM_ENABLE_ENABLE_Pos));</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga46df3d7bde70ea30bfd0ff19d214cefd" kindref="member">nrf_pdm_mode_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref><sp/>pdm_mode,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref><sp/>pdm_edge)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MODE<sp/>=<sp/>((pdm_mode<sp/>&lt;&lt;<sp/>PDM_MODE_OPERATION_Pos)<sp/>&amp;<sp/>PDM_MODE_OPERATION_Msk)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((pdm_edge<sp/>&lt;&lt;<sp/>PDM_MODE_EDGE_Pos)<sp/>&amp;<sp/>PDM_MODE_EDGE_Msk);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gafded470ca8489a1c117ec70fd859e09a" kindref="member">nrf_pdm_mode_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_pdm_mode,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_pdm_edge)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mode<sp/>=<sp/>p_reg-&gt;MODE;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_pdm_mode<sp/>=<sp/>(<ref refid="group__nrf__pdm__hal_1gadc5bd87887dfb140a868d6ba14df0a42" kindref="member">nrf_pdm_mode_t</ref>)((mode<sp/>&amp;<sp/>PDM_MODE_OPERATION_Msk<sp/>)<sp/>&gt;&gt;<sp/>PDM_MODE_OPERATION_Pos);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_pdm_edge<sp/>=<sp/>(<ref refid="group__nrf__pdm__hal_1gacf1325c08d54c6953c2446dacf835217" kindref="member">nrf_pdm_edge_t</ref>)((mode<sp/>&amp;<sp/>PDM_MODE_EDGE_Msk<sp/>)<sp/>&gt;&gt;<sp/>PDM_MODE_EDGE_Pos);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gab571afca8dc52370df56a27daa0c6c84" kindref="member">nrf_pdm_clock_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref><sp/>pdm_freq)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PDMCLKCTRL<sp/>=<sp/>((pdm_freq<sp/>&lt;&lt;<sp/>PDM_PDMCLKCTRL_FREQ_Pos)<sp/>&amp;<sp/>PDM_PDMCLKCTRL_FREQ_Msk);</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref><sp/><ref refid="group__nrf__pdm__hal_1ga972c21836ef6d94098f7b9add19616c9" kindref="member">nrf_pdm_clock_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__pdm__hal_1ga6703930305da65cc2f258ad1f68f863d" kindref="member">nrf_pdm_freq_t</ref>)<sp/>((p_reg-&gt;PDMCLKCTRL<sp/>&lt;&lt;<sp/>PDM_PDMCLKCTRL_FREQ_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PDM_PDMCLKCTRL_FREQ_Msk);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga6f9d46c104f75b4be3d0f054a4a44aca" kindref="member">nrf_pdm_psel_connect</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>psel_clk,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>psel_din)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.CLK<sp/>=<sp/>psel_clk;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.DIN<sp/>=<sp/>psel_din;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga331f6bce46d78ab4c858ff6b9c440248" kindref="member">nrf_pdm_clk_pin_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.CLK;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__pdm__hal_1ga2ef58dd5d2d8ed1d23e32391aed0cc1b" kindref="member">nrf_pdm_din_pin_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.DIN;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga5afa96d2c1c7adb19bd8c2c49051a535" kindref="member">nrf_pdm_psel_disconnect</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.CLK<sp/>=<sp/>((PDM_PSEL_CLK_CONNECT_Disconnected<sp/>&lt;&lt;<sp/>PDM_PSEL_CLK_CONNECT_Pos)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>PDM_PSEL_CLK_CONNECT_Msk);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.DIN<sp/>=<sp/>((PDM_PSEL_DIN_CONNECT_Disconnected<sp/>&lt;&lt;<sp/>PDM_PSEL_DIN_CONNECT_Pos)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>PDM_PSEL_DIN_CONNECT_Msk);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga5972d0587ee12dae9d7d2601b6a9352e" kindref="member">nrf_pdm_gain_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>gain_l,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>gain_r)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;GAINL<sp/>=<sp/>gain_l;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;GAINR<sp/>=<sp/>gain_r;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1ga97217da60d8f7be0826237320c1a11fe" kindref="member">nrf_pdm_gain_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_gain_l,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_gain_r)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_gain_l<sp/>=<sp/>(<ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref>)p_reg-&gt;GAINL;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>*p_gain_r<sp/>=<sp/>(<ref refid="group__nrf__pdm__hal_1ga6471d331b5f11a8a1df6c563713f5710" kindref="member">nrf_pdm_gain_t</ref>)p_reg-&gt;GAINR;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gabaf334bcac9fc1dfc74c4b363a73ea65" kindref="member">nrf_pdm_buffer_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>*<sp/>p_buffer,<sp/>uint32_t<sp/>num)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.MAXCNT<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SAMPLE.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SAMPLE.MAXCNT<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__pdm__hal_1ga827366e0010c6d97f2999f05545837dd" kindref="member">nrf_pdm_buffer_get</ref>(NRF_PDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)p_reg-&gt;DMA.PTR;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)p_reg-&gt;SAMPLE.PTR;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_RATIO_CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gab68b48a26e8dad9f5a832f72f9838a30" kindref="member">nrf_pdm_ratio_set</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1gaa440ffa5a57cc209736e6d66ff1b9088" kindref="member">nrf_pdm_ratio_t</ref><sp/>ratio)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RATIO<sp/>=<sp/>ratio;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_PDM_HAS_MCLKCONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__pdm__hal_1gaa0900e673cec609d9e859f5b9588972d" kindref="member">nrf_pdm_mclksrc_configure</ref>(NRF_PDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__pdm__hal_1ga2de024db84f169477a537aef3f1a0a92" kindref="member">nrf_pdm_mclksrc_t</ref><sp/>mclksrc)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MCLKCONFIG<sp/>=<sp/>mclksrc;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="657"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_PDM_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_pdm.h"/>
  </compounddef>
</doxygen>
