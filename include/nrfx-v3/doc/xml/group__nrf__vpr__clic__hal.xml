<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__vpr__clic__hal" kind="group">
    <compoundname>nrf_vpr_clic_hal</compoundname>
    <title>VPR CLIC HAL</title>
    <innerclass refid="structnrf__vpr__clic__config__t" prot="public">nrf_vpr_clic_config_t</innerclass>
    <innerclass refid="structnrf__vpr__clic__info__t" prot="public">nrf_vpr_clic_info_t</innerclass>
    <innerclass refid="structnrf__vpr__clic__attr__t" prot="public">nrf_vpr_clic_attr_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__vpr__clic__hal_1gae20ee55e8880c41e1d55ddaf8e92ed0d" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_clic_mode_t</name>
        <enumvalue id="group__nrf__vpr__clic__hal_1ggae20ee55e8880c41e1d55ddaf8e92ed0da59efb2774f3c5de1ead41e270aaa751c" prot="public">
          <name>NRF_VPR_CLIC_MODE_M</name>
          <initializer>= CLIC_CLIC_CLICCFG_NMBITS_ModeM</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All interrupts are M-mode only. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt privilege modes available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="54" column="1" bodyfile="hal/nrf_vpr_clic.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__clic__hal_1ga5739d2853a003877de03fd8bac7c8a91" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_clic_priority_t</name>
        <enumvalue id="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91a6c9f40b0a64d881aa586209962269dd4" prot="public">
          <name>NRF_VPR_CLIC_PRIORITY_LEVEL0</name>
          <initializer>= CLIC_CLIC_CLICINT_PRIORITY_PRIOLEVEL0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority level 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91ab4bb519ec34c120486381850cf57c674" prot="public">
          <name>NRF_VPR_CLIC_PRIORITY_LEVEL1</name>
          <initializer>= CLIC_CLIC_CLICINT_PRIORITY_PRIOLEVEL1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority level 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91a4626dc51445a02324a06881d3981bfb6" prot="public">
          <name>NRF_VPR_CLIC_PRIORITY_LEVEL2</name>
          <initializer>= CLIC_CLIC_CLICINT_PRIORITY_PRIOLEVEL2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority level 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91ab3ce148c0b7b219643fd5abb625d9ad8" prot="public">
          <name>NRF_VPR_CLIC_PRIORITY_LEVEL3</name>
          <initializer>= CLIC_CLIC_CLICINT_PRIORITY_PRIOLEVEL3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Priority level 3. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt priority level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="60" column="1" bodyfile="hal/nrf_vpr_clic.h" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__clic__hal_1ga11d0573c9e01b97821f576e8964b8b8d" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_clic_trigger_t</name>
        <enumvalue id="group__nrf__vpr__clic__hal_1gga11d0573c9e01b97821f576e8964b8b8da015541c160f29fa4b7ce49716dfa4321" prot="public">
          <name>NRF_VPR_CLIC_TRIGGER_EDGE_POS</name>
          <initializer>= CLIC_CLIC_CLICINT_TRIG_EdgeTriggered</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupts are positive edge-triggered. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt trigger and polarity types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="91" column="1" bodyfile="hal/nrf_vpr_clic.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__clic__hal_1gac883d5344573e44a7a8d301d57012da3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_clic_priv_t</name>
        <enumvalue id="group__nrf__vpr__clic__hal_1ggac883d5344573e44a7a8d301d57012da3a19fd80adacdfd5729769bbcadd0a4997" prot="public">
          <name>NRF_VPR_CLIC_PRIV_MACHINE</name>
          <initializer>= CLIC_CLIC_CLICINT_MODE_MachineMode</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Machine mode. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt privilege. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="97" column="1" bodyfile="hal/nrf_vpr_clic.h" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga80984aefc2a3002efac4f6ef72b5e45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_config_get</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, nrf_vpr_clic_config_t *p_config)</argsstring>
        <name>nrf_vpr_clic_config_get</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vpr__clic__config__t" kindref="compound">nrf_vpr_clic_config_t</ref> *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLIC configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the VPR CLIC configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="213" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="213" bodyend="223" declfile="hal/nrf_vpr_clic.h" declline="116" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1gaa8d9fd2c057335b2bbd81a3595b8630c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_info_get</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, nrf_vpr_clic_info_t *p_info)</argsstring>
        <name>nrf_vpr_clic_info_get</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vpr__clic__info__t" kindref="compound">nrf_vpr_clic_info_t</ref> *</type>
          <declname>p_info</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLIC information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the VPR CLIC information structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="225" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="225" bodyend="237" declfile="hal/nrf_vpr_clic.h" declline="125" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1gae77613b4e83d3cd8b185820938e737ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_int_pending_set</definition>
        <argsstring>(NRF_CLIC_Type *p_reg, uint32_t irq_num)</argsstring>
        <name>nrf_vpr_clic_int_pending_set</name>
        <param>
          <type>NRF_CLIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified interrupt to be pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt to be triggered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="239" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="239" bodyend="244" declfile="hal/nrf_vpr_clic.h" declline="134" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga25d2043cf2777484b821c925b9601bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_int_pending_clear</definition>
        <argsstring>(NRF_CLIC_Type *p_reg, uint32_t irq_num)</argsstring>
        <name>nrf_vpr_clic_int_pending_clear</name>
        <param>
          <type>NRF_CLIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <briefdescription>
<para>Function for clearing the pending status for the specified interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="246" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="246" bodyend="251" declfile="hal/nrf_vpr_clic.h" declline="142" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga385059927a59cff795c4147ed1fca8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_clic_int_pending_check</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, uint32_t irq_num)</argsstring>
        <name>nrf_vpr_clic_int_pending_check</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupt is pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt is pending. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt is not pending. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="253" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="253" bodyend="260" declfile="hal/nrf_vpr_clic.h" declline="153" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga5ab8aa74d64cd0b2e541affec926ad73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_int_enable_set</definition>
        <argsstring>(NRF_CLIC_Type *p_reg, uint32_t irq_num, bool enable)</argsstring>
        <name>nrf_vpr_clic_int_enable_set</name>
        <param>
          <type>NRF_CLIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the specified interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt to be enabled or disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupt is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="262" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="262" bodyend="271" declfile="hal/nrf_vpr_clic.h" declline="162" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga5462d721d4825f79bd4a4a50940986f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_clic_int_enable_check</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, uint32_t irq_num)</argsstring>
        <name>nrf_vpr_clic_int_enable_check</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupt is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="273" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="273" bodyend="279" declfile="hal/nrf_vpr_clic.h" declline="175" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga571e1a361883349c4a339a709653bd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_int_priority_set</definition>
        <argsstring>(NRF_CLIC_Type *p_reg, uint32_t irq_num, nrf_vpr_clic_priority_t priority)</argsstring>
        <name>nrf_vpr_clic_int_priority_set</name>
        <param>
          <type>NRF_CLIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__clic__hal_1ga5739d2853a003877de03fd8bac7c8a91" kindref="member">nrf_vpr_clic_priority_t</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Function for setting the priority of the specified interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="281" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="281" bodyend="290" declfile="hal/nrf_vpr_clic.h" declline="184" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga0f1f330ed3962bb7d9f9dab00ff9674b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__clic__hal_1ga5739d2853a003877de03fd8bac7c8a91" kindref="member">nrf_vpr_clic_priority_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_clic_priority_t nrf_vpr_clic_int_priority_get</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, uint32_t irq_num)</argsstring>
        <name>nrf_vpr_clic_int_priority_get</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <briefdescription>
<para>Function for getting the priority of the specified interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Priority of the specified interrupt. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="293" column="25" bodyfile="hal/nrf_vpr_clic.h" bodystart="293" bodyend="300" declfile="hal/nrf_vpr_clic.h" declline="197" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__clic__hal_1ga9b689222911bdbe13a8bb19578313d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_clic_int_attr_get</definition>
        <argsstring>(NRF_CLIC_Type const *p_reg, uint32_t irq_num, nrf_vpr_clic_attr_t *p_attr)</argsstring>
        <name>nrf_vpr_clic_int_attr_get</name>
        <param>
          <type>NRF_CLIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_num</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vpr__clic__attr__t" kindref="compound">nrf_vpr_clic_attr_t</ref> *</type>
          <declname>p_attr</declname>
        </param>
        <briefdescription>
<para>Function for getting the CLIC attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of interrupt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with VPR CLIC attributes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="302" column="24" bodyfile="hal/nrf_vpr_clic.h" bodystart="302" bodyend="315" declfile="hal/nrf_vpr_clic.h" declline="207" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__vpr__clic__hal_1gab19e2008b4635ed5071e3fc452b6d0a7" prot="public" static="no">
        <name>NRF_VPR_CLIC_IRQ_COUNT</name>
        <initializer>CLIC_CLIC_CLICINT_MaxCount</initializer>
        <briefdescription>
<para>Interrupts count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="51" column="9" bodyfile="hal/nrf_vpr_clic.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__clic__hal_1gaaaacb184c7568418c6bb877512d94546" prot="public" static="no">
        <name>NRF_VPR_CLIC_INT_TO_PRIO</name>
        <param><defname>x</defname></param>
        <initializer>                                    ((x) == 0 ? <ref refid="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91a6c9f40b0a64d881aa586209962269dd4" kindref="member">NRF_VPR_CLIC_PRIORITY_LEVEL0</ref> : \
                                    ((x) == 1 ? <ref refid="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91ab4bb519ec34c120486381850cf57c674" kindref="member">NRF_VPR_CLIC_PRIORITY_LEVEL1</ref> : \
                                    ((x) == 2 ? <ref refid="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91a4626dc51445a02324a06881d3981bfb6" kindref="member">NRF_VPR_CLIC_PRIORITY_LEVEL2</ref> : \
                                    ((x) == 3 ? <ref refid="group__nrf__vpr__clic__hal_1gga5739d2853a003877de03fd8bac7c8a91ab3ce148c0b7b219643fd5abb625d9ad8" kindref="member">NRF_VPR_CLIC_PRIORITY_LEVEL3</ref> : 0))))</initializer>
        <briefdescription>
<para>Macro for converting integer priority level to <ref refid="group__nrf__vpr__clic__hal_1ga5739d2853a003877de03fd8bac7c8a91" kindref="member">nrf_vpr_clic_priority_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_clic.h" line="69" column="9" bodyfile="hal/nrf_vpr_clic.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the VPR RISC-V CPU Interrupt Controller (VPR CLIC). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
