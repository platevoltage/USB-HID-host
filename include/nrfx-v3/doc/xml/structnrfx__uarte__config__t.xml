<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structnrfx__uarte__config__t" kind="struct" language="C++" prot="public">
    <compoundname>nrfx_uarte_config_t</compoundname>
    <includes local="no">nrfx_uarte.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1acaf52661a99cf6313134f3b1e6b16683" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_uarte_config_t::txd_pin</definition>
        <argsstring></argsstring>
        <name>txd_pin</name>
        <qualifiedname>nrfx_uarte_config_t::txd_pin</qualifiedname>
        <briefdescription>
<para>TXD pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="217" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a4b5f4809314d4167e4c55978af7ddcb3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_uarte_config_t::rxd_pin</definition>
        <argsstring></argsstring>
        <name>rxd_pin</name>
        <qualifiedname>nrfx_uarte_config_t::rxd_pin</qualifiedname>
        <briefdescription>
<para>RXD pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="218" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a10e452a70d34e99d5b06d487d1901db6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_uarte_config_t::rts_pin</definition>
        <argsstring></argsstring>
        <name>rts_pin</name>
        <qualifiedname>nrfx_uarte_config_t::rts_pin</qualifiedname>
        <briefdescription>
<para>RTS pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="219" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a8bb8b84a3bf3c0d666257532f65ba165" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_uarte_config_t::cts_pin</definition>
        <argsstring></argsstring>
        <name>cts_pin</name>
        <qualifiedname>nrfx_uarte_config_t::cts_pin</qualifiedname>
        <briefdescription>
<para>CTS pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="220" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a5343d6c5c47d562b367043a43cfdf43b" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* nrfx_uarte_config_t::p_context</definition>
        <argsstring></argsstring>
        <name>p_context</name>
        <qualifiedname>nrfx_uarte_config_t::p_context</qualifiedname>
        <briefdescription>
<para>Context passed to interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="221" column="28" bodyfile="drivers/include/nrfx_uarte.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a77dfe884044396ad3751e700bc5d87b8" prot="public" static="no" mutable="no">
        <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref></type>
        <definition>nrfy_uarte_buffer_t nrfx_uarte_config_t::tx_cache</definition>
        <argsstring></argsstring>
        <name>tx_cache</name>
        <qualifiedname>nrfx_uarte_config_t::tx_cache</qualifiedname>
        <briefdescription>
<para>TX cache buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="222" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1ab729157b52c332baaabe4b3fdabe9b44" prot="public" static="no" mutable="no">
        <type><ref refid="structnrfy__uarte__buffer__t" kindref="compound">nrfy_uarte_buffer_t</ref></type>
        <definition>nrfy_uarte_buffer_t nrfx_uarte_config_t::rx_cache</definition>
        <argsstring></argsstring>
        <name>rx_cache</name>
        <qualifiedname>nrfx_uarte_config_t::rx_cache</qualifiedname>
        <briefdescription>
<para>RX cache buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>A buffer to store flushed RX data. The buffer is also used when the input RX buffer is from an address space that cannot be handled by the DMA. A buffer size must be at least 5 bytes which is the size of the HW FIFO, and should be bigger if expected to be used as cache when an input RX buffer cannot be used for the DMA. If not provided, then bytes left in the FIFO after a receiver is disabled will be discarded, and reception will not be performed if the input RX buffer cannot be used by the DMA. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="223" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1afd19fef185269f42abd67b740b13e800" prot="public" static="no" mutable="no">
        <type><ref refid="structnrfx__uarte__rx__cache__t" kindref="compound">nrfx_uarte_rx_cache_t</ref> *</type>
        <definition>nrfx_uarte_rx_cache_t* nrfx_uarte_config_t::p_rx_cache_scratch</definition>
        <argsstring></argsstring>
        <name>p_rx_cache_scratch</name>
        <qualifiedname>nrfx_uarte_config_t::p_rx_cache_scratch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static RAM memory area used for receiving data through RX cache buffer. Can be NULL if RX caching is not used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="235" column="28" bodyfile="drivers/include/nrfx_uarte.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a63c27058290737e899870cad8cc3fb48" prot="public" static="no" mutable="no">
        <type><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref></type>
        <definition>nrf_uarte_baudrate_t nrfx_uarte_config_t::baudrate</definition>
        <argsstring></argsstring>
        <name>baudrate</name>
        <qualifiedname>nrfx_uarte_config_t::baudrate</qualifiedname>
        <briefdescription>
<para>Baud rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="238" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a1f4d075918cacbb5f56527675c7a1538" prot="public" static="no" mutable="no">
        <type><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref></type>
        <definition>nrf_uarte_config_t nrfx_uarte_config_t::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <qualifiedname>nrfx_uarte_config_t::config</qualifiedname>
        <briefdescription>
<para>Peripheral configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="239" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1aa2fa236b3e2df3bbce4eaf929eb0fdb1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_uarte_config_t::skip_psel_cfg</definition>
        <argsstring></argsstring>
        <name>skip_psel_cfg</name>
        <qualifiedname>nrfx_uarte_config_t::skip_psel_cfg</qualifiedname>
        <briefdescription>
<para>Skip pin selection configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to true, the driver does not modify pin select registers in the peripheral. Those registers are supposed to be set up externally before the driver is initialized. <simplesect kind="note"><para>When both GPIO configuration and pin selection are to be skipped, the structure fields that specify pins can be omitted, as they are ignored anyway. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="240" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a2490d193352d69a34412f16a39b0ab9f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_uarte_config_t::skip_gpio_cfg</definition>
        <argsstring></argsstring>
        <name>skip_gpio_cfg</name>
        <qualifiedname>nrfx_uarte_config_t::skip_gpio_cfg</qualifiedname>
        <briefdescription>
<para>Skip GPIO configuration of pins. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to true, the driver does not modify any GPIO parameters of the used pins. Those parameters are supposed to be configured externally before the driver is initialized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="249" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1abfaf2c41612a912620f5736f3f72ae30" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_uarte_config_t::tx_stop_on_end</definition>
        <argsstring></argsstring>
        <name>tx_stop_on_end</name>
        <qualifiedname>nrfx_uarte_config_t::tx_stop_on_end</qualifiedname>
        <briefdescription>
<para>Indicates that the STOPTX task is PPIed with ENDTX event. </para>
        </briefdescription>
        <detaileddescription>
<para>If SHORT exists, then it will be used by the driver, otherwise (D)PPI connection must be setup by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="254" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__uarte__config__t_1a5d5a3effde79033c520b67b2ad476e87" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrfx_uarte_config_t::interrupt_priority</definition>
        <argsstring></argsstring>
        <name>interrupt_priority</name>
        <qualifiedname>nrfx_uarte_config_t::interrupt_priority</qualifiedname>
        <briefdescription>
<para>Interrupt priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_uarte.h" line="257" column="29" bodyfile="drivers/include/nrfx_uarte.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure for the UARTE configuration. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>nrf_uarte_config_t</label>
        <link refid="structnrf__uarte__config__t"/>
      </node>
      <node id="1">
        <label>nrfx_uarte_config_t</label>
        <link refid="structnrfx__uarte__config__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>rx_cache</edgelabel>
          <edgelabel>tx_cache</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>p_rx_cache_scratch</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>config</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nrfx_uarte_rx_cache_t</label>
        <link refid="structnrfx__uarte__rx__cache__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cache</edgelabel>
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nrfy_uarte_buffer_t</label>
        <link refid="structnrfy__uarte__buffer__t"/>
      </node>
    </collaborationgraph>
    <location file="drivers/include/nrfx_uarte.h" line="215" column="1" bodyfile="drivers/include/nrfx_uarte.h" bodystart="216" bodyend="258"/>
    <listofallmembers>
      <member refid="structnrfx__uarte__config__t_1a63c27058290737e899870cad8cc3fb48" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>baudrate</name></member>
      <member refid="structnrfx__uarte__config__t_1a1f4d075918cacbb5f56527675c7a1538" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>config</name></member>
      <member refid="structnrfx__uarte__config__t_1a8bb8b84a3bf3c0d666257532f65ba165" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>cts_pin</name></member>
      <member refid="structnrfx__uarte__config__t_1a5d5a3effde79033c520b67b2ad476e87" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>interrupt_priority</name></member>
      <member refid="structnrfx__uarte__config__t_1a5343d6c5c47d562b367043a43cfdf43b" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>p_context</name></member>
      <member refid="structnrfx__uarte__config__t_1afd19fef185269f42abd67b740b13e800" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>p_rx_cache_scratch</name></member>
      <member refid="structnrfx__uarte__config__t_1a10e452a70d34e99d5b06d487d1901db6" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>rts_pin</name></member>
      <member refid="structnrfx__uarte__config__t_1ab729157b52c332baaabe4b3fdabe9b44" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>rx_cache</name></member>
      <member refid="structnrfx__uarte__config__t_1a4b5f4809314d4167e4c55978af7ddcb3" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>rxd_pin</name></member>
      <member refid="structnrfx__uarte__config__t_1a2490d193352d69a34412f16a39b0ab9f" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>skip_gpio_cfg</name></member>
      <member refid="structnrfx__uarte__config__t_1aa2fa236b3e2df3bbce4eaf929eb0fdb1" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>skip_psel_cfg</name></member>
      <member refid="structnrfx__uarte__config__t_1a77dfe884044396ad3751e700bc5d87b8" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>tx_cache</name></member>
      <member refid="structnrfx__uarte__config__t_1abfaf2c41612a912620f5736f3f72ae30" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>tx_stop_on_end</name></member>
      <member refid="structnrfx__uarte__config__t_1acaf52661a99cf6313134f3b1e6b16683" prot="public" virt="non-virtual"><scope>nrfx_uarte_config_t</scope><name>txd_pin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
