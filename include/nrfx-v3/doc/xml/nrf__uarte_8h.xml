<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__uarte_8h" kind="file" language="C++">
    <compoundname>nrf_uarte.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__uarte_8h" local="no">haly/nrfy_uarte.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_uarte.h</label>
        <link refid="nrf__uarte_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrf__uarte__config__t" prot="public">nrf_uarte_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="nrf__uarte_8h_1a1540f6dbcd7b14eb1ec537f005fc835b" prot="public" static="no">
        <name>NRF_UARTE_PSEL_DISCONNECTED</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="51" column="9" bodyfile="hal/nrf_uarte.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga163aa58099af5af3b8ee35c3155a34f0" prot="public" static="no">
        <name>NRF_UARTE_INST_GET</name>
        <param><defname>idx</defname></param>
        <initializer><ref refid="group__nrfx__utils_1ga5ea61d0994f6fb1ab5ed59d44f6a7ce9" kindref="member">NRFX_CONCAT</ref>(NRF_, UARTE, idx)</initializer>
        <briefdescription>
<para>Macro getting pointer to the structure of registers of the UARTE peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>UARTE instance index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the structure of registers of the UARTE peripheral. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="67" column="9" bodyfile="hal/nrf_uarte.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga8c6fb673c718d483cfd092b2876e4e3a" prot="public" static="no">
        <name>NRF_UARTE_HAS_DMA_REG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether dedicated DMA register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="71" column="9" bodyfile="hal/nrf_uarte.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga076e06cca1beb456e2f3aeef25078be8" prot="public" static="no">
        <name>NRF_UARTE_HAS_DMA_TASKS_EVENTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether UARTE DMA tasks and events are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="79" column="9" bodyfile="hal/nrf_uarte.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga9b1018ce818e2f7a1400ca0e43b0cf2a" prot="public" static="no">
        <name>NRF_UARTE_HAS_DMA_SHORTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether UARTE DMA shortcuts are present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="86" column="9" bodyfile="hal/nrf_uarte.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga5a41ceea56437a8d61dfd70a6f0f6a6f" prot="public" static="no">
        <name>NRF_UARTE_HAS_ENDTX_STOPTX_SHORT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether UARTE ENDTX_STOPTX shortcut is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="94" column="9" bodyfile="hal/nrf_uarte.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1gad1d66a544d55b791e4a9c7cb26186144" prot="public" static="no">
        <name>NRF_UARTE_BASE_FREQUENCY_128MHZ</name>
        <initializer>(<ref refid="group__nrfx__common_1ga30e3c68cc0831c3bd64574a0a64439cc" kindref="member">NRFX_MHZ_TO_HZ</ref>(128UL))</initializer>
        <briefdescription>
<para>Base frequency value 128 MHz for UARTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="100" column="9" bodyfile="hal/nrf_uarte.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1gabf5b1cb781ef23c14045cab6c9357db4" prot="public" static="no">
        <name>NRF_UARTE_BASE_FREQUENCY_64MHZ</name>
        <initializer>(<ref refid="group__nrfx__common_1ga30e3c68cc0831c3bd64574a0a64439cc" kindref="member">NRFX_MHZ_TO_HZ</ref>(64UL))</initializer>
        <briefdescription>
<para>Base frequency value 64 MHz for UARTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="102" column="9" bodyfile="hal/nrf_uarte.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1gac4d1b4891d0eddf0341d513217d6d0db" prot="public" static="no">
        <name>NRF_UARTE_BASE_FREQUENCY_16MHZ</name>
        <initializer>(<ref refid="group__nrfx__common_1ga30e3c68cc0831c3bd64574a0a64439cc" kindref="member">NRFX_MHZ_TO_HZ</ref>(16UL))</initializer>
        <briefdescription>
<para>Base frequency value 16 MHz for UARTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="104" column="9" bodyfile="hal/nrf_uarte.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1ga68e72cc37ed15adfd86c09f040259217" prot="public" static="no">
        <name>NRF_UARTE_IS_128MHZ_UARTE</name>
        <param><defname>p_reg</defname></param>
        <initializer>    (<ref refid="group__nrfx__utils_1ga3759226de0d998545425ded334168058" kindref="member">NRFX_COND_CODE_1</ref>(<ref refid="group__nrfx__utils_1ga238278032464c932dc46946bedd44473" kindref="member">NRFX_IS_ENABLED</ref>(NRF_CPU_FREQ_IS_128MHZ),                               \
        (<ref refid="group__nrfx__utils_1ga3759226de0d998545425ded334168058" kindref="member">NRFX_COND_CODE_1</ref>(<ref refid="group__nrfx__common_1ga9cc7f9da377228c1f0b191bd660577af" kindref="member">NRFX_INSTANCE_PRESENT</ref>(UARTE00), (p_reg == NRF_UARTE00), (false))), \
        (false)))</initializer>
        <briefdescription>
<para>Macro for checking whether the base frequency for the specified UARTE is 128 MHz. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="108" column="9" bodyfile="hal/nrf_uarte.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1gab7ed47dc391119f4368f54a15ee15300" prot="public" static="no">
        <name>NRF_UARTE_IS_64MHZ_UARTE</name>
        <param><defname>p_reg</defname></param>
        <initializer>    (<ref refid="group__nrfx__utils_1ga3759226de0d998545425ded334168058" kindref="member">NRFX_COND_CODE_1</ref>(<ref refid="group__nrfx__utils_1ga238278032464c932dc46946bedd44473" kindref="member">NRFX_IS_ENABLED</ref>(NRF_CPU_FREQ_IS_64MHZ),                                \
        (<ref refid="group__nrfx__utils_1ga3759226de0d998545425ded334168058" kindref="member">NRFX_COND_CODE_1</ref>(<ref refid="group__nrfx__common_1ga9cc7f9da377228c1f0b191bd660577af" kindref="member">NRFX_INSTANCE_PRESENT</ref>(UARTE00), (p_reg == NRF_UARTE00), (false))), \
        (false)))</initializer>
        <briefdescription>
<para>Macro for checking whether the base frequency for the specified UARTE is 64 MHz. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="116" column="9" bodyfile="hal/nrf_uarte.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__uarte__hal_1gaa420fce556af9f1f14701f5c4dd3729a" prot="public" static="no">
        <name>NRF_UARTE_BASE_FREQUENCY_GET</name>
        <param><defname>p_reg</defname></param>
        <initializer>    ((<ref refid="group__nrf__uarte__hal_1ga68e72cc37ed15adfd86c09f040259217" kindref="member">NRF_UARTE_IS_128MHZ_UARTE</ref>(p_reg)) ? (<ref refid="group__nrf__uarte__hal_1gad1d66a544d55b791e4a9c7cb26186144" kindref="member">NRF_UARTE_BASE_FREQUENCY_128MHZ</ref>): \
    ((<ref refid="group__nrf__uarte__hal_1gab7ed47dc391119f4368f54a15ee15300" kindref="member">NRF_UARTE_IS_64MHZ_UARTE</ref>(p_reg))  ? (<ref refid="group__nrf__uarte__hal_1gabf5b1cb781ef23c14045cab6c9357db4" kindref="member">NRF_UARTE_BASE_FREQUENCY_64MHZ</ref>) : \
    (<ref refid="group__nrf__uarte__hal_1gac4d1b4891d0eddf0341d513217d6d0db" kindref="member">NRF_UARTE_BASE_FREQUENCY_16MHZ</ref>)))</initializer>
        <briefdescription>
<para>Macro for getting base frequency value in Hz for the specified UARTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="127" column="9" bodyfile="hal/nrf_uarte.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_task_t</name>
        <enumvalue id="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12abd99d435a65192d48802b693b9acab6b" prot="public">
          <name>NRF_UARTE_TASK_STARTRX</name>
          <initializer>= offsetof(NRF_UARTE_Type, TASKS_DMA.RX.START)</initializer>
          <briefdescription>
<para>Start UART receiver. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a0bc486fb0751337a49fa3b4570279afc" prot="public">
          <name>NRF_UARTE_TASK_STOPRX</name>
          <initializer>= offsetof(NRF_UARTE_Type, TASKS_DMA.RX.STOP)</initializer>
          <briefdescription>
<para>Stop UART receiver. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12af3a09172b5dff04de632997f0f7d5a73" prot="public">
          <name>NRF_UARTE_TASK_STARTTX</name>
          <initializer>= offsetof(NRF_UARTE_Type, TASKS_DMA.TX.START)</initializer>
          <briefdescription>
<para>Start UART transmitter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a4f014e7e6d864c697f3b501581e77d0c" prot="public">
          <name>NRF_UARTE_TASK_STOPTX</name>
          <initializer>= offsetof(NRF_UARTE_Type, TASKS_DMA.TX.STOP)</initializer>
          <briefdescription>
<para>Stop UART transmitter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12aac4a3088721b4cffa1f8788032b49d84" prot="public">
          <name>NRF_UARTE_TASK_FLUSHRX</name>
          <initializer>= offsetof(NRF_UARTE_Type, TASKS_FLUSHRX)</initializer>
          <briefdescription>
<para>Flush RX FIFO in RX buffer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>UARTE tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="133" column="1" bodyfile="hal/nrf_uarte.h" bodystart="134" bodyend="147"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_event_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb7e7f48f8a385142af3ae249e8a15ae" prot="public">
          <name>NRF_UARTE_EVENT_CTS</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_CTS)</initializer>
          <briefdescription>
<para>CTS is activated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaa9eadfafaf2bc8d8525973db6ad0fffa" prot="public">
          <name>NRF_UARTE_EVENT_NCTS</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_NCTS)</initializer>
          <briefdescription>
<para>CTS is deactivated. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aad82cb8f90030dfd0a66ac658a29722ec" prot="public">
          <name>NRF_UARTE_EVENT_RXDRDY</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_RXDRDY)</initializer>
          <briefdescription>
<para>Data received in RXD (but potentially not yet transferred to Data RAM). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa41438c8cc0a6dd6a3c534e25640c5f15" prot="public">
          <name>NRF_UARTE_EVENT_TXDRDY</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_TXDRDY)</initializer>
          <briefdescription>
<para>Data sent from TXD. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb747c6d6000073aff543006fb6a67bf" prot="public">
          <name>NRF_UARTE_EVENT_ERROR</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_ERROR)</initializer>
          <briefdescription>
<para>Error detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" prot="public">
          <name>NRF_UARTE_EVENT_RXTO</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_RXTO)</initializer>
          <briefdescription>
<para>Receiver timeout. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" prot="public">
          <name>NRF_UARTE_EVENT_TXSTOPPED</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_TXSTOPPED)</initializer>
          <briefdescription>
<para>Transmitted stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" prot="public">
          <name>NRF_UARTE_EVENT_ENDRX</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_DMA.RX.END)</initializer>
          <briefdescription>
<para>Receive buffer is filled up. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" prot="public">
          <name>NRF_UARTE_EVENT_ENDTX</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_DMA.TX.END)</initializer>
          <briefdescription>
<para>Last TX byte transmitted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa3088313a496175a52d7f4b5e050c7702" prot="public">
          <name>NRF_UARTE_EVENT_RXSTARTED</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_DMA.RX.READY)</initializer>
          <briefdescription>
<para>Receiver has started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa499f8441d47ff978989ed67aa6a6b27a" prot="public">
          <name>NRF_UARTE_EVENT_TXSTARTED</name>
          <initializer>= offsetof(NRF_UARTE_Type, EVENTS_DMA.TX.READY)</initializer>
          <briefdescription>
<para>Transmitter has started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>UARTE events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="150" column="1" bodyfile="hal/nrf_uarte.h" bodystart="151" bodyend="170"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga34d5c38f66b74d10c11f72ea548e2138" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_short_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138a3cc21925e8c9ba6b47b5e4fc5ca89e29" prot="public">
          <name>NRF_UARTE_SHORT_ENDRX_STARTRX</name>
          <initializer>= UARTE_SHORTS_DMA_RX_END_DMA_RX_START_Msk</initializer>
          <briefdescription>
<para>Shortcut between ENDRX event and STARTRX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138ab09bcb8597c21c3677695b1398ac044e" prot="public">
          <name>NRF_UARTE_SHORT_ENDRX_STOPRX</name>
          <initializer>= UARTE_SHORTS_DMA_RX_END_DMA_RX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between ENDRX event and STOPRX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138aeca5b4a017684808e562ec2820f35bc2" prot="public">
          <name>NRF_UARTE_SHORT_ENDTX_STOPTX</name>
          <initializer>= UARTE_SHORTS_DMA_TX_END_DMA_TX_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between ENDTX event and STOPTX task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="173" column="1" bodyfile="hal/nrf_uarte.h" bodystart="174" bodyend="186"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_int_mask_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daf20b28af97bf98240e439be787e5c4d0" prot="public">
          <name>NRF_UARTE_INT_CTS_MASK</name>
          <initializer>= UARTE_INTENSET_CTS_Msk</initializer>
          <briefdescription>
<para>Interrupt on CTS event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da59bb6b09498fa43d957024eaa753e408" prot="public">
          <name>NRF_UARTE_INT_NCTS_MASK</name>
          <initializer>= UARTE_INTENSET_NCTS_Msk</initializer>
          <briefdescription>
<para>Interrupt on NCTS event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daa7f3b9072bbc035da6c43572e3631981" prot="public">
          <name>NRF_UARTE_INT_RXDRDY_MASK</name>
          <initializer>= UARTE_INTENSET_RXDRDY_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXDRDY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da9fcbc283a6cf19a2d8acce330fd22751" prot="public">
          <name>NRF_UARTE_INT_TXDRDY_MASK</name>
          <initializer>= UARTE_INTENSET_TXDRDY_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXDRDY event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dab082797b57a6a1372b90cd1f93d474b2" prot="public">
          <name>NRF_UARTE_INT_ERROR_MASK</name>
          <initializer>= UARTE_INTENSET_ERROR_Msk</initializer>
          <briefdescription>
<para>Interrupt on ERROR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dae04416c04b5abdc51fce34d22b2e4100" prot="public">
          <name>NRF_UARTE_INT_RXTO_MASK</name>
          <initializer>= UARTE_INTENSET_RXTO_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXTO event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dac82a332df7e6c202081c26ce4c873953" prot="public">
          <name>NRF_UARTE_INT_TXSTOPPED_MASK</name>
          <initializer>= UARTE_INTENSET_TXSTOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXSTOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daf4ae0123794e860fae0a6d2b8218da32" prot="public">
          <name>NRF_UARTE_INT_ENDRX_MASK</name>
          <initializer>= UARTE_INTENSET_DMARXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on ENDRX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daaa49ccde68d4ef6871758c50d701698d" prot="public">
          <name>NRF_UARTE_INT_ENDTX_MASK</name>
          <initializer>= UARTE_INTENSET_DMATXEND_Msk</initializer>
          <briefdescription>
<para>Interrupt on ENDTX event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da8952e20f257456e2b6ca5474b980fafb" prot="public">
          <name>NRF_UARTE_INT_RXSTARTED_MASK</name>
          <initializer>= UARTE_INTENSET_DMARXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da9c88cf5a272fcdf3585c7ff021b07f92" prot="public">
          <name>NRF_UARTE_INT_TXSTARTED_MASK</name>
          <initializer>= UARTE_INTENSET_DMATXREADY_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXSTARTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>UARTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="190" column="1" bodyfile="hal/nrf_uarte.h" bodystart="191" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_baudrate_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea0d8daad791322bcc600d42ed57d9e208" prot="public">
          <name>NRF_UARTE_BAUDRATE_1200</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud1200</initializer>
          <briefdescription>
<para>1200 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eaf46e7dd95a090a2cd64c1c9cfadf2ad5" prot="public">
          <name>NRF_UARTE_BAUDRATE_2400</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud2400</initializer>
          <briefdescription>
<para>2400 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea6677e10c9acb2684b6fecf68492715c7" prot="public">
          <name>NRF_UARTE_BAUDRATE_4800</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud4800</initializer>
          <briefdescription>
<para>4800 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eaeb153c4183d63ecb9ec6af6af734de97" prot="public">
          <name>NRF_UARTE_BAUDRATE_9600</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud9600</initializer>
          <briefdescription>
<para>9600 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea8bdc32e6d7c97372039e5d9a492590f5" prot="public">
          <name>NRF_UARTE_BAUDRATE_14400</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud14400</initializer>
          <briefdescription>
<para>14400 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea70d18503d81a11007456bd3e89c945d5" prot="public">
          <name>NRF_UARTE_BAUDRATE_19200</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud19200</initializer>
          <briefdescription>
<para>19200 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea86e1747104e9f7c2df7a610141b21f1a" prot="public">
          <name>NRF_UARTE_BAUDRATE_28800</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud28800</initializer>
          <briefdescription>
<para>28800 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea5c86870ab4a044f4c10b40d192ba8a00" prot="public">
          <name>NRF_UARTE_BAUDRATE_31250</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud31250</initializer>
          <briefdescription>
<para>31250 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eac52db59615094af65f8d478f02a68234" prot="public">
          <name>NRF_UARTE_BAUDRATE_38400</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud38400</initializer>
          <briefdescription>
<para>38400 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea3283f76b77f5b4ecefbadb3fdc1062ff" prot="public">
          <name>NRF_UARTE_BAUDRATE_56000</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud56000</initializer>
          <briefdescription>
<para>56000 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea527231954d1e97b9cc6d9408f5d432b2" prot="public">
          <name>NRF_UARTE_BAUDRATE_57600</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud57600</initializer>
          <briefdescription>
<para>57600 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea05c8f6c846aacb6793e1205d3533c479" prot="public">
          <name>NRF_UARTE_BAUDRATE_76800</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud76800</initializer>
          <briefdescription>
<para>76800 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea7b89b684f80db1d68e98d93321426e05" prot="public">
          <name>NRF_UARTE_BAUDRATE_115200</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud115200</initializer>
          <briefdescription>
<para>115200 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea01eeab23554f8418f13ac59c0d2e9cf8" prot="public">
          <name>NRF_UARTE_BAUDRATE_230400</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud230400</initializer>
          <briefdescription>
<para>230400 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea4236634f18ab5639793652d3cef4d17e" prot="public">
          <name>NRF_UARTE_BAUDRATE_250000</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud250000</initializer>
          <briefdescription>
<para>250000 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea76aeb4941330f856f18f1d8b092861cb" prot="public">
          <name>NRF_UARTE_BAUDRATE_460800</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud460800</initializer>
          <briefdescription>
<para>460800 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eac0f3d8da95efc2f5dfc618789522285a" prot="public">
          <name>NRF_UARTE_BAUDRATE_921600</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud921600</initializer>
          <briefdescription>
<para>921600 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea4a0c94847b9e1eb020672b81f177aa39" prot="public">
          <name>NRF_UARTE_BAUDRATE_1000000</name>
          <initializer>= UARTE_BAUDRATE_BAUDRATE_Baud1M</initializer>
          <briefdescription>
<para>1000000 baud. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Baudrates supported by UARTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="213" column="1" bodyfile="hal/nrf_uarte.h" bodystart="214" bodyend="233"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga83eec8b883f6b2e77e4baa39b65d9cb0" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_error_mask_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0a252a1e515833af01bc95347d61a22e5c" prot="public">
          <name>NRF_UARTE_ERROR_OVERRUN_MASK</name>
          <initializer>= UARTE_ERRORSRC_OVERRUN_Msk</initializer>
          <briefdescription>
<para>Overrun error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0ae3a0b96204ac5f2197ce75c8a8e79a8e" prot="public">
          <name>NRF_UARTE_ERROR_PARITY_MASK</name>
          <initializer>= UARTE_ERRORSRC_PARITY_Msk</initializer>
          <briefdescription>
<para>Parity error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0aeaba8538c226f4784b25f86582d8a469" prot="public">
          <name>NRF_UARTE_ERROR_FRAMING_MASK</name>
          <initializer>= UARTE_ERRORSRC_FRAMING_Msk</initializer>
          <briefdescription>
<para>Framing error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0a05874849929b6d5a555378258e81eb2d" prot="public">
          <name>NRF_UARTE_ERROR_BREAK_MASK</name>
          <initializer>= UARTE_ERRORSRC_BREAK_Msk</initializer>
          <briefdescription>
<para>Break error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE error masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="236" column="1" bodyfile="hal/nrf_uarte.h" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga8aaeeefd8dcc602621e652895d8760ce" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_parity_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga8aaeeefd8dcc602621e652895d8760cea17846ae089c79d17a516e8f112f673cd" prot="public">
          <name>NRF_UARTE_PARITY_EXCLUDED</name>
          <initializer>= UARTE_CONFIG_PARITY_Excluded &lt;&lt; UARTE_CONFIG_PARITY_Pos</initializer>
          <briefdescription>
<para>Parity excluded. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga8aaeeefd8dcc602621e652895d8760cea8e974850339489e88039da76031b0c50" prot="public">
          <name>NRF_UARTE_PARITY_INCLUDED</name>
          <initializer>= UARTE_CONFIG_PARITY_Included &lt;&lt; UARTE_CONFIG_PARITY_Pos</initializer>
          <briefdescription>
<para>Parity included. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE parity modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="245" column="1" bodyfile="hal/nrf_uarte.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga067ff543548e273bd1658c8746894c11" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_hwfc_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga067ff543548e273bd1658c8746894c11a5a0258c57be0d052b3d1811967e4d689" prot="public">
          <name>NRF_UARTE_HWFC_DISABLED</name>
          <initializer>= UARTE_CONFIG_HWFC_Disabled &lt;&lt; UARTE_CONFIG_HWFC_Pos</initializer>
          <briefdescription>
<para>Hardware flow control disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga067ff543548e273bd1658c8746894c11a00927c92cfe376a926365e4ecdfbb512" prot="public">
          <name>NRF_UARTE_HWFC_ENABLED</name>
          <initializer>= UARTE_CONFIG_HWFC_Enabled  &lt;&lt; UARTE_CONFIG_HWFC_Pos</initializer>
          <briefdescription>
<para>Hardware flow control enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE flow control modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="252" column="1" bodyfile="hal/nrf_uarte.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1gaf1d6928d2c4cae2bce9205c05c9a2b91" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_stop_t</name>
        <enumvalue id="group__nrf__uarte__hal_1ggaf1d6928d2c4cae2bce9205c05c9a2b91ad589067c6ef83f8b7caae93f99cef541" prot="public">
          <name>NRF_UARTE_STOP_ONE</name>
          <initializer>= UARTE_CONFIG_STOP_One &lt;&lt; UARTE_CONFIG_STOP_Pos</initializer>
          <briefdescription>
<para>One stop bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1ggaf1d6928d2c4cae2bce9205c05c9a2b91add7462fa97524ae1bd67999c02c7b180" prot="public">
          <name>NRF_UARTE_STOP_TWO</name>
          <initializer>= UARTE_CONFIG_STOP_Two &lt;&lt; UARTE_CONFIG_STOP_Pos</initializer>
          <briefdescription>
<para>Two stop bits. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE stop bit modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="260" column="1" bodyfile="hal/nrf_uarte.h" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__uarte__hal_1ga5bd965c0acc87987e247c3a812353923" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_uarte_paritytype_t</name>
        <enumvalue id="group__nrf__uarte__hal_1gga5bd965c0acc87987e247c3a812353923a1f6bdb309fe828abc37df8f6b3a0f724" prot="public">
          <name>NRF_UARTE_PARITYTYPE_EVEN</name>
          <initializer>= UARTE_CONFIG_PARITYTYPE_Even &lt;&lt; UARTE_CONFIG_PARITYTYPE_Pos</initializer>
          <briefdescription>
<para>Parity even. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__uarte__hal_1gga5bd965c0acc87987e247c3a812353923ae2978aa504ba543fd6ce965d81a05f3c" prot="public">
          <name>NRF_UARTE_PARITYTYPE_ODD</name>
          <initializer>= UARTE_CONFIG_PARITYTYPE_Odd &lt;&lt; UARTE_CONFIG_PARITYTYPE_Pos</initializer>
          <briefdescription>
<para>Parity odd. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of UARTE parity types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="269" column="1" bodyfile="hal/nrf_uarte.h" bodystart="270" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_event_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrf_uarte_event_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing a specific UARTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="630" column="24" bodyfile="hal/nrf_uarte.h" bodystart="630" bodyend="634" declfile="hal/nrf_uarte.h" declline="295" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_uarte_event_check</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrf_uarte_event_check</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the UARTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="636" column="24" bodyfile="hal/nrf_uarte.h" bodystart="636" bodyend="640" declfile="hal/nrf_uarte.h" declline="306" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga71fbc9d9b1a7a7fb61e54af1db53e9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_event_address_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrf_uarte_event_address_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of the specified UARTE event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="642" column="28" bodyfile="hal/nrf_uarte.h" bodystart="642" bodyend="646" declfile="hal/nrf_uarte.h" declline="317" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaa95a64c55eaf1ef8c5034c701be8cc2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_shorts_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_shorts_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for configuring UARTE shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="648" column="24" bodyfile="hal/nrf_uarte.h" bodystart="648" bodyend="651" declfile="hal/nrf_uarte.h" declline="326" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gacdf7d64e583ad40f2f6284080af2bb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_shorts_get</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_shorts_get</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for getting UARTE shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of requested shortcuts which were enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="653" column="28" bodyfile="hal/nrf_uarte.h" bodystart="653" bodyend="656" declfile="hal/nrf_uarte.h" declline="336" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaf118432d67372baf106ddebd40706ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_shorts_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_shorts_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling UARTE shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="658" column="24" bodyfile="hal/nrf_uarte.h" bodystart="658" bodyend="661" declfile="hal/nrf_uarte.h" declline="344" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga4b45795e5eb4ab6ca6bec57fef5ca900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_shorts_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_shorts_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling UARTE shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="663" column="24" bodyfile="hal/nrf_uarte.h" bodystart="663" bodyend="666" declfile="hal/nrf_uarte.h" declline="352" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_int_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_int_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling UARTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="668" column="24" bodyfile="hal/nrf_uarte.h" bodystart="668" bodyend="671" declfile="hal/nrf_uarte.h" declline="361" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga90865440e200499623f4cc89e01db83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_int_enable_check</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_int_enable_check</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="673" column="28" bodyfile="hal/nrf_uarte.h" bodystart="673" bodyend="676" declfile="hal/nrf_uarte.h" declline="372" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga9b7a75ee458272927873b753c7f0d3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_int_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_uarte_int_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="678" column="24" bodyfile="hal/nrf_uarte.h" bodystart="678" bodyend="681" declfile="hal/nrf_uarte.h" declline="381" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga122e4a898f64c58603ffe58ebe9f0828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_subscribe_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task, uint8_t channel)</argsstring>
        <name>nrf_uarte_subscribe_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given UARTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="392" column="24" declfile="hal/nrf_uarte.h" declline="392" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga615374471fc4545e9b26e69963c37d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_subscribe_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrf_uarte_subscribe_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given UARTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="403" column="24" declfile="hal/nrf_uarte.h" declline="403" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga92107bd9f425356f88682a286ba480e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_publish_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event, uint8_t channel)</argsstring>
        <name>nrf_uarte_publish_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given UARTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="414" column="24" declfile="hal/nrf_uarte.h" declline="414" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gacfa67b79ba293492c74d1e670106fcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_publish_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_event_t event)</argsstring>
        <name>nrf_uarte_publish_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given UARTE event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="425" column="24" declfile="hal/nrf_uarte.h" declline="425" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gafb0484282cce3fb422e1179cbbede5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_errorsrc_get_and_clear</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_errorsrc_get_and_clear</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting error source mask. Function is clearing error source flags after reading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask with error source flags. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="713" column="28" bodyfile="hal/nrf_uarte.h" bodystart="713" bodyend="718" declfile="hal/nrf_uarte.h" declline="436" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga070849bf37e459b44758bfe6cd63859b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_enable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_enable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling UARTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="720" column="24" bodyfile="hal/nrf_uarte.h" bodystart="720" bodyend="723" declfile="hal/nrf_uarte.h" declline="443" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gac6629a9ad9c7acbf36515e484a45d166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_disable</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_disable</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling UARTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="725" column="24" bodyfile="hal/nrf_uarte.h" bodystart="725" bodyend="728" declfile="hal/nrf_uarte.h" declline="450" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gae8d7bc802477ebd1b07539e0c9ec8ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_uarte_enable_check</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_enable_check</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the UARTE is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The UARTE is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The UARTE is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="730" column="24" bodyfile="hal/nrf_uarte.h" bodystart="730" bodyend="733" declfile="hal/nrf_uarte.h" declline="460" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_txrx_pins_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t pseltxd, uint32_t pselrxd)</argsstring>
        <name>nrf_uarte_txrx_pins_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pseltxd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselrxd</declname>
        </param>
        <briefdescription>
<para>Function for configuring TX/RX pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pseltxd</parametername>
</parameternamelist>
<parameterdescription>
<para>TXD pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselrxd</parametername>
</parameternamelist>
<parameterdescription>
<para>RXD pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="735" column="24" bodyfile="hal/nrf_uarte.h" bodystart="735" bodyend="741" declfile="hal/nrf_uarte.h" declline="469" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_txrx_pins_disconnect</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_txrx_pins_disconnect</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disconnecting TX/RX pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="743" column="24" bodyfile="hal/nrf_uarte.h" bodystart="743" bodyend="746" declfile="hal/nrf_uarte.h" declline="478" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_tx_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_tx_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting TX pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TX pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="748" column="28" bodyfile="hal/nrf_uarte.h" bodystart="748" bodyend="751" declfile="hal/nrf_uarte.h" declline="487" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_rx_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_rx_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting RX pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RX pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="753" column="28" bodyfile="hal/nrf_uarte.h" bodystart="753" bodyend="756" declfile="hal/nrf_uarte.h" declline="496" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_rts_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_rts_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting RTS pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RTS pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="758" column="28" bodyfile="hal/nrf_uarte.h" bodystart="758" bodyend="761" declfile="hal/nrf_uarte.h" declline="505" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_cts_pin_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_cts_pin_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting CTS pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CTS pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="763" column="28" bodyfile="hal/nrf_uarte.h" bodystart="763" bodyend="766" declfile="hal/nrf_uarte.h" declline="514" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_hwfc_pins_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint32_t pselrts, uint32_t pselcts)</argsstring>
        <name>nrf_uarte_hwfc_pins_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselrts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pselcts</declname>
        </param>
        <briefdescription>
<para>Function for configuring flow control pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselrts</parametername>
</parameternamelist>
<parameterdescription>
<para>RTS pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselcts</parametername>
</parameternamelist>
<parameterdescription>
<para>CTS pin number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="768" column="24" bodyfile="hal/nrf_uarte.h" bodystart="768" bodyend="774" declfile="hal/nrf_uarte.h" declline="523" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_hwfc_pins_disconnect</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_hwfc_pins_disconnect</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disconnecting flow control pins. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="776" column="24" bodyfile="hal/nrf_uarte.h" bodystart="776" bodyend="779" declfile="hal/nrf_uarte.h" declline="532" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_task_trigger</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrf_uarte_task_trigger</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for starting an UARTE task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="781" column="24" bodyfile="hal/nrf_uarte.h" bodystart="781" bodyend="784" declfile="hal/nrf_uarte.h" declline="540" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaf3123d724a34655489ff9a353f24dd10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_task_address_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg, nrf_uarte_task_t task)</argsstring>
        <name>nrf_uarte_task_address_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of the specified task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Task address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="786" column="28" bodyfile="hal/nrf_uarte.h" bodystart="786" bodyend="790" declfile="hal/nrf_uarte.h" declline="550" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_configure</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_config_t const *p_cfg)</argsstring>
        <name>nrf_uarte_configure</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref> const *</type>
          <declname>p_cfg</declname>
        </param>
        <briefdescription>
<para>Function for configuring UARTE. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to UARTE settings structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="792" column="24" bodyfile="hal/nrf_uarte.h" bodystart="792" bodyend="803" declfile="hal/nrf_uarte.h" declline="559" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_baudrate_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, nrf_uarte_baudrate_t baudrate)</argsstring>
        <name>nrf_uarte_baudrate_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref></type>
          <declname>baudrate</declname>
        </param>
        <briefdescription>
<para>Function for setting UARTE baud rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="805" column="24" bodyfile="hal/nrf_uarte.h" bodystart="805" bodyend="808" declfile="hal/nrf_uarte.h" declline="568" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gab54534a45e185cee807e27b4b2a77d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_tx_buffer_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrf_uarte_tx_buffer_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="810" column="24" bodyfile="hal/nrf_uarte.h" bodystart="810" bodyend="821" declfile="hal/nrf_uarte.h" declline="578" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaa2591b6842b0ef1033a095e9484d0cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t const *</type>
        <definition>NRF_STATIC_INLINE uint8_t const  * nrf_uarte_tx_buffer_get</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_tx_buffer_get</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the transmit buffer address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the transmit buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="823" column="34" bodyfile="hal/nrf_uarte.h" bodystart="823" bodyend="830" declfile="hal/nrf_uarte.h" declline="589" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga4b52b1f7133577c0cf017143d5dc5ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_tx_amount_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_tx_amount_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting number of bytes transmitted in the last transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes transmitted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="832" column="28" bodyfile="hal/nrf_uarte.h" bodystart="832" bodyend="839" declfile="hal/nrf_uarte.h" declline="598" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga1bb25747646dd76f76f5939cc332abc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_uarte_rx_buffer_set</definition>
        <argsstring>(NRF_UARTE_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrf_uarte_rx_buffer_set</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Function for setting the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="841" column="24" bodyfile="hal/nrf_uarte.h" bodystart="841" bodyend="852" declfile="hal/nrf_uarte.h" declline="607" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1gaee7e0cd824a91100b21464fca8d789fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint8_t *</type>
        <definition>NRF_STATIC_INLINE uint8_t * nrf_uarte_rx_buffer_get</definition>
        <argsstring>(NRF_UARTE_Type *p_reg)</argsstring>
        <name>nrf_uarte_rx_buffer_get</name>
        <param>
          <type>NRF_UARTE_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the reception buffer address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the reception buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="854" column="28" bodyfile="hal/nrf_uarte.h" bodystart="854" bodyend="861" declfile="hal/nrf_uarte.h" declline="618" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_uarte_rx_amount_get</definition>
        <argsstring>(NRF_UARTE_Type const *p_reg)</argsstring>
        <name>nrf_uarte_rx_amount_get</name>
        <param>
          <type>NRF_UARTE_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting number of bytes received in the last transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_uarte.h" line="863" column="28" bodyfile="hal/nrf_uarte.h" bodystart="863" bodyend="870" declfile="hal/nrf_uarte.h" declline="627" declcolumn="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF54H20_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_CLOCKPIN_TXD_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF54H20_ENGA_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_CLOCKPIN_RTS_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_PSEL_DISCONNECTED<sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_uarte_hal<sp/>UARTE<sp/>HAL</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_uarte</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>UARTE<sp/>peripheral.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>getting<sp/>pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>UARTE<sp/>peripheral.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/>UARTE<sp/>instance<sp/>index.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>UARTE<sp/>peripheral.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_INST_GET(idx)<sp/>NRFX_CONCAT(NRF_,<sp/>UARTE,<sp/>idx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_DMA_RX_PTR_PTR_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>dedicated<sp/>DMA<sp/>register<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_REG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_REG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(UARTE_TASKS_DMA_RX_START_START_Msk)<sp/>&amp;&amp;<sp/>defined(UARTE_EVENTS_DMA_RX_END_END_Msk))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>UARTE<sp/>DMA<sp/>tasks<sp/>and<sp/>events<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_TASKS_EVENTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_TASKS_EVENTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_SHORTS_DMA_RX_END_DMA_RX_START_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>UARTE<sp/>DMA<sp/>shortcuts<sp/>are<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_SHORTS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_DMA_SHORTS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_SHORTS_ENDTX_STOPTX_Msk)<sp/>||<sp/>defined(UARTE_SHORTS_DMA_TX_END_DMA_TX_STOP_Msk)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>UARTE<sp/>ENDTX_STOPTX<sp/>shortcut<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_ENDTX_STOPTX_SHORT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_HAS_ENDTX_STOPTX_SHORT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">/**<sp/>@brief<sp/>Base<sp/>frequency<sp/>value<sp/>128<sp/>MHz<sp/>for<sp/>UARTE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_BASE_FREQUENCY_128MHZ<sp/>(NRFX_MHZ_TO_HZ(128UL))</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">/**<sp/>@brief<sp/>Base<sp/>frequency<sp/>value<sp/>64<sp/>MHz<sp/>for<sp/>UARTE.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_BASE_FREQUENCY_64MHZ<sp/><sp/>(NRFX_MHZ_TO_HZ(64UL))</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**<sp/>@brief<sp/>Base<sp/>frequency<sp/>value<sp/>16<sp/>MHz<sp/>for<sp/>UARTE.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_BASE_FREQUENCY_16MHZ<sp/><sp/>(NRFX_MHZ_TO_HZ(16UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_UARTE_IS_128MHZ_UARTE)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>base<sp/>frequency<sp/>for<sp/>the<sp/>specified<sp/>UARTE<sp/>is<sp/>128<sp/>MHz.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_IS_128MHZ_UARTE(p_reg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(NRFX_COND_CODE_1(NRFX_IS_ENABLED(NRF_CPU_FREQ_IS_128MHZ),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NRFX_COND_CODE_1(NRFX_INSTANCE_PRESENT(UARTE00),<sp/>(p_reg<sp/>==<sp/>NRF_UARTE00),<sp/>(false))),<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(false)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_UARTE_IS_64MHZ_UARTE)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>base<sp/>frequency<sp/>for<sp/>the<sp/>specified<sp/>UARTE<sp/>is<sp/>64<sp/>MHz.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_IS_64MHZ_UARTE(p_reg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(NRFX_COND_CODE_1(NRFX_IS_ENABLED(NRF_CPU_FREQ_IS_64MHZ),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(NRFX_COND_CODE_1(NRFX_INSTANCE_PRESENT(UARTE00),<sp/>(p_reg<sp/>==<sp/>NRF_UARTE00),<sp/>(false))),<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(false)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>for<sp/>getting<sp/>base<sp/>frequency<sp/>value<sp/>in<sp/>Hz<sp/>for<sp/>the<sp/>specified<sp/>UARTE.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_UARTE_BASE_FREQUENCY_GET(p_reg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((NRF_UARTE_IS_128MHZ_UARTE(p_reg))<sp/>?<sp/>(NRF_UARTE_BASE_FREQUENCY_128MHZ):<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((NRF_UARTE_IS_64MHZ_UARTE(p_reg))<sp/><sp/>?<sp/>(NRF_UARTE_BASE_FREQUENCY_64MHZ)<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(NRF_UARTE_BASE_FREQUENCY_16MHZ)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">/**<sp/>@brief<sp/>UARTE<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12abd99d435a65192d48802b693b9acab6b" kindref="member">NRF_UARTE_TASK_STARTRX</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_DMA.RX.START),<sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>UART<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a0bc486fb0751337a49fa3b4570279afc" kindref="member">NRF_UARTE_TASK_STOPRX</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_DMA.RX.STOP),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>UART<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12af3a09172b5dff04de632997f0f7d5a73" kindref="member">NRF_UARTE_TASK_STARTTX</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_DMA.TX.START),<sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>UART<sp/>transmitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a4f014e7e6d864c697f3b501581e77d0c" kindref="member">NRF_UARTE_TASK_STOPTX</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_DMA.TX.STOP),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>UART<sp/>transmitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12abd99d435a65192d48802b693b9acab6b" kindref="member">NRF_UARTE_TASK_STARTRX</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_STARTRX),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>UART<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a0bc486fb0751337a49fa3b4570279afc" kindref="member">NRF_UARTE_TASK_STOPRX</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_STOPRX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>UART<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12af3a09172b5dff04de632997f0f7d5a73" kindref="member">NRF_UARTE_TASK_STARTTX</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_STARTTX),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>UART<sp/>transmitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12a4f014e7e6d864c697f3b501581e77d0c" kindref="member">NRF_UARTE_TASK_STOPTX</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_STOPTX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>UART<sp/>transmitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggae99a63cb1416b51c2e2282c4c56a6b12aac4a3088721b4cffa1f8788032b49d84" kindref="member">NRF_UARTE_TASK_FLUSHRX</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>TASKS_FLUSHRX)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Flush<sp/>RX<sp/>FIFO<sp/>in<sp/>RX<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**<sp/>@brief<sp/>UARTE<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb7e7f48f8a385142af3ae249e8a15ae" kindref="member">NRF_UARTE_EVENT_CTS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_CTS),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>CTS<sp/>is<sp/>activated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaa9eadfafaf2bc8d8525973db6ad0fffa" kindref="member">NRF_UARTE_EVENT_NCTS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_NCTS),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>CTS<sp/>is<sp/>deactivated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aad82cb8f90030dfd0a66ac658a29722ec" kindref="member">NRF_UARTE_EVENT_RXDRDY</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_RXDRDY),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Data<sp/>received<sp/>in<sp/>RXD<sp/>(but<sp/>potentially<sp/>not<sp/>yet<sp/>transferred<sp/>to<sp/>Data<sp/>RAM).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa41438c8cc0a6dd6a3c534e25640c5f15" kindref="member">NRF_UARTE_EVENT_TXDRDY</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_TXDRDY),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Data<sp/>sent<sp/>from<sp/>TXD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aadb747c6d6000073aff543006fb6a67bf" kindref="member">NRF_UARTE_EVENT_ERROR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_ERROR),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Error<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aacfe771476126c4edf5f77d96a46a4f71" kindref="member">NRF_UARTE_EVENT_RXTO</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_RXTO),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receiver<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aaf294fd2bdf6d029e97ddc0821d662e12" kindref="member">NRF_UARTE_EVENT_TXSTOPPED</ref><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_TXSTOPPED),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmitted<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_DMA.RX.END),<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>buffer<sp/>is<sp/>filled<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" kindref="member">NRF_UARTE_EVENT_ENDTX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_DMA.TX.END),<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Last<sp/>TX<sp/>byte<sp/>transmitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa3088313a496175a52d7f4b5e050c7702" kindref="member">NRF_UARTE_EVENT_RXSTARTED</ref><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_DMA.RX.READY),<sp/></highlight><highlight class="comment">///&lt;<sp/>Receiver<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa499f8441d47ff978989ed67aa6a6b27a" kindref="member">NRF_UARTE_EVENT_TXSTARTED</ref><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_DMA.TX.READY),<sp/></highlight><highlight class="comment">///&lt;<sp/>Transmitter<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8329b5c3838d796c881a3962424b4150" kindref="member">NRF_UARTE_EVENT_ENDRX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_ENDRX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receive<sp/>buffer<sp/>is<sp/>filled<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa8e4ed69aeb2b036939ecfb11afaf01b7" kindref="member">NRF_UARTE_EVENT_ENDTX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_ENDTX),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Last<sp/>TX<sp/>byte<sp/>transmitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa3088313a496175a52d7f4b5e050c7702" kindref="member">NRF_UARTE_EVENT_RXSTARTED</ref><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_RXSTARTED),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Receiver<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga1189b14604f6051467bc91b337c45d6aa499f8441d47ff978989ed67aa6a6b27a" kindref="member">NRF_UARTE_EVENT_TXSTARTED</ref><sp/>=<sp/>offsetof(NRF_UARTE_Type,<sp/>EVENTS_TXSTARTED),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Transmitter<sp/>has<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>shortcuts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_SHORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138a3cc21925e8c9ba6b47b5e4fc5ca89e29" kindref="member">NRF_UARTE_SHORT_ENDRX_STARTRX</ref><sp/>=<sp/>UARTE_SHORTS_DMA_RX_END_DMA_RX_START_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDRX<sp/>event<sp/>and<sp/>STARTRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138ab09bcb8597c21c3677695b1398ac044e" kindref="member">NRF_UARTE_SHORT_ENDRX_STOPRX</ref><sp/><sp/>=<sp/>UARTE_SHORTS_DMA_RX_END_DMA_RX_STOP_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDRX<sp/>event<sp/>and<sp/>STOPRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138aeca5b4a017684808e562ec2820f35bc2" kindref="member">NRF_UARTE_SHORT_ENDTX_STOPTX</ref><sp/><sp/>=<sp/>UARTE_SHORTS_DMA_TX_END_DMA_TX_STOP_Msk<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDTX<sp/>event<sp/>and<sp/>STOPTX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138a3cc21925e8c9ba6b47b5e4fc5ca89e29" kindref="member">NRF_UARTE_SHORT_ENDRX_STARTRX</ref><sp/>=<sp/>UARTE_SHORTS_ENDRX_STARTRX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDRX<sp/>event<sp/>and<sp/>STARTRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138ab09bcb8597c21c3677695b1398ac044e" kindref="member">NRF_UARTE_SHORT_ENDRX_STOPRX</ref><sp/><sp/>=<sp/>UARTE_SHORTS_ENDRX_STOPRX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDRX<sp/>event<sp/>and<sp/>STOPRX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_ENDTX_STOPTX_SHORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga34d5c38f66b74d10c11f72ea548e2138aeca5b4a017684808e562ec2820f35bc2" kindref="member">NRF_UARTE_SHORT_ENDTX_STOPTX</ref><sp/><sp/>=<sp/>UARTE_SHORTS_ENDTX_STOPTX_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Shortcut<sp/>between<sp/>ENDTX<sp/>event<sp/>and<sp/>STOPTX<sp/>task.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga34d5c38f66b74d10c11f72ea548e2138" kindref="member">nrf_uarte_short_t</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**<sp/>@brief<sp/>UARTE<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daf20b28af97bf98240e439be787e5c4d0" kindref="member">NRF_UARTE_INT_CTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_CTS_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>CTS<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da59bb6b09498fa43d957024eaa753e408" kindref="member">NRF_UARTE_INT_NCTS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_NCTS_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>NCTS<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daa7f3b9072bbc035da6c43572e3631981" kindref="member">NRF_UARTE_INT_RXDRDY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_RXDRDY_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXDRDY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da9fcbc283a6cf19a2d8acce330fd22751" kindref="member">NRF_UARTE_INT_TXDRDY_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_TXDRDY_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXDRDY<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dab082797b57a6a1372b90cd1f93d474b2" kindref="member">NRF_UARTE_INT_ERROR_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_ERROR_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ERROR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dae04416c04b5abdc51fce34d22b2e4100" kindref="member">NRF_UARTE_INT_RXTO_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_RXTO_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXTO<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08dac82a332df7e6c202081c26ce4c873953" kindref="member">NRF_UARTE_INT_TXSTOPPED_MASK</ref><sp/>=<sp/>UARTE_INTENSET_TXSTOPPED_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXSTOPPED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_TASKS_EVENTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daf4ae0123794e860fae0a6d2b8218da32" kindref="member">NRF_UARTE_INT_ENDRX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_DMARXEND_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDRX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daaa49ccde68d4ef6871758c50d701698d" kindref="member">NRF_UARTE_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_DMATXEND_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDTX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da8952e20f257456e2b6ca5474b980fafb" kindref="member">NRF_UARTE_INT_RXSTARTED_MASK</ref><sp/>=<sp/>UARTE_INTENSET_DMARXREADY_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da9c88cf5a272fcdf3585c7ff021b07f92" kindref="member">NRF_UARTE_INT_TXSTARTED_MASK</ref><sp/>=<sp/>UARTE_INTENSET_DMATXREADY_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daf4ae0123794e860fae0a6d2b8218da32" kindref="member">NRF_UARTE_INT_ENDRX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_ENDRX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDRX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08daaa49ccde68d4ef6871758c50d701698d" kindref="member">NRF_UARTE_INT_ENDTX_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>UARTE_INTENSET_ENDTX_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>ENDTX<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da8952e20f257456e2b6ca5474b980fafb" kindref="member">NRF_UARTE_INT_RXSTARTED_MASK</ref><sp/>=<sp/>UARTE_INTENSET_RXSTARTED_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga395d7c4d3cd101fa0afb90940593a08da9c88cf5a272fcdf3585c7ff021b07f92" kindref="member">NRF_UARTE_INT_TXSTARTED_MASK</ref><sp/>=<sp/>UARTE_INTENSET_TXSTARTED_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXSTARTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga395d7c4d3cd101fa0afb90940593a08d" kindref="member">nrf_uarte_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">/**<sp/>@brief<sp/>Baudrates<sp/>supported<sp/>by<sp/>UARTE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea0d8daad791322bcc600d42ed57d9e208" kindref="member">NRF_UARTE_BAUDRATE_1200</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud1200,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>1200<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eaf46e7dd95a090a2cd64c1c9cfadf2ad5" kindref="member">NRF_UARTE_BAUDRATE_2400</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud2400,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2400<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea6677e10c9acb2684b6fecf68492715c7" kindref="member">NRF_UARTE_BAUDRATE_4800</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud4800,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>4800<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eaeb153c4183d63ecb9ec6af6af734de97" kindref="member">NRF_UARTE_BAUDRATE_9600</ref><sp/><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud9600,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>9600<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea8bdc32e6d7c97372039e5d9a492590f5" kindref="member">NRF_UARTE_BAUDRATE_14400</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud14400,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>14400<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea70d18503d81a11007456bd3e89c945d5" kindref="member">NRF_UARTE_BAUDRATE_19200</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud19200,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>19200<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea86e1747104e9f7c2df7a610141b21f1a" kindref="member">NRF_UARTE_BAUDRATE_28800</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud28800,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>28800<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea5c86870ab4a044f4c10b40d192ba8a00" kindref="member">NRF_UARTE_BAUDRATE_31250</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud31250,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>31250<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eac52db59615094af65f8d478f02a68234" kindref="member">NRF_UARTE_BAUDRATE_38400</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud38400,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>38400<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea3283f76b77f5b4ecefbadb3fdc1062ff" kindref="member">NRF_UARTE_BAUDRATE_56000</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud56000,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>56000<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea527231954d1e97b9cc6d9408f5d432b2" kindref="member">NRF_UARTE_BAUDRATE_57600</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud57600,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>57600<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea05c8f6c846aacb6793e1205d3533c479" kindref="member">NRF_UARTE_BAUDRATE_76800</ref><sp/><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud76800,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>76800<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea7b89b684f80db1d68e98d93321426e05" kindref="member">NRF_UARTE_BAUDRATE_115200</ref><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud115200,<sp/></highlight><highlight class="comment">///&lt;<sp/>115200<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea01eeab23554f8418f13ac59c0d2e9cf8" kindref="member">NRF_UARTE_BAUDRATE_230400</ref><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud230400,<sp/></highlight><highlight class="comment">///&lt;<sp/>230400<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea4236634f18ab5639793652d3cef4d17e" kindref="member">NRF_UARTE_BAUDRATE_250000</ref><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud250000,<sp/></highlight><highlight class="comment">///&lt;<sp/>250000<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea76aeb4941330f856f18f1d8b092861cb" kindref="member">NRF_UARTE_BAUDRATE_460800</ref><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud460800,<sp/></highlight><highlight class="comment">///&lt;<sp/>460800<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462eac0f3d8da95efc2f5dfc618789522285a" kindref="member">NRF_UARTE_BAUDRATE_921600</ref><sp/><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud921600,<sp/></highlight><highlight class="comment">///&lt;<sp/>921600<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga42eca93d0e7d6354bcc75d6e2cdb462ea4a0c94847b9e1eb020672b81f177aa39" kindref="member">NRF_UARTE_BAUDRATE_1000000</ref><sp/>=<sp/>UARTE_BAUDRATE_BAUDRATE_Baud1M<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>1000000<sp/>baud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>error<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0a252a1e515833af01bc95347d61a22e5c" kindref="member">NRF_UARTE_ERROR_OVERRUN_MASK</ref><sp/>=<sp/>UARTE_ERRORSRC_OVERRUN_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Overrun<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0ae3a0b96204ac5f2197ce75c8a8e79a8e" kindref="member">NRF_UARTE_ERROR_PARITY_MASK</ref><sp/><sp/>=<sp/>UARTE_ERRORSRC_PARITY_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0aeaba8538c226f4784b25f86582d8a469" kindref="member">NRF_UARTE_ERROR_FRAMING_MASK</ref><sp/>=<sp/>UARTE_ERRORSRC_FRAMING_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Framing<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga83eec8b883f6b2e77e4baa39b65d9cb0a05874849929b6d5a555378258e81eb2d" kindref="member">NRF_UARTE_ERROR_BREAK_MASK</ref><sp/><sp/><sp/>=<sp/>UARTE_ERRORSRC_BREAK_Msk<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Break<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga83eec8b883f6b2e77e4baa39b65d9cb0" kindref="member">nrf_uarte_error_mask_t</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>parity<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga8aaeeefd8dcc602621e652895d8760cea17846ae089c79d17a516e8f112f673cd" kindref="member">NRF_UARTE_PARITY_EXCLUDED</ref><sp/>=<sp/>UARTE_CONFIG_PARITY_Excluded<sp/>&lt;&lt;<sp/>UARTE_CONFIG_PARITY_Pos,<sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>excluded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga8aaeeefd8dcc602621e652895d8760cea8e974850339489e88039da76031b0c50" kindref="member">NRF_UARTE_PARITY_INCLUDED</ref><sp/>=<sp/>UARTE_CONFIG_PARITY_Included<sp/>&lt;&lt;<sp/>UARTE_CONFIG_PARITY_Pos<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga8aaeeefd8dcc602621e652895d8760ce" kindref="member">nrf_uarte_parity_t</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>flow<sp/>control<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga067ff543548e273bd1658c8746894c11a5a0258c57be0d052b3d1811967e4d689" kindref="member">NRF_UARTE_HWFC_DISABLED</ref><sp/>=<sp/>UARTE_CONFIG_HWFC_Disabled<sp/>&lt;&lt;<sp/>UARTE_CONFIG_HWFC_Pos,<sp/></highlight><highlight class="comment">///&lt;<sp/>Hardware<sp/>flow<sp/>control<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga067ff543548e273bd1658c8746894c11a00927c92cfe376a926365e4ecdfbb512" kindref="member">NRF_UARTE_HWFC_ENABLED</ref><sp/><sp/>=<sp/>UARTE_CONFIG_HWFC_Enabled<sp/><sp/>&lt;&lt;<sp/>UARTE_CONFIG_HWFC_Pos<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Hardware<sp/>flow<sp/>control<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga067ff543548e273bd1658c8746894c11" kindref="member">nrf_uarte_hwfc_t</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_CONFIG_STOP_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>stop<sp/>bit<sp/>modes.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggaf1d6928d2c4cae2bce9205c05c9a2b91ad589067c6ef83f8b7caae93f99cef541" kindref="member">NRF_UARTE_STOP_ONE</ref><sp/>=<sp/>UARTE_CONFIG_STOP_One<sp/>&lt;&lt;<sp/>UARTE_CONFIG_STOP_Pos,<sp/></highlight><highlight class="comment">///&lt;<sp/>One<sp/>stop<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ggaf1d6928d2c4cae2bce9205c05c9a2b91add7462fa97524ae1bd67999c02c7b180" kindref="member">NRF_UARTE_STOP_TWO</ref><sp/>=<sp/>UARTE_CONFIG_STOP_Two<sp/>&lt;&lt;<sp/>UARTE_CONFIG_STOP_Pos<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Two<sp/>stop<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1gaf1d6928d2c4cae2bce9205c05c9a2b91" kindref="member">nrf_uarte_stop_t</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_CONFIG_PARITYTYPE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**<sp/>@brief<sp/>Types<sp/>of<sp/>UARTE<sp/>parity<sp/>types.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga5bd965c0acc87987e247c3a812353923a1f6bdb309fe828abc37df8f6b3a0f724" kindref="member">NRF_UARTE_PARITYTYPE_EVEN</ref><sp/>=<sp/>UARTE_CONFIG_PARITYTYPE_Even<sp/>&lt;&lt;<sp/>UARTE_CONFIG_PARITYTYPE_Pos,<sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>even.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gga5bd965c0acc87987e247c3a812353923ae2978aa504ba543fd6ce965d81a05f3c" kindref="member">NRF_UARTE_PARITYTYPE_ODD</ref><sp/><sp/>=<sp/>UARTE_CONFIG_PARITYTYPE_Odd<sp/>&lt;&lt;<sp/>UARTE_CONFIG_PARITYTYPE_Pos,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>odd.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/><ref refid="group__nrf__uarte__hal_1ga5bd965c0acc87987e247c3a812353923" kindref="member">nrf_uarte_paritytype_t</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>for<sp/>UARTE<sp/>transmission<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="structnrf__uarte__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga067ff543548e273bd1658c8746894c11" kindref="member">nrf_uarte_hwfc_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwfc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Flow<sp/>control<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga8aaeeefd8dcc602621e652895d8760ce" kindref="member">nrf_uarte_parity_t</ref><sp/><sp/><sp/><sp/><sp/>parity;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_CONFIG_STOP_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gaf1d6928d2c4cae2bce9205c05c9a2b91" kindref="member">nrf_uarte_stop_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(UARTE_CONFIG_PARITYTYPE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga5bd965c0acc87987e247c3a812353923" kindref="member">nrf_uarte_paritytype_t</ref><sp/>paritytype;<sp/></highlight><highlight class="comment">///&lt;<sp/>Parity<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>specific<sp/>UARTE<sp/>event.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="297"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>UARTE<sp/>event.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>UARTE<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>The<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga71fbc9d9b1a7a7fb61e54af1db53e9b1" kindref="member">nrf_uarte_event_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>UARTE<sp/>shortcuts.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaa95a64c55eaf1ef8c5034c701be8cc2f" kindref="member">nrf_uarte_shorts_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>UARTE<sp/>shortcuts.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>requested<sp/>shortcuts<sp/>which<sp/>were<sp/>enabled.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gacdf7d64e583ad40f2f6284080af2bb54" kindref="member">nrf_uarte_shorts_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>UARTE<sp/>shortcuts.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaf118432d67372baf106ddebd40706ac0" kindref="member">nrf_uarte_shorts_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>UARTE<sp/>shortcuts.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Shortcuts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga4b45795e5eb4ab6ca6bec57fef5ca900" kindref="member">nrf_uarte_shorts_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>UARTE<sp/>interrupts.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_uarte_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" kindref="member">nrf_uarte_int_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_uarte_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga90865440e200499623f4cc89e01db83d" kindref="member">nrf_uarte_int_enable_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_uarte_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga9b7a75ee458272927873b753c7f0d3ad" kindref="member">nrf_uarte_int_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UARTE<sp/>task.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga122e4a898f64c58603ffe58ebe9f0828" kindref="member">nrf_uarte_subscribe_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UARTE<sp/>task.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga615374471fc4545e9b26e69963c37d95" kindref="member">nrf_uarte_subscribe_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="406"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UARTE<sp/>event.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga92107bd9f425356f88682a286ba480e9" kindref="member">nrf_uarte_publish_set</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UARTE<sp/>event.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gacfa67b79ba293492c74d1e670106fcc8" kindref="member">nrf_uarte_publish_clear</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>error<sp/>source<sp/>mask.<sp/>Function<sp/>is<sp/>clearing<sp/>error<sp/>source<sp/>flags<sp/>after<sp/>reading.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>with<sp/>error<sp/>source<sp/>flags.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gafb0484282cce3fb422e1179cbbede5e9" kindref="member">nrf_uarte_errorsrc_get_and_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>UARTE.</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga070849bf37e459b44758bfe6cd63859b" kindref="member">nrf_uarte_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>UARTE.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gac6629a9ad9c7acbf36515e484a45d166" kindref="member">nrf_uarte_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>UARTE<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>UARTE<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>UARTE<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gae8d7bc802477ebd1b07539e0c9ec8ff1" kindref="member">nrf_uarte_enable_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>TX/RX<sp/>pins.</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pseltxd<sp/>TXD<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pselrxd<sp/>RXD<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseltxd,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrxd);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="473"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disconnecting<sp/>TX/RX<sp/>pins.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" kindref="member">nrf_uarte_txrx_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>TX<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>@return<sp/>TX<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" kindref="member">nrf_uarte_tx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="489"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>RX<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>@return<sp/>RX<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" kindref="member">nrf_uarte_rx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>RTS<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>@return<sp/>RTS<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" kindref="member">nrf_uarte_rts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="507"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>CTS<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>@return<sp/>CTS<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" kindref="member">nrf_uarte_cts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="516"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>flow<sp/>control<sp/>pins.</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pselrts<sp/>RTS<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pselcts<sp/>CTS<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrts,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselcts);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disconnecting<sp/>flow<sp/>control<sp/>pins.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" kindref="member">nrf_uarte_hwfc_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>an<sp/>UARTE<sp/>task.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>@return<sp/>Task<sp/>address.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gaf3123d724a34655489ff9a353f24dd10" kindref="member">nrf_uarte_task_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>UARTE.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_cfg<sp/>Pointer<sp/>to<sp/>UARTE<sp/>settings<sp/>structure.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" kindref="member">nrf_uarte_configure</ref>(NRF_UARTE_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_cfg);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>UARTE<sp/>baud<sp/>rate.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>baudrate<sp/>Baud<sp/>rate.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" kindref="member">nrf_uarte_baudrate_set</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref><sp/>baudrate);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="571"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>with<sp/>data<sp/>to<sp/>send.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>transmit.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gab54534a45e185cee807e27b4b2a77d75" kindref="member">nrf_uarte_tx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="582"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>transmit<sp/>buffer<sp/>address.</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__nrf__uarte__hal_1gaa2591b6842b0ef1033a095e9484d0cd8" kindref="member">nrf_uarte_tx_buffer_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="591"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>number<sp/>of<sp/>bytes<sp/>transmitted<sp/>in<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>@retval<sp/>Amount<sp/>of<sp/>bytes<sp/>transmitted.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga4b52b1f7133577c0cf017143d5dc5ee0" kindref="member">nrf_uarte_tx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>buffer<sp/>for<sp/>received<sp/>data.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>length<sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>data<sp/>bytes<sp/>to<sp/>receive.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga1bb25747646dd76f76f5939cc332abc9" kindref="member">nrf_uarte_rx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>reception<sp/>buffer<sp/>address.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>reception<sp/>buffer.</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/>*<sp/><ref refid="group__nrf__uarte__hal_1gaee7e0cd824a91100b21464fca8d789fb" kindref="member">nrf_uarte_rx_buffer_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="620"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>number<sp/>of<sp/>bytes<sp/>received<sp/>in<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/>@retval<sp/>Amount<sp/>of<sp/>bytes<sp/>received.</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" kindref="member">nrf_uarte_rx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga5dae90ae9ce6c18e2fcf8a03d3657602" kindref="member">nrf_uarte_event_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gace95ff2a8e55699ccaec942fc699ab3b" kindref="member">nrf_uarte_event_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga71fbc9d9b1a7a7fb61e54af1db53e9b1" kindref="member">nrf_uarte_event_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaa95a64c55eaf1ef8c5034c701be8cc2f" kindref="member">nrf_uarte_shorts_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gacdf7d64e583ad40f2f6284080af2bb54" kindref="member">nrf_uarte_shorts_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;SHORTS<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaf118432d67372baf106ddebd40706ac0" kindref="member">nrf_uarte_shorts_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga4b45795e5eb4ab6ca6bec57fef5ca900" kindref="member">nrf_uarte_shorts_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SHORTS<sp/>&amp;=<sp/>~(mask);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gaa541c8ca2314f3228f99d6745d51ba03" kindref="member">nrf_uarte_int_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga90865440e200499623f4cc89e01db83d" kindref="member">nrf_uarte_int_enable_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga9b7a75ee458272927873b753c7f0d3ad" kindref="member">nrf_uarte_int_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga122e4a898f64c58603ffe58ebe9f0828" kindref="member">nrf_uarte_subscribe_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga615374471fc4545e9b26e69963c37d95" kindref="member">nrf_uarte_subscribe_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga92107bd9f425356f88682a286ba480e9" kindref="member">nrf_uarte_publish_set</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gacfa67b79ba293492c74d1e670106fcc8" kindref="member">nrf_uarte_publish_clear</ref>(NRF_UARTE_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga1189b14604f6051467bc91b337c45d6a" kindref="member">nrf_uarte_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gafb0484282cce3fb422e1179cbbede5e9" kindref="member">nrf_uarte_errorsrc_get_and_clear</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>errsrc_mask<sp/>=<sp/>p_reg-&gt;ERRORSRC;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ERRORSRC<sp/>=<sp/>errsrc_mask;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errsrc_mask;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga070849bf37e459b44758bfe6cd63859b" kindref="member">nrf_uarte_enable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>UARTE_ENABLE_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gac6629a9ad9c7acbf36515e484a45d166" kindref="member">nrf_uarte_disable</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>UARTE_ENABLE_ENABLE_Disabled;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gae8d7bc802477ebd1b07539e0c9ec8ff1" kindref="member">nrf_uarte_enable_check</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ENABLE<sp/>==<sp/>UARTE_ENABLE_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pseltxd,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrxd)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.TXD<sp/>=<sp/>pseltxd;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.RXD<sp/>=<sp/>pselrxd;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gae12fb2e2d49533008304ff39d250929d" kindref="member">nrf_uarte_txrx_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga3639640032bc1ad556e7706b9ca1dedb" kindref="member">nrf_uarte_txrx_pins_set</ref>(p_reg,<sp/>NRF_UARTE_PSEL_DISCONNECTED,<sp/>NRF_UARTE_PSEL_DISCONNECTED);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gad20aa88659fd7ee2ac284a89730057c4" kindref="member">nrf_uarte_tx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.TXD;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gaf13bcb5b920de9d9d50ee369f4a7d6c8" kindref="member">nrf_uarte_rx_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.RXD;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gae45c79f51d7ee117ede98c03dbc7a724" kindref="member">nrf_uarte_rts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.RTS;</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga143b34d55cfc636dd26a804566eef939" kindref="member">nrf_uarte_cts_pin_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.CTS;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselrts,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pselcts)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.RTS<sp/>=<sp/>pselrts;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.CTS<sp/>=<sp/>pselcts;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga7d032eec8527123301563e29fae8fe8b" kindref="member">nrf_uarte_hwfc_pins_disconnect</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1ga6203bd22ea2ff2288a5634c2ec4a3d7f" kindref="member">nrf_uarte_hwfc_pins_set</ref>(p_reg,<sp/>NRF_UARTE_PSEL_DISCONNECTED,<sp/>NRF_UARTE_PSEL_DISCONNECTED);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga3bdb712b7c870d00490404158c8f6531" kindref="member">nrf_uarte_task_trigger</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1gaf3123d724a34655489ff9a353f24dd10" kindref="member">nrf_uarte_task_address_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__uarte__hal_1gae99a63cb1416b51c2e2282c4c56a6b12" kindref="member">nrf_uarte_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)p_reg<sp/>+<sp/>(uint32_t)task;</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga7ade109c5df6108b680ecc9186f079b5" kindref="member">nrf_uarte_configure</ref>(NRF_UARTE_Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__uarte__config__t" kindref="compound">nrf_uarte_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_cfg)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG<sp/>=<sp/>(uint32_t)p_cfg-&gt;<ref refid="structnrf__uarte__config__t_1afbe9ee13c677c7352f8cbcabf61fc205" kindref="member">parity</ref></highlight></codeline>
<codeline lineno="796"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(UARTE_CONFIG_STOP_Msk)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(uint32_t)p_cfg-&gt;<ref refid="structnrf__uarte__config__t_1ad3a265288de25e9260a928c9cdae9c43" kindref="member">stop</ref></highlight></codeline>
<codeline lineno="798"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="799"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(UARTE_CONFIG_PARITYTYPE_Msk)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(uint32_t)p_cfg-&gt;<ref refid="structnrf__uarte__config__t_1a27cf5a5adfeec88a09325aaae526fabb" kindref="member">paritytype</ref></highlight></codeline>
<codeline lineno="801"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(uint32_t)p_cfg-&gt;<ref refid="structnrf__uarte__config__t_1a087d80bdf09822a25457ed814100081d" kindref="member">hwfc</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga156a5e07b05444cdaebe7bbfa141f0d8" kindref="member">nrf_uarte_baudrate_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__uarte__hal_1ga42eca93d0e7d6354bcc75d6e2cdb462e" kindref="member">nrf_uarte_baudrate_t</ref><sp/>baudrate)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;BAUDRATE<sp/>=<sp/>baudrate;</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1gab54534a45e185cee807e27b4b2a77d75" kindref="member">nrf_uarte_tx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.TX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__nrf__uarte__hal_1gaa2591b6842b0ef1033a095e9484d0cd8" kindref="member">nrf_uarte_tx_buffer_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)p_reg-&gt;DMA.TX.PTR;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*)p_reg-&gt;TXD.PTR;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga4b52b1f7133577c0cf017143d5dc5ee0" kindref="member">nrf_uarte_tx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.TX.AMOUNT;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;TXD.AMOUNT;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__uarte__hal_1ga1bb25747646dd76f76f5939cc332abc9" kindref="member">nrf_uarte_rx_buffer_set</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DMA.RX.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.PTR<sp/><sp/><sp/><sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.MAXCNT<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint8_t<sp/>*<sp/><ref refid="group__nrf__uarte__hal_1gaee7e0cd824a91100b21464fca8d789fb" kindref="member">nrf_uarte_rx_buffer_get</ref>(NRF_UARTE_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/>*)p_reg-&gt;DMA.RX.PTR;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/>*)p_reg-&gt;RXD.PTR;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__uarte__hal_1ga61ad399cf37f988ff775dd594edee863" kindref="member">nrf_uarte_rx_amount_get</ref>(NRF_UARTE_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_UARTE_HAS_DMA_REG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;DMA.RX.AMOUNT;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RXD.AMOUNT;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_UARTE_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_uarte.h"/>
  </compounddef>
</doxygen>
