<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__tdm_8h" kind="file" language="C++">
    <compoundname>nrf_tdm.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_tdm.h</label>
        <link refid="nrf__tdm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrf__tdm__config__t" prot="public">nrf_tdm_config_t</innerclass>
    <innerclass refid="structnrf__tdm__pins__t" prot="public">nrf_tdm_pins_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__tdm__hal_1ga01dee3a0830499e4ca89c454da681860" prot="public" static="no">
        <name>NRF_TDM_PIN_NOT_CONNECTED</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
<para>This value can be provided as a parameter for the <ref refid="group__nrf__tdm__hal_1ga1d9b942da033f0a8fc354b8037a3c650" kindref="member">nrf_tdm_pins_set</ref> function call to specify that the given TDM signal (SDOUT, SDIN, or MCK) shall not be connected to a physical pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="62" column="9" bodyfile="hal/nrf_tdm.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_task_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a9052c720c7d48db982836f23fdc317a5" prot="public">
          <name>NRF_TDM_TASK_START</name>
          <initializer>= offsetof(NRF_TDM_Type, TASKS_START)</initializer>
          <briefdescription>
<para>Starts continuous TDM transfer. Also starts the MCK generator if this is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a8b4ee3da2384d525f31107bd89bd8b7a" prot="public">
          <name>NRF_TDM_TASK_STOP</name>
          <initializer>= offsetof(NRF_TDM_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stops TDM transfer after completion of MAXCNT words. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a26a138fadb8a545426835e67c943b9be" prot="public">
          <name>NRF_TDM_TASK_ABORT</name>
          <initializer>= offsetof(NRF_TDM_Type, TASKS_ABORT)</initializer>
          <briefdescription>
<para>Aborts TDM transfer without completing MAXCNT words. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="65" column="1" bodyfile="hal/nrf_tdm.h" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_event_t</name>
        <enumvalue id="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a6e701a11298b48d44dbc4dfa41d3dc6b" prot="public">
          <name>NRF_TDM_EVENT_RXPTRUPD</name>
          <initializer>= offsetof(NRF_TDM_Type, EVENTS_RXPTRUPD)</initializer>
          <briefdescription>
<para>The RXD.PTR register has been copied to internal double buffers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a35adca94a2257909f4881e0b99de21ac" prot="public">
          <name>NRF_TDM_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_TDM_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>TDM transfer stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3af75e6a221449f505996b5e216d74e3a0" prot="public">
          <name>NRF_TDM_EVENT_ABORTED</name>
          <initializer>= offsetof(NRF_TDM_Type, EVENTS_ABORTED)</initializer>
          <briefdescription>
<para>TDM transfer aborted. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3ae394c5200a02833b0c297fada45f34ff" prot="public">
          <name>NRF_TDM_EVENT_TXPTRUPD</name>
          <initializer>= offsetof(NRF_TDM_Type, EVENTS_TXPTRUPD)</initializer>
          <briefdescription>
<para>The TXD.PTR register has been copied to internal double buffers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a48210f2f09cc86f2ac5f7d5a573bf96a" prot="public">
          <name>NRF_TDM_EVENT_MAXCNT</name>
          <initializer>= offsetof(NRF_TDM_Type, EVENTS_MAXCNT)</initializer>
          <briefdescription>
<para>MAXCNT block event, generated on the active edge of FSYNC of every MAXCNT block. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="73" column="1" bodyfile="hal/nrf_tdm.h" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga93635032c2231276feb85ba9880fd80e" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_int_mask_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80eac2e39023d369367c170867b127193d19" prot="public">
          <name>NRF_TDM_INT_RXPTRUPD_MASK_MASK</name>
          <initializer>= TDM_INTENSET_RXPTRUPD_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXPTRUPD event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ea1dacdfbea6cc5bffaa9b80fa6f973129" prot="public">
          <name>NRF_TDM_INT_STOPPED_MASK_MASK</name>
          <initializer>= TDM_INTENSET_STOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on STOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ea027ab8a65ac2a725f0eac9619238904e" prot="public">
          <name>NRF_TDM_INT_ABORTED_MASK</name>
          <initializer>= TDM_INTENSET_ABORTED_Msk</initializer>
          <briefdescription>
<para>Interrupt on EVENTS_ABORTED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ead298da2c4dc4de89c22b3a54d144a6c0" prot="public">
          <name>NRF_TDM_INT_TXPTRUPD_MASK_MASK</name>
          <initializer>= TDM_INTENSET_TXPTRUPD_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXPTRUPD event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80eaf93a4dc0ea0af6c23a56619684cfd16d" prot="public">
          <name>NRF_TDM_INT_MAXCNT_MASK</name>
          <initializer>= TDM_INTENSET_MAXCNT_Msk</initializer>
          <briefdescription>
<para>Interrupt on EVENTS_MAXCNT event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="83" column="1" bodyfile="hal/nrf_tdm.h" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga3be5f370705bf71041cda43df0b53bb5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_mode_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga3be5f370705bf71041cda43df0b53bb5ac5bd0e872a719775b9b8a30855f9f3d2" prot="public">
          <name>NRF_TDM_MODE_MASTER</name>
          <initializer>= TDM_CONFIG_MODE_MODE_Master</initializer>
          <briefdescription>
<para>Master mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga3be5f370705bf71041cda43df0b53bb5ab1a1b15d0d8a8ec15fab5529500b2668" prot="public">
          <name>NRF_TDM_MODE_SLAVE</name>
          <initializer>= TDM_CONFIG_MODE_MODE_Slave</initializer>
          <briefdescription>
<para>Slave mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM modes of operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="93" column="1" bodyfile="hal/nrf_tdm.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1gac4e15273a65acc1dc5b177913d1ff10f" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_rxtxen_t</name>
        <enumvalue id="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fae15e37dfc0b9d42ab1c7722df5260b41" prot="public">
          <name>NRF_TDM_RXTXEN_DUPLEX</name>
          <initializer>= TDM_CONFIG_RXTXEN_RXTXEN_Duplex</initializer>
          <briefdescription>
<para>Enable reception and transmission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fa41fa172f8cd73989314b5bde8f9b4f11" prot="public">
          <name>NRF_TDM_RXTXEN_RX</name>
          <initializer>= TDM_CONFIG_RXTXEN_RXTXEN_Rx</initializer>
          <briefdescription>
<para>Enable reception, disable transmission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fa69531ed690f5735bfb64269ee40fb745" prot="public">
          <name>NRF_TDM_RXTXEN_TX</name>
          <initializer>= TDM_CONFIG_RXTXEN_RXTXEN_Tx</initializer>
          <briefdescription>
<para>Enable transmission, disable reception. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM Reception and transmission settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="100" column="1" bodyfile="hal/nrf_tdm.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1gac8697e2b3c59454bdad94348043b9832" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_mck_div_t</name>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832af6d9be1126d471251a809414dd7f0f49" prot="public">
          <name>NRF_TDM_MCK_DIV_2</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV2</initializer>
          <briefdescription>
<para>MCK divided by 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a30612a410c8903499fe9a30f84132c59" prot="public">
          <name>NRF_TDM_MCK_DIV_3</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV3</initializer>
          <briefdescription>
<para>MCK divided by 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ad02a6c0f9d92cfe01fdd3a08799f50b1" prot="public">
          <name>NRF_TDM_MCK_DIV_4</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV4</initializer>
          <briefdescription>
<para>MCK divided by 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832adb08bd844538732f1ed2c10da92bb01f" prot="public">
          <name>NRF_TDM_MCK_DIV_5</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV5</initializer>
          <briefdescription>
<para>MCK divided by 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a218a84604f642081896b645d16958c44" prot="public">
          <name>NRF_TDM_MCK_DIV_6</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV6</initializer>
          <briefdescription>
<para>MCK divided by 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a5a16a6bf41de2cc0f4d77dd47594a716" prot="public">
          <name>NRF_TDM_MCK_DIV_8</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV8</initializer>
          <briefdescription>
<para>MCK divided by 8. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a840664479cdc8caa174d8acf39f0f9c0" prot="public">
          <name>NRF_TDM_MCK_DIV_10</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV10</initializer>
          <briefdescription>
<para>MCK divided by 10. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a5277d814f47d204c9f068e40e8f8f7f8" prot="public">
          <name>NRF_TDM_MCK_DIV_11</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV11</initializer>
          <briefdescription>
<para>MCK divided by 11. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832acb4fbbb0d5ae5a684d95bfea0335a27b" prot="public">
          <name>NRF_TDM_MCK_DIV_15</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV15</initializer>
          <briefdescription>
<para>MCK divided by 15. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a9dc5d823cae17a07f453d6e1cbfb2114" prot="public">
          <name>NRF_TDM_MCK_DIV_16</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV16</initializer>
          <briefdescription>
<para>MCK divided by 16. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832adc2ac62fb9e8a79d69027862eb8489ce" prot="public">
          <name>NRF_TDM_MCK_DIV_21</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV21</initializer>
          <briefdescription>
<para>MCK divided by 21. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a0b954b97f4b087d5cdefb5f0f68162bd" prot="public">
          <name>NRF_TDM_MCK_DIV_23</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV23</initializer>
          <briefdescription>
<para>MCK divided by 23. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a3b4459eebdac8393edf68a1016f5e762" prot="public">
          <name>NRF_TDM_MCK_DIV_30</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV30</initializer>
          <briefdescription>
<para>MCK divided by 30. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a174b1ec40b544dfe170e76fbd22b5a45" prot="public">
          <name>NRF_TDM_MCK_DIV_31</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV31</initializer>
          <briefdescription>
<para>MCK divided by 31. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a97d5f2204c5102d10dbfcdc175e6d571" prot="public">
          <name>NRF_TDM_MCK_DIV_32</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV32</initializer>
          <briefdescription>
<para>MCK divided by 32. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ae85cae1002c797bd24ad3dbd2fb55348" prot="public">
          <name>NRF_TDM_MCK_DIV_42</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV42</initializer>
          <briefdescription>
<para>MCK divided by 42. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832abb36700d688527e060a7009443a44112" prot="public">
          <name>NRF_TDM_MCK_DIV_63</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV63</initializer>
          <briefdescription>
<para>MCK divided by 63. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ae863f29af1ee2d82695c1656f5fca2a6" prot="public">
          <name>NRF_TDM_MCK_DIV_125</name>
          <initializer>= TDM_CONFIG_MCK_DIV_DIV_CKDIV125</initializer>
          <briefdescription>
<para>MCK divided by 125. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM master clock divider settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="108" column="1" bodyfile="hal/nrf_tdm.h" bodystart="109" bodyend="128"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1gaf87a9bb7adc4ad5789a5b078ce59d9c1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_sck_div_t</name>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a6997c9c0f45d649c9716264a89086ecc" prot="public">
          <name>NRF_TDM_SCK_DIV_2</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV2</initializer>
          <briefdescription>
<para>SCK divided by 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a0ab2f19f5258d26641f2c3703c200db0" prot="public">
          <name>NRF_TDM_SCK_DIV_3</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV3</initializer>
          <briefdescription>
<para>SCK divided by 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aff13738c460638853b73c441884d2001" prot="public">
          <name>NRF_TDM_SCK_DIV_4</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV4</initializer>
          <briefdescription>
<para>SCK divided by 4. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a2491e195620e726303a22b75f4cdc583" prot="public">
          <name>NRF_TDM_SCK_DIV_5</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV5</initializer>
          <briefdescription>
<para>SCK divided by 5. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a1e5c13d7baa82426ea9b52985a825e5a" prot="public">
          <name>NRF_TDM_SCK_DIV_6</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV6</initializer>
          <briefdescription>
<para>SCK divided by 6. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aee37b23f50695606e1d834d70576e031" prot="public">
          <name>NRF_TDM_SCK_DIV_8</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV8</initializer>
          <briefdescription>
<para>SCK divided by 8. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1ae416559183fb24ba9c583bf71373f4e4" prot="public">
          <name>NRF_TDM_SCK_DIV_10</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV10</initializer>
          <briefdescription>
<para>SCK divided by 10. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aa8137f698f5e5e0891a01beb8269cf75" prot="public">
          <name>NRF_TDM_SCK_DIV_11</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV11</initializer>
          <briefdescription>
<para>SCK divided by 11. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a833578830ef4a74ca20a6681e6826173" prot="public">
          <name>NRF_TDM_SCK_DIV_15</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV15</initializer>
          <briefdescription>
<para>SCK divided by 15. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a9191fb689497cd5346a8ee7b91201826" prot="public">
          <name>NRF_TDM_SCK_DIV_16</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV16</initializer>
          <briefdescription>
<para>SCK divided by 16. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1ad95846dc804651ff3eafe3e4f230c203" prot="public">
          <name>NRF_TDM_SCK_DIV_21</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV21</initializer>
          <briefdescription>
<para>SCK divided by 21. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a19d1522960afc5ba4150ddcce3a64d00" prot="public">
          <name>NRF_TDM_SCK_DIV_23</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV23</initializer>
          <briefdescription>
<para>SCK divided by 23. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a325ef83e328b44ba9b3caeadc2697564" prot="public">
          <name>NRF_TDM_SCK_DIV_30</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV30</initializer>
          <briefdescription>
<para>SCK divided by 30. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a8ae1d138ad7e864f741533dfeb60c1e6" prot="public">
          <name>NRF_TDM_SCK_DIV_31</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV31</initializer>
          <briefdescription>
<para>SCK divided by 31. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1af0cd39af9ee3958915c62c46396165a4" prot="public">
          <name>NRF_TDM_SCK_DIV_32</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV32</initializer>
          <briefdescription>
<para>SCK divided by 32. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aca307b76d17a32f9c8e1263a674e51a7" prot="public">
          <name>NRF_TDM_SCK_DIV_42</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV42</initializer>
          <briefdescription>
<para>SCK divided by 42. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a68db60baed9cf4843bddddfefe1e400b" prot="public">
          <name>NRF_TDM_SCK_DIV_63</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV63</initializer>
          <briefdescription>
<para>SCK divided by 63. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a750a26e1f0dc58b79c0907037af7e846" prot="public">
          <name>NRF_TDM_SCK_DIV_125</name>
          <initializer>= TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV125</initializer>
          <briefdescription>
<para>SCK divided by 125. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM serial clock divider settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="131" column="1" bodyfile="hal/nrf_tdm.h" bodystart="132" bodyend="151"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_src_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga2e637b0d1773e5c4652fcdbd7236dc18a7d5f0e760d90c85a340a1c78b63d4384" prot="public">
          <name>NRF_TDM_SRC_PCLK32M</name>
          <initializer>= TDM_CONFIG_SCK_SRC_CLKSRC_PCLK32M</initializer>
          <briefdescription>
<para>32MHz peripheral clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga2e637b0d1773e5c4652fcdbd7236dc18af413764b4a20c8e13e0b7e2dbd10211e" prot="public">
          <name>NRF_TDM_SRC_ACLK</name>
          <initializer>= TDM_CONFIG_SCK_SRC_CLKSRC_ACLK</initializer>
          <briefdescription>
<para>Audio PLL clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM clock source selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="154" column="1" bodyfile="hal/nrf_tdm.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga645baf7e40c3ea2bd03f17e0a4e8dd9b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_swidth_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba1734a0000f7ef76a63f47a4bf6b96fb6" prot="public">
          <name>NRF_TDM_SWIDTH_8BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_8Bit</initializer>
          <briefdescription>
<para>8 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9bace087fbba5de0b5d269efd6506052fab" prot="public">
          <name>NRF_TDM_SWIDTH_16BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_16Bit</initializer>
          <briefdescription>
<para>16 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9bad3ed49fc2ca05010736a33aa16f929df" prot="public">
          <name>NRF_TDM_SWIDTH_24BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_24Bit</initializer>
          <briefdescription>
<para>24 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9babae97faaf52aa52f6de6788c9c30817a" prot="public">
          <name>NRF_TDM_SWIDTH_32BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_32Bit</initializer>
          <briefdescription>
<para>32 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba9dff678c29a45df7f1638bcac4182a0c" prot="public">
          <name>NRF_TDM_SWIDTH_8BIT_IN16BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_8BitIn16</initializer>
          <briefdescription>
<para>8 bit sample in a 16-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9baf438af7cf58d8cad0f6d1588d222192c" prot="public">
          <name>NRF_TDM_SWIDTH_8BIT_IN32BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_8BitIn32</initializer>
          <briefdescription>
<para>8 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9badccc15afaf26cb9af4e7bc3b07d69a53" prot="public">
          <name>NRF_TDM_SWIDTH_16BIT_IN32BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_16BitIn32</initializer>
          <briefdescription>
<para>16 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba23457139a97e16161172170102e2f965" prot="public">
          <name>NRF_TDM_SWIDTH_24BIT_IN32BIT</name>
          <initializer>= TDM_CONFIG_SWIDTH_SWIDTH_24BitIn32</initializer>
          <briefdescription>
<para>24 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM sample widths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="161" column="1" bodyfile="hal/nrf_tdm.h" bodystart="162" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga75960ff2f5a41a6708af0ca30849c2eb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_align_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga75960ff2f5a41a6708af0ca30849c2eba6c8a3cdc6ab878d64c857d10dabbcb70" prot="public">
          <name>NRF_TDM_ALIGN_LEFT</name>
          <initializer>= TDM_CONFIG_ALIGN_ALIGN_Left</initializer>
          <briefdescription>
<para>Left-aligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga75960ff2f5a41a6708af0ca30849c2ebaa72def14bba086fd88fbe1bdf94a89cd" prot="public">
          <name>NRF_TDM_ALIGN_RIGHT</name>
          <initializer>= TDM_CONFIG_ALIGN_ALIGN_Right</initializer>
          <briefdescription>
<para>Right-aligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM alignments of sample within a frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="174" column="1" bodyfile="hal/nrf_tdm.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga9747ea0cc20eb5817c55d1e72b683bc5" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_channel_mask_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a1f824edf8aed1257131d4347df74e081" prot="public">
          <name>NRF_TDM_CHANNEL_RX0_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx0Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 0 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5aee3b894bb51275ee6ce688edfe2f1bc8" prot="public">
          <name>NRF_TDM_CHANNEL_RX1_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx1Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 1 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a062ae730e687dbd0aafe224722385a3f" prot="public">
          <name>NRF_TDM_CHANNEL_RX2_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx2Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 2 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a03811d571543f6a9a56ed7b6339e5761" prot="public">
          <name>NRF_TDM_CHANNEL_RX3_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx3Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 3 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5acb9374c841a796a630011d98c831dff0" prot="public">
          <name>NRF_TDM_CHANNEL_RX4_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx4Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 4 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5ad7fd6067050fce807591d5ce6b553150" prot="public">
          <name>NRF_TDM_CHANNEL_RX5_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx5Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 5 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5acdd5a65ccd1c616d16a1470455f469e6" prot="public">
          <name>NRF_TDM_CHANNEL_RX6_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx6Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 6 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5ad55ab60f02368b13c3a2c711cc4abef1" prot="public">
          <name>NRF_TDM_CHANNEL_RX7_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Rx7Enable_Msk</initializer>
          <briefdescription>
<para>Enable RX channel 7 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a5f5e4fd1c1bb1bb51d4110d3470600f1" prot="public">
          <name>NRF_TDM_CHANNEL_TX0_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx0Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 0 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5adec73f33e0ed9c6565438665ee672f4e" prot="public">
          <name>NRF_TDM_CHANNEL_TX1_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx1Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 1 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a62cb03c57150d9d6f562141c09a730da" prot="public">
          <name>NRF_TDM_CHANNEL_TX2_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx2Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 2 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a90eab4ee34cb20eacdb8d56f424a6fed" prot="public">
          <name>NRF_TDM_CHANNEL_TX3_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx3Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 3 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a9760b9e905c6469b3e57d45724e94d9f" prot="public">
          <name>NRF_TDM_CHANNEL_TX4_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx4Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 4 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a120e84b3f901a728c01f13f1fbab9a53" prot="public">
          <name>NRF_TDM_CHANNEL_TX5_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx5Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 5 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5aed181f038b96ad667b48f1c9180610d9" prot="public">
          <name>NRF_TDM_CHANNEL_TX6_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx6Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 6 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a7dfea12c649a0a57ef0532a87544218c" prot="public">
          <name>NRF_TDM_CHANNEL_TX7_MASK</name>
          <initializer>= TDM_CONFIG_CHANNEL_MASK_Tx7Enable_Msk</initializer>
          <briefdescription>
<para>Enable TX channel 7 data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM channel mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="181" column="1" bodyfile="hal/nrf_tdm.h" bodystart="182" bodyend="199"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga926563f9b64a577da2834d00fc4bf895" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_channels_count_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a16d516854fed150710855fad54720bb7" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_1</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm1Ch</initializer>
          <briefdescription>
<para>1 channel audio (mono). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a15b3e0d83e2488aa47eb723a20fd995c" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_2</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm2Ch</initializer>
          <briefdescription>
<para>2 channels audio (stereo). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895aa5ed271455f26e2b2ab3836315ab97f9" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_3</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm3Ch</initializer>
          <briefdescription>
<para>3 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a0d296b34095b6cf0c338c8960751ae4f" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_4</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm4Ch</initializer>
          <briefdescription>
<para>4 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a39ba2e5d7c0b566990404d2e33959fe6" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_5</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm5Ch</initializer>
          <briefdescription>
<para>5 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a48a6247c68ddbba23182b4db0cf18656" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_6</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm6Ch</initializer>
          <briefdescription>
<para>6 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895af35af2c7ecf951346705b88169efdf95" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_7</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm7Ch</initializer>
          <briefdescription>
<para>7 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a99a8c7e0dd73317676dceff9fbb50f2c" prot="public">
          <name>NRF_TDM_CHANNELS_COUNT_8</name>
          <initializer>= TDM_CONFIG_CHANNEL_NUM_NUM_Tdm8Ch</initializer>
          <briefdescription>
<para>8 channels audio. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM number of channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="202" column="1" bodyfile="hal/nrf_tdm.h" bodystart="203" bodyend="212"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga83c1473c6fc7df68a1208c92b8d9e0ee" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_channel_delay_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea5c7c2af7d7245860fac8d89571e3a36e" prot="public">
          <name>NRF_TDM_CHANNEL_DELAY_NONE</name>
          <initializer>= TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay0Ck</initializer>
          <briefdescription>
<para>No delay. Use with DSP/Aligned format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea2877879b1d3b4723895ee2f807afce5f" prot="public">
          <name>NRF_TDM_CHANNEL_DELAY_1CK</name>
          <initializer>= TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay1Ck</initializer>
          <briefdescription>
<para>1 clock pulse delay. Used with original TDM format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea764f65a1355e4a9c4ec544b3031a5558" prot="public">
          <name>NRF_TDM_CHANNEL_DELAY_2CK</name>
          <initializer>= TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay2Ck</initializer>
          <briefdescription>
<para>2 clock pulses delay. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM channel delay. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="215" column="1" bodyfile="hal/nrf_tdm.h" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga37b518f0a9dc48ae43585e13a55bf5eb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_polarity_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5eba794ce754ef416f4fcda62d494adae618" prot="public">
          <name>NRF_TDM_POLARITY_POSEDGE</name>
          <briefdescription>
<para>Synchronization at rising edge of the reference signal. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5ebac3361c0d19366e95e8c5cf8b56a56353" prot="public">
          <name>NRF_TDM_POLARITY_NEGEDGE</name>
          <briefdescription>
<para>Synchronization at falling edge of the reference signal. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM signal polarity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="223" column="1" bodyfile="hal/nrf_tdm.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__tdm__hal_1ga97d81ae839402941bdb26c30ba11118b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_tdm_fsync_duration_t</name>
        <enumvalue id="group__nrf__tdm__hal_1gga97d81ae839402941bdb26c30ba11118baf75aad0ddae9dcff51a5dd181942b67b" prot="public">
          <name>NRF_TDM_FSYNC_DURATION_SCK</name>
          <initializer>= TDM_CONFIG_FSYNC_DURATION_DURATION_Sck</initializer>
          <briefdescription>
<para>FSYNC is active for the duration of one SCK pulse. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__tdm__hal_1gga97d81ae839402941bdb26c30ba11118baa91fd69423a457cf4de2320beb902999" prot="public">
          <name>NRF_TDM_FSYNC_DURATION_CHANNEL</name>
          <initializer>= TDM_CONFIG_FSYNC_DURATION_DURATION_Channel</initializer>
          <briefdescription>
<para>FSYNC is active for the duration of channel transmission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TDM frame synchronization pulse duration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="230" column="1" bodyfile="hal/nrf_tdm.h" bodystart="231" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga00a802c4b15d45ca20676f1395485441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_task_trigger</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_task_t task)</argsstring>
        <name>nrf_tdm_task_trigger</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified TDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="635" column="24" bodyfile="hal/nrf_tdm.h" bodystart="635" bodyend="639" declfile="hal/nrf_tdm.h" declline="274" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga1825c917fd18dedb05fdcae2be0d96a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_task_address_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg, nrf_tdm_task_t task)</argsstring>
        <name>nrf_tdm_task_address_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TDM task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="641" column="28" bodyfile="hal/nrf_tdm.h" bodystart="641" bodyend="645" declfile="hal/nrf_tdm.h" declline="285" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga841114ddf0fd7e80c4fb4f7b7e17306f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_event_clear</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_event_t event)</argsstring>
        <name>nrf_tdm_event_clear</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified TDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="647" column="24" bodyfile="hal/nrf_tdm.h" bodystart="647" bodyend="652" declfile="hal/nrf_tdm.h" declline="294" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga2c9c88e805598cec52f4ac3137cc09cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_tdm_event_check</definition>
        <argsstring>(NRF_TDM_Type const *p_reg, nrf_tdm_event_t event)</argsstring>
        <name>nrf_tdm_event_check</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the TDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="654" column="24" bodyfile="hal/nrf_tdm.h" bodystart="654" bodyend="658" declfile="hal/nrf_tdm.h" declline="306" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga902ed508b30545094c5993e5e5258dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_event_address_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg, nrf_tdm_event_t event)</argsstring>
        <name>nrf_tdm_event_address_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified TDM event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="660" column="28" bodyfile="hal/nrf_tdm.h" bodystart="660" bodyend="664" declfile="hal/nrf_tdm.h" declline="317" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga4c8919c26ac774ef37713e061158fc7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_int_enable</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_tdm_int_enable</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__tdm__hal_1ga93635032c2231276feb85ba9880fd80e" kindref="member">nrf_tdm_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="666" column="24" bodyfile="hal/nrf_tdm.h" bodystart="666" bodyend="669" declfile="hal/nrf_tdm.h" declline="327" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gad25f25329310340dd3e74c76c0dd650d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_int_disable</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_tdm_int_disable</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__tdm__hal_1ga93635032c2231276feb85ba9880fd80e" kindref="member">nrf_tdm_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="671" column="24" bodyfile="hal/nrf_tdm.h" bodystart="671" bodyend="674" declfile="hal/nrf_tdm.h" declline="336" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gae1d6cbaab99744e20118373c1d284a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_int_enable_check</definition>
        <argsstring>(NRF_TDM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_tdm_int_enable_check</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__tdm__hal_1ga93635032c2231276feb85ba9880fd80e" kindref="member">nrf_tdm_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="676" column="28" bodyfile="hal/nrf_tdm.h" bodystart="676" bodyend="679" declfile="hal/nrf_tdm.h" declline="347" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga764444243bb55ad64fc73332d14eafd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_enable</definition>
        <argsstring>(NRF_TDM_Type *p_reg)</argsstring>
        <name>nrf_tdm_enable</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the TDM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="681" column="24" bodyfile="hal/nrf_tdm.h" bodystart="681" bodyend="684" declfile="hal/nrf_tdm.h" declline="354" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gabe1142e6da8b387273ec361ed7d5c44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_disable</definition>
        <argsstring>(NRF_TDM_Type *p_reg)</argsstring>
        <name>nrf_tdm_disable</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the TDM peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="686" column="24" bodyfile="hal/nrf_tdm.h" bodystart="686" bodyend="689" declfile="hal/nrf_tdm.h" declline="361" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga9068005601734bcd1401ba0115c7a887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_tdm_enable_check</definition>
        <argsstring>(NRF_TDM_Type *p_reg)</argsstring>
        <name>nrf_tdm_enable_check</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the TDM peripheral is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The TDM is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The TDM is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="691" column="24" bodyfile="hal/nrf_tdm.h" bodystart="691" bodyend="694" declfile="hal/nrf_tdm.h" declline="371" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gac9e604cf4675df23fec17eb112beca1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_subscribe_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_task_t task, uint8_t channel)</argsstring>
        <name>nrf_tdm_subscribe_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given TDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="382" column="24" declfile="hal/nrf_tdm.h" declline="382" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga8366779fe0d0aa31e81b32852b5dd371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_subscribe_clear</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_task_t task)</argsstring>
        <name>nrf_tdm_subscribe_clear</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given TDM task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="393" column="24" declfile="hal/nrf_tdm.h" declline="393" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga34e7ab3c4c352adab7b39a6e6e0d3d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_publish_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_event_t event, uint8_t channel)</argsstring>
        <name>nrf_tdm_publish_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given TDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="404" column="24" declfile="hal/nrf_tdm.h" declline="404" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gaaeedf454fc5474eb2ab7c9ad8c13138c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_publish_clear</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_event_t event)</argsstring>
        <name>nrf_tdm_publish_clear</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given TDM event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="415" column="24" declfile="hal/nrf_tdm.h" declline="415" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga1d9b942da033f0a8fc354b8037a3c650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_pins_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_pins_t const *p_pins)</argsstring>
        <name>nrf_tdm_pins_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__tdm__pins__t" kindref="compound">nrf_tdm_pins_t</ref> const *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for configuring TDM pins. </para>
        </briefdescription>
        <detaileddescription>
<para>Usage of the SDOUT, SDIN, and MCK signals is optional. If a given signal is not needed, pass the <ref refid="group__nrf__tdm__hal_1ga01dee3a0830499e4ca89c454da681860" kindref="member">NRF_TDM_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with pins selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="726" column="24" bodyfile="hal/nrf_tdm.h" bodystart="726" bodyend="733" declfile="hal/nrf_tdm.h" declline="429" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga8a0bc908e8cc94d0223fac80153f6299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_sck_pin_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_sck_pin_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="735" column="28" bodyfile="hal/nrf_tdm.h" bodystart="735" bodyend="738" declfile="hal/nrf_tdm.h" declline="438" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga4f94a1a5f2f5cdd014336c84f3b3c2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_fsync_pin_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_fsync_pin_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the FSYNC pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FSYNC pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="740" column="28" bodyfile="hal/nrf_tdm.h" bodystart="740" bodyend="743" declfile="hal/nrf_tdm.h" declline="447" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga78f235fc95e17d903575b8ea86d518c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_mck_pin_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_mck_pin_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the MCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="745" column="28" bodyfile="hal/nrf_tdm.h" bodystart="745" bodyend="748" declfile="hal/nrf_tdm.h" declline="456" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga5837d6347538da6e0a1e3ad6d8aef659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_sdout_pin_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_sdout_pin_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SDOUT pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDOUT pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="750" column="28" bodyfile="hal/nrf_tdm.h" bodystart="750" bodyend="753" declfile="hal/nrf_tdm.h" declline="465" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga690e584ecb7c76e301afb2447c80c32b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_sdin_pin_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_sdin_pin_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SDIN pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIN pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="755" column="28" bodyfile="hal/nrf_tdm.h" bodystart="755" bodyend="758" declfile="hal/nrf_tdm.h" declline="474" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga443c5eea61c71bff96b77892db127f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_configure</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_config_t const *p_config)</argsstring>
        <name>nrf_tdm_configure</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__tdm__config__t" kindref="compound">nrf_tdm_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting the TDM peripheral configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="760" column="24" bodyfile="hal/nrf_tdm.h" bodystart="760" bodyend="777" declfile="hal/nrf_tdm.h" declline="482" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gaea100566cc9480a44b393c8a96719916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_mck_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, bool enable)</argsstring>
        <name>nrf_tdm_mck_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the master clock generator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the master clock generator is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="779" column="24" bodyfile="hal/nrf_tdm.h" bodystart="779" bodyend="784" declfile="hal/nrf_tdm.h" declline="490" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_rx_count_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint16_t size)</argsstring>
        <name>nrf_tdm_rx_count_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for setting up the TDM RX transfer length. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function sets up the RX buffer size. At least one of <ref refid="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" kindref="member">nrf_tdm_rx_count_set</ref> or <ref refid="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" kindref="member">nrf_tdm_tx_count_set</ref> functions must be called before starting the transmission. Also <ref refid="group__nrf__tdm__hal_1ga9c2678e160973e03d1c0d86b6396aaf1" kindref="member">nrf_tdm_transfer_direction_set</ref> and <ref refid="group__nrf__tdm__hal_1ga61fcb0ef7327e008cc398ae843e4ddc7" kindref="member">nrf_tdm_rx_buffer_set</ref> should be called before starting the transmission.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer (in 32-bit words). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="786" column="24" bodyfile="hal/nrf_tdm.h" bodystart="786" bodyend="794" declfile="hal/nrf_tdm.h" declline="503" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_tx_count_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint16_t size)</argsstring>
        <name>nrf_tdm_tx_count_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Function for setting up the TDM TX transfer length. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function sets up the RX buffer size. At least one of <ref refid="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" kindref="member">nrf_tdm_rx_count_set</ref> or <ref refid="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" kindref="member">nrf_tdm_tx_count_set</ref> functions must be called before starting the transmission. Also <ref refid="group__nrf__tdm__hal_1ga9c2678e160973e03d1c0d86b6396aaf1" kindref="member">nrf_tdm_transfer_direction_set</ref> and <ref refid="group__nrf__tdm__hal_1gaf375ce34941a6b5af8513c6655001c57" kindref="member">nrf_tdm_tx_buffer_set</ref> should be called before starting the transmission.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer (in 32-bit words). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="796" column="24" bodyfile="hal/nrf_tdm.h" bodystart="796" bodyend="804" declfile="hal/nrf_tdm.h" declline="517" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga9c2678e160973e03d1c0d86b6396aaf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_transfer_direction_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_rxtxen_t dir)</argsstring>
        <name>nrf_tdm_transfer_direction_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1gac4e15273a65acc1dc5b177913d1ff10f" kindref="member">nrf_tdm_rxtxen_t</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Function for setting up the direction of the TDM transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmission direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="806" column="24" bodyfile="hal/nrf_tdm.h" bodystart="806" bodyend="810" declfile="hal/nrf_tdm.h" declline="526" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga61fcb0ef7327e008cc398ae843e4ddc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_rx_buffer_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint32_t *p_buffer)</argsstring>
        <name>nrf_tdm_rx_buffer_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Function for setting the pointer to the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The size of the buffer can be set only by calling <ref refid="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" kindref="member">nrf_tdm_rx_count_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the receive buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="812" column="24" bodyfile="hal/nrf_tdm.h" bodystart="812" bodyend="816" declfile="hal/nrf_tdm.h" declline="538" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga372465489bc0de6d3ad5f688cd51cbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t *</type>
        <definition>NRF_STATIC_INLINE uint32_t * nrf_tdm_rx_buffer_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_rx_buffer_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the receive buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="818" column="29" bodyfile="hal/nrf_tdm.h" bodystart="818" bodyend="821" declfile="hal/nrf_tdm.h" declline="548" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gaf375ce34941a6b5af8513c6655001c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_tx_buffer_set</definition>
        <argsstring>(NRF_TDM_Type *p_reg, uint32_t const *p_buffer)</argsstring>
        <name>nrf_tdm_tx_buffer_set</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Function for setting the pointer to the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The size of the buffer can be set only by calling <ref refid="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" kindref="member">nrf_tdm_tx_count_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the transmit buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="823" column="24" bodyfile="hal/nrf_tdm.h" bodystart="823" bodyend="827" declfile="hal/nrf_tdm.h" declline="559" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gac7894e41679574d0b1c0d3e87c4d292e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_current_tx_transfer_amount_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_current_tx_transfer_amount_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes transferred in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes transferred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="829" column="28" bodyfile="hal/nrf_tdm.h" bodystart="829" bodyend="832" declfile="hal/nrf_tdm.h" declline="569" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga0933d2abd9b6c7d8866bee08ffec044e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_last_tx_transfer_amount_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_last_tx_transfer_amount_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes transferred in the last transaction. The value has been updated after the END event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes transferred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="834" column="28" bodyfile="hal/nrf_tdm.h" bodystart="834" bodyend="837" declfile="hal/nrf_tdm.h" declline="579" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gac430d295dff8ef6b0b5a1a9313212b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_current_rx_transfer_amount_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_current_rx_transfer_amount_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes received in the current transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes received. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="839" column="28" bodyfile="hal/nrf_tdm.h" bodystart="839" bodyend="842" declfile="hal/nrf_tdm.h" declline="588" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga016e63814509245e4f08b79785aac096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_tdm_last_rx_transfer_amount_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_last_rx_transfer_amount_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the number of bytes received in the last transaction. The value has been updated after the END event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes received. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="844" column="28" bodyfile="hal/nrf_tdm.h" bodystart="844" bodyend="847" declfile="hal/nrf_tdm.h" declline="598" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1gaee897ce4f2fdcb7effe74167756a3c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t *</type>
        <definition>NRF_STATIC_INLINE uint32_t * nrf_tdm_tx_buffer_get</definition>
        <argsstring>(NRF_TDM_Type const *p_reg)</argsstring>
        <name>nrf_tdm_tx_buffer_get</name>
        <param>
          <type>NRF_TDM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the transmit buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="849" column="29" bodyfile="hal/nrf_tdm.h" bodystart="849" bodyend="852" declfile="hal/nrf_tdm.h" declline="607" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga1d1a9880dc363c20af3935bfa2b59862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_mck_configure</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_src_t clksrc, bool enable_bypass)</argsstring>
        <name>nrf_tdm_mck_configure</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref></type>
          <declname>clksrc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_bypass</declname>
        </param>
        <briefdescription>
<para>Function for configuring TDM master Clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>TDM master clock source selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_bypass</parametername>
</parameternamelist>
<parameterdescription>
<para>Bypass clock generator. MCK will be equal to source input. If bypass is enabled the MCK.DIV setting has no effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="854" column="24" bodyfile="hal/nrf_tdm.h" bodystart="854" bodyend="862" declfile="hal/nrf_tdm.h" declline="617" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__tdm__hal_1ga092497e6cb868ce8a0420af882d81c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_tdm_sck_configure</definition>
        <argsstring>(NRF_TDM_Type *p_reg, nrf_tdm_src_t clksrc, bool enable_bypass)</argsstring>
        <name>nrf_tdm_sck_configure</name>
        <param>
          <type>NRF_TDM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref></type>
          <declname>clksrc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_bypass</declname>
        </param>
        <briefdescription>
<para>Function for configuring TDM serial Clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>TDM serial clock source selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_bypass</parametername>
</parameternamelist>
<parameterdescription>
<para>Bypass clock generator. SCK will be equal to source input. If bypass is enabled the SCK.DIV setting has no effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_tdm.h" line="864" column="24" bodyfile="hal/nrf_tdm.h" bodystart="864" bodyend="870" declfile="hal/nrf_tdm.h" declline="629" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_TDM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TDM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TDM_CLOCKPIN_SCK_NEEDED<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TDM_CLOCKPIN_FSYNC_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TDM_CLOCKPIN_MCK_NEEDED<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_tdm_hal<sp/>TDM<sp/>HAL</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_tdm</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Time<sp/>Division<sp/>Multiplexed<sp/>Audio<sp/>Interface</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TDM)<sp/>peripheral.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>value<sp/>can<sp/>be<sp/>provided<sp/>as<sp/>a<sp/>parameter<sp/>for<sp/>the<sp/>@ref<sp/>nrf_tdm_pins_set</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>call<sp/>to<sp/>specify<sp/>that<sp/>the<sp/>given<sp/>TDM<sp/>signal<sp/>(SDOUT,<sp/>SDIN,<sp/>or<sp/>MCK)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>connected<sp/>to<sp/>a<sp/>physical<sp/>pin.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_TDM_PIN_NOT_CONNECTED<sp/><sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a9052c720c7d48db982836f23fdc317a5" kindref="member">NRF_TDM_TASK_START</ref><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>TASKS_START),<sp/></highlight><highlight class="comment">///&lt;<sp/>Starts<sp/>continuous<sp/>TDM<sp/>transfer.<sp/>Also<sp/>starts<sp/>the<sp/>MCK<sp/>generator<sp/>if<sp/>this<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a8b4ee3da2384d525f31107bd89bd8b7a" kindref="member">NRF_TDM_TASK_STOP</ref><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>TASKS_STOP),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stops<sp/>TDM<sp/>transfer<sp/>after<sp/>completion<sp/>of<sp/>MAXCNT<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga7498a75f976fa503f2d6cd26a565bf08a26a138fadb8a545426835e67c943b9be" kindref="member">NRF_TDM_TASK_ABORT</ref><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>TASKS_ABORT)<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Aborts<sp/>TDM<sp/>transfer<sp/>without<sp/>completing<sp/>MAXCNT<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a6e701a11298b48d44dbc4dfa41d3dc6b" kindref="member">NRF_TDM_EVENT_RXPTRUPD</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>EVENTS_RXPTRUPD),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>RXD.PTR<sp/>register<sp/>has<sp/>been<sp/>copied<sp/>to<sp/>internal<sp/>double<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a35adca94a2257909f4881e0b99de21ac" kindref="member">NRF_TDM_EVENT_STOPPED</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>EVENTS_STOPPED),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TDM<sp/>transfer<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3af75e6a221449f505996b5e216d74e3a0" kindref="member">NRF_TDM_EVENT_ABORTED</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>EVENTS_ABORTED),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TDM<sp/>transfer<sp/>aborted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3ae394c5200a02833b0c297fada45f34ff" kindref="member">NRF_TDM_EVENT_TXPTRUPD</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>EVENTS_TXPTRUPD),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>TXD.PTR<sp/>register<sp/>has<sp/>been<sp/>copied<sp/>to<sp/>internal<sp/>double<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggae1e00de3fd636c7da27d1a94564fdef3a48210f2f09cc86f2ac5f7d5a573bf96a" kindref="member">NRF_TDM_EVENT_MAXCNT</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_TDM_Type,<sp/>EVENTS_MAXCNT),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MAXCNT<sp/>block<sp/>event,<sp/>generated<sp/>on<sp/>the<sp/>active<sp/>edge<sp/>of<sp/>FSYNC<sp/>of<sp/>every<sp/>MAXCNT<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80eac2e39023d369367c170867b127193d19" kindref="member">NRF_TDM_INT_RXPTRUPD_MASK_MASK</ref><sp/>=<sp/>TDM_INTENSET_RXPTRUPD_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXPTRUPD<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ea1dacdfbea6cc5bffaa9b80fa6f973129" kindref="member">NRF_TDM_INT_STOPPED_MASK_MASK</ref><sp/><sp/>=<sp/>TDM_INTENSET_STOPPED_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>STOPPED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ea027ab8a65ac2a725f0eac9619238904e" kindref="member">NRF_TDM_INT_ABORTED_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_INTENSET_ABORTED_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_ABORTED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80ead298da2c4dc4de89c22b3a54d144a6c0" kindref="member">NRF_TDM_INT_TXPTRUPD_MASK_MASK</ref><sp/>=<sp/>TDM_INTENSET_TXPTRUPD_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXPTRUPD<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga93635032c2231276feb85ba9880fd80eaf93a4dc0ea0af6c23a56619684cfd16d" kindref="member">NRF_TDM_INT_MAXCNT_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_INTENSET_MAXCNT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>EVENTS_MAXCNT<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga93635032c2231276feb85ba9880fd80e" kindref="member">nrf_tdm_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>modes<sp/>of<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga3be5f370705bf71041cda43df0b53bb5ac5bd0e872a719775b9b8a30855f9f3d2" kindref="member">NRF_TDM_MODE_MASTER</ref><sp/>=<sp/>TDM_CONFIG_MODE_MODE_Master,<sp/></highlight><highlight class="comment">///&lt;<sp/>Master<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga3be5f370705bf71041cda43df0b53bb5ab1a1b15d0d8a8ec15fab5529500b2668" kindref="member">NRF_TDM_MODE_SLAVE</ref><sp/><sp/>=<sp/>TDM_CONFIG_MODE_MODE_Slave<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Slave<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga3be5f370705bf71041cda43df0b53bb5" kindref="member">nrf_tdm_mode_t</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>Reception<sp/>and<sp/>transmission<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fae15e37dfc0b9d42ab1c7722df5260b41" kindref="member">NRF_TDM_RXTXEN_DUPLEX</ref><sp/>=<sp/>TDM_CONFIG_RXTXEN_RXTXEN_Duplex,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>reception<sp/>and<sp/>transmission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fa41fa172f8cd73989314b5bde8f9b4f11" kindref="member">NRF_TDM_RXTXEN_RX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_RXTXEN_RXTXEN_Rx,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>reception,<sp/>disable<sp/>transmission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac4e15273a65acc1dc5b177913d1ff10fa69531ed690f5735bfb64269ee40fb745" kindref="member">NRF_TDM_RXTXEN_TX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_RXTXEN_RXTXEN_Tx<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>transmission,<sp/>disable<sp/>reception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1gac4e15273a65acc1dc5b177913d1ff10f" kindref="member">nrf_tdm_rxtxen_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>master<sp/>clock<sp/>divider<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832af6d9be1126d471251a809414dd7f0f49" kindref="member">NRF_TDM_MCK_DIV_2</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV2,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a30612a410c8903499fe9a30f84132c59" kindref="member">NRF_TDM_MCK_DIV_3</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV3,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ad02a6c0f9d92cfe01fdd3a08799f50b1" kindref="member">NRF_TDM_MCK_DIV_4</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV4,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832adb08bd844538732f1ed2c10da92bb01f" kindref="member">NRF_TDM_MCK_DIV_5</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV5,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a218a84604f642081896b645d16958c44" kindref="member">NRF_TDM_MCK_DIV_6</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV6,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a5a16a6bf41de2cc0f4d77dd47594a716" kindref="member">NRF_TDM_MCK_DIV_8</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV8,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a840664479cdc8caa174d8acf39f0f9c0" kindref="member">NRF_TDM_MCK_DIV_10</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV10,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a5277d814f47d204c9f068e40e8f8f7f8" kindref="member">NRF_TDM_MCK_DIV_11</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV11,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832acb4fbbb0d5ae5a684d95bfea0335a27b" kindref="member">NRF_TDM_MCK_DIV_15</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV15,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a9dc5d823cae17a07f453d6e1cbfb2114" kindref="member">NRF_TDM_MCK_DIV_16</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV16,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832adc2ac62fb9e8a79d69027862eb8489ce" kindref="member">NRF_TDM_MCK_DIV_21</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV21,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a0b954b97f4b087d5cdefb5f0f68162bd" kindref="member">NRF_TDM_MCK_DIV_23</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV23,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>23.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a3b4459eebdac8393edf68a1016f5e762" kindref="member">NRF_TDM_MCK_DIV_30</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV30,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>30.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a174b1ec40b544dfe170e76fbd22b5a45" kindref="member">NRF_TDM_MCK_DIV_31</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV31,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832a97d5f2204c5102d10dbfcdc175e6d571" kindref="member">NRF_TDM_MCK_DIV_32</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV32,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ae85cae1002c797bd24ad3dbd2fb55348" kindref="member">NRF_TDM_MCK_DIV_42</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV42,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>42.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832abb36700d688527e060a7009443a44112" kindref="member">NRF_TDM_MCK_DIV_63</ref><sp/><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV63,<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggac8697e2b3c59454bdad94348043b9832ae863f29af1ee2d82695c1656f5fca2a6" kindref="member">NRF_TDM_MCK_DIV_125</ref><sp/>=<sp/>TDM_CONFIG_MCK_DIV_DIV_CKDIV125<sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>divided<sp/>by<sp/>125.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1gac8697e2b3c59454bdad94348043b9832" kindref="member">nrf_tdm_mck_div_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>serial<sp/>clock<sp/>divider<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a6997c9c0f45d649c9716264a89086ecc" kindref="member">NRF_TDM_SCK_DIV_2</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV2,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a0ab2f19f5258d26641f2c3703c200db0" kindref="member">NRF_TDM_SCK_DIV_3</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV3,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aff13738c460638853b73c441884d2001" kindref="member">NRF_TDM_SCK_DIV_4</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV4,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a2491e195620e726303a22b75f4cdc583" kindref="member">NRF_TDM_SCK_DIV_5</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV5,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a1e5c13d7baa82426ea9b52985a825e5a" kindref="member">NRF_TDM_SCK_DIV_6</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV6,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aee37b23f50695606e1d834d70576e031" kindref="member">NRF_TDM_SCK_DIV_8</ref><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV8,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1ae416559183fb24ba9c583bf71373f4e4" kindref="member">NRF_TDM_SCK_DIV_10</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV10,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aa8137f698f5e5e0891a01beb8269cf75" kindref="member">NRF_TDM_SCK_DIV_11</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV11,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a833578830ef4a74ca20a6681e6826173" kindref="member">NRF_TDM_SCK_DIV_15</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV15,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a9191fb689497cd5346a8ee7b91201826" kindref="member">NRF_TDM_SCK_DIV_16</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV16,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1ad95846dc804651ff3eafe3e4f230c203" kindref="member">NRF_TDM_SCK_DIV_21</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV21,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>21.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a19d1522960afc5ba4150ddcce3a64d00" kindref="member">NRF_TDM_SCK_DIV_23</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV23,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>23.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a325ef83e328b44ba9b3caeadc2697564" kindref="member">NRF_TDM_SCK_DIV_30</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV30,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>30.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a8ae1d138ad7e864f741533dfeb60c1e6" kindref="member">NRF_TDM_SCK_DIV_31</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV31,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1af0cd39af9ee3958915c62c46396165a4" kindref="member">NRF_TDM_SCK_DIV_32</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV32,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1aca307b76d17a32f9c8e1263a674e51a7" kindref="member">NRF_TDM_SCK_DIV_42</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV42,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>42.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a68db60baed9cf4843bddddfefe1e400b" kindref="member">NRF_TDM_SCK_DIV_63</ref><sp/><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV63,<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ggaf87a9bb7adc4ad5789a5b078ce59d9c1a750a26e1f0dc58b79c0907037af7e846" kindref="member">NRF_TDM_SCK_DIV_125</ref><sp/>=<sp/>TDM_CONFIG_SCK_DIV_SCKDIV_CKDIV125<sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>divided<sp/>by<sp/>125.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1gaf87a9bb7adc4ad5789a5b078ce59d9c1" kindref="member">nrf_tdm_sck_div_t</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>clock<sp/>source<sp/>selection.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga2e637b0d1773e5c4652fcdbd7236dc18a7d5f0e760d90c85a340a1c78b63d4384" kindref="member">NRF_TDM_SRC_PCLK32M</ref><sp/>=<sp/>TDM_CONFIG_SCK_SRC_CLKSRC_PCLK32M,<sp/></highlight><highlight class="comment">///&lt;<sp/>32MHz<sp/>peripheral<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga2e637b0d1773e5c4652fcdbd7236dc18af413764b4a20c8e13e0b7e2dbd10211e" kindref="member">NRF_TDM_SRC_ACLK</ref><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SCK_SRC_CLKSRC_ACLK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Audio<sp/>PLL<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/><sp/><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>sample<sp/>widths.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba1734a0000f7ef76a63f47a4bf6b96fb6" kindref="member">NRF_TDM_SWIDTH_8BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_8Bit,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9bace087fbba5de0b5d269efd6506052fab" kindref="member">NRF_TDM_SWIDTH_16BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_16Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9bad3ed49fc2ca05010736a33aa16f929df" kindref="member">NRF_TDM_SWIDTH_24BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_24Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>24<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9babae97faaf52aa52f6de6788c9c30817a" kindref="member">NRF_TDM_SWIDTH_32BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_32Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba9dff678c29a45df7f1638bcac4182a0c" kindref="member">NRF_TDM_SWIDTH_8BIT_IN16BIT</ref><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_8BitIn16,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>16-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9baf438af7cf58d8cad0f6d1588d222192c" kindref="member">NRF_TDM_SWIDTH_8BIT_IN32BIT</ref><sp/><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_8BitIn32,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9badccc15afaf26cb9af4e7bc3b07d69a53" kindref="member">NRF_TDM_SWIDTH_16BIT_IN32BIT</ref><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_16BitIn32,<sp/></highlight><highlight class="comment">///&lt;<sp/>16<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga645baf7e40c3ea2bd03f17e0a4e8dd9ba23457139a97e16161172170102e2f965" kindref="member">NRF_TDM_SWIDTH_24BIT_IN32BIT</ref><sp/>=<sp/>TDM_CONFIG_SWIDTH_SWIDTH_24BitIn32,<sp/></highlight><highlight class="comment">///&lt;<sp/>24<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga645baf7e40c3ea2bd03f17e0a4e8dd9b" kindref="member">nrf_tdm_swidth_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>alignments<sp/>of<sp/>sample<sp/>within<sp/>a<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga75960ff2f5a41a6708af0ca30849c2eba6c8a3cdc6ab878d64c857d10dabbcb70" kindref="member">NRF_TDM_ALIGN_LEFT</ref><sp/><sp/>=<sp/>TDM_CONFIG_ALIGN_ALIGN_Left,<sp/></highlight><highlight class="comment">///&lt;<sp/>Left-aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga75960ff2f5a41a6708af0ca30849c2ebaa72def14bba086fd88fbe1bdf94a89cd" kindref="member">NRF_TDM_ALIGN_RIGHT</ref><sp/>=<sp/>TDM_CONFIG_ALIGN_ALIGN_Right<sp/></highlight><highlight class="comment">///&lt;<sp/>Right-aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga75960ff2f5a41a6708af0ca30849c2eb" kindref="member">nrf_tdm_align_t</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>channel<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a1f824edf8aed1257131d4347df74e081" kindref="member">NRF_TDM_CHANNEL_RX0_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx0Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>0<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5aee3b894bb51275ee6ce688edfe2f1bc8" kindref="member">NRF_TDM_CHANNEL_RX1_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx1Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>1<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a062ae730e687dbd0aafe224722385a3f" kindref="member">NRF_TDM_CHANNEL_RX2_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx2Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>2<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a03811d571543f6a9a56ed7b6339e5761" kindref="member">NRF_TDM_CHANNEL_RX3_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx3Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>3<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5acb9374c841a796a630011d98c831dff0" kindref="member">NRF_TDM_CHANNEL_RX4_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx4Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>4<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5ad7fd6067050fce807591d5ce6b553150" kindref="member">NRF_TDM_CHANNEL_RX5_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx5Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>5<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5acdd5a65ccd1c616d16a1470455f469e6" kindref="member">NRF_TDM_CHANNEL_RX6_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx6Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>6<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5ad55ab60f02368b13c3a2c711cc4abef1" kindref="member">NRF_TDM_CHANNEL_RX7_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Rx7Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>RX<sp/>channel<sp/>7<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a5f5e4fd1c1bb1bb51d4110d3470600f1" kindref="member">NRF_TDM_CHANNEL_TX0_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx0Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>0<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5adec73f33e0ed9c6565438665ee672f4e" kindref="member">NRF_TDM_CHANNEL_TX1_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx1Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>1<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a62cb03c57150d9d6f562141c09a730da" kindref="member">NRF_TDM_CHANNEL_TX2_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx2Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>2<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a90eab4ee34cb20eacdb8d56f424a6fed" kindref="member">NRF_TDM_CHANNEL_TX3_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx3Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>3<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a9760b9e905c6469b3e57d45724e94d9f" kindref="member">NRF_TDM_CHANNEL_TX4_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx4Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>4<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a120e84b3f901a728c01f13f1fbab9a53" kindref="member">NRF_TDM_CHANNEL_TX5_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx5Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>5<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5aed181f038b96ad667b48f1c9180610d9" kindref="member">NRF_TDM_CHANNEL_TX6_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx6Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>6<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga9747ea0cc20eb5817c55d1e72b683bc5a7dfea12c649a0a57ef0532a87544218c" kindref="member">NRF_TDM_CHANNEL_TX7_MASK</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_MASK_Tx7Enable_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>TX<sp/>channel<sp/>7<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga9747ea0cc20eb5817c55d1e72b683bc5" kindref="member">nrf_tdm_channel_mask_t</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>number<sp/>of<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a16d516854fed150710855fad54720bb7" kindref="member">NRF_TDM_CHANNELS_COUNT_1</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm1Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>1<sp/>channel<sp/>audio<sp/>(mono).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a15b3e0d83e2488aa47eb723a20fd995c" kindref="member">NRF_TDM_CHANNELS_COUNT_2</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm2Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>channels<sp/>audio<sp/>(stereo).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895aa5ed271455f26e2b2ab3836315ab97f9" kindref="member">NRF_TDM_CHANNELS_COUNT_3</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm3Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>3<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a0d296b34095b6cf0c338c8960751ae4f" kindref="member">NRF_TDM_CHANNELS_COUNT_4</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm4Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>4<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a39ba2e5d7c0b566990404d2e33959fe6" kindref="member">NRF_TDM_CHANNELS_COUNT_5</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm5Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>5<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a48a6247c68ddbba23182b4db0cf18656" kindref="member">NRF_TDM_CHANNELS_COUNT_6</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm6Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>6<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895af35af2c7ecf951346705b88169efdf95" kindref="member">NRF_TDM_CHANNELS_COUNT_7</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm7Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>7<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga926563f9b64a577da2834d00fc4bf895a99a8c7e0dd73317676dceff9fbb50f2c" kindref="member">NRF_TDM_CHANNELS_COUNT_8</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_NUM_NUM_Tdm8Ch,<sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>channels<sp/>audio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga926563f9b64a577da2834d00fc4bf895" kindref="member">nrf_tdm_channels_count_t</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>channel<sp/>delay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea5c7c2af7d7245860fac8d89571e3a36e" kindref="member">NRF_TDM_CHANNEL_DELAY_NONE</ref><sp/>=<sp/>TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay0Ck,<sp/></highlight><highlight class="comment">///&lt;<sp/>No<sp/>delay.<sp/>Use<sp/>with<sp/>DSP/Aligned<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea2877879b1d3b4723895ee2f807afce5f" kindref="member">NRF_TDM_CHANNEL_DELAY_1CK</ref><sp/><sp/>=<sp/>TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay1Ck,<sp/></highlight><highlight class="comment">///&lt;<sp/>1<sp/>clock<sp/>pulse<sp/>delay.<sp/>Used<sp/>with<sp/>original<sp/>TDM<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga83c1473c6fc7df68a1208c92b8d9e0eea764f65a1355e4a9c4ec544b3031a5558" kindref="member">NRF_TDM_CHANNEL_DELAY_2CK</ref><sp/><sp/>=<sp/>TDM_CONFIG_CHANNEL_DELAY_DELAY_Delay2Ck,<sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>clock<sp/>pulses<sp/>delay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}<sp/><ref refid="group__nrf__tdm__hal_1ga83c1473c6fc7df68a1208c92b8d9e0ee" kindref="member">nrf_tdm_channel_delay_t</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>signal<sp/>polarity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5eba794ce754ef416f4fcda62d494adae618" kindref="member">NRF_TDM_POLARITY_POSEDGE</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>Synchronization<sp/>at<sp/>rising<sp/>edge<sp/>of<sp/>the<sp/>reference<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5ebac3361c0d19366e95e8c5cf8b56a56353" kindref="member">NRF_TDM_POLARITY_NEGEDGE</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>Synchronization<sp/>at<sp/>falling<sp/>edge<sp/>of<sp/>the<sp/>reference<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}<sp/><sp/><ref refid="group__nrf__tdm__hal_1ga37b518f0a9dc48ae43585e13a55bf5eb" kindref="member">nrf_tdm_polarity_t</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>frame<sp/>synchronization<sp/>pulse<sp/>duration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga97d81ae839402941bdb26c30ba11118baf75aad0ddae9dcff51a5dd181942b67b" kindref="member">NRF_TDM_FSYNC_DURATION_SCK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>TDM_CONFIG_FSYNC_DURATION_DURATION_Sck,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>FSYNC<sp/>is<sp/>active<sp/>for<sp/>the<sp/>duration<sp/>of<sp/>one<sp/>SCK<sp/>pulse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gga97d81ae839402941bdb26c30ba11118baa91fd69423a457cf4de2320beb902999" kindref="member">NRF_TDM_FSYNC_DURATION_CHANNEL</ref><sp/>=<sp/>TDM_CONFIG_FSYNC_DURATION_DURATION_Channel<sp/></highlight><highlight class="comment">///&lt;<sp/>FSYNC<sp/>is<sp/>active<sp/>for<sp/>the<sp/>duration<sp/>of<sp/>channel<sp/>transmission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/><sp/><ref refid="group__nrf__tdm__hal_1ga97d81ae839402941bdb26c30ba11118b" kindref="member">nrf_tdm_fsync_duration_t</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="structnrf__tdm__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga3be5f370705bf71041cda43df0b53bb5" kindref="member">nrf_tdm_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Mode<sp/>of<sp/>operation<sp/>(master<sp/>or<sp/>slave).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga75960ff2f5a41a6708af0ca30849c2eb" kindref="member">nrf_tdm_align_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alignment;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Alignment<sp/>of<sp/>sample<sp/>within<sp/>a<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga645baf7e40c3ea2bd03f17e0a4e8dd9b" kindref="member">nrf_tdm_swidth_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_width;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Sample<sp/>width.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga9747ea0cc20eb5817c55d1e72b683bc5" kindref="member">nrf_tdm_channel_mask_t</ref><sp/><sp/><sp/>channels;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Enabled<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga926563f9b64a577da2834d00fc4bf895" kindref="member">nrf_tdm_channels_count_t</ref><sp/>num_of_channels;<sp/></highlight><highlight class="comment">/**&lt;<sp/>Nnumber<sp/>of<sp/>channels<sp/>within<sp/>a<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga83c1473c6fc7df68a1208c92b8d9e0ee" kindref="member">nrf_tdm_channel_delay_t</ref><sp/><sp/>channel_delay;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>delay<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gac8697e2b3c59454bdad94348043b9832" kindref="member">nrf_tdm_mck_div_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mck_setup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Master<sp/>clock<sp/>divider<sp/>setup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gaf87a9bb7adc4ad5789a5b078ce59d9c1" kindref="member">nrf_tdm_sck_div_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sck_setup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Serial<sp/>clock<sp/>divider<sp/>setup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga37b518f0a9dc48ae43585e13a55bf5eb" kindref="member">nrf_tdm_polarity_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sck_polarity;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Serial<sp/>clock<sp/>polarity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga37b518f0a9dc48ae43585e13a55bf5eb" kindref="member">nrf_tdm_polarity_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsync_polarity;<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Frame<sp/>Synchronization<sp/>pulse<sp/>polarity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga97d81ae839402941bdb26c30ba11118b" kindref="member">nrf_tdm_fsync_duration_t</ref><sp/>fsync_duration;<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Frame<sp/>Synchronization<sp/>pulse<sp/>duration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/><ref refid="structnrf__tdm__config__t" kindref="compound">nrf_tdm_config_t</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment">/**<sp/>@brief<sp/>TDM<sp/>pins.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="structnrf__tdm__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sck_pin;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fsync_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>FSYNC<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mck_pin;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_TDM_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdout_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>SDOUT<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_TDM_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdin_pin;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SDIN<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_TDM_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/><ref refid="structnrf__tdm__pins__t" kindref="compound">nrf_tdm_pins_t</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>activating<sp/>the<sp/>specified<sp/>TDM<sp/>task.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga00a802c4b15d45ca20676f1395485441" kindref="member">nrf_tdm_task_trigger</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>TDM<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Specified<sp/>task.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga1825c917fd18dedb05fdcae2be0d96a9" kindref="member">nrf_tdm_task_address_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>TDM<sp/>event.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga841114ddf0fd7e80c4fb4f7b7e17306f" kindref="member">nrf_tdm_event_clear</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="297"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>TDM<sp/>event.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga2c9c88e805598cec52f4ac3137cc09cc" kindref="member">nrf_tdm_event_check</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>TDM<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Specified<sp/>event.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga902ed508b30545094c5993e5e5258dcd" kindref="member">nrf_tdm_event_address_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_tdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga4c8919c26ac774ef37713e061158fc7e" kindref="member">nrf_tdm_int_enable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_tdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gad25f25329310340dd3e74c76c0dd650d" kindref="member">nrf_tdm_int_disable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_tdm_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gae1d6cbaab99744e20118373c1d284a10" kindref="member">nrf_tdm_int_enable_check</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>TDM<sp/>peripheral.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga764444243bb55ad64fc73332d14eafd3" kindref="member">nrf_tdm_enable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>TDM<sp/>peripheral.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gabe1142e6da8b387273ec361ed7d5c44b" kindref="member">nrf_tdm_disable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>TDM<sp/>peripheral<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>TDM<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>TDM<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga9068005601734bcd1401ba0115c7a887" kindref="member">nrf_tdm_enable_check</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>task.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gac9e604cf4675df23fec17eb112beca1a" kindref="member">nrf_tdm_subscribe_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>task.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga8366779fe0d0aa31e81b32852b5dd371" kindref="member">nrf_tdm_subscribe_clear</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="396"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>event.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga34e7ab3c4c352adab7b39a6e6e0d3d14" kindref="member">nrf_tdm_publish_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="408"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>event.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaaeedf454fc5474eb2ab7c9ad8c13138c" kindref="member">nrf_tdm_publish_clear</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>TDM<sp/>pins.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>Usage<sp/>of<sp/>the<sp/>SDOUT,<sp/>SDIN,<sp/>and<sp/>MCK<sp/>signals<sp/>is<sp/>optional.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>given<sp/>signal<sp/>is<sp/>not<sp/>needed,<sp/>pass<sp/>the<sp/>@ref<sp/>NRF_TDM_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>value<sp/>instead<sp/>of<sp/>its<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>pins<sp/>selection.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga1d9b942da033f0a8fc354b8037a3c650" kindref="member">nrf_tdm_pins_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__tdm__pins__t" kindref="compound">nrf_tdm_pins_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pins);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>@return<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga8a0bc908e8cc94d0223fac80153f6299" kindref="member">nrf_tdm_sck_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>FSYNC<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>@return<sp/>FSYNC<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga4f94a1a5f2f5cdd014336c84f3b3c2d0" kindref="member">nrf_tdm_fsync_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="449"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>@return<sp/>MCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga78f235fc95e17d903575b8ea86d518c9" kindref="member">nrf_tdm_mck_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="458"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SDOUT<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>@return<sp/>SDOUT<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga5837d6347538da6e0a1e3ad6d8aef659" kindref="member">nrf_tdm_sdout_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SDIN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>@return<sp/>SDIN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga690e584ecb7c76e301afb2447c80c32b" kindref="member">nrf_tdm_sdin_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>TDM<sp/>peripheral<sp/>configuration.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>configuration.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga443c5eea61c71bff96b77892db127f4c" kindref="member">nrf_tdm_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__tdm__config__t" kindref="compound">nrf_tdm_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>master<sp/>clock<sp/>generator.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>the<sp/>master<sp/>clock<sp/>generator<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaea100566cc9480a44b393c8a96719916" kindref="member">nrf_tdm_mck_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="492"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>TDM<sp/>RX<sp/>transfer<sp/>length.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>sets<sp/>up<sp/>the<sp/>RX<sp/>buffer<sp/>size.<sp/>At<sp/>least<sp/>one<sp/>of</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_rx_count_set<sp/>or<sp/>@ref<sp/>nrf_tdm_tx_count_set<sp/>functions<sp/>must<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>starting<sp/>the<sp/>transmission.<sp/>Also<sp/>@ref<sp/>nrf_tdm_transfer_direction_set<sp/>and</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_rx_buffer_set<sp/>should<sp/>be<sp/>called<sp/>before<sp/>starting<sp/>the<sp/>transmission.</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer<sp/>(in<sp/>32-bit<sp/>words).</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" kindref="member">nrf_tdm_rx_count_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>size);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>TDM<sp/>TX<sp/>transfer<sp/>length.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>sets<sp/>up<sp/>the<sp/>RX<sp/>buffer<sp/>size.<sp/>At<sp/>least<sp/>one<sp/>of</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_rx_count_set<sp/>or<sp/>@ref<sp/>nrf_tdm_tx_count_set<sp/>functions<sp/>must<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>starting<sp/>the<sp/>transmission.<sp/>Also<sp/>@ref<sp/>nrf_tdm_transfer_direction_set<sp/>and</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_tx_buffer_set<sp/>should<sp/>be<sp/>called<sp/>before<sp/>starting<sp/>the<sp/>transmission.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer<sp/>(in<sp/>32-bit<sp/>words).</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" kindref="member">nrf_tdm_tx_count_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>size);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>TDM<sp/>transfer.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>dir<sp/><sp/><sp/>Transmission<sp/>direction.</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga9c2678e160973e03d1c0d86b6396aaf1" kindref="member">nrf_tdm_transfer_direction_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gac4e15273a65acc1dc5b177913d1ff10f" kindref="member">nrf_tdm_rxtxen_t</ref><sp/>dir);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="529"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>set<sp/>only<sp/>by<sp/>calling</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_rx_count_set.</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga61fcb0ef7327e008cc398ae843e4ddc7" kindref="member">nrf_tdm_rx_buffer_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/>p_buffer);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__tdm__hal_1ga372465489bc0de6d3ad5f688cd51cbbf" kindref="member">nrf_tdm_rx_buffer_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>set<sp/>only<sp/>by<sp/>calling</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_tdm_tx_count_set.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaf375ce34941a6b5af8513c6655001c57" kindref="member">nrf_tdm_tx_buffer_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>transferred<sp/>in<sp/>the<sp/>current<sp/>transaction.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>bytes<sp/>transferred.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gac7894e41679574d0b1c0d3e87c4d292e" kindref="member">nrf_tdm_current_tx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="571"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>transferred<sp/>in<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>value<sp/>has<sp/>been<sp/>updated<sp/>after<sp/>the<sp/>END<sp/>event.</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>bytes<sp/>transferred.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga0933d2abd9b6c7d8866bee08ffec044e" kindref="member">nrf_tdm_last_tx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>received<sp/>in<sp/>the<sp/>current<sp/>transaction.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>bytes<sp/>received.</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gac430d295dff8ef6b0b5a1a9313212b06" kindref="member">nrf_tdm_current_rx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="590"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>received<sp/>in<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>value<sp/>has<sp/>been<sp/>updated<sp/>after<sp/>the<sp/>END<sp/>event.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>bytes<sp/>received.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga016e63814509245e4f08b79785aac096" kindref="member">nrf_tdm_last_rx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__tdm__hal_1gaee897ce4f2fdcb7effe74167756a3c7f" kindref="member">nrf_tdm_tx_buffer_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="609"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>TDM<sp/>master<sp/>Clock.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>clksrc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>master<sp/>clock<sp/>source<sp/>selection.</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable_bypass<sp/>Bypass<sp/>clock<sp/>generator.<sp/>MCK<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>source<sp/>input.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>bypass<sp/>is<sp/>enabled<sp/>the<sp/>MCK.DIV<sp/>setting<sp/>has<sp/>no<sp/>effect.</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga1d1a9880dc363c20af3935bfa2b59862" kindref="member">nrf_tdm_mck_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref><sp/><sp/>clksrc,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="621"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>TDM<sp/>serial<sp/>Clock.</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>clksrc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM<sp/>serial<sp/>clock<sp/>source<sp/>selection.</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable_bypass<sp/>Bypass<sp/>clock<sp/>generator.<sp/>SCK<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>source<sp/>input.</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>bypass<sp/>is<sp/>enabled<sp/>the<sp/>SCK.DIV<sp/>setting<sp/>has<sp/>no<sp/>effect.</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga092497e6cb868ce8a0420af882d81c6b" kindref="member">nrf_tdm_sck_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref><sp/><sp/>clksrc,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga00a802c4b15d45ca20676f1395485441" kindref="member">nrf_tdm_task_trigger</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga1825c917fd18dedb05fdcae2be0d96a9" kindref="member">nrf_tdm_task_address_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga841114ddf0fd7e80c4fb4f7b7e17306f" kindref="member">nrf_tdm_event_clear</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga2c9c88e805598cec52f4ac3137cc09cc" kindref="member">nrf_tdm_event_check</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga902ed508b30545094c5993e5e5258dcd" kindref="member">nrf_tdm_event_address_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga4c8919c26ac774ef37713e061158fc7e" kindref="member">nrf_tdm_int_enable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gad25f25329310340dd3e74c76c0dd650d" kindref="member">nrf_tdm_int_disable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gae1d6cbaab99744e20118373c1d284a10" kindref="member">nrf_tdm_int_enable_check</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga764444243bb55ad64fc73332d14eafd3" kindref="member">nrf_tdm_enable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(TDM_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>TDM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gabe1142e6da8b387273ec361ed7d5c44b" kindref="member">nrf_tdm_disable</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(TDM_ENABLE_ENABLE_Disabled<sp/>&lt;&lt;<sp/>TDM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga9068005601734bcd1401ba0115c7a887" kindref="member">nrf_tdm_enable_check</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;ENABLE<sp/>==<sp/>(TDM_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>TDM_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gac9e604cf4675df23fec17eb112beca1a" kindref="member">nrf_tdm_subscribe_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga8366779fe0d0aa31e81b32852b5dd371" kindref="member">nrf_tdm_subscribe_clear</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga7498a75f976fa503f2d6cd26a565bf08" kindref="member">nrf_tdm_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga34e7ab3c4c352adab7b39a6e6e0d3d14" kindref="member">nrf_tdm_publish_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaaeedf454fc5474eb2ab7c9ad8c13138c" kindref="member">nrf_tdm_publish_clear</ref>(NRF_TDM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gae1e00de3fd636c7da27d1a94564fdef3" kindref="member">nrf_tdm_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga1d9b942da033f0a8fc354b8037a3c650" kindref="member">nrf_tdm_pins_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__tdm__pins__t" kindref="compound">nrf_tdm_pins_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pins)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SCK<sp/><sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__tdm__pins__t_1a98e68b4a455a1b6d2d8ab990e6d1d03c" kindref="member">sck_pin</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.FSYNC<sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__tdm__pins__t_1a69fa6ce5f7b9b60d50e3230f08a6fb4c" kindref="member">fsync_pin</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.MCK<sp/><sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__tdm__pins__t_1a3f64016f7e5ecb0fb6013e5975f262fd" kindref="member">mck_pin</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SDOUT<sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__tdm__pins__t_1ac1caf95ff4c893a6cf87d4c4be250107" kindref="member">sdout_pin</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SDIN<sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__tdm__pins__t_1abf9400d16096de8b89affc727b9ec4f2" kindref="member">sdin_pin</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga8a0bc908e8cc94d0223fac80153f6299" kindref="member">nrf_tdm_sck_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SCK;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga4f94a1a5f2f5cdd014336c84f3b3c2d0" kindref="member">nrf_tdm_fsync_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.FSYNC;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga78f235fc95e17d903575b8ea86d518c9" kindref="member">nrf_tdm_mck_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.MCK;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga5837d6347538da6e0a1e3ad6d8aef659" kindref="member">nrf_tdm_sdout_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SDOUT;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga690e584ecb7c76e301afb2447c80c32b" kindref="member">nrf_tdm_sdin_pin_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SDIN;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga443c5eea61c71bff96b77892db127f4c" kindref="member">nrf_tdm_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__tdm__config__t" kindref="compound">nrf_tdm_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1aac584e9fee89e4bbc87c82c687581206" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.ALIGN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a5a1c7bcab2c37df54776e2a5818bc014" kindref="member">alignment</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.SWIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a60b45e6584be6c25569c42fafcdbbfc7" kindref="member">sample_width</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.CHANNEL.MASK<sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a34f59ff95b2eebc71ee265190364029c" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.CHANNEL.NUM<sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a4031a08bf844ecece8671c547789d2a7" kindref="member">num_of_channels</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.CHANNEL.DELAY<sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a7ea30292f0a55fd656962e91d8571646" kindref="member">channel_delay</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.SCK.DIV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1ae4675a7af55edaa00f2fc5b4fc96c500" kindref="member">sck_setup</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.FSYNC.DURATION<sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1ac5a0d6af69351e29871f342596c399c8" kindref="member">fsync_duration</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCK.DIV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__tdm__config__t_1a56aff35bb1ab72ae8a34ed35849ad693" kindref="member">mck_setup</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.SCK.POLARITY<sp/><sp/><sp/>=<sp/>(p_config-&gt;<ref refid="structnrf__tdm__config__t_1a44bb86aa2f13e1b090485ba68615e01d" kindref="member">sck_polarity</ref><sp/>==<sp/><ref refid="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5eba794ce754ef416f4fcda62d494adae618" kindref="member">NRF_TDM_POLARITY_POSEDGE</ref>)<sp/>?</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TDM_CONFIG_SCK_POLARITY_SCKPOLARITY_PosEdge)<sp/>:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TDM_CONFIG_SCK_POLARITY_SCKPOLARITY_NegEdge);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.FSYNC.POLARITY<sp/>=<sp/>(p_config-&gt;<ref refid="structnrf__tdm__config__t_1a60ce6574e9fc52123864c217e139df07" kindref="member">fsync_polarity</ref><sp/>==<sp/><ref refid="group__nrf__tdm__hal_1gga37b518f0a9dc48ae43585e13a55bf5eba794ce754ef416f4fcda62d494adae618" kindref="member">NRF_TDM_POLARITY_POSEDGE</ref>)<sp/>?</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TDM_CONFIG_FSYNC_POLARITY_POLARITY_PosEdge)<sp/>:</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TDM_CONFIG_FSYNC_POLARITY_POLARITY_NegEdge);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaea100566cc9480a44b393c8a96719916" kindref="member">nrf_tdm_mck_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCK.EN<sp/>=<sp/>((p_reg-&gt;CONFIG.MCK.EN<sp/>&amp;<sp/>~TDM_CONFIG_MCK_EN_MCKEN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?<sp/>TDM_CONFIG_MCK_EN_MCKEN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM_CONFIG_MCK_EN_MCKEN_Disabled)<sp/>&lt;&lt;<sp/>TDM_CONFIG_MCK_EN_MCKEN_Pos));</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga627872d8a3724d9317756b2caa833db8" kindref="member">nrf_tdm_rx_count_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>size)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DMA_BUFFER_UNIFIED_BYTE_ACCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.MAXCNT<sp/>=<sp/>size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.MAXCNT<sp/>=<sp/>(uint32_t)size;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga66c6cc1e942aa208b775d496c871c80a" kindref="member">nrf_tdm_tx_count_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>size)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DMA_BUFFER_UNIFIED_BYTE_ACCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.MAXCNT<sp/>=<sp/>size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.MAXCNT<sp/>=<sp/>(uint32_t)size;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga9c2678e160973e03d1c0d86b6396aaf1" kindref="member">nrf_tdm_transfer_direction_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1gac4e15273a65acc1dc5b177913d1ff10f" kindref="member">nrf_tdm_rxtxen_t</ref><sp/>dir)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.RXTXEN<sp/>=<sp/>(dir<sp/>&lt;&lt;<sp/>TDM_CONFIG_RXTXEN_RXTXEN_Pos);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga61fcb0ef7327e008cc398ae843e4ddc7" kindref="member">nrf_tdm_rx_buffer_set</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/>p_buffer)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__tdm__hal_1ga372465489bc0de6d3ad5f688cd51cbbf" kindref="member">nrf_tdm_rx_buffer_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)(p_reg-&gt;RXD.PTR);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1gaf375ce34941a6b5af8513c6655001c57" kindref="member">nrf_tdm_tx_buffer_set</ref>(NRF_TDM_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gac7894e41679574d0b1c0d3e87c4d292e" kindref="member">nrf_tdm_current_tx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;TXD.CURRENTAMOUNT;</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga0933d2abd9b6c7d8866bee08ffec044e" kindref="member">nrf_tdm_last_tx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;TXD.AMOUNT;</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1gac430d295dff8ef6b0b5a1a9313212b06" kindref="member">nrf_tdm_current_rx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RXD.CURRENTAMOUNT;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__tdm__hal_1ga016e63814509245e4f08b79785aac096" kindref="member">nrf_tdm_last_rx_transfer_amount_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RXD.AMOUNT;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__tdm__hal_1gaee897ce4f2fdcb7effe74167756a3c7f" kindref="member">nrf_tdm_tx_buffer_get</ref>(NRF_TDM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)(p_reg-&gt;TXD.PTR);</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga1d1a9880dc363c20af3935bfa2b59862" kindref="member">nrf_tdm_mck_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref><sp/><sp/>clksrc,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCK.SRC<sp/>=<sp/>(((uint32_t)<sp/>clksrc<sp/>&lt;&lt;<sp/>TDM_CONFIG_MCK_SRC_CLKSRC_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM_CONFIG_MCK_SRC_CLKSRC_Msk)<sp/>|</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)<sp/>enable_bypass<sp/>&lt;&lt;<sp/>TDM_CONFIG_MCK_SRC_BYPASS_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TDM_CONFIG_MCK_SRC_BYPASS_Msk);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__tdm__hal_1ga092497e6cb868ce8a0420af882d81c6b" kindref="member">nrf_tdm_sck_configure</ref>(NRF_TDM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__tdm__hal_1ga2e637b0d1773e5c4652fcdbd7236dc18" kindref="member">nrf_tdm_src_t</ref><sp/><sp/>clksrc,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass)</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.SCK.SRC<sp/>=<sp/>((uint32_t)<sp/>clksrc<sp/>&lt;&lt;<sp/>TDM_CONFIG_SCK_SRC_CLKSRC_Pos)<sp/>|</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>enable_bypass<sp/>&lt;&lt;<sp/>TDM_CONFIG_SCK_SRC_BYPASS_Pos);</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="874"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_TDM_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_tdm.h"/>
  </compounddef>
</doxygen>
