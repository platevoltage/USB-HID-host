<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfx__ids" kind="group">
    <compoundname>nrfx_ids</compoundname>
    <title>Generic inter-domain signalling layer.</title>
    <innerclass refid="structnrfx__ids__t" prot="public">nrfx_ids_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrfx__ids_1gae69d40cc50ded0f44115d1dbb9db2ee3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_ids_domain_t</name>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3abc780bc103c8b53d9457eecbf0f59485" prot="public">
          <name>NRFX_IDS_DOMAIN_SEC</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Reserved. *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3a47adce16f452e73c9bc749165097cdff" prot="public">
          <name>NRFX_IDS_DOMAIN_APP</name>
          <initializer>= NRF_PROCESSOR_APPLICATION</initializer>
          <briefdescription>
<para>Application domain. *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3ae8bc6b548543b7607e0d3b85d89c77fe" prot="public">
          <name>NRFX_IDS_DOMAIN_NET</name>
          <initializer>= NRF_PROCESSOR_RADIOCORE</initializer>
          <briefdescription>
<para>Network domain. *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3a486c670d1ae6cb84c8890421c194de62" prot="public">
          <name>NRFX_IDS_DOMAIN_SYSC</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>Reserved. *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3aa38b80e15dda3e37f8e24709d9391d8d" prot="public">
          <name>NRFX_IDS_DOMAIN_PPR</name>
          <initializer>= NRF_PROCESSOR_PPR</initializer>
          <briefdescription>
<para>Peripheral Processor *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__ids_1ggae69d40cc50ded0f44115d1dbb9db2ee3ab7d1a2d2ecfc0947f4c4e37edfccb481" prot="public">
          <name>NRFX_IDS_DOMAIN_FLPR</name>
          <initializer>= NRF_PROCESSOR_FLPR</initializer>
          <briefdescription>
<para>Fast Lightweight Processor *<zwj/>/. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>IDS domains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="121" column="1" bodyfile="helpers/nrfx_ids.h" bodystart="122" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrfx__ids_1ga278252a57571b4b4e2a2d1ab29c5da1b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* nrfx_ids_event_handler_t) (uint8_t event_idx, void *p_context)</definition>
        <argsstring>)(uint8_t event_idx, void *p_context)</argsstring>
        <name>nrfx_ids_event_handler_t</name>
        <briefdescription>
<para>IDS event handler callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>IDS event index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>User context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="70" column="9" bodyfile="helpers/nrfx_ids.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__ids_1gacf27364f57e99659f8f4ea266fe1d1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE <ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>__STATIC_INLINE nrfx_err_t nrfx_ids_init</definition>
        <argsstring>(nrfx_ids_t const *p_instance, uint8_t interrupt_priority, nrfx_ids_event_handler_t event_handler, void *p_context, void const *p_config)</argsstring>
        <name>nrfx_ids_init</name>
        <param>
          <type><ref refid="structnrfx__ids__t" kindref="compound">nrfx_ids_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>interrupt_priority</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__ids_1ga278252a57571b4b4e2a2d1ab29c5da1b" kindref="member">nrfx_ids_event_handler_t</ref></type>
          <declname>event_handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p_context</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Symbol specifying maximum number of available events triggered. </para>
        </briefdescription>
        <detaileddescription>
<para>Function for initializing the IDS instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to IDS instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be called on interrupt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context passed to the event handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing peripheral-specific configuration. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver successfully initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_ALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver already initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="171" column="28" bodyfile="helpers/nrfx_ids.h" bodystart="171" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ids_1ga951402c9d80c85bfa8a0fa41e0f90225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void nrfx_ids_uninit</definition>
        <argsstring>(nrfx_ids_t const *p_instance)</argsstring>
        <name>nrfx_ids_uninit</name>
        <param>
          <type><ref refid="structnrfx__ids__t" kindref="compound">nrfx_ids_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the IDS instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to IDS instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="209" column="22" bodyfile="helpers/nrfx_ids.h" bodystart="209" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ids_1ga2cca0498d0e887c428c0d0bc7d2328c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void nrfx_ids_int_enable</definition>
        <argsstring>(nrfx_ids_t const *p_instance, uint32_t mask)</argsstring>
        <name>nrfx_ids_int_enable</name>
        <param>
          <type><ref refid="structnrfx__ids__t" kindref="compound">nrfx_ids_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts in the IDS instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to IDS instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="230" column="22" bodyfile="helpers/nrfx_ids.h" bodystart="230" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ids_1gae8e8522b091b0fd8dda1986be8910935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void nrfx_ids_int_disable</definition>
        <argsstring>(nrfx_ids_t const *p_instance, uint32_t mask)</argsstring>
        <name>nrfx_ids_int_disable</name>
        <param>
          <type><ref refid="structnrfx__ids__t" kindref="compound">nrfx_ids_t</ref> const *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupt in the IDS instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to IDS instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="251" column="22" bodyfile="helpers/nrfx_ids.h" bodystart="251" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__ids_1gaf6fab5db7d6a28935985f963a69233f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void nrfx_ids_signal</definition>
        <argsstring>(nrfx_ids_t *p_instance, nrfx_ids_domain_t domain, uint8_t channel)</argsstring>
        <name>nrfx_ids_signal</name>
        <param>
          <type><ref refid="structnrfx__ids__t" kindref="compound">nrfx_ids_t</ref> *</type>
          <declname>p_instance</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__ids_1gae69d40cc50ded0f44115d1dbb9db2ee3" kindref="member">nrfx_ids_domain_t</ref></type>
          <declname>domain</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for conveying the inter-domain signal to the specified domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to IDS instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Domain to be signalled. May be NULL for peripherals that have only one connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Inter-domain channel for conveying the signal. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="273" column="22" bodyfile="helpers/nrfx_ids.h" bodystart="273" bodyend="330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfx__ids_1ga5c21723f6023be3f13e4d8087bd2f4d5" prot="public" static="no">
        <name>NRFX_IDS_INSTANCE</name>
        <param><defname>id</defname></param>
        <initializer>{                                                           \
    .drv_inst_idx = <ref refid="group__nrfx__common_1gaa78d21b07d22f7a4bfbd1feda51ef1f4" kindref="member">NRFX_CONCAT_3</ref>(NRFX_IDS, id, _INST_IDX), \
    .int_idx      = id,                                     \
}</initializer>
        <briefdescription>
<para>Macro for creating a IDS instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="110" column="9" bodyfile="helpers/nrfx_ids.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfx__ids_1ga753147e036883c77d395b92b4acca2f3" prot="public" static="no">
        <name>NRFX_IDS_CHANNEL</name>
        <param><defname>channel</defname></param>
        <initializer>(0x1UL &lt;&lt; (channel))</initializer>
        <briefdescription>
<para>Macro for creating channel bitmask associated with specified channel index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_ids.h" line="117" column="9" bodyfile="helpers/nrfx_ids.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper layer that provides the common functionality for the inter-domain signalling (IDS) mechanisms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
