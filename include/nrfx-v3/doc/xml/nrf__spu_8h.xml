<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__spu_8h" kind="file" language="C++">
    <compoundname>nrf_spu.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_spu.h</label>
        <link refid="nrf__spu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__spu__hal_1gaab4014f3cf67116e3d80ae20d65ff837" prot="public" static="no">
        <name>NRF_SPU_HAS_PERIPHERAL_ACCESS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of peripheral access feature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="52" column="9" bodyfile="hal/nrf_spu.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga98b997a0f3b31bd93a1f8428ef80c687" prot="public" static="no">
        <name>NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether register containing information about the transaction that caused peripheral access error is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="62" column="9" bodyfile="hal/nrf_spu.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga048a53af00c9dcb6da3647dd884f1720" prot="public" static="no">
        <name>NRF_SPU_HAS_OWNERSHIP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of ownership feature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="69" column="9" bodyfile="hal/nrf_spu.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga40a1a0a8d05076c0f72ceff2cdf3a84d" prot="public" static="no">
        <name>NRF_SPU_HAS_MEMORY</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of memory feature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="76" column="9" bodyfile="hal/nrf_spu.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga01c10baa92c4c6dd06eec4d749a1a864" prot="public" static="no">
        <name>NRF_SPU_HAS_BLOCK</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether block feature is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="83" column="9" bodyfile="hal/nrf_spu.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga6a99e5afe5afd97f6f9cfd4945542548" prot="public" static="no">
        <name>NRF_SPU_HAS_BELLS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPU has registers related to BELLS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="91" column="9" bodyfile="hal/nrf_spu.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga460e99db7029fd6e5ec13edfe1c72d17" prot="public" static="no">
        <name>NRF_SPU_HAS_DOMAIN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPU uses DOMAIN register name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="98" column="9" bodyfile="hal/nrf_spu.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga9e18262850998ecb3894154c387c93fa" prot="public" static="no">
        <name>NRF_SPU_HAS_IPCT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPU has registers related to IPCT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="105" column="9" bodyfile="hal/nrf_spu.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gaabdb8c3f2d2d0bfb2494110ca9af47bf" prot="public" static="no">
        <name>NRF_SPU_HAS_TDD</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPU has registers related to TDD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="112" column="9" bodyfile="hal/nrf_spu.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga4f39a304139e9846770235c0be41bd83" prot="public" static="no">
        <name>NRF_SPU_HAS_MRAMC</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SPU has registers related to MRAMC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="119" column="9" bodyfile="hal/nrf_spu.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" prot="public" static="no">
        <name>NRF_SPU_PERIPH_COUNT</name>
        <initializer>SPU_PERIPH_MaxCount</initializer>
        <briefdescription>
<para>Number of peripherals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="127" column="9" bodyfile="hal/nrf_spu.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" prot="public" static="no">
        <name>NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</name>
        <initializer>SPU_FEATURE_IPCT_CH_MaxCount</initializer>
        <briefdescription>
<para>Number of IPCT channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="131" column="9" bodyfile="hal/nrf_spu.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" prot="public" static="no">
        <name>NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</name>
        <initializer>SPU_FEATURE_IPCT_INTERRUPT_MaxCount</initializer>
        <briefdescription>
<para>Number of IPCT interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="134" column="9" bodyfile="hal/nrf_spu.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" prot="public" static="no">
        <name>NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</name>
        <initializer>SPU_FEATURE_DPPIC_CH_MaxCount</initializer>
        <briefdescription>
<para>Number of DPPI channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="138" column="9" bodyfile="hal/nrf_spu.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" prot="public" static="no">
        <name>NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</name>
        <initializer>SPU_FEATURE_DPPIC_CHG_MaxCount</initializer>
        <briefdescription>
<para>Number of DPPI channel groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="141" column="9" bodyfile="hal/nrf_spu.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GPIOTE_COUNT</name>
        <initializer>SPU_FEATURE_GPIOTE_MaxCount</initializer>
        <briefdescription>
<para>Number of GPIOTEs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="144" column="9" bodyfile="hal/nrf_spu.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</name>
        <initializer>SPU_FEATURE_GPIOTE_CH_MaxCount</initializer>
        <briefdescription>
<para>Number of GPIOTE channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="147" column="9" bodyfile="hal/nrf_spu.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</name>
        <initializer>SPU_FEATURE_GPIOTE_INTERRUPT_MaxCount</initializer>
        <briefdescription>
<para>Number of GPIOTE interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="150" column="9" bodyfile="hal/nrf_spu.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GPIO_COUNT</name>
        <initializer>SPU_FEATURE_GPIO_MaxCount</initializer>
        <briefdescription>
<para>Number of GPIOs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="153" column="9" bodyfile="hal/nrf_spu.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GPIO_PIN_COUNT</name>
        <initializer>SPU_FEATURE_GPIO_PIN_MaxCount</initializer>
        <briefdescription>
<para>Number of GPIO pins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="156" column="9" bodyfile="hal/nrf_spu.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GRTC_CC_COUNT</name>
        <initializer>SPU_FEATURE_GRTC_CC_MaxCount</initializer>
        <briefdescription>
<para>Number of GRTC compare channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="159" column="9" bodyfile="hal/nrf_spu.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" prot="public" static="no">
        <name>NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</name>
        <initializer>SPU_FEATURE_GRTC_INTERRUPT_MaxCount</initializer>
        <briefdescription>
<para>Number of GRTC interrupts.. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="162" column="9" bodyfile="hal/nrf_spu.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gacdd8cf71d46d434dac525136753b1dce" prot="public" static="no">
        <name>NRF_SPU_FEATURE_BELL_DOMAIN_COUNT</name>
        <initializer>SPU_FEATURE_BELLS_DOMAIN_MaxCount</initializer>
        <briefdescription>
<para>Number of BELL domains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="166" column="9" bodyfile="hal/nrf_spu.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" prot="public" static="no">
        <name>NRF_SPU_FEATURE_BELL_BELL_COUNT</name>
        <initializer>SPU_FEATURE_BELLS_DOMAIN_BELL_MaxCount</initializer>
        <briefdescription>
<para>Number of BELL Domain/Processor features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="173" column="9" bodyfile="hal/nrf_spu.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" prot="public" static="no">
        <name>NRF_SPU_FEATURE_TDD_COUNT</name>
        <initializer>SPU_FEATURE_TDD_MaxCount</initializer>
        <briefdescription>
<para>Number of TDDs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="182" column="9" bodyfile="hal/nrf_spu.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" prot="public" static="no">
        <name>NRF_SPU_FEATURE_MRAMC_COUNT</name>
        <initializer>SPU_FEATURE_MRAMC_MaxCount</initializer>
        <briefdescription>
<para>Number of MRAMCs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="187" column="9" bodyfile="hal/nrf_spu.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_event_t</name>
        <enumvalue id="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6aaa31caa7b50e4970d7cda08812af19be" prot="public">
          <name>NRF_SPU_EVENT_RAMACCERR</name>
          <initializer>= offsetof(NRF_SPU_Type, EVENTS_RAMACCERR)</initializer>
          <briefdescription>
<para>A security violation has been detected for the RAM memory space. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6ac6ad3b7f3e47c8a8582db960471b169f" prot="public">
          <name>NRF_SPU_EVENT_FLASHACCERR</name>
          <initializer>= offsetof(NRF_SPU_Type, EVENTS_FLASHACCERR)</initializer>
          <briefdescription>
<para>A security violation has been detected for the Flash memory space. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6ac55127f75f98e0be611c2009ab883052" prot="public">
          <name>NRF_SPU_EVENT_PERIPHACCERR</name>
          <initializer>= offsetof(NRF_SPU_Type, EVENTS_PERIPHACCERR)</initializer>
          <briefdescription>
<para>A security violation has been detected on one or several peripherals. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="193" column="1" bodyfile="hal/nrf_spu.h" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1ga44a6e9c6511f38d0246e967076179519" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_int_mask_t</name>
        <enumvalue id="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a8dc6bb66508e4cf4f32b0801d70de165" prot="public">
          <name>NRF_SPU_INT_RAMACCERR_MASK</name>
          <initializer>= SPU_INTENSET_RAMACCERR_Msk</initializer>
          <briefdescription>
<para>Interrupt on RAMACCERR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a236c5f3afb426371c0105377e91b715d" prot="public">
          <name>NRF_SPU_INT_FLASHACCERR_MASK</name>
          <initializer>= SPU_INTENSET_FLASHACCERR_Msk</initializer>
          <briefdescription>
<para>Interrupt on FLASHACCERR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a7ee08e69378f053e63a0727830b919a0" prot="public">
          <name>NRF_SPU_INT_PERIPHACCERR_MASK</name>
          <initializer>= SPU_INTENSET_PERIPHACCERR_Msk</initializer>
          <briefdescription>
<para>Interrupt on PERIPHACCERR event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="203" column="1" bodyfile="hal/nrf_spu.h" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_nsc_size_t</name>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a875353222524f16265c720a1f818f5de" prot="public">
          <name>NRF_SPU_NSC_SIZE_DISABLED</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Not defined as a non-secure callable region. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a80ae19ec3a1c0ae36a0ccdd23cdbfb60" prot="public">
          <name>NRF_SPU_NSC_SIZE_32B</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 32-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a28724cd813cd3df4cbe36a82527d5910" prot="public">
          <name>NRF_SPU_NSC_SIZE_64B</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 64-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a43fc9e24300cf96a121f175311243623" prot="public">
          <name>NRF_SPU_NSC_SIZE_128B</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 128-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94ac7f5658740dab3ec33e973784548cfc5" prot="public">
          <name>NRF_SPU_NSC_SIZE_256B</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 256-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a19bf4751cf0a17fa4a1176dbeeaa4542" prot="public">
          <name>NRF_SPU_NSC_SIZE_512B</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 512-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a8e329246efb352f991937d3e8c1b1cd2" prot="public">
          <name>NRF_SPU_NSC_SIZE_1024B</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 1024-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a2c5720f5bc224b6bec52f781098465be" prot="public">
          <name>NRF_SPU_NSC_SIZE_2048B</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 2048-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a9483e4865c487560d215570215d9ded7" prot="public">
          <name>NRF_SPU_NSC_SIZE_4096B</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>Non-Secure Callable region with a 4096-byte size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU Non-Secure Callable (NSC) region size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="214" column="1" bodyfile="hal/nrf_spu.h" bodystart="215" bodyend="225"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1gafe75ab0f3d1142b83a6211f2143850fc" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_mem_perm_t</name>
        <enumvalue id="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca9a72b741820101251a417c3815bdeeeb" prot="public">
          <name>NRF_SPU_MEM_PERM_EXECUTE</name>
          <initializer>= SPU_FLASHREGION_PERM_EXECUTE_Msk</initializer>
          <briefdescription>
<para>Allow code execution from particular memory region. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca3be27a79290460a4e969e3b7c760a069" prot="public">
          <name>NRF_SPU_MEM_PERM_WRITE</name>
          <initializer>= SPU_FLASHREGION_PERM_WRITE_Msk</initializer>
          <briefdescription>
<para>Allow write operation on particular memory region. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca2df2bef69809b5249db4f8dc69746408" prot="public">
          <name>NRF_SPU_MEM_PERM_READ</name>
          <initializer>= SPU_FLASHREGION_PERM_READ_Msk</initializer>
          <briefdescription>
<para>Allow read operation from particular memory region. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU memory region permissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="228" column="1" bodyfile="hal/nrf_spu.h" bodystart="229" bodyend="233"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_securemapping_t</name>
        <enumvalue id="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aacf88e38058393479e91304f58bca9ba" prot="public">
          <name>NRF_SPU_SECUREMAPPING_NONSECURE</name>
          <initializer>= SPU_PERIPH_PERM_SECUREMAPPING_NonSecure</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is always accessible as non-secure. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023a64328376a41d5dfc2986c75aed3fdc33" prot="public">
          <name>NRF_SPU_SECUREMAPPING_SECURE</name>
          <initializer>= SPU_PERIPH_PERM_SECUREMAPPING_Secure</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral is always accessible as secure. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023acde7766ec08af43a7fef33c7a1a378ac" prot="public">
          <name>NRF_SPU_SECUREMAPPING_USERSELECTABLE</name>
          <initializer>= SPU_PERIPH_PERM_SECUREMAPPING_UserSelectable</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Non-secure or secure attribute for this peripheral is defined by the PERIPH[n].PERM register. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aa53394b582de83ae0aa9b62bf350bcdf" prot="public">
          <name>NRF_SPU_SECUREMAPPING_SPLIT</name>
          <initializer>= SPU_PERIPH_PERM_SECUREMAPPING_Split</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral implements the split security mechanism. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU read capabilities for TrustZone Cortex-M secure attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="238" column="1" bodyfile="hal/nrf_spu.h" bodystart="239" bodyend="244"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_dma_t</name>
        <enumvalue id="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a64d243877930bbda516bb6b88a298958" prot="public">
          <name>NRF_SPU_DMA_NODMA</name>
          <initializer>= SPU_PERIPH_PERM_DMA_NoDMA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Peripheral has no DMA capability. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a9603e10a06b00ec076748c69eef6cf8e" prot="public">
          <name>NRF_SPU_DMA_NOSEPARATEATTRIBUTE</name>
          <initializer>= SPU_PERIPH_PERM_DMA_NoSeparateAttribute</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DMA transfers always have the same security attribute as assigned to the peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a5ec1f8ef0e82c738e86839aa892b5817" prot="public">
          <name>NRF_SPU_DMA_SEPARATEATTRIBUTE</name>
          <initializer>= SPU_PERIPH_PERM_DMA_SeparateAttribute</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DMA transfers can have a different security attribute than the one assigned to the peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU DMA capabilities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="247" column="1" bodyfile="hal/nrf_spu.h" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_spu_feature_t</name>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" prot="public">
          <name>NRF_SPU_FEATURE_IPCT_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IPCT channel. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" prot="public">
          <name>NRF_SPU_FEATURE_IPCT_INTERRUPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IPCT interrupt. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" prot="public">
          <name>NRF_SPU_FEATURE_DPPI_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DPPI channel. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" prot="public">
          <name>NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DPPI channel group. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" prot="public">
          <name>NRF_SPU_FEATURE_GPIOTE_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GPIOTE channel. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" prot="public">
          <name>NRF_SPU_FEATURE_GPIOTE_INTERRUPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GPIOTE interrupt. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" prot="public">
          <name>NRF_SPU_FEATURE_GPIO_PIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GPIO pin. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" prot="public">
          <name>NRF_SPU_FEATURE_GRTC_CC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GRTC compare channel. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" prot="public">
          <name>NRF_SPU_FEATURE_GRTC_SYSCOUNTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GRTC SYSCOUNTER. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" prot="public">
          <name>NRF_SPU_FEATURE_GRTC_INTERRUPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GRTC interrupt. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" prot="public">
          <name>NRF_SPU_FEATURE_BELLS_BELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BELLS bell pair. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" prot="public">
          <name>NRF_SPU_FEATURE_TDD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TDD. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" prot="public">
          <name>NRF_SPU_FEATURE_MRAMC_WAITSTATES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MRAMC waitstates. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" prot="public">
          <name>NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MRAMC automatic power-down. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" prot="public">
          <name>NRF_SPU_FEATURE_MRAMC_READY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MRAMC ready. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SPU features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="255" column="1" bodyfile="hal/nrf_spu.h" bodystart="256" bodyend="286"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__spu__hal_1ga68219a0729e52f40c0d7cbb9759b7a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_event_clear</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_event_t event)</argsstring>
        <name>nrf_spu_event_clear</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing a specific SPU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="842" column="24" bodyfile="hal/nrf_spu.h" bodystart="842" bodyend="847" declfile="hal/nrf_spu.h" declline="296" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga70ba554940e198a2c00862945deade16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_event_check</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, nrf_spu_event_t event)</argsstring>
        <name>nrf_spu_event_check</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the SPU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="849" column="24" bodyfile="hal/nrf_spu.h" bodystart="849" bodyend="853" declfile="hal/nrf_spu.h" declline="308" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gad978dc17a54c14ead43c2fa1671c66b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_int_enable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spu_int_enable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__spu__hal_1ga44a6e9c6511f38d0246e967076179519" kindref="member">nrf_spu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="855" column="24" bodyfile="hal/nrf_spu.h" bodystart="855" bodyend="859" declfile="hal/nrf_spu.h" declline="318" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga068fbe3a30786954e8ca216c0a8a5e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_int_disable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spu_int_disable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__spu__hal_1ga44a6e9c6511f38d0246e967076179519" kindref="member">nrf_spu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="861" column="24" bodyfile="hal/nrf_spu.h" bodystart="861" bodyend="865" declfile="hal/nrf_spu.h" declline="328" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga1dc0a504e03ed6f38f9c4a5c364b1715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spu_int_enable_check</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_spu_int_enable_check</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__spu__hal_1ga44a6e9c6511f38d0246e967076179519" kindref="member">nrf_spu_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="867" column="28" bodyfile="hal/nrf_spu.h" bodystart="867" bodyend="870" declfile="hal/nrf_spu.h" declline="340" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga200ee02fe1c23101aad0ce846fca29ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_publish_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_event_t event, uint32_t channel)</argsstring>
        <name>nrf_spu_publish_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting up publication configuration of a given SPU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to connect with published event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="873" column="24" bodyfile="hal/nrf_spu.h" bodystart="873" bodyend="879" declfile="hal/nrf_spu.h" declline="350" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga78d3fa9ec803eaef4593e1a52820bcbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_publish_clear</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_event_t event)</argsstring>
        <name>nrf_spu_publish_clear</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing publication configuration of a given SPU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="881" column="24" bodyfile="hal/nrf_spu.h" bodystart="881" bodyend="885" declfile="hal/nrf_spu.h" declline="360" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga2df21cb782ba105b5e208bad095a011a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_tz_is_available</definition>
        <argsstring>(NRF_SPU_Type const *p_reg)</argsstring>
        <name>nrf_spu_tz_is_available</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the capabilities of the current device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>ARM TrustZone support is available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>ARM TrustZone support is not available. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="887" column="24" bodyfile="hal/nrf_spu.h" bodystart="887" bodyend="890" declfile="hal/nrf_spu.h" declline="371" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga9f7ed30e65625d27a94d2367c8fe3faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_dppi_config_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t dppi_id, uint32_t channels_mask, bool lock_conf)</argsstring>
        <name>nrf_spu_dppi_config_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dppi_id</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channels_mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring the DPPI channels to be available in particular domains. </para>
        </briefdescription>
        <detaileddescription>
<para>Channels are configured as bitmask. Set one in bitmask to make channels available only in secure domain. Set zero to make it available in secure and non-secure domains.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dppi_id</parametername>
</parameternamelist>
<parameterdescription>
<para>DPPI peripheral id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channels_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask with channels configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="892" column="24" bodyfile="hal/nrf_spu.h" bodystart="892" bodyend="905" declfile="hal/nrf_spu.h" declline="384" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga6ca19b4ad46b497cd693047115e12347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_gpio_config_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t gpio_port, uint32_t gpio_mask, bool lock_conf)</argsstring>
        <name>nrf_spu_gpio_config_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>gpio_port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>gpio_mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring the GPIO pins to be available in particular domains. </para>
        </briefdescription>
        <detaileddescription>
<para>GPIO pins are configured as bitmask. Set one in bitmask to make particular pin available only in secure domain. Set zero to make it available in secure and non-secure domains.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gpio_port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gpio_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask with gpio configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="907" column="24" bodyfile="hal/nrf_spu.h" bodystart="907" bodyend="920" declfile="hal/nrf_spu.h" declline="400" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga8f549ce08f3891c83d62a5256a7594c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_flashnsc_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t flash_nsc_id, nrf_spu_nsc_size_t flash_nsc_size, uint8_t region_number, bool lock_conf)</argsstring>
        <name>nrf_spu_flashnsc_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flash_nsc_id</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref></type>
          <declname>flash_nsc_size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring non-secure callable flash region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flash_nsc_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-secure callable flash region ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flash_nsc_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-secure callable flash region size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Flash region number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="922" column="24" bodyfile="hal/nrf_spu.h" bodystart="922" bodyend="935" declfile="hal/nrf_spu.h" declline="414" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga289b83bd30667a37519640cb5c6a74fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_ramnsc_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t ram_nsc_id, nrf_spu_nsc_size_t ram_nsc_size, uint8_t region_number, bool lock_conf)</argsstring>
        <name>nrf_spu_ramnsc_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ram_nsc_id</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref></type>
          <declname>ram_nsc_size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring non-secure callable RAM region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ram_nsc_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-secure callable RAM region ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ram_nsc_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-secure callable RAM region size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_number</parametername>
</parameternamelist>
<parameterdescription>
<para>RAM region number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="937" column="24" bodyfile="hal/nrf_spu.h" bodystart="937" bodyend="950" declfile="hal/nrf_spu.h" declline="429" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga3d59cd2c2e218eeec8b98ae49225da4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_flashregion_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t region_id, bool secure_attr, uint32_t permissions, bool lock_conf)</argsstring>
        <name>nrf_spu_flashregion_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secure_attr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>permissions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring security for a particular flash region. </para>
        </briefdescription>
        <detaileddescription>
<para>Permissions parameter must be set by using the logical OR on the <ref refid="group__nrf__spu__hal_1gafe75ab0f3d1142b83a6211f2143850fc" kindref="member">nrf_spu_mem_perm_t</ref> values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Flash region index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">secure_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Set region attribute to secure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">permissions</parametername>
</parameternamelist>
<parameterdescription>
<para>Flash region permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="952" column="24" bodyfile="hal/nrf_spu.h" bodystart="952" bodyend="963" declfile="hal/nrf_spu.h" declline="446" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gad3d8c40545df1ac1f7a40d2e3b23dee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_ramregion_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t region_id, bool secure_attr, uint32_t permissions, bool lock_conf)</argsstring>
        <name>nrf_spu_ramregion_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secure_attr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>permissions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring security for the RAM region. </para>
        </briefdescription>
        <detaileddescription>
<para>Permissions parameter must be set by using the logical OR on the <ref refid="group__nrf__spu__hal_1gafe75ab0f3d1142b83a6211f2143850fc" kindref="member">nrf_spu_mem_perm_t</ref> values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_id</parametername>
</parameternamelist>
<parameterdescription>
<para>RAM region index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">secure_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Set region attribute to secure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">permissions</parametername>
</parameternamelist>
<parameterdescription>
<para>RAM region permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="965" column="24" bodyfile="hal/nrf_spu.h" bodystart="965" bodyend="976" declfile="hal/nrf_spu.h" declline="463" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga5518273cfb31711bc2bc98341149ca5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_peripheral_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint32_t peripheral_id, bool secure_attr, bool secure_dma, bool lock_conf)</argsstring>
        <name>nrf_spu_peripheral_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>peripheral_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secure_attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secure_dma</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring access permissions of the peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peripheral_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID number of a particular peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">secure_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral registers accessible only from secure domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">secure_dma</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA transfers possible only from RAM memory in secure domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Lock configuration until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="978" column="24" bodyfile="hal/nrf_spu.h" bodystart="978" bodyend="991" declfile="hal/nrf_spu.h" declline="478" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga26f1482b45a4443897ffe48f91e578e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_extdomain_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint32_t domain_id, bool secure_attr, bool lock_conf)</argsstring>
        <name>nrf_spu_extdomain_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>domain_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>secure_attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock_conf</declname>
        </param>
        <briefdescription>
<para>Function for configuring bus access permissions of the specified external domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">domain_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID number of a particular external domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">secure_attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies if the bus accesses from this domain have the secure attribute set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies if the configuration should be locked until next SoC reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="993" column="24" bodyfile="hal/nrf_spu.h" bodystart="993" bodyend="1003" declfile="hal/nrf_spu.h" declline="492" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gacbafb55d6851f8899248996a3e7b503d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_spu_periphaccerr_address_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg)</argsstring>
        <name>nrf_spu_periphaccerr_address_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the security violation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The event PERIPHACCERR must be cleared to clear this register.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the transaction that caused first error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1007" column="28" bodyfile="hal/nrf_spu.h" bodystart="1007" bodyend="1010" declfile="hal/nrf_spu.h" declline="509" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga99c0ed224649632d21662232df24e22e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE nrf_owner_t</type>
        <definition>NRF_STATIC_INLINE nrf_owner_t nrf_spu_periphaccerr_ownerid_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg)</argsstring>
        <name>nrf_spu_periphaccerr_ownerid_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the owner ID of the security violation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The event PERIPHACCERR must be cleared to clear this register.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Owner ID of the transaction that caused first error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1013" column="31" bodyfile="hal/nrf_spu.h" bodystart="1013" bodyend="1016" declfile="hal/nrf_spu.h" declline="521" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gadc7939f13a352b9ed85baa764820d66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" kindref="member">nrf_spu_securemapping_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_spu_securemapping_t nrf_spu_periph_perm_securemapping_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_securemapping_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the capabilities for TrustZone Cortex-M secure attribute of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TrustZone capabilities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1114" column="25" bodyfile="hal/nrf_spu.h" bodystart="1114" bodyend="1122" declfile="hal/nrf_spu.h" declline="534" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gaf6580f7851c2dd66b0773ffecef19466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" kindref="member">nrf_spu_dma_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_spu_dma_t nrf_spu_periph_perm_dma_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_dma_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the DMA capabilities of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DMA capabilities. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1124" column="33" bodyfile="hal/nrf_spu.h" bodystart="1124" bodyend="1131" declfile="hal/nrf_spu.h" declline="545" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gae93e3fe9eee85ad284840b3bbd007858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_secattr_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_secattr_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the security mapping of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral is mapped in secure peripheral address space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If TrustZone capabilities are <ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023acde7766ec08af43a7fef33c7a1a378ac" kindref="member">NRF_SPU_SECUREMAPPING_USERSELECTABLE</ref>, then peripheral is mapped in non-secure peripheral address space. If TrustZone capabilities are <ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aa53394b582de83ae0aa9b62bf350bcdf" kindref="member">NRF_SPU_SECUREMAPPING_SPLIT</ref>, then peripheral is mapped in non-secure and secure peripheral address space. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1063" column="24" bodyfile="hal/nrf_spu.h" bodystart="1063" bodyend="1069" declfile="hal/nrf_spu.h" declline="560" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga72c2eda8b1aa5fc262ac3364b1e42b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_periph_perm_secattr_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t index, bool enable)</argsstring>
        <name>nrf_spu_periph_perm_secattr_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the security mapping of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This bit has effect only if TrustZone capabilities are either <ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023acde7766ec08af43a7fef33c7a1a378ac" kindref="member">NRF_SPU_SECUREMAPPING_USERSELECTABLE</ref> or <ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aa53394b582de83ae0aa9b62bf350bcdf" kindref="member">NRF_SPU_SECUREMAPPING_SPLIT</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if security mapping is to be set, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1102" column="24" bodyfile="hal/nrf_spu.h" bodystart="1102" bodyend="1111" declfile="hal/nrf_spu.h" declline="573" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gad4797b13e8352b1d16e839915d93291f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_dmasec_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_dmasec_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the security attribution for the DMA transfer of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if DMA transfers initiated by this peripheral have the secure attribute set, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1055" column="24" bodyfile="hal/nrf_spu.h" bodystart="1055" bodyend="1061" declfile="hal/nrf_spu.h" declline="587" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga32806730a0b60e4a65fcfd06b35b65d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_periph_perm_dmasec_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t index, bool enable)</argsstring>
        <name>nrf_spu_periph_perm_dmasec_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the security attribution for the DMA transfer of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This bit has effect only if peripheral security mapping is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if secure attribute for the DMA transfer is to be set, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1091" column="24" bodyfile="hal/nrf_spu.h" bodystart="1091" bodyend="1100" declfile="hal/nrf_spu.h" declline="600" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga801ac355cde9424713bf9ff25de270dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_block_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_block_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the status of the peripheral access lock of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When peripheral access lock is enabled, reading or modifying the registers of the peripheral is blocked.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the peripheral access is locked, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1046" column="24" bodyfile="hal/nrf_spu.h" bodystart="1046" bodyend="1052" declfile="hal/nrf_spu.h" declline="616" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gae4238c89034e45d4b4b16381b530f47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_periph_perm_block_enable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_block_enable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for enabling the peripheral access lock of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When peripheral access lock is enabled, reading or modifying the registers of the peripheral is blocked.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1081" column="24" bodyfile="hal/nrf_spu.h" bodystart="1081" bodyend="1088" declfile="hal/nrf_spu.h" declline="628" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga1881ee3346de4ed5a95eb0e3d0e0131d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_lock_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_lock_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the status of the peripheral management lock of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When peripheral management lock is enabled, modifying the SPU configuration associated with specified peripheral is not possible.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the peripheral management is locked, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1037" column="24" bodyfile="hal/nrf_spu.h" bodystart="1037" bodyend="1043" declfile="hal/nrf_spu.h" declline="643" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga03b4ff6cfffed66789549900aa6c7bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_periph_perm_lock_enable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_lock_enable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for enabling the peripheral management lock of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When peripheral management lock is enabled, modifying the SPU configuration associated with specified peripheral is not possible.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1071" column="24" bodyfile="hal/nrf_spu.h" bodystart="1071" bodyend="1078" declfile="hal/nrf_spu.h" declline="655" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gacb4c7161984ddd9d05d09a670287059c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE nrf_owner_t</type>
        <definition>NRF_STATIC_INLINE nrf_owner_t nrf_spu_periph_perm_ownerid_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_ownerid_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the peripheral owner ID of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Owner ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1134" column="31" bodyfile="hal/nrf_spu.h" bodystart="1134" bodyend="1141" declfile="hal/nrf_spu.h" declline="667" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gab10e1128d592f7573f0fcbedafcc4b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_periph_perm_ownerid_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, uint8_t index, nrf_owner_t owner_id)</argsstring>
        <name>nrf_spu_periph_perm_ownerid_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>nrf_owner_t</type>
          <declname>owner_id</declname>
        </param>
        <briefdescription>
<para>Function for setting the peripheral owner ID of the specified slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">owner_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Owner ID to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1143" column="24" bodyfile="hal/nrf_spu.h" bodystart="1143" bodyend="1152" declfile="hal/nrf_spu.h" declline="677" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga2558e753e968a4322a91c6957a95a6ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_ownerprog_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_ownerprog_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the indication if owner ID of the specified slave is programmable or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if owner ID is programmable, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1028" column="24" bodyfile="hal/nrf_spu.h" bodystart="1028" bodyend="1034" declfile="hal/nrf_spu.h" declline="690" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gac88ce0843392afbed0314e969aded8c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_periph_perm_present_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_spu_periph_perm_present_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the indication if peripheral with the specified slave index is present. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral slave index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if peripheral is present, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1019" column="24" bodyfile="hal/nrf_spu.h" bodystart="1019" bodyend="1025" declfile="hal/nrf_spu.h" declline="703" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gad2f33b71131b6e984f4dd0661caf8f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_feature_secattr_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_secattr_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for getting the security mapping of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature is available for secure usage. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature is available for non-secure usage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1155" column="24" bodyfile="hal/nrf_spu.h" bodystart="1155" bodyend="1286" declfile="hal/nrf_spu.h" declline="717" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga5041c2c330a50d77d47b5e3638b12f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_feature_secattr_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex, bool enable)</argsstring>
        <name>nrf_spu_feature_secattr_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the security mapping of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if security mapping is to be set, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1691" column="24" bodyfile="hal/nrf_spu.h" bodystart="1691" bodyend="1913" declfile="hal/nrf_spu.h" declline="731" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1gaaa80a705edd8347b7222401a87f26f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_feature_lock_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_lock_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for getting the status of the management lock of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When feature management lock is enabled, modifying the SPU configuration associated with specified feature is not possible.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if feature management is locked, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1288" column="24" bodyfile="hal/nrf_spu.h" bodystart="1288" bodyend="1419" declfile="hal/nrf_spu.h" declline="750" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga0be19d03dc1415fd873eb3fd8b70bb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_feature_lock_enable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_lock_enable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for enabling the management lock of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When feature management lock is enabled, modifying the SPU configuration associated with specified feature is not possible.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1915" column="24" bodyfile="hal/nrf_spu.h" bodystart="1915" bodyend="2100" declfile="hal/nrf_spu.h" declline="766" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga0151c1446805884a8e238fcbf90cca38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_spu_feature_block_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_block_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for getting status of the access lock of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When feature access lock is enabled, reading or modifying the registers of the feature is blocked.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the feature access is locked, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1422" column="24" bodyfile="hal/nrf_spu.h" bodystart="1422" bodyend="1553" declfile="hal/nrf_spu.h" declline="785" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga5ed56a25adf9f45e12eb44901f41aa36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_feature_block_enable</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_block_enable</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for enabling the feature block of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>When feature access lock is enabled, reading or modifying the registers of the feature is blocked.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="2103" column="24" bodyfile="hal/nrf_spu.h" bodystart="2103" bodyend="2288" declfile="hal/nrf_spu.h" declline="801" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga2ce58ebf39fc9cee317d7cfe0a0770d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE nrf_owner_t</type>
        <definition>NRF_STATIC_INLINE nrf_owner_t nrf_spu_feature_ownerid_get</definition>
        <argsstring>(NRF_SPU_Type const *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex)</argsstring>
        <name>nrf_spu_feature_ownerid_get</name>
        <param>
          <type>NRF_SPU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <briefdescription>
<para>Function for getting the feature owner ID of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Owner ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="1557" column="31" bodyfile="hal/nrf_spu.h" bodystart="1557" bodyend="1688" declfile="hal/nrf_spu.h" declline="818" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__spu__hal_1ga75edeaa9063ab5cba1b60c7c44fce989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_spu_feature_ownerid_set</definition>
        <argsstring>(NRF_SPU_Type *p_reg, nrf_spu_feature_t feature, uint8_t index, uint8_t subindex, nrf_owner_t owner_id)</argsstring>
        <name>nrf_spu_feature_ownerid_set</name>
        <param>
          <type>NRF_SPU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>subindex</declname>
        </param>
        <param>
          <type>nrf_owner_t</type>
          <declname>owner_id</declname>
        </param>
        <briefdescription>
<para>Function for setting the feature owner ID of the specified feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature to be accessed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subindex</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature subindex. Only used for applicable features, otherwise skipped. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">owner_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Owner ID to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_spu.h" line="2292" column="24" bodyfile="hal/nrf_spu.h" bodystart="2292" bodyend="2496" declfile="hal/nrf_spu.h" declline="832" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_SPU_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_spu_hal<sp/>SPU<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_spu</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>System<sp/>Protection<sp/>Unit<sp/>(SPU)<sp/>peripheral.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_PERIPHACCERR_ADDRESS_ADDRESS_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>peripheral<sp/>access<sp/>feature.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_PERIPHACCERR_INFO_OWNERID_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>register<sp/>containing<sp/>information<sp/>about<sp/>the<sp/>transaction</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>caused<sp/>peripheral<sp/>access<sp/>error<sp/>is<sp/>present.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_PERIPH_PERM_OWNERPROG_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>ownership<sp/>feature.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_OWNERSHIP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_OWNERSHIP<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FLASHREGION_PERM_EXECUTE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>memory<sp/>feature.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_MEMORY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_MEMORY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_PERIPH_PERM_BLOCK_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>block<sp/>feature<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_BLOCK<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_BLOCK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FEATURE_BELLS_DOMAIN_MaxCount)<sp/>||<sp/>defined(SPU_FEATURE_BELLS_PROCESSOR_MaxCount)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPU<sp/>has<sp/>registers<sp/>related<sp/>to<sp/>BELLS.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_BELLS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_BELLS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FEATURE_BELLS_DOMAIN_MaxCount)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPU<sp/>uses<sp/>DOMAIN<sp/>register<sp/>name.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_DOMAIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_DOMAIN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FEATURE_IPCT_CH_MaxCount)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPU<sp/>has<sp/>registers<sp/>related<sp/>to<sp/>IPCT.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_IPCT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_IPCT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FEATURE_TDD_MaxCount)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPU<sp/>has<sp/>registers<sp/>related<sp/>to<sp/>TDD.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_TDD<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_TDD<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SPU_FEATURE_MRAMC_MaxCount)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SPU<sp/>has<sp/>registers<sp/>related<sp/>to<sp/>MRAMC.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_MRAMC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_HAS_MRAMC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>peripherals.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_PERIPH_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>IPCT<sp/>channels.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_CH_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>IPCT<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT<sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_INTERRUPT_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>DPPI<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CH_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>DPPI<sp/>channel<sp/>groups.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT<sp/>SPU_FEATURE_DPPIC_CHG_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GPIOTEs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GPIOTE_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GPIOTE<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT<sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_CH_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GPIOTE<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT<sp/><sp/><sp/>SPU_FEATURE_GPIOTE_INTERRUPT_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GPIOs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GPIO_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIO_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GPIO<sp/>pins.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GPIO_PIN_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIO_PIN_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GRTC<sp/>compare<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GRTC_CC_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_CC_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>GRTC<sp/>interrupts..<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT<sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_INTERRUPT_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>BELL<sp/>domains.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELL_DOMAIN_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELLS_PROCESSOR_COUNT<sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>BELL<sp/>Domain/Processor<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELL_BELL_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT<sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>TDDs.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_TDD_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/**<sp/>@brief<sp/>Number<sp/>of<sp/>MRAMCs.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_SPU_FEATURE_MRAMC_COUNT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6aaa31caa7b50e4970d7cda08812af19be" kindref="member">NRF_SPU_EVENT_RAMACCERR</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_SPU_Type,<sp/>EVENTS_RAMACCERR),<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>security<sp/>violation<sp/>has<sp/>been<sp/>detected<sp/>for<sp/>the<sp/>RAM<sp/>memory<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6ac6ad3b7f3e47c8a8582db960471b169f" kindref="member">NRF_SPU_EVENT_FLASHACCERR</ref><sp/><sp/>=<sp/>offsetof(NRF_SPU_Type,<sp/>EVENTS_FLASHACCERR),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>security<sp/>violation<sp/>has<sp/>been<sp/>detected<sp/>for<sp/>the<sp/>Flash<sp/>memory<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggaca772df92f8018db60b64684673403a6ac55127f75f98e0be611c2009ab883052" kindref="member">NRF_SPU_EVENT_PERIPHACCERR</ref><sp/>=<sp/>offsetof(NRF_SPU_Type,<sp/>EVENTS_PERIPHACCERR),<sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>security<sp/>violation<sp/>has<sp/>been<sp/>detected<sp/>on<sp/>one<sp/>or<sp/>several<sp/>peripherals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a8dc6bb66508e4cf4f32b0801d70de165" kindref="member">NRF_SPU_INT_RAMACCERR_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>SPU_INTENSET_RAMACCERR_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RAMACCERR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a236c5f3afb426371c0105377e91b715d" kindref="member">NRF_SPU_INT_FLASHACCERR_MASK</ref><sp/><sp/><sp/>=<sp/>SPU_INTENSET_FLASHACCERR_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>FLASHACCERR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga44a6e9c6511f38d0246e967076179519a7ee08e69378f053e63a0727830b919a0" kindref="member">NRF_SPU_INT_PERIPHACCERR_MASK</ref><sp/><sp/>=<sp/>SPU_INTENSET_PERIPHACCERR_Msk<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>PERIPHACCERR<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1ga44a6e9c6511f38d0246e967076179519" kindref="member">nrf_spu_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MEMORY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>Non-Secure<sp/>Callable<sp/>(NSC)<sp/>region<sp/>size.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a875353222524f16265c720a1f818f5de" kindref="member">NRF_SPU_NSC_SIZE_DISABLED</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">///&lt;<sp/>Not<sp/>defined<sp/>as<sp/>a<sp/>non-secure<sp/>callable<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a80ae19ec3a1c0ae36a0ccdd23cdbfb60" kindref="member">NRF_SPU_NSC_SIZE_32B</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>32-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a28724cd813cd3df4cbe36a82527d5910" kindref="member">NRF_SPU_NSC_SIZE_64B</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>64-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a43fc9e24300cf96a121f175311243623" kindref="member">NRF_SPU_NSC_SIZE_128B</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>3,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>128-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94ac7f5658740dab3ec33e973784548cfc5" kindref="member">NRF_SPU_NSC_SIZE_256B</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>4,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>256-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a19bf4751cf0a17fa4a1176dbeeaa4542" kindref="member">NRF_SPU_NSC_SIZE_512B</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>5,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>512-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a8e329246efb352f991937d3e8c1b1cd2" kindref="member">NRF_SPU_NSC_SIZE_1024B</ref><sp/><sp/><sp/><sp/>=<sp/>6,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>1024-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a2c5720f5bc224b6bec52f781098465be" kindref="member">NRF_SPU_NSC_SIZE_2048B</ref><sp/><sp/><sp/><sp/>=<sp/>7,<sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>2048-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga45f740567f5b83d2f7eca5a8d18cff94a9483e4865c487560d215570215d9ded7" kindref="member">NRF_SPU_NSC_SIZE_4096B</ref><sp/><sp/><sp/><sp/>=<sp/>8<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Non-Secure<sp/>Callable<sp/>region<sp/>with<sp/>a<sp/>4096-byte<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>memory<sp/>region<sp/>permissions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca9a72b741820101251a417c3815bdeeeb" kindref="member">NRF_SPU_MEM_PERM_EXECUTE</ref><sp/>=<sp/>SPU_FLASHREGION_PERM_EXECUTE_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Allow<sp/>code<sp/>execution<sp/>from<sp/>particular<sp/>memory<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca3be27a79290460a4e969e3b7c760a069" kindref="member">NRF_SPU_MEM_PERM_WRITE</ref><sp/><sp/><sp/>=<sp/>SPU_FLASHREGION_PERM_WRITE_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Allow<sp/>write<sp/>operation<sp/>on<sp/>particular<sp/>memory<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ggafe75ab0f3d1142b83a6211f2143850fca2df2bef69809b5249db4f8dc69746408" kindref="member">NRF_SPU_MEM_PERM_READ</ref><sp/><sp/><sp/><sp/>=<sp/>SPU_FLASHREGION_PERM_READ_Msk<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Allow<sp/>read<sp/>operation<sp/>from<sp/>particular<sp/>memory<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1gafe75ab0f3d1142b83a6211f2143850fc" kindref="member">nrf_spu_mem_perm_t</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>read<sp/>capabilities<sp/>for<sp/>TrustZone<sp/>Cortex-M<sp/>secure<sp/>attribute.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aacf88e38058393479e91304f58bca9ba" kindref="member">NRF_SPU_SECUREMAPPING_NONSECURE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPU_PERIPH_PERM_SECUREMAPPING_NonSecure,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>is<sp/>always<sp/>accessible<sp/>as<sp/>non-secure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023a64328376a41d5dfc2986c75aed3fdc33" kindref="member">NRF_SPU_SECUREMAPPING_SECURE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPU_PERIPH_PERM_SECUREMAPPING_Secure,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>is<sp/>always<sp/>accessible<sp/>as<sp/>secure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023acde7766ec08af43a7fef33c7a1a378ac" kindref="member">NRF_SPU_SECUREMAPPING_USERSELECTABLE</ref><sp/>=<sp/>SPU_PERIPH_PERM_SECUREMAPPING_UserSelectable,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Non-secure<sp/>or<sp/>secure<sp/>attribute<sp/>for<sp/>this<sp/>peripheral<sp/>is<sp/>defined<sp/>by<sp/>the<sp/>PERIPH[n].PERM<sp/>register.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga5cf6c98f4cb95c5c49bb1a6e85ed3023aa53394b582de83ae0aa9b62bf350bcdf" kindref="member">NRF_SPU_SECUREMAPPING_SPLIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPU_PERIPH_PERM_SECUREMAPPING_Split,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>implements<sp/>the<sp/>split<sp/>security<sp/>mechanism.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" kindref="member">nrf_spu_securemapping_t</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>DMA<sp/>capabilities.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a64d243877930bbda516bb6b88a298958" kindref="member">NRF_SPU_DMA_NODMA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SPU_PERIPH_PERM_DMA_NoDMA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Peripheral<sp/>has<sp/>no<sp/>DMA<sp/>capability.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a9603e10a06b00ec076748c69eef6cf8e" kindref="member">NRF_SPU_DMA_NOSEPARATEATTRIBUTE</ref><sp/>=<sp/>SPU_PERIPH_PERM_DMA_NoSeparateAttribute,<sp/></highlight><highlight class="comment">/**&lt;<sp/>DMA<sp/>transfers<sp/>always<sp/>have<sp/>the<sp/>same<sp/>security<sp/>attribute<sp/>as<sp/>assigned<sp/>to<sp/>the<sp/>peripheral.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga9e1f6046a4de5110aeb69bc50134a033a5ec1f8ef0e82c738e86839aa892b5817" kindref="member">NRF_SPU_DMA_SEPARATEATTRIBUTE</ref><sp/><sp/><sp/>=<sp/>SPU_PERIPH_PERM_DMA_SeparateAttribute,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>DMA<sp/>transfers<sp/>can<sp/>have<sp/>a<sp/>different<sp/>security<sp/>attribute<sp/>than<sp/>the<sp/>one<sp/>assigned<sp/>to<sp/>the<sp/>peripheral.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" kindref="member">nrf_spu_dma_t</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="254"><highlight class="comment">/**<sp/>@brief<sp/>SPU<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>IPCT<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>IPCT<sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>DPPI<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>DPPI<sp/>channel<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GPIOTE<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GPIOTE<sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GPIO<sp/>pin.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GRTC<sp/>compare<sp/>channel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GRTC<sp/>SYSCOUNTER.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>GRTC<sp/>interrupt.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>BELLS<sp/>bell<sp/>pair.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_SPU_FEATURE_BELLS_TASKS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>BELLS<sp/>tasks<sp/>pair.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_SPU_FEATURE_BELLS_EVENTS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>BELLS<sp/>events<sp/>pair.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>BELLS<sp/>interrupt<sp/>pair.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>TDD.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>MRAMC<sp/>waitstates.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>MRAMC<sp/>automatic<sp/>power-down.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>MRAMC<sp/>ready.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">}<sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>a<sp/>specific<sp/>SPU<sp/>event.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga68219a0729e52f40c0d7cbb9759b7a8b" kindref="member">nrf_spu_event_clear</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>SPU<sp/>event.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga70ba554940e198a2c00862945deade16" kindref="member">nrf_spu_event_check</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad978dc17a54c14ead43c2fa1671c66b4" kindref="member">nrf_spu_int_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga068fbe3a30786954e8ca216c0a8a5e53" kindref="member">nrf_spu_int_disable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_spu_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spu__hal_1ga1dc0a504e03ed6f38f9c4a5c364b1715" kindref="member">nrf_spu_int_enable_check</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MEMORY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>publication<sp/>configuration<sp/>of<sp/>a<sp/>given<sp/>SPU<sp/>event.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>to<sp/>configure.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>connect<sp/>with<sp/>published<sp/>event.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga200ee02fe1c23101aad0ce846fca29ba" kindref="member">nrf_spu_publish_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>publication<sp/>configuration<sp/>of<sp/>a<sp/>given<sp/>SPU<sp/>event.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga78d3fa9ec803eaef4593e1a52820bcbb" kindref="member">nrf_spu_publish_clear</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>capabilities<sp/>of<sp/>the<sp/>current<sp/>device.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>ARM<sp/>TrustZone<sp/>support<sp/>is<sp/>available.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>ARM<sp/>TrustZone<sp/>support<sp/>is<sp/>not<sp/>available.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga2df21cb782ba105b5e208bad095a011a" kindref="member">nrf_spu_tz_is_available</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>DPPI<sp/>channels<sp/>to<sp/>be<sp/>available<sp/>in<sp/>particular<sp/>domains.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>Channels<sp/>are<sp/>configured<sp/>as<sp/>bitmask.<sp/>Set<sp/>one<sp/>in<sp/>bitmask<sp/>to<sp/>make<sp/>channels<sp/>available<sp/>only<sp/>in<sp/>secure</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>domain.<sp/>Set<sp/>zero<sp/>to<sp/>make<sp/>it<sp/>available<sp/>in<sp/>secure<sp/>and<sp/>non-secure<sp/>domains.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>dppi_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPPI<sp/>peripheral<sp/>id.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channels_mask<sp/>Bitmask<sp/>with<sp/>channels<sp/>configuration.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga9f7ed30e65625d27a94d2367c8fe3faa" kindref="member">nrf_spu_dppi_config_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dppi_id,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels_mask,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>GPIO<sp/>pins<sp/>to<sp/>be<sp/>available<sp/>in<sp/>particular<sp/>domains.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>GPIO<sp/>pins<sp/>are<sp/>configured<sp/>as<sp/>bitmask.<sp/>Set<sp/>one<sp/>in<sp/>bitmask<sp/>to<sp/>make<sp/>particular<sp/>pin<sp/>available<sp/>only</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>in<sp/>secure<sp/>domain.<sp/>Set<sp/>zero<sp/>to<sp/>make<sp/>it<sp/>available<sp/>in<sp/>secure<sp/>and<sp/>non-secure<sp/>domains.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>gpio_port<sp/>Port<sp/>number.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>gpio_mask<sp/>Bitmask<sp/>with<sp/>gpio<sp/>configuration.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga6ca19b4ad46b497cd693047115e12347" kindref="member">nrf_spu_gpio_config_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_port,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_mask,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>non-secure<sp/>callable<sp/>flash<sp/>region.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>flash_nsc_id<sp/><sp/><sp/>Non-secure<sp/>callable<sp/>flash<sp/>region<sp/>ID.</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>flash_nsc_size<sp/>Non-secure<sp/>callable<sp/>flash<sp/>region<sp/>size.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>region_number<sp/><sp/>Flash<sp/>region<sp/>number.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/><sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga8f549ce08f3891c83d62a5256a7594c8" kindref="member">nrf_spu_flashnsc_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flash_nsc_id,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref><sp/>flash_nsc_size,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_number,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>non-secure<sp/>callable<sp/>RAM<sp/>region.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ram_nsc_id<sp/><sp/><sp/><sp/>Non-secure<sp/>callable<sp/>RAM<sp/>region<sp/>ID.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ram_nsc_size<sp/><sp/>Non-secure<sp/>callable<sp/>RAM<sp/>region<sp/>size.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>region_number<sp/>RAM<sp/>region<sp/>number.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga289b83bd30667a37519640cb5c6a74fd" kindref="member">nrf_spu_ramnsc_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_nsc_id,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref><sp/>ram_nsc_size,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_number,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="435"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>security<sp/>for<sp/>a<sp/>particular<sp/>flash<sp/>region.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>Permissions<sp/>parameter<sp/>must<sp/>be<sp/>set<sp/>by<sp/>using<sp/>the<sp/>logical<sp/>OR<sp/>on<sp/>the<sp/>@ref<sp/>nrf_spu_mem_perm_t<sp/>values.</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>region_id<sp/><sp/><sp/>Flash<sp/>region<sp/>index.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>secure_attr<sp/>Set<sp/>region<sp/>attribute<sp/>to<sp/>secure.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>permissions<sp/>Flash<sp/>region<sp/>permissions.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga3d59cd2c2e218eeec8b98ae49225da4e" kindref="member">nrf_spu_flashregion_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_id,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>permissions,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>security<sp/>for<sp/>the<sp/>RAM<sp/>region.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>Permissions<sp/>parameter<sp/>must<sp/>be<sp/>set<sp/>by<sp/>using<sp/>the<sp/>logical<sp/>OR<sp/>on<sp/>the<sp/>@ref<sp/>nrf_spu_mem_perm_t<sp/>values.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>region_id<sp/><sp/><sp/>RAM<sp/>region<sp/>index.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>secure_attr<sp/>Set<sp/>region<sp/>attribute<sp/>to<sp/>secure.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>permissions<sp/>RAM<sp/>region<sp/>permissions.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad3d8c40545df1ac1f7a40d2e3b23dee5" kindref="member">nrf_spu_ramregion_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_id,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>permissions,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="469"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>access<sp/>permissions<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>peripheral_id<sp/>ID<sp/>number<sp/>of<sp/>a<sp/>particular<sp/>peripheral.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>secure_attr<sp/><sp/><sp/>Peripheral<sp/>registers<sp/>accessible<sp/>only<sp/>from<sp/>secure<sp/>domain.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>secure_dma<sp/><sp/><sp/><sp/>DMA<sp/>transfers<sp/>possible<sp/>only<sp/>from<sp/>RAM<sp/>memory<sp/>in<sp/>secure<sp/>domain.</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/><sp/><sp/>Lock<sp/>configuration<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5518273cfb31711bc2bc98341149ca5d" kindref="member">nrf_spu_peripheral_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>peripheral_id,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_dma,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>bus<sp/>access<sp/>permissions<sp/>of<sp/>the<sp/>specified<sp/>external<sp/>domain.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>domain_id<sp/><sp/><sp/>ID<sp/>number<sp/>of<sp/>a<sp/>particular<sp/>external<sp/>domain.</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>secure_attr<sp/>Specifies<sp/>if<sp/>the<sp/>bus<sp/>accesses<sp/>from<sp/>this<sp/>domain<sp/>have<sp/>the<sp/>secure<sp/>attribute<sp/>set.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>lock_conf<sp/><sp/><sp/>Specifies<sp/>if<sp/>the<sp/>configuration<sp/>should<sp/>be<sp/>locked<sp/>until<sp/>next<sp/>SoC<sp/>reset.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga26f1482b45a4443897ffe48f91e578e9" kindref="member">nrf_spu_extdomain_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain_id,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="500"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>security<sp/>violation.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>event<sp/>PERIPHACCERR<sp/>must<sp/>be<sp/>cleared<sp/>to<sp/>clear<sp/>this<sp/>register.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>transaction<sp/>that<sp/>caused<sp/>first<sp/>error.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spu__hal_1gacbafb55d6851f8899248996a3e7b503d" kindref="member">nrf_spu_periphaccerr_address_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP<sp/>&amp;&amp;<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="512"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>security<sp/>violation.</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>event<sp/>PERIPHACCERR<sp/>must<sp/>be<sp/>cleared<sp/>to<sp/>clear<sp/>this<sp/>register.</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/>@return<sp/>Owner<sp/>ID<sp/>of<sp/>the<sp/>transaction<sp/>that<sp/>caused<sp/>first<sp/>error.</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1ga99c0ed224649632d21662232df24e22e" kindref="member">nrf_spu_periphaccerr_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>capabilities<sp/>for<sp/>TrustZone<sp/>Cortex-M<sp/>secure<sp/>attribute</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*<sp/>@return<sp/>TrustZone<sp/>capabilities.</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal">NRF_STATIC_INLINE</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" kindref="member">nrf_spu_securemapping_t</ref><sp/><ref refid="group__nrf__spu__hal_1gadc7939f13a352b9ed85baa764820d66a" kindref="member">nrf_spu_periph_perm_securemapping_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="537"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>DMA<sp/>capabilities<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/>@return<sp/>DMA<sp/>capabilities.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" kindref="member">nrf_spu_dma_t</ref><sp/><ref refid="group__nrf__spu__hal_1gaf6580f7851c2dd66b0773ffecef19466" kindref="member">nrf_spu_periph_perm_dma_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>security<sp/>mapping<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Peripheral<sp/>is<sp/>mapped<sp/>in<sp/>secure<sp/>peripheral<sp/>address<sp/>space.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>If<sp/>TrustZone<sp/>capabilities<sp/>are<sp/>@ref<sp/>NRF_SPU_SECUREMAPPING_USERSELECTABLE,</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>peripheral<sp/>is<sp/>mapped<sp/>in<sp/>non-secure<sp/>peripheral<sp/>address<sp/>space.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>TrustZone<sp/>capabilities<sp/>are<sp/>@ref<sp/>NRF_SPU_SECUREMAPPING_SPLIT,</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>peripheral<sp/>is<sp/>mapped<sp/>in<sp/>non-secure<sp/>and<sp/>secure<sp/>peripheral<sp/>address<sp/>space.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gae93e3fe9eee85ad284840b3bbd007858" kindref="member">nrf_spu_periph_perm_secattr_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="563"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>security<sp/>mapping<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>bit<sp/>has<sp/>effect<sp/>only<sp/>if<sp/>TrustZone<sp/>capabilities<sp/>are<sp/>either</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>NRF_SPU_SECUREMAPPING_USERSELECTABLE<sp/>or<sp/>@ref<sp/>NRF_SPU_SECUREMAPPING_SPLIT.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>security<sp/>mapping<sp/>is<sp/>to<sp/>be<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga72c2eda8b1aa5fc262ac3364b1e42b2e" kindref="member">nrf_spu_periph_perm_secattr_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="577"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>security<sp/>attribution<sp/>for<sp/>the<sp/>DMA<sp/>transfer</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>DMA<sp/>transfers<sp/>initiated<sp/>by<sp/>this<sp/>peripheral<sp/>have<sp/>the<sp/>secure<sp/>attribute<sp/>set,</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad4797b13e8352b1d16e839915d93291f" kindref="member">nrf_spu_periph_perm_dmasec_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="590"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>security<sp/>attribution<sp/>for<sp/>the<sp/>DMA<sp/>transfer</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>bit<sp/>has<sp/>effect<sp/>only<sp/>if<sp/>peripheral<sp/>security<sp/>mapping<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>secure<sp/>attribute<sp/>for<sp/>the<sp/>DMA<sp/>transfer<sp/>is<sp/>to<sp/>be<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga32806730a0b60e4a65fcfd06b35b65d0" kindref="member">nrf_spu_periph_perm_dmasec_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>status<sp/>of<sp/>the<sp/>peripheral<sp/>access<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>peripheral<sp/>access<sp/>lock<sp/>is<sp/>enabled,<sp/>reading<sp/>or<sp/>modifying<sp/>the<sp/>registers<sp/>of<sp/>the<sp/>peripheral</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>blocked.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>the<sp/>peripheral<sp/>access<sp/>is<sp/>locked,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga801ac355cde9424713bf9ff25de270dc" kindref="member">nrf_spu_periph_perm_block_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>peripheral<sp/>access<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>peripheral<sp/>access<sp/>lock<sp/>is<sp/>enabled,<sp/>reading<sp/>or<sp/>modifying<sp/>the<sp/>registers<sp/>of<sp/>the<sp/>peripheral</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>blocked.</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gae4238c89034e45d4b4b16381b530f47d" kindref="member">nrf_spu_periph_perm_block_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>status<sp/>of<sp/>the<sp/>peripheral<sp/>management<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>peripheral<sp/>management<sp/>lock<sp/>is<sp/>enabled,<sp/>modifying<sp/>the<sp/>SPU<sp/>configuration<sp/>associated</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>specified<sp/>peripheral<sp/>is<sp/>not<sp/>possible.</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>the<sp/>peripheral<sp/>management<sp/>is<sp/>locked,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga1881ee3346de4ed5a95eb0e3d0e0131d" kindref="member">nrf_spu_periph_perm_lock_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="646"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>peripheral<sp/>management<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>peripheral<sp/>management<sp/>lock<sp/>is<sp/>enabled,<sp/>modifying<sp/>the<sp/>SPU<sp/>configuration<sp/>associated</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>specified<sp/>peripheral<sp/>is<sp/>not<sp/>possible.</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga03b4ff6cfffed66789549900aa6c7bd4" kindref="member">nrf_spu_periph_perm_lock_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="659"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>peripheral<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*<sp/>@return<sp/>Owner<sp/>ID.</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1gacb4c7161984ddd9d05d09a670287059c" kindref="member">nrf_spu_periph_perm_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>peripheral<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>specified<sp/>slave.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>owner_id<sp/>Owner<sp/>ID<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gab10e1128d592f7573f0fcbedafcc4b94" kindref="member">nrf_spu_periph_perm_ownerid_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_owner_t<sp/><sp/><sp/><sp/>owner_id);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="681"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>indication<sp/>if<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>specified<sp/>slave</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>programmable<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>owner<sp/>ID<sp/>is<sp/>programmable,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga2558e753e968a4322a91c6957a95a6ce" kindref="member">nrf_spu_periph_perm_ownerprog_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="694"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>indication<sp/>if<sp/>peripheral<sp/>with</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>slave<sp/>index<sp/>is<sp/>present.</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Peripheral<sp/>slave<sp/>index.</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>peripheral<sp/>is<sp/>present,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gac88ce0843392afbed0314e969aded8c6" kindref="member">nrf_spu_periph_perm_present_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="706"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>security<sp/>mapping<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Feature<sp/>is<sp/>available<sp/>for<sp/>secure<sp/>usage.</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Feature<sp/>is<sp/>available<sp/>for<sp/>non-secure<sp/>usage.</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad2f33b71131b6e984f4dd0661caf8f09" kindref="member">nrf_spu_feature_secattr_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="722"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>security<sp/>mapping<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/>True<sp/>if<sp/>security<sp/>mapping<sp/>is<sp/>to<sp/>be<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5041c2c330a50d77d47b5e3638b12f7a" kindref="member">nrf_spu_feature_secattr_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="737"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>status<sp/>of<sp/>the<sp/>management<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>feature<sp/>management<sp/>lock<sp/>is<sp/>enabled,<sp/>modifying<sp/>the<sp/>SPU<sp/>configuration<sp/>associated</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>specified<sp/>feature<sp/>is<sp/>not<sp/>possible.</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>feature<sp/>management<sp/>is<sp/>locked,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gaaa80a705edd8347b7222401a87f26f59" kindref="member">nrf_spu_feature_lock_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="755"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>management<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>feature<sp/>management<sp/>lock<sp/>is<sp/>enabled,<sp/>modifying<sp/>the<sp/>SPU<sp/>configuration<sp/>associated</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>specified<sp/>feature<sp/>is<sp/>not<sp/>possible.</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga0be19d03dc1415fd873eb3fd8b70bb1f" kindref="member">nrf_spu_feature_lock_enable</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="772"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>status<sp/>of<sp/>the<sp/>access<sp/>lock<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>feature<sp/>access<sp/>lock<sp/>is<sp/>enabled,<sp/>reading<sp/>or<sp/>modifying<sp/>the<sp/>registers<sp/>of<sp/>the<sp/>feature</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>blocked.</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>*<sp/>@return<sp/>True<sp/>if<sp/>the<sp/>feature<sp/>access<sp/>is<sp/>locked,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga0151c1446805884a8e238fcbf90cca38" kindref="member">nrf_spu_feature_block_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="790"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>feature<sp/>block<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*<sp/>@note<sp/>When<sp/>feature<sp/>access<sp/>lock<sp/>is<sp/>enabled,<sp/>reading<sp/>or<sp/>modifying<sp/>the<sp/>registers<sp/>of<sp/>the<sp/>feature</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>blocked.</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5ed56a25adf9f45e12eb44901f41aa36" kindref="member">nrf_spu_feature_block_enable</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>feature<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>*<sp/>@return<sp/>Owner<sp/>ID.</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1ga2ce58ebf39fc9cee317d7cfe0a0770d4" kindref="member">nrf_spu_feature_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="823"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>feature<sp/>owner<sp/>ID<sp/>of<sp/>the<sp/>specified<sp/>feature.</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>feature<sp/><sp/>Feature<sp/>to<sp/>be<sp/>accessed.</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/><sp/><sp/><sp/>Feature<sp/>index.</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>subindex<sp/>Feature<sp/>subindex.<sp/>Only<sp/>used<sp/>for<sp/>applicable<sp/>features,<sp/>otherwise<sp/>skipped.</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>owner_id<sp/>Owner<sp/>ID<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga75edeaa9063ab5cba1b60c7c44fce989" kindref="member">nrf_spu_feature_ownerid_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_owner_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner_id);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga68219a0729e52f40c0d7cbb9759b7a8b" kindref="member">nrf_spu_event_clear</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga70ba554940e198a2c00862945deade16" kindref="member">nrf_spu_event_check</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad978dc17a54c14ead43c2fa1671c66b4" kindref="member">nrf_spu_int_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga068fbe3a30786954e8ca216c0a8a5e53" kindref="member">nrf_spu_int_disable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spu__hal_1ga1dc0a504e03ed6f38f9c4a5c364b1715" kindref="member">nrf_spu_int_enable_check</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MEMORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga200ee02fe1c23101aad0ce846fca29ba" kindref="member">nrf_spu_publish_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(channel<sp/>|<sp/>(NRF_SUBSCRIBE_PUBLISH_ENABLE));</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga78d3fa9ec803eaef4593e1a52820bcbb" kindref="member">nrf_spu_publish_clear</ref>(NRF_SPU_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1gaca772df92f8018db60b64684673403a6" kindref="member">nrf_spu_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga2df21cb782ba105b5e208bad095a011a" kindref="member">nrf_spu_tz_is_available</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;CAP<sp/>&amp;<sp/>SPU_CAP_TZM_Msk<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga9f7ed30e65625d27a94d2367c8fe3faa" kindref="member">nrf_spu_dppi_config_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dppi_id,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels_mask,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;DPPI[dppi_id].LOCK<sp/>&amp;<sp/>SPU_DPPI_LOCK_LOCK_Msk));</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DPPI[dppi_id].PERM<sp/>=<sp/>channels_mask;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lock_conf)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DPPI[dppi_id].LOCK<sp/>=<sp/>(SPU_DPPI_LOCK_LOCK_Msk);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga6ca19b4ad46b497cd693047115e12347" kindref="member">nrf_spu_gpio_config_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_port,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_mask,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;GPIOPORT[gpio_port].LOCK<sp/>&amp;<sp/>SPU_GPIOPORT_LOCK_LOCK_Msk));</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;GPIOPORT[gpio_port].PERM<sp/>=<sp/>gpio_mask;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lock_conf)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;GPIOPORT[gpio_port].LOCK<sp/>=<sp/>(SPU_GPIOPORT_LOCK_LOCK_Msk);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga8f549ce08f3891c83d62a5256a7594c8" kindref="member">nrf_spu_flashnsc_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flash_nsc_id,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref><sp/>flash_nsc_size,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_number,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;FLASHNSC[flash_nsc_id].REGION<sp/>&amp;<sp/>SPU_FLASHNSC_REGION_LOCK_Msk));</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;FLASHNSC[flash_nsc_id].SIZE<sp/>&amp;<sp/>SPU_FLASHNSC_SIZE_LOCK_Msk));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;FLASHNSC[flash_nsc_id].REGION<sp/>=<sp/>(uint32_t)region_number<sp/>|</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/>?<sp/>SPU_FLASHNSC_REGION_LOCK_Msk<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;FLASHNSC[flash_nsc_id].SIZE<sp/>=<sp/>(uint32_t)flash_nsc_size<sp/>|</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/>?<sp/>SPU_FLASHNSC_SIZE_LOCK_Msk<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga289b83bd30667a37519640cb5c6a74fd" kindref="member">nrf_spu_ramnsc_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_nsc_id,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga45f740567f5b83d2f7eca5a8d18cff94" kindref="member">nrf_spu_nsc_size_t</ref><sp/>ram_nsc_size,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_number,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;RAMNSC[ram_nsc_id].REGION<sp/>&amp;<sp/>SPU_RAMNSC_REGION_LOCK_Msk));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;RAMNSC[ram_nsc_id].SIZE<sp/>&amp;<sp/>SPU_RAMNSC_SIZE_LOCK_Msk));</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RAMNSC[ram_nsc_id].REGION<sp/>=<sp/>(uint32_t)region_number<sp/>|</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/>?<sp/>SPU_RAMNSC_REGION_LOCK_Msk<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RAMNSC[ram_nsc_id].SIZE<sp/>=<sp/>(uint32_t)ram_nsc_size<sp/>|</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/>?<sp/>SPU_RAMNSC_SIZE_LOCK_Msk<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga3d59cd2c2e218eeec8b98ae49225da4e" kindref="member">nrf_spu_flashregion_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_id,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>permissions,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;FLASHREGION[region_id].PERM<sp/>&amp;<sp/>SPU_FLASHREGION_PERM_LOCK_Msk));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;FLASHREGION[region_id].PERM<sp/>=<sp/>permissions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(secure_attr<sp/>?<sp/>SPU_FLASHREGION_PERM_SECATTR_Msk<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/><sp/><sp/>?<sp/>SPU_FLASHREGION_PERM_LOCK_Msk<sp/><sp/><sp/><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad3d8c40545df1ac1f7a40d2e3b23dee5" kindref="member">nrf_spu_ramregion_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_id,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>permissions,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;RAMREGION[region_id].PERM<sp/>&amp;<sp/>SPU_RAMREGION_PERM_LOCK_Msk));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RAMREGION[region_id].PERM<sp/>=<sp/>permissions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(secure_attr<sp/>?<sp/>SPU_RAMREGION_PERM_SECATTR_Msk<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/><sp/><sp/>?<sp/>SPU_RAMREGION_PERM_LOCK_Msk<sp/><sp/><sp/><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5518273cfb31711bc2bc98341149ca5d" kindref="member">nrf_spu_peripheral_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>peripheral_id,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_dma,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_reg-&gt;PERIPHID[peripheral_id].PERM<sp/>&amp;<sp/>SPU_PERIPHID_PERM_PRESENT_Msk);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;PERIPHID[peripheral_id].PERM<sp/>&amp;<sp/>SPU_PERIPHID_PERM_LOCK_Msk));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPHID[peripheral_id].PERM<sp/>=</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(secure_attr<sp/>?<sp/>SPU_PERIPHID_PERM_SECATTR_Msk<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(secure_dma<sp/><sp/>?<sp/>SPU_PERIPHID_PERM_DMASEC_Msk<sp/><sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/><sp/><sp/>?<sp/>SPU_PERIPHID_PERM_LOCK_Msk<sp/><sp/><sp/><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga26f1482b45a4443897ffe48f91e578e9" kindref="member">nrf_spu_extdomain_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain_id,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secure_attr,</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock_conf)</highlight></codeline>
<codeline lineno="997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(p_reg-&gt;EXTDOMAIN[domain_id].PERM<sp/>&amp;<sp/>SPU_EXTDOMAIN_PERM_LOCK_Msk));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;EXTDOMAIN[domain_id].PERM<sp/>=</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(secure_attr<sp/>?<sp/>SPU_EXTDOMAIN_PERM_SECATTR_Msk<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lock_conf<sp/><sp/><sp/>?<sp/>SPU_EXTDOMAIN_PERM_LOCK_Msk<sp/><sp/><sp/><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__spu__hal_1gacbafb55d6851f8899248996a3e7b503d" kindref="member">nrf_spu_periphaccerr_address_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PERIPHACCERR.ADDRESS;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP<sp/>&amp;&amp;<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1ga99c0ed224649632d21662232df24e22e" kindref="member">nrf_spu_periphaccerr_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)p_reg-&gt;PERIPHACCERR.INFO;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gac88ce0843392afbed0314e969aded8c6" kindref="member">nrf_spu_periph_perm_present_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_PRESENT_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_PRESENT_Pos;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga2558e753e968a4322a91c6957a95a6ce" kindref="member">nrf_spu_periph_perm_ownerprog_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_OWNERPROG_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_OWNERPROG_Pos;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga1881ee3346de4ed5a95eb0e3d0e0131d" kindref="member">nrf_spu_periph_perm_lock_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_LOCK_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_LOCK_Pos;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga801ac355cde9424713bf9ff25de270dc" kindref="member">nrf_spu_periph_perm_block_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_BLOCK_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad4797b13e8352b1d16e839915d93291f" kindref="member">nrf_spu_periph_perm_dmasec_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_DMASEC_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_DMASEC_Pos;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gae93e3fe9eee85ad284840b3bbd007858" kindref="member">nrf_spu_periph_perm_secattr_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_SECATTR_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga03b4ff6cfffed66789549900aa6c7bd4" kindref="member">nrf_spu_periph_perm_lock_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPH[index].PERM<sp/>=<sp/>((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>~SPU_PERIPH_PERM_LOCK_Msk)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(SPU_PERIPH_PERM_LOCK_Locked<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_LOCK_Pos));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gae4238c89034e45d4b4b16381b530f47d" kindref="member">nrf_spu_periph_perm_block_enable</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPH[index].PERM<sp/>=<sp/>((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>~SPU_PERIPH_PERM_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(SPU_PERIPH_PERM_BLOCK_Blocked<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_BLOCK_Pos));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga32806730a0b60e4a65fcfd06b35b65d0" kindref="member">nrf_spu_periph_perm_dmasec_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPH[index].PERM<sp/>=<sp/>((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>~SPU_PERIPH_PERM_DMASEC_Msk)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((enable<sp/>?<sp/>SPU_PERIPH_PERM_DMASEC_Secure<sp/>:</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_DMASEC_NonSecure)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_DMASEC_Pos));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga72c2eda8b1aa5fc262ac3364b1e42b2e" kindref="member">nrf_spu_periph_perm_secattr_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPH[index].PERM<sp/>=<sp/>((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>~SPU_PERIPH_PERM_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((enable<sp/>?<sp/>SPU_PERIPH_PERM_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_SECATTR_NonSecure)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal">NRF_STATIC_INLINE</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><ref refid="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" kindref="member">nrf_spu_securemapping_t</ref><sp/><ref refid="group__nrf__spu__hal_1gadc7939f13a352b9ed85baa764820d66a" kindref="member">nrf_spu_periph_perm_securemapping_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__spu__hal_1ga5cf6c98f4cb95c5c49bb1a6e85ed3023" kindref="member">nrf_spu_securemapping_t</ref>)((p_reg-&gt;PERIPH[index].PERM</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_PERIPH_PERM_SECUREMAPPING_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_SECUREMAPPING_Pos);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" kindref="member">nrf_spu_dma_t</ref><sp/><ref refid="group__nrf__spu__hal_1gaf6580f7851c2dd66b0773ffecef19466" kindref="member">nrf_spu_periph_perm_dma_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__spu__hal_1ga9e1f6046a4de5110aeb69bc50134a033" kindref="member">nrf_spu_dma_t</ref>)((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_DMA_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_DMA_Pos);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1gacb4c7161984ddd9d05d09a670287059c" kindref="member">nrf_spu_periph_perm_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>SPU_PERIPH_PERM_OWNERID_Msk)<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_PERIPH_PERM_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gab10e1128d592f7573f0fcbedafcc4b94" kindref="member">nrf_spu_periph_perm_ownerid_set</ref>(NRF_SPU_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_owner_t<sp/><sp/><sp/><sp/>owner_id)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gac0e0e10b6088f821e9ec7c071986b121" kindref="member">NRF_SPU_PERIPH_COUNT</ref>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PERIPH[index].PERM<sp/>=<sp/>((p_reg-&gt;PERIPH[index].PERM<sp/>&amp;<sp/>~SPU_PERIPH_PERM_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id<sp/>&lt;&lt;<sp/>SPU_PERIPH_PERM_OWNERID_Pos)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_PERIPH_PERM_OWNERID_Msk));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gad2f33b71131b6e984f4dd0661caf8f09" kindref="member">nrf_spu_feature_secattr_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.CH[index]</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_CH_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_CH_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_INTERRUPT_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CH[index]</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CH_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CH_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CHG[index]</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CHG_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CHG_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_CH_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_CH_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIO_PIN_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIO_PIN_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.CC[index]</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_CC_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_CC_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.SYSCOUNTER</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_INTERRUPT_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.TDD[index]</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_TDD_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_TDD_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].READY</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_READY_SECATTR_Msk)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_READY_SECATTR_Pos;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gaaa80a705edd8347b7222401a87f26f59" kindref="member">nrf_spu_feature_lock_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.CH[index]</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_CH_LOCK_Msk)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_CH_LOCK_Pos;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_INTERRUPT_LOCK_Msk)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_LOCK_Pos;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CH[index]</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CH_LOCK_Msk)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CH_LOCK_Pos;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CHG[index]</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CHG_LOCK_Msk)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CHG_LOCK_Pos;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_CH_LOCK_Msk)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_CH_LOCK_Pos;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_LOCK_Msk)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_LOCK_Pos;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIO_PIN_LOCK_Msk)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIO_PIN_LOCK_Pos;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.CC[index]</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_CC_LOCK_Msk)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_CC_LOCK_Pos;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.SYSCOUNTER</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_LOCK_Msk)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_LOCK_Pos;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_INTERRUPT_LOCK_Msk)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_LOCK_Pos;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_LOCK_Msk)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_LOCK_Pos;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_LOCK_Msk)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_LOCK_Pos;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_LOCK_Msk)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_LOCK_Pos;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_LOCK_Msk)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_LOCK_Pos;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.TDD[index]</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_TDD_LOCK_Msk)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_TDD_LOCK_Pos;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_LOCK_Msk)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_LOCK_Pos;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_LOCK_Msk)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_LOCK_Pos;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].READY</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_READY_LOCK_Msk)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_READY_LOCK_Pos;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga0151c1446805884a8e238fcbf90cca38" kindref="member">nrf_spu_feature_block_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.CH[index]</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_CH_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_CH_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_INTERRUPT_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CH[index]</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CH_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CH_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.DPPIC.CHG[index]</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CHG_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CHG_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_CH_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_CH_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIO_PIN_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIO_PIN_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.CC[index]</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_CC_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_CC_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.SYSCOUNTER</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_INTERRUPT_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.TDD[index]</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_TDD_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_TDD_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FEATURE.MRAMC[index].READY</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_READY_BLOCK_Msk)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_READY_BLOCK_Pos;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal">NRF_STATIC_INLINE<sp/>nrf_owner_t<sp/><ref refid="group__nrf__spu__hal_1ga2ce58ebf39fc9cee317d7cfe0a0770d4" kindref="member">nrf_spu_feature_ownerid_get</ref>(NRF_SPU_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/><sp/><sp/><sp/>feature,</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.IPCT.CH[index]</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_CH_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_CH_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_IPCT_INTERRUPT_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.DPPIC.CH[index]</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CH_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CH_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.DPPIC.CHG[index]</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_DPPIC_CHG_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_DPPIC_CHG_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_CH_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_CH_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GPIO_PIN_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GPIO_PIN_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GRTC.CC[index]</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_CC_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_CC_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GRTC.SYSCOUNTER</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_GRTC_INTERRUPT_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.TDD[index]</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_TDD_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_TDD_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)((p_reg-&gt;FEATURE.MRAMC[index].READY</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>SPU_FEATURE_MRAMC_READY_OWNERID_Msk)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>SPU_FEATURE_MRAMC_READY_OWNERID_Pos);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_owner_t)0;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5041c2c330a50d77d47b5e3638b12f7a" kindref="member">nrf_spu_feature_secattr_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_CH_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_CH_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_CH_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_CH_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_INTERRUPT_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_INTERRUPT_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_INTERRUPT_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_IPCT_INTERRUPT_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CH_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CH_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CH_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_DPPIC_CH_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>=</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CHG_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CHG_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CHG_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_DPPIC_CHG_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_CH_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_CH_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_CH_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GPIOTE_CH_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GPIOTE_INTERRUPT_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIO_PIN_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIO_PIN_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIO_PIN_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GPIO_PIN_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>=</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_CC_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_CC_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_CC_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GRTC_CC_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>=</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>&amp;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GRTC_SYSCOUNTER_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_INTERRUPT_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_INTERRUPT_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_INTERRUPT_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_GRTC_INTERRUPT_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.TDD[index]<sp/>=</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.TDD[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_TDD_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>=</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>&amp;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>=</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>&amp;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>=</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>&amp;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_SECATTR_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_SECATTR_Secure<sp/>:</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_SECATTR_NonSecure)</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_READY_SECATTR_Pos));</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga0be19d03dc1415fd873eb3fd8b70bb1f" kindref="member">nrf_spu_feature_lock_enable</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_CH_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_IPCT_CH_LOCK_Locked</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_CH_LOCK_Pos));</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_INTERRUPT_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_IPCT_INTERRUPT_LOCK_Locked</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_LOCK_Pos));</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CH_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_DPPIC_CH_LOCK_Locked</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CH_LOCK_Pos));</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>=</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CHG_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_DPPIC_CHG_LOCK_Locked</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CHG_LOCK_Pos));</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_CH_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIOTE_CH_LOCK_Locked</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_CH_LOCK_Pos));</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_INTERRUPT_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIOTE_INTERRUPT_LOCK_Locked</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_LOCK_Pos));</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>=</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIO_PIN_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIO_PIN_LOCK_Locked</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIO_PIN_LOCK_Pos));</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>=</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_CC_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_CC_LOCK_Locked</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_CC_LOCK_Pos));</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>=</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>&amp;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_SYSCOUNTER_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_SYSCOUNTER_LOCK_Locked</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_LOCK_Pos));</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_INTERRUPT_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_INTERRUPT_LOCK_Locked</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_LOCK_Pos));</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_DOMAIN_BELL_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_DOMAIN_BELL_LOCK_Locked</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_LOCK_Pos));</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_TASKS_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_TASKS_LOCK_Locked</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_LOCK_Pos));</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_EVENTS_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_EVENTS_LOCK_Locked</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_LOCK_Pos));</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_LOCK_Locked</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_LOCK_Pos));</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.TDD[index]<sp/>=</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.TDD[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_TDD_LOCK_Locked</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_TDD_LOCK_Pos));</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>=</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>&amp;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_WAITSTATES_LOCK_Locked</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_LOCK_Pos));</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>=</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>&amp;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_AUTODPOWERDOWN_LOCK_Locked</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_LOCK_Pos));</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>=</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>&amp;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_LOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_READY_LOCK_Locked</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_READY_LOCK_Pos));</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga5ed56a25adf9f45e12eb44901f41aa36" kindref="member">nrf_spu_feature_block_enable</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_CH_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_IPCT_CH_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_CH_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_INTERRUPT_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_IPCT_INTERRUPT_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CH_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_DPPIC_CH_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CH_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>=</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CHG_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_DPPIC_CHG_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CHG_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_CH_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIOTE_CH_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_CH_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_INTERRUPT_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIOTE_INTERRUPT_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIO_PIN_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GPIO_PIN_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIO_PIN_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>=</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_CC_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_CC_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_CC_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>=</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>&amp;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_SYSCOUNTER_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_SYSCOUNTER_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_INTERRUPT_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_GRTC_INTERRUPT_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_DOMAIN_BELL_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_DOMAIN_BELL_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_TASKS_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_TASKS_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_EVENTS_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_EVENTS_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.TDD[index]<sp/>=</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.TDD[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_TDD_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_TDD_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>=</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>&amp;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_WAITSTATES_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>=</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>&amp;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_AUTODPOWERDOWN_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_BLOCK_Pos));</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>=</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>&amp;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_BLOCK_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPU_FEATURE_MRAMC_READY_BLOCK_Blocked</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_READY_LOCK_Pos));</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1ga75edeaa9063ab5cba1b60c7c44fce989" kindref="member">nrf_spu_feature_ownerid_set</ref>(NRF_SPU_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spu__hal_1ga96d287b38368a0b90d2d50fa507d5910" kindref="member">nrf_spu_feature_t</ref><sp/>feature,</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subindex,</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_owner_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner_id)</highlight></codeline>
<codeline lineno="2297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(feature)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7baa958274d1e9c51a5241bfdbd0f3db" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae30f789339871eac2c0f9695cc747863" kindref="member">NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_CH_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_CH_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_CH_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a9547ff64dcb63fcadccb8f7b4ca56873" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga9f927d27e6364ba0251887aa60d39025" kindref="member">NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.IPCT.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_IPCT_INTERRUPT_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_IPCT_INTERRUPT_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_IPCT_INTERRUPT_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_IPCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a4a5ff0ecfc8eebd0efca979edbc6d089" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga48d3215148737a51b65198ac42b3cf10" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>=</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CH[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CH_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CH_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CH_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a0a31d1189078fe62d9d8cb0aab52b0bd" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP</ref>:</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga345aa751d0891327b15d6a1eac4407a6" kindref="member">NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT</ref>);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>=</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.DPPIC.CHG[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_DPPIC_CHG_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_DPPIC_CHG_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_DPPIC_CHG_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aad0854b3dcc9365b7818296b429e9446" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL</ref>:</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gadf9d14b0e40184cd1633f6b75ddcf062" kindref="member">NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].CH[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_CH_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_CH_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_CH_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a26a0e7cb4a4f0dfd4b2cbf0c80b27b39" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga8a3e6a15506ffb8cc8e41fdd047488d6" kindref="member">NRF_SPU_FEATURE_GPIOTE_COUNT</ref>);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaa020d2c6d6119793c733e7adddf38ec6" kindref="member">NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIOTE[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIOTE_INTERRUPT_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIOTE_INTERRUPT_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIOTE_INTERRUPT_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a3ef48fa94d14fc8a637bf047d4856bab" kindref="member">NRF_SPU_FEATURE_GPIO_PIN</ref>:</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaebd932719b56117fd33d598f96e251d0" kindref="member">NRF_SPU_FEATURE_GPIO_COUNT</ref>);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(subindex<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga83d9bfc4fa2a6d9cb1a03169a2654a1c" kindref="member">NRF_SPU_FEATURE_GPIO_PIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GPIO[index].PIN[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GPIO_PIN_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GPIO_PIN_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GPIO_PIN_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ae13fcbd2355939fa7576fc5996b02644" kindref="member">NRF_SPU_FEATURE_GRTC_CC</ref>:</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga016f5f723234ce5147c269fc845d93a2" kindref="member">NRF_SPU_FEATURE_GRTC_CC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>=</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.CC[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_CC_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_CC_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_CC_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a18f692cf4cdaaea2a3a2ead78fa0c48a" kindref="member">NRF_SPU_FEATURE_GRTC_SYSCOUNTER</ref>:</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>=</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.SYSCOUNTER<sp/>&amp;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_SYSCOUNTER_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_SYSCOUNTER_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_SYSCOUNTER_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a7afd8ebd9f5bbfab544194c705f51c21" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1ga90575272ee25f0d449e46fdc270ee304" kindref="member">NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT</ref>);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>=</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.GRTC.INTERRUPT[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_GRTC_INTERRUPT_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_GRTC_INTERRUPT_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_GRTC_INTERRUPT_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910aa6b4d41fd7253e12e2cf9ebc416f0203" kindref="member">NRF_SPU_FEATURE_BELLS_BELL</ref>:</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gae992299f429668f72c433937f1b21433" kindref="member">NRF_SPU_FEATURE_BELL_BELL_COUNT</ref>);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.DOMAIN[index].BELL[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_DOMAIN_BELL_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_DOMAIN_BELL_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_TASKS:</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_TASKS_COUNT);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].TASKS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_TASKS_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_TASKS_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_EVENTS:</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_EVENTS_COUNT);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].EVENTS[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_EVENTS_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_EVENTS_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT:</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>NRF_SPU_FEATURE_BELLS_INTERRUPT_COUNT);</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>=</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.BELLS.PROCESSOR[index].INTERRUPT[subindex]<sp/>&amp;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_BELLS_PROCESSOR_INTERRUPT_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_DOMAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_BELLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a619f8775f5fcaa382154b4e7fb5f40a2" kindref="member">NRF_SPU_FEATURE_TDD</ref>:</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gab930b097abfffa1c91b384c44a40defd" kindref="member">NRF_SPU_FEATURE_TDD_COUNT</ref>);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.TDD[index]<sp/>=</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.TDD[index]<sp/>&amp;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_TDD_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_TDD_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_TDD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910ab64395a095c8b996c8eb6cfbde3678fa" kindref="member">NRF_SPU_FEATURE_MRAMC_WAITSTATES</ref>:</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>=</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].WAITSTATES<sp/>&amp;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_WAITSTATES_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_WAITSTATES_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a2cd49f3916e7ebf525bd4e812b3b88b0" kindref="member">NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN</ref>:</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>=</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].AUTODPOWERDOWN<sp/>&amp;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_AUTODPOWERDOWN_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spu__hal_1gga96d287b38368a0b90d2d50fa507d5910a88e95648761808813dcdb3ee3f180e81" kindref="member">NRF_SPU_FEATURE_MRAMC_READY</ref>:</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/><ref refid="group__nrf__spu__hal_1gaaa47bc82953589b344f54d7b5b5b8dd9" kindref="member">NRF_SPU_FEATURE_MRAMC_COUNT</ref>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>=</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FEATURE.MRAMC[index].READY<sp/>&amp;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_OWNERID_Msk)<sp/>|</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((owner_id</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>SPU_FEATURE_MRAMC_READY_OWNERID_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPU_FEATURE_MRAMC_READY_OWNERID_Msk));</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_MRAMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_OWNERSHIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_HAS_PERIPHERAL_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2503"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_SPU_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_spu.h"/>
  </compounddef>
</doxygen>
