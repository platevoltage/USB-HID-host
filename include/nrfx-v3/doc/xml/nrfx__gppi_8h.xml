<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfx__gppi_8h" kind="file" language="C++">
    <compoundname>nrfx_gppi.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>helpers/nrfx_gppi.h</label>
        <link refid="nrfx__gppi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_gppi_channel_group_t</name>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8bb8dbcbb30287bf14a7c678a80297e6" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a17e513789a2d41feb4edec493f4c358a" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8918e46a6571b581da1377dbdf81d19f" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a254d56ed3ec3b5bf27a96392a2379153" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a89ec98282a3e5e4be172c4dc8d35e227" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a5f01f1c2ba1406fb80fdbb6dca83dda2" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 5. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Generic PPI channel groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="166" column="1" bodyfile="helpers/nrfx_gppi.h" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_gppi_task_t</name>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda2c9b411cbf7fa8f9b48afe5bceeddc36" prot="public">
          <name>NRFX_GPPI_TASK_CHG0_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda486ee3e9ffaa6f7bfdcca0913f7060d7" prot="public">
          <name>NRFX_GPPI_TASK_CHG0_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda4d8060242e948e89f71554ca7faa1f32" prot="public">
          <name>NRFX_GPPI_TASK_CHG1_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab2fc0fea0ab4d47acdb252c477790a02" prot="public">
          <name>NRFX_GPPI_TASK_CHG1_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda94b66df07a693037c98fcde8cc74d5c8" prot="public">
          <name>NRFX_GPPI_TASK_CHG2_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda87d6438c6182fc1bf76551892ced41b8" prot="public">
          <name>NRFX_GPPI_TASK_CHG2_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda9037ea75bdbbcb80c1b1252a8247110e" prot="public">
          <name>NRFX_GPPI_TASK_CHG3_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda99ad4390128a5296cb7886a93775e47a" prot="public">
          <name>NRFX_GPPI_TASK_CHG3_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda53a35a6099543cbc1f0d4d2ff19fbfcd" prot="public">
          <name>NRFX_GPPI_TASK_CHG4_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab8ca36722eba05b51f80b85ad9a93770" prot="public">
          <name>NRFX_GPPI_TASK_CHG4_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab223c5495a0cad39cb481e0f8cb401f4" prot="public">
          <name>NRFX_GPPI_TASK_CHG5_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda76fe8ce7ccebcf846b8d7adfc5691c49" prot="public">
          <name>NRFX_GPPI_TASK_CHG5_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 5 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Generic PPI tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="177" column="1" bodyfile="helpers/nrfx_gppi.h" bodystart="178" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__gppi_1gae03a0b72e449e8ec7ef73a0f30e66479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrfx_gppi_channel_check</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfx_gppi_channel_check</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for checking if a given channel is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="202" column="6" declfile="helpers/nrfx_gppi.h" declline="202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gac8c51de88ffdcbe3ba2fbb153864c763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_disable_all</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_gppi_channels_disable_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for disabling all channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="205" column="6" declfile="helpers/nrfx_gppi.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga9a2dc649beb3d5144d9b641498da0d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_enable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_gppi_channels_enable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling multiple channels. </para>
        </briefdescription>
        <detaileddescription>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. This means that writing 1 to bit 0 enables channel 0, writing 1 to bit 1 enables channel 1, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="215" column="6" declfile="helpers/nrfx_gppi.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga6b96cd981f8d4a606c27e0f9a86b4bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_disable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_gppi_channels_disable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling multiple channels. </para>
        </briefdescription>
        <detaileddescription>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. This means that writing 1 to bit 0 disables channel 0, writing 1 to bit 1 disables channel 1, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="225" column="6" declfile="helpers/nrfx_gppi.h" declline="225" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga2ede53f653eb2aa889b39168b3070a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_event_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t eep)</argsstring>
        <name>nrfx_gppi_event_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <briefdescription>
<para>Function for associating a given channel with the specified event register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the DPPI publish configuration for a given event or sets the PPI event endpoint register.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which to assign the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="236" column="6" declfile="helpers/nrfx_gppi.h" declline="236" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga4b22684a1309780298cb5814e612d0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t tep)</argsstring>
        <name>nrfx_gppi_task_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for associating a given channel with the specified task register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the DPPI subscribe configuration for a given task or sets the PPI task endpoint register.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which to assign the task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="247" column="6" declfile="helpers/nrfx_gppi.h" declline="247" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga476ae2c744201a4e69b21a3e1c000e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channel_endpoints_setup</definition>
        <argsstring>(uint8_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrfx_gppi_channel_endpoints_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the event and task endpoints for a given channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="256" column="6" declfile="helpers/nrfx_gppi.h" declline="256" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad93112e7016725905bf3e8976c2071c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channel_endpoints_clear</definition>
        <argsstring>(uint8_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrfx_gppi_channel_endpoints_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the event and task endpoints for a given channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="265" column="6" declfile="helpers/nrfx_gppi.h" declline="265" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga070a6c382efa69eeb16c3cadc40e350a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_event_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t eep)</argsstring>
        <name>nrfx_gppi_event_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI publish configuration for a given event register or for clearing the PPI event endpoint register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel for which to clear the event endpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="274" column="6" declfile="helpers/nrfx_gppi.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga737fd4ffc64e6fac9bce9047b945f4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t tep)</argsstring>
        <name>nrfx_gppi_task_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI subscribe configuration for a given task register or for clearing the PPI task endpoint register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel from which to disconnect the task enpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="283" column="6" declfile="helpers/nrfx_gppi.h" declline="283" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gaa132eb4028fa7f3fb3d323783766f0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_fork_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t fork_tep)</argsstring>
        <name>nrfx_gppi_fork_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the task endpoint for a given PPI fork or for associating the DPPI channel with an additional task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given fork endpoint is assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="293" column="6" declfile="helpers/nrfx_gppi.h" declline="293" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga252cdc2f3ba2dc425be61411c6e8ac6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_fork_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t fork_tep)</argsstring>
        <name>nrfx_gppi_fork_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the task endpoint for a given PPI fork or for clearing the DPPI subscribe register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel for which to clear the fork endpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="302" column="6" declfile="helpers/nrfx_gppi.h" declline="302" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga5d9f62edcb68add2c943d6754885180b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_group_set</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_group_set</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for setting multiple channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be set in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="311" column="6" declfile="helpers/nrfx_gppi.h" declline="311" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga7ba2fef5427c77d5c10bf529855d09dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_include_in_group</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_include_in_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for including multiple channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be included in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="320" column="6" declfile="helpers/nrfx_gppi.h" declline="320" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gab9e5be105978e46fe99812027830e969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_remove_from_group</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_remove_from_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing multiple channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be removed from the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="329" column="6" declfile="helpers/nrfx_gppi.h" declline="329" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gaa6496e963d55b2e0998c5679f2db5f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_clear</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_clear</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing all channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="337" column="6" declfile="helpers/nrfx_gppi.h" declline="337" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga686c7571eeef92bd6373179f8ffa3fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_enable</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_enable</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for enabling a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="344" column="6" declfile="helpers/nrfx_gppi.h" declline="344" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gacc65427e93f89114215075e1941f058c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_disable</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_disable</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for disabling a group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="351" column="6" declfile="helpers/nrfx_gppi.h" declline="351" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga70c753e3f135f765024aaea8d9b9ab20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_trigger</definition>
        <argsstring>(nrfx_gppi_task_t task)</argsstring>
        <name>nrfx_gppi_task_trigger</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating a task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="358" column="6" declfile="helpers/nrfx_gppi.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gab87c81b39189ea90958bb2f2bcc61374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gppi_task_address_get</definition>
        <argsstring>(nrfx_gppi_task_t task)</argsstring>
        <name>nrfx_gppi_task_address_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a specific task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI or DPPI task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="367" column="10" declfile="helpers/nrfx_gppi.h" declline="367" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad2da3dbd775c5081c5da9fbb2e3bcb1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
        <definition>nrfx_gppi_task_t nrfx_gppi_group_disable_task_get</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_disable_task_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a channel group disable task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Disable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="376" column="18" declfile="helpers/nrfx_gppi.h" declline="376" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga0db935d2d1c9b16d2dc56b575eda9baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
        <definition>nrfx_gppi_task_t nrfx_gppi_group_enable_task_get</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_enable_task_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a channel group enable task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Enable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="385" column="18" declfile="helpers/nrfx_gppi.h" declline="385" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga6dd90aed8d0d35b00e3542c45fa986c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_channel_alloc</definition>
        <argsstring>(uint8_t *p_channel)</argsstring>
        <name>nrfx_gppi_channel_alloc</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
<para>Function for allocating a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>After successful allocation, index of the allocated channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="396" column="12" declfile="helpers/nrfx_gppi.h" declline="396" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga69d26420e203027aa235ee448b0c99af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_channel_free</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfx_gppi_channel_free</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for freeing a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>(D)PPI channel to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified channel is not allocated or is not user-configurable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="408" column="12" declfile="helpers/nrfx_gppi.h" declline="408" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga004919d885105ccf92e3a0150c1eb293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_group_alloc</definition>
        <argsstring>(nrfx_gppi_channel_group_t *p_group)</argsstring>
        <name>nrfx_gppi_group_alloc</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref> *</type>
          <declname>p_group</declname>
        </param>
        <briefdescription>
<para>Function for allocating a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the (D)PPI channel group that has been allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel group was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel group to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="419" column="12" declfile="helpers/nrfx_gppi.h" declline="419" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad09cf8bf15c7d0df53c38276ebdf440e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_group_free</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_free</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for freeing a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>(D)PPI channel group to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified channel is not allocated or is not user-configurable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="431" column="12" declfile="helpers/nrfx_gppi.h" declline="431" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFX_GPPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfx_gppi<sp/>Generic<sp/>PPI<sp/>layer</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrfx</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_dppi</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_ppi</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Helper<sp/>layer<sp/>that<sp/>provides<sp/>the<sp/>common<sp/>functionality<sp/>of<sp/>PPI<sp/>and<sp/>DPPI<sp/>drivers.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Use<sp/>PPI<sp/>and<sp/>DPPI<sp/>drivers<sp/>directly.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>This<sp/>layer<sp/>is<sp/>provided<sp/>only<sp/>to<sp/>help<sp/>create<sp/>generic<sp/>code<sp/>that<sp/>can<sp/>be<sp/>built</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>for<sp/>SoCs<sp/>equipped<sp/>with<sp/>either<sp/>of<sp/>these<sp/>peripherals.<sp/>When<sp/>using<sp/>this<sp/>layer,</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>take<sp/>into<sp/>account<sp/>that<sp/>there<sp/>are<sp/>significant<sp/>differences<sp/>between<sp/>the<sp/>PPI<sp/>and<sp/>DPPI</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>interfaces<sp/>that<sp/>affect<sp/>the<sp/>behavior<sp/>of<sp/>this<sp/>layer.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>One<sp/>difference<sp/>is<sp/>that<sp/>PPI<sp/>allows<sp/>associating<sp/>of<sp/>one<sp/>task<sp/>or<sp/>event<sp/>with</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>more<sp/>than<sp/>one<sp/>channel,<sp/>whereas<sp/>DPPI<sp/>does<sp/>not<sp/>allow<sp/>this.<sp/>In<sp/>DPPI,<sp/>the<sp/>second</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>association<sp/>overwrites<sp/>the<sp/>first<sp/>one.<sp/>Consequently,<sp/>this<sp/>helper<sp/>layer<sp/>cannot</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>in<sp/>applications<sp/>that<sp/>need<sp/>to<sp/>connect<sp/>a<sp/>task<sp/>or<sp/>event<sp/>to<sp/>multiple</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>channels.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Another<sp/>difference<sp/>is<sp/>that<sp/>in<sp/>DPPI<sp/>one<sp/>channel<sp/>can<sp/>be<sp/>associated<sp/>with</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>multiple<sp/>tasks<sp/>and<sp/>multiple<sp/>events,<sp/>while<sp/>in<sp/>PPI<sp/>this<sp/>is<sp/>not<sp/>possible<sp/>(with</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>the<sp/>exception<sp/>of<sp/>the<sp/>association<sp/>of<sp/>a<sp/>second<sp/>task<sp/>as<sp/>a<sp/>fork).<sp/>Because<sp/>of</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>this<sp/>difference,<sp/>it<sp/>is<sp/>important<sp/>to<sp/>clear<sp/>the<sp/>previous<sp/>endpoints<sp/>of<sp/>the<sp/>channel<sp/>that</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>is<sp/>to<sp/>be<sp/>reused<sp/>with<sp/>some<sp/>different<sp/>ones.<sp/>Otherwise,<sp/>the<sp/>behavior<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>helper<sp/>layer<sp/>will<sp/>be<sp/>different,<sp/>depending<sp/>on<sp/>the<sp/>actual<sp/>interface<sp/>used:</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>in<sp/>DPPI<sp/>the<sp/>channel<sp/>configuration<sp/>will<sp/>be<sp/>extended<sp/>with<sp/>the<sp/>new<sp/>endpoints,<sp/>and</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>in<sp/>PPI<sp/>the<sp/>new<sp/>endpoints<sp/>will<sp/>replace<sp/>the<sp/>previous<sp/>ones.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx_ppi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_GROUP_NUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PPI_GROUP_NUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_GROUPS_USED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFX_PPI_GROUPS_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_ALL_APP_GROUPS_MASK<sp/><sp/><sp/><sp/>(((1uL<sp/>&lt;&lt;<sp/>PPI_GROUP_NUM)<sp/>-<sp/>1)<sp/>&amp;<sp/>~(NRFX_PPI_GROUPS_USED))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_ALL_APP_CHANNELS_MASK<sp/><sp/>NRFX_PPI_ALL_APP_CHANNELS_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_PROG_APP_CHANNELS_MASK<sp/>NRFX_PPI_PROG_APP_CHANNELS_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8bb8dbcbb30287bf14a7c678a80297e6" kindref="member">NRFX_GPPI_CHANNEL_GROUP0</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2b1ab39b5fd36d4d152891da6f68d5ee" kindref="member">NRF_PPI_CHANNEL_GROUP0</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a17e513789a2d41feb4edec493f4c358a" kindref="member">NRFX_GPPI_CHANNEL_GROUP1</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a85d970faefe62feea7a6fb8c6fcb6c8d" kindref="member">NRF_PPI_CHANNEL_GROUP1</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8918e46a6571b581da1377dbdf81d19f" kindref="member">NRFX_GPPI_CHANNEL_GROUP2</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a05d74a2763578be328ffa6f5a419587c" kindref="member">NRF_PPI_CHANNEL_GROUP2</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a254d56ed3ec3b5bf27a96392a2379153" kindref="member">NRFX_GPPI_CHANNEL_GROUP3</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a5640aa7d39475e0f57e1d61c0a95e16e" kindref="member">NRF_PPI_CHANNEL_GROUP3</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_GROUP_NUM<sp/>&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a89ec98282a3e5e4be172c4dc8d35e227" kindref="member">NRFX_GPPI_CHANNEL_GROUP4</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2581f61ae1ada7918a5b30f6bc7fbdb4" kindref="member">NRF_PPI_CHANNEL_GROUP4</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a5f01f1c2ba1406fb80fdbb6dca83dda2" kindref="member">NRFX_GPPI_CHANNEL_GROUP5</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a6d649305e996ad3c21c35f20d43ffdb9" kindref="member">NRF_PPI_CHANNEL_GROUP5</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda2c9b411cbf7fa8f9b48afe5bceeddc36" kindref="member">NRFX_GPPI_TASK_CHG0_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbadfba241e39265b88291653d1a266a8dc" kindref="member">NRF_PPI_TASK_CHG0_EN</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda486ee3e9ffaa6f7bfdcca0913f7060d7" kindref="member">NRFX_GPPI_TASK_CHG0_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba4eff14795cf79cc8bbd68211b2e204fa" kindref="member">NRF_PPI_TASK_CHG0_DIS</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda4d8060242e948e89f71554ca7faa1f32" kindref="member">NRFX_GPPI_TASK_CHG1_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba37af13fc5dcba24c7b178ef04792bb2e" kindref="member">NRF_PPI_TASK_CHG1_EN</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab2fc0fea0ab4d47acdb252c477790a02" kindref="member">NRFX_GPPI_TASK_CHG1_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5a0a1b8d19fc6fd8238f2f0461d51b21" kindref="member">NRF_PPI_TASK_CHG1_DIS</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda94b66df07a693037c98fcde8cc74d5c8" kindref="member">NRFX_GPPI_TASK_CHG2_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9cb151e8065f6491036fdce3e1c95708" kindref="member">NRF_PPI_TASK_CHG2_EN</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda87d6438c6182fc1bf76551892ced41b8" kindref="member">NRFX_GPPI_TASK_CHG2_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5c948fbc7e0a3a489b7f13b7c73940c1" kindref="member">NRF_PPI_TASK_CHG2_DIS</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda9037ea75bdbbcb80c1b1252a8247110e" kindref="member">NRFX_GPPI_TASK_CHG3_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba26235ce0764de3a09d1317bb33340b83" kindref="member">NRF_PPI_TASK_CHG3_EN</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda99ad4390128a5296cb7886a93775e47a" kindref="member">NRFX_GPPI_TASK_CHG3_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba21bf55476926564e8ac3e46e5f490ff6" kindref="member">NRF_PPI_TASK_CHG3_DIS</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_GROUP_NUM<sp/>&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda53a35a6099543cbc1f0d4d2ff19fbfcd" kindref="member">NRFX_GPPI_TASK_CHG4_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaddbf6a0ff281ca2a6e2a049543c15e93" kindref="member">NRF_PPI_TASK_CHG4_EN</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab8ca36722eba05b51f80b85ad9a93770" kindref="member">NRFX_GPPI_TASK_CHG4_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaf9d48f5c21c6229f6589aaffe91ce083" kindref="member">NRF_PPI_TASK_CHG4_DIS</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab223c5495a0cad39cb481e0f8cb401f4" kindref="member">NRFX_GPPI_TASK_CHG5_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9e6954c2881ad0a4b7b00c7068fbfa6f" kindref="member">NRF_PPI_TASK_CHG5_EN</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda76fe8ce7ccebcf846b8d7adfc5691c49" kindref="member">NRFX_GPPI_TASK_CHG5_DIS</ref><sp/>=<sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba98f562494c0941a4a5c45b9692d6c67b" kindref="member">NRF_PPI_TASK_CHG5_DIS</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;haly/nrfy_dppi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_GROUP_NUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRF_DPPI_GROUP_NUM_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_GROUPS_USED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFX_DPPI_GROUPS_USED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_ALL_APP_GROUPS_MASK<sp/><sp/><sp/><sp/>(NRFX_BIT_MASK(NRF_DPPI_GROUP_NUM_MAX)<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~NRFX_DPPI_GROUPS_USED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_ALL_APP_CHANNELS_MASK<sp/><sp/>(NRFX_BIT_MASK(NRF_DPPI_CH_NUM_MAX)<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~NRFX_DPPI_CHANNELS_USED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)<sp/>||<sp/>defined(LUMOS_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_PROG_APP_CHANNELS_NUM<sp/><sp/>NRFX_BIT_SIZE(sizeof(uint32_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_PROG_APP_CHANNELS_MASK<sp/>NRFX_BIT_MASK(NRFX_GPPI_PROG_APP_CHANNELS_NUM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFX_GPPI_PROG_APP_CHANNELS_MASK<sp/>NRFX_GPPI_ALL_APP_CHANNELS_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8bb8dbcbb30287bf14a7c678a80297e6" kindref="member">NRFX_GPPI_CHANNEL_GROUP0</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45ba76acffde92bf5869105a1400dcc028a0" kindref="member">NRF_DPPI_CHANNEL_GROUP0</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a17e513789a2d41feb4edec493f4c358a" kindref="member">NRFX_GPPI_CHANNEL_GROUP1</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45bab969442bcbbee36b4b5106621bbf5ebe" kindref="member">NRF_DPPI_CHANNEL_GROUP1</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_GPPI_GROUP_NUM<sp/>&gt;<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8918e46a6571b581da1377dbdf81d19f" kindref="member">NRFX_GPPI_CHANNEL_GROUP2</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45ba3094b53619d62a716edfd7fcdd711bf0" kindref="member">NRF_DPPI_CHANNEL_GROUP2</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a254d56ed3ec3b5bf27a96392a2379153" kindref="member">NRFX_GPPI_CHANNEL_GROUP3</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45ba6b5dd5dca2a0186182b1818b1020e30a" kindref="member">NRF_DPPI_CHANNEL_GROUP3</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_GPPI_GROUP_NUM<sp/>&gt;<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a89ec98282a3e5e4be172c4dc8d35e227" kindref="member">NRFX_GPPI_CHANNEL_GROUP4</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45bafecf8decdc8210e8045d3ca70b85e837" kindref="member">NRF_DPPI_CHANNEL_GROUP4</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a5f01f1c2ba1406fb80fdbb6dca83dda2" kindref="member">NRFX_GPPI_CHANNEL_GROUP5</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga3378ea28f33874ce35b843cf92e8f45ba96b6fefd92bb53e63316438f287f197f" kindref="member">NRF_DPPI_CHANNEL_GROUP5</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda2c9b411cbf7fa8f9b48afe5bceeddc36" kindref="member">NRFX_GPPI_TASK_CHG0_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a89fd661c5c55cf657f3e9f45b0d53aea" kindref="member">NRF_DPPI_TASK_CHG0_EN</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda486ee3e9ffaa6f7bfdcca0913f7060d7" kindref="member">NRFX_GPPI_TASK_CHG0_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a453cbaef0a284056a4f8038a89b0a7cb" kindref="member">NRF_DPPI_TASK_CHG0_DIS</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda4d8060242e948e89f71554ca7faa1f32" kindref="member">NRFX_GPPI_TASK_CHG1_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a127739bdf9177d1ed7785936c60feca1" kindref="member">NRF_DPPI_TASK_CHG1_EN</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab2fc0fea0ab4d47acdb252c477790a02" kindref="member">NRFX_GPPI_TASK_CHG1_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a3cce7b30e1c997cb726a8ec1e00b83e5" kindref="member">NRF_DPPI_TASK_CHG1_DIS</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_GPPI_GROUP_NUM<sp/>&gt;<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda94b66df07a693037c98fcde8cc74d5c8" kindref="member">NRFX_GPPI_TASK_CHG2_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122ac8b88685da0b716822f0ebe3b960c394" kindref="member">NRF_DPPI_TASK_CHG2_EN</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda87d6438c6182fc1bf76551892ced41b8" kindref="member">NRFX_GPPI_TASK_CHG2_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122af01c5dfa4050a6cc95d832b82c7f772f" kindref="member">NRF_DPPI_TASK_CHG2_DIS</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda9037ea75bdbbcb80c1b1252a8247110e" kindref="member">NRFX_GPPI_TASK_CHG3_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122acd68fa79f63e3b25d52cb169a3334077" kindref="member">NRF_DPPI_TASK_CHG3_EN</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda99ad4390128a5296cb7886a93775e47a" kindref="member">NRFX_GPPI_TASK_CHG3_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a5dd4d20687152fc9f86266cae1652345" kindref="member">NRF_DPPI_TASK_CHG3_DIS</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFX_GPPI_GROUP_NUM<sp/>&gt;<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda53a35a6099543cbc1f0d4d2ff19fbfcd" kindref="member">NRFX_GPPI_TASK_CHG4_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a868549acc018df9be8ae8b7518964c63" kindref="member">NRF_DPPI_TASK_CHG4_EN</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab8ca36722eba05b51f80b85ad9a93770" kindref="member">NRFX_GPPI_TASK_CHG4_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122a3e6b250d942f65dfa4e6d81cd62286d1" kindref="member">NRF_DPPI_TASK_CHG4_DIS</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab223c5495a0cad39cb481e0f8cb401f4" kindref="member">NRFX_GPPI_TASK_CHG5_EN</ref><sp/><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122abaacbc2ba02afd55a451837e9aeb9f7c" kindref="member">NRF_DPPI_TASK_CHG5_EN</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda76fe8ce7ccebcf846b8d7adfc5691c49" kindref="member">NRFX_GPPI_TASK_CHG5_DIS</ref><sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gga00d050252ff713dd61f3ff7499819122af795d8cc01b7147a0310c7a98bc7b49e" kindref="member">NRF_DPPI_TASK_CHG5_DIS</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">/**<sp/>@brief<sp/>Generic<sp/>PPI<sp/>channel<sp/>groups.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8bb8dbcbb30287bf14a7c678a80297e6" kindref="member">NRFX_GPPI_CHANNEL_GROUP0</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>0.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a17e513789a2d41feb4edec493f4c358a" kindref="member">NRFX_GPPI_CHANNEL_GROUP1</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>1.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8918e46a6571b581da1377dbdf81d19f" kindref="member">NRFX_GPPI_CHANNEL_GROUP2</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>2.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a254d56ed3ec3b5bf27a96392a2379153" kindref="member">NRFX_GPPI_CHANNEL_GROUP3</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>3.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a89ec98282a3e5e4be172c4dc8d35e227" kindref="member">NRFX_GPPI_CHANNEL_GROUP4</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>4.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a5f01f1c2ba1406fb80fdbb6dca83dda2" kindref="member">NRFX_GPPI_CHANNEL_GROUP5</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>5.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">/**<sp/>@brief<sp/>Generic<sp/>PPI<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda2c9b411cbf7fa8f9b48afe5bceeddc36" kindref="member">NRFX_GPPI_TASK_CHG0_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda486ee3e9ffaa6f7bfdcca0913f7060d7" kindref="member">NRFX_GPPI_TASK_CHG0_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda4d8060242e948e89f71554ca7faa1f32" kindref="member">NRFX_GPPI_TASK_CHG1_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab2fc0fea0ab4d47acdb252c477790a02" kindref="member">NRFX_GPPI_TASK_CHG1_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda94b66df07a693037c98fcde8cc74d5c8" kindref="member">NRFX_GPPI_TASK_CHG2_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda87d6438c6182fc1bf76551892ced41b8" kindref="member">NRFX_GPPI_TASK_CHG2_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda9037ea75bdbbcb80c1b1252a8247110e" kindref="member">NRFX_GPPI_TASK_CHG3_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda99ad4390128a5296cb7886a93775e47a" kindref="member">NRFX_GPPI_TASK_CHG3_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda53a35a6099543cbc1f0d4d2ff19fbfcd" kindref="member">NRFX_GPPI_TASK_CHG4_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab8ca36722eba05b51f80b85ad9a93770" kindref="member">NRFX_GPPI_TASK_CHG4_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab223c5495a0cad39cb481e0f8cb401f4" kindref="member">NRFX_GPPI_TASK_CHG5_EN</ref>,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda76fe8ce7ccebcf846b8d7adfc5691c49" kindref="member">NRFX_GPPI_TASK_CHG5_DIS</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>a<sp/>given<sp/>channel<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>check.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>channel<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gae03a0b72e449e8ec7ef73a0f30e66479" kindref="member">nrfx_gppi_channel_check</ref>(uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>all<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gac8c51de88ffdcbe3ba2fbb153864c763" kindref="member">nrfx_gppi_channels_disable_all</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>multiple<sp/>channels.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>The<sp/>bits<sp/>in<sp/>@c<sp/>mask<sp/>value<sp/>correspond<sp/>to<sp/>particular<sp/>channels.<sp/>This<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>0<sp/>enables<sp/>channel<sp/>0,<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>1<sp/>enables<sp/>channel<sp/>1,<sp/>etc.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga9a2dc649beb3d5144d9b641498da0d1a" kindref="member">nrfx_gppi_channels_enable</ref>(uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>multiple<sp/>channels.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>The<sp/>bits<sp/>in<sp/>@c<sp/>mask<sp/>value<sp/>correspond<sp/>to<sp/>particular<sp/>channels.<sp/>This<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>0<sp/>disables<sp/>channel<sp/>0,<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>1<sp/>disables<sp/>channel<sp/>1,<sp/>etc.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga6b96cd981f8d4a606c27e0f9a86b4bfa" kindref="member">nrfx_gppi_channels_disable</ref>(uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>associating<sp/>a<sp/>given<sp/>channel<sp/>with<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>DPPI<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given<sp/>event</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>or<sp/>sets<sp/>the<sp/>PPI<sp/>event<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>to<sp/>assign<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga2ede53f653eb2aa889b39168b3070a04" kindref="member">nrfx_gppi_event_endpoint_setup</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>eep);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>associating<sp/>a<sp/>given<sp/>channel<sp/>with<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>DPPI<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given<sp/>task</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>or<sp/>sets<sp/>the<sp/>PPI<sp/>task<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>to<sp/>assign<sp/>the<sp/>task.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga4b22684a1309780298cb5814e612d0f2" kindref="member">nrfx_gppi_task_endpoint_setup</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>tep);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>event<sp/>and<sp/>task<sp/>endpoints<sp/>for<sp/>a<sp/>given<sp/>channel.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoints<sp/>are<sp/>assigned.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga476ae2c744201a4e69b21a3e1c000e2b" kindref="member">nrfx_gppi_channel_endpoints_setup</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>eep,<sp/>uint32_t<sp/>tep);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="258"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>event<sp/>and<sp/>task<sp/>endpoints<sp/>for<sp/>a<sp/>given<sp/>channel.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoints<sp/>are<sp/>assigned.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gad93112e7016725905bf3e8976c2071c8" kindref="member">nrfx_gppi_channel_endpoints_clear</ref>(uint8_t<sp/><sp/>channel,<sp/>uint32_t<sp/>eep,<sp/>uint32_t<sp/>tep);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>DPPI<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given<sp/>event</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>register<sp/>or<sp/>for<sp/>clearing<sp/>the<sp/>PPI<sp/>event<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>event<sp/>endpoint.<sp/>Not<sp/>used<sp/>in<sp/>DPPI.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>event<sp/>register.<sp/>Not<sp/>used<sp/>in<sp/>PPI.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga070a6c382efa69eeb16c3cadc40e350a" kindref="member">nrfx_gppi_event_endpoint_clear</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>eep);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>DPPI<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given<sp/>task</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>register<sp/>or<sp/>for<sp/>clearing<sp/>the<sp/>PPI<sp/>task<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>from<sp/>which<sp/>to<sp/>disconnect<sp/>the<sp/>task<sp/>enpoint.<sp/>Not<sp/>used<sp/>in<sp/>DPPI.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.<sp/>Not<sp/>used<sp/>in<sp/>PPI.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga737fd4ffc64e6fac9bce9047b945f4b5" kindref="member">nrfx_gppi_task_endpoint_clear</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>tep);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PPI_FEATURE_FORKS_PRESENT)<sp/>||<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>task<sp/>endpoint<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>fork<sp/>or<sp/>for</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>associating<sp/>the<sp/>DPPI<sp/>channel<sp/>with<sp/>an<sp/>additional<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>fork<sp/>endpoint<sp/>is<sp/>assigned.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>fork_tep<sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gaa132eb4028fa7f3fb3d323783766f0f3" kindref="member">nrfx_gppi_fork_endpoint_setup</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>fork_tep);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>task<sp/>endpoint<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>fork<sp/>or<sp/>for<sp/>clearing</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>the<sp/>DPPI<sp/>subscribe<sp/>register.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>Channel<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>fork<sp/>endpoint.<sp/>Not<sp/>used<sp/>in<sp/>DPPI.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>fork_tep<sp/>Address<sp/>of<sp/>the<sp/>task<sp/>register.<sp/>Not<sp/>used<sp/>in<sp/>PPI.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga252cdc2f3ba2dc425be61411c6e8ac6d" kindref="member">nrfx_gppi_fork_endpoint_clear</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>fork_tep);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(PPI_FEATURE_FORKS_PRESENT)<sp/>||<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>multiple<sp/>channels<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga5d9f62edcb68add2c943d6754885180b" kindref="member">nrfx_gppi_channels_group_set</ref>(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>including<sp/>multiple<sp/>channels<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga7ba2fef5427c77d5c10bf529855d09dd" kindref="member">nrfx_gppi_channels_include_in_group</ref>(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>multiple<sp/>channels<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gab9e5be105978e46fe99812027830e969" kindref="member">nrfx_gppi_channels_remove_from_group</ref>(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>all<sp/>channels<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gaa6496e963d55b2e0998c5679f2db5f9d" kindref="member">nrfx_gppi_group_clear</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga686c7571eeef92bd6373179f8ffa3fd5" kindref="member">nrfx_gppi_group_enable</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>group.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1gacc65427e93f89114215075e1941f058c" kindref="member">nrfx_gppi_group_disable</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>activating<sp/>a<sp/>task.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfx__gppi_1ga70c753e3f135f765024aaea8d9b9ab20" kindref="member">nrfx_gppi_task_trigger</ref>(<ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>a<sp/>specific<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/>PPI<sp/>or<sp/>DPPI<sp/>task.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>requested<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfx__gppi_1gab87c81b39189ea90958bb2f2bcc61374" kindref="member">nrfx_gppi_task_address_get</ref>(<ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>a<sp/>channel<sp/>group<sp/>disable<sp/>task.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@return<sp/>Disable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref><sp/><ref refid="group__nrfx__gppi_1gad2da3dbd775c5081c5da9fbb2e3bcb1d" kindref="member">nrfx_gppi_group_disable_task_get</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>a<sp/>channel<sp/>group<sp/>enable<sp/>task.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@return<sp/>Enable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref><sp/><ref refid="group__nrfx__gppi_1ga0db935d2d1c9b16d2dc56b575eda9baf" kindref="member">nrfx_gppi_group_enable_task_get</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>allocating<sp/>a<sp/>channel.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_channel<sp/>After<sp/>successful<sp/>allocation,<sp/>index<sp/>of<sp/>the<sp/>allocated<sp/>channel.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>was<sp/>successfully<sp/>allocated.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NO_MEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>There<sp/>is<sp/>no<sp/>available<sp/>channel<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NOT_SUPPORTED<sp/>Driver<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gppi_1ga6dd90aed8d0d35b00e3542c45fa986c8" kindref="member">nrfx_gppi_channel_alloc</ref>(uint8_t<sp/>*<sp/>p_channel);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="398"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>freeing<sp/>a<sp/>channel.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>(D)PPI<sp/>channel<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>freed.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>specified<sp/>channel<sp/>is<sp/>not<sp/>allocated<sp/>or</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NOT_SUPPORTED<sp/>Driver<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gppi_1ga69d26420e203027aa235ee448b0c99af" kindref="member">nrfx_gppi_channel_free</ref>(uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>allocating<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_group<sp/>Pointer<sp/>to<sp/>the<sp/>(D)PPI<sp/>channel<sp/>group<sp/>that<sp/>has<sp/>been<sp/>allocated.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>group<sp/>was<sp/>successfully<sp/>allocated.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NO_MEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>There<sp/>is<sp/>no<sp/>available<sp/>channel<sp/>group<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NOT_SUPPORTED<sp/>Driver<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gppi_1ga004919d885105ccf92e3a0150c1eb293" kindref="member">nrfx_gppi_group_alloc</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>*<sp/>p_group);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>freeing<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>(D)PPI<sp/>channel<sp/>group<sp/>to<sp/>be<sp/>freed.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>channel<sp/>was<sp/>successfully<sp/>freed.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_INVALID_PARAM<sp/>The<sp/>specified<sp/>channel<sp/>is<sp/>not<sp/>allocated<sp/>or</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>user-configurable.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRFX_ERROR_NOT_SUPPORTED<sp/>Driver<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref><sp/><ref refid="group__nrfx__gppi_1gad09cf8bf15c7d0df53c38276ebdf440e" kindref="member">nrfx_gppi_group_free</ref>(<ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref><sp/>group);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFX_GPPI_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="helpers/nrfx_gppi.h"/>
  </compounddef>
</doxygen>
