<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__mwu__hal" kind="group">
    <compoundname>nrf_mwu_hal</compoundname>
    <title>MWU HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_event_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda0e5e4e741cee5c902ae9f4af28f19a62" prot="public">
          <name>NRF_MWU_EVENT_REGION0_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[0].WA)</initializer>
          <briefdescription>
<para>Write access to region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda59bd6049fdc4fed797d2ccc12a852358" prot="public">
          <name>NRF_MWU_EVENT_REGION0_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[0].RA)</initializer>
          <briefdescription>
<para>Read access to region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda3e03c8d74b4e2db1fd0419816a1a954f" prot="public">
          <name>NRF_MWU_EVENT_REGION1_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[1].WA)</initializer>
          <briefdescription>
<para>Write access to region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edaa32db639e7f455b2e9d361e6e1037d39" prot="public">
          <name>NRF_MWU_EVENT_REGION1_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[1].RA)</initializer>
          <briefdescription>
<para>Read access to region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda444cdd49141606ff197f872435c0e622" prot="public">
          <name>NRF_MWU_EVENT_REGION2_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[2].WA)</initializer>
          <briefdescription>
<para>Write access to region 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda4bb0dfc1a7ef83c6431e1168b51fc606" prot="public">
          <name>NRF_MWU_EVENT_REGION2_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[2].RA)</initializer>
          <briefdescription>
<para>Read access to region 2 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edade4311d6d05028789859283b0f834b05" prot="public">
          <name>NRF_MWU_EVENT_REGION3_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[3].WA)</initializer>
          <briefdescription>
<para>Write access to region 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda6d36d9b30941de8983c13f94878decd1" prot="public">
          <name>NRF_MWU_EVENT_REGION3_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_REGION[3].RA)</initializer>
          <briefdescription>
<para>Read access to region 3 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda961eb180b123f8362d246fb7806e2503" prot="public">
          <name>NRF_MWU_EVENT_PREGION0_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[0].WA)</initializer>
          <briefdescription>
<para>Write access to peripheral region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edafbbd48efbfba9a54b1ea04e01d75a378" prot="public">
          <name>NRF_MWU_EVENT_PREGION0_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[0].RA)</initializer>
          <briefdescription>
<para>Read access to peripheral region 0 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5eda9cde0abfad3a0d9f6748f5b459134d8d" prot="public">
          <name>NRF_MWU_EVENT_PREGION1_WRITE</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[1].WA)</initializer>
          <briefdescription>
<para>Write access to peripheral region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga47b44b6c11bba74705dbe6a3dc2fb5edace2daa7894692580f20a2ff3474abdb7" prot="public">
          <name>NRF_MWU_EVENT_PREGION1_READ</name>
          <initializer>= offsetof(NRF_MWU_Type, EVENTS_PREGION[1].RA)</initializer>
          <briefdescription>
<para>Read access to peripheral region 1 detected. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="51" column="1" bodyfile="hal/nrf_mwu.h" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_int_mask_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4ef3f1301fe67c45163abf0c14117dfe" prot="public">
          <name>NRF_MWU_INT_REGION0_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION0WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[0].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca6ab4e927dbfd3d7d0860eb54d7a72de0" prot="public">
          <name>NRF_MWU_INT_REGION0_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION0RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[0].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca1039f95184c89d2247e77f26df17c9c9" prot="public">
          <name>NRF_MWU_INT_REGION1_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION1WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[1].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cae83ddf17319268d8a3bf232d3c7afddd" prot="public">
          <name>NRF_MWU_INT_REGION1_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION1RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[1].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca8c7a08730539aff0f4ac89604bd34d7a" prot="public">
          <name>NRF_MWU_INT_REGION2_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION2WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[2].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885cad2b9cbca2a96645ebba6225b5f8f2a24" prot="public">
          <name>NRF_MWU_INT_REGION2_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION2RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[2].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca3d65ccfcd1c97376b2442f675113535b" prot="public">
          <name>NRF_MWU_INT_REGION3_WRITE_MASK</name>
          <initializer>= MWU_INTEN_REGION3WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[3].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca48640cb15c2fc1faa105c673defaa05d" prot="public">
          <name>NRF_MWU_INT_REGION3_READ_MASK</name>
          <initializer>= MWU_INTEN_REGION3RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on REGION[3].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf413d7cfc876f8a5e9f4a50d2a613696" prot="public">
          <name>NRF_MWU_INT_PREGION0_WRITE_MASK</name>
          <initializer>= MWU_INTEN_PREGION0WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[0].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885ca4bebb394b28a17f8c5df2a3a98ccc5d4" prot="public">
          <name>NRF_MWU_INT_PREGION0_READ_MASK</name>
          <initializer>= MWU_INTEN_PREGION0RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[0].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caf1f8b19cd282378840f334a27d79bcc6" prot="public">
          <name>NRF_MWU_INT_PREGION1_WRITE_MASK</name>
          <initializer>= MWU_INTEN_PREGION1WA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[1].WA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga6510b484b7ba549a579e6e8d6f59885caaa07155a848e2e7fc048854c402d2896" prot="public">
          <name>NRF_MWU_INT_PREGION1_READ_MASK</name>
          <initializer>= MWU_INTEN_PREGION1RA_Msk</initializer>
          <briefdescription>
<para>Interrupt on PREGION[1].RA event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU interrupt masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="68" column="1" bodyfile="hal/nrf_mwu.h" bodystart="69" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_mwu_region_watch_t</name>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa8f7d43836325909249f992b91fafb0bb" prot="public">
          <name>NRF_MWU_WATCH_REGION0_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN0WA_Msk</initializer>
          <briefdescription>
<para>Region 0 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50927b4a81897f899a7216f74db61cd1" prot="public">
          <name>NRF_MWU_WATCH_REGION0_READ</name>
          <initializer>= MWU_REGIONEN_RGN0RA_Msk</initializer>
          <briefdescription>
<para>Region 0 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5f3538857ba305be022ef4139f89b495" prot="public">
          <name>NRF_MWU_WATCH_REGION1_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN1WA_Msk</initializer>
          <briefdescription>
<para>Region 1 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa50e302e09bbc25d5a1078ee8ed2aa8fd" prot="public">
          <name>NRF_MWU_WATCH_REGION1_READ</name>
          <initializer>= MWU_REGIONEN_RGN1RA_Msk</initializer>
          <briefdescription>
<para>Region 1 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effaf5b025de12dc188b84fcce377f4052b5" prot="public">
          <name>NRF_MWU_WATCH_REGION2_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN2WA_Msk</initializer>
          <briefdescription>
<para>Region 2 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa74d8337c232131188867cd4caa9470ac" prot="public">
          <name>NRF_MWU_WATCH_REGION2_READ</name>
          <initializer>= MWU_REGIONEN_RGN2RA_Msk</initializer>
          <briefdescription>
<para>Region 2 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa112fcbbaef380fe2af338ca06a306d63" prot="public">
          <name>NRF_MWU_WATCH_REGION3_WRITE</name>
          <initializer>= MWU_REGIONEN_RGN3WA_Msk</initializer>
          <briefdescription>
<para>Region 3 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa4682a2cec9e5c16d79333e5ab9d16fd1" prot="public">
          <name>NRF_MWU_WATCH_REGION3_READ</name>
          <initializer>= MWU_REGIONEN_RGN3RA_Msk</initializer>
          <briefdescription>
<para>Region 3 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effacc47806c9badca92dad3e81d7083e89e" prot="public">
          <name>NRF_MWU_WATCH_PREGION0_WRITE</name>
          <initializer>= MWU_REGIONEN_PRGN0WA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 0 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa1e46d4f8f2e69fc01b8406ec8b71cab0" prot="public">
          <name>NRF_MWU_WATCH_PREGION0_READ</name>
          <initializer>= MWU_REGIONEN_PRGN0RA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 0 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa5a7201e2cff49a7306cf8bf934f8a873" prot="public">
          <name>NRF_MWU_WATCH_PREGION1_WRITE</name>
          <initializer>= MWU_REGIONEN_PRGN1WA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 1 write access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__mwu__hal_1gga3ef13bc3357e467aa3d637ebb1163effa41822c063366a82c0bd1b727e7744172" prot="public">
          <name>NRF_MWU_WATCH_PREGION1_READ</name>
          <initializer>= MWU_REGIONEN_PRGN1RA_Msk</initializer>
          <briefdescription>
<para>Peripheral region 1 read access watch mask. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MWU region watch masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="85" column="1" bodyfile="hal/nrf_mwu.h" bodystart="86" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__mwu__hal_1gad2aff60e58f84a9aa0653496bbcd8505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_mwu_event_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the MWU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="285" column="24" bodyfile="hal/nrf_mwu.h" bodystart="285" bodyend="289" declfile="hal/nrf_mwu.h" declline="110" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gaa6a632034a44d2ad3dbe6cef1c0cd364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_event_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing a specific MWU event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="291" column="24" bodyfile="hal/nrf_mwu.h" bodystart="291" bodyend="296" declfile="hal/nrf_mwu.h" declline="119" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga489dddcce4a3e38d672ba2b9af9924f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_event_address_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, nrf_mwu_event_t event)</argsstring>
        <name>nrf_mwu_event_address_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mwu__hal_1ga47b44b6c11bba74705dbe6a3dc2fb5ed" kindref="member">nrf_mwu_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of a specific MWU event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="298" column="28" bodyfile="hal/nrf_mwu.h" bodystart="298" bodyend="302" declfile="hal/nrf_mwu.h" declline="130" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gae1976d4d9cee04fcdb094c4bb99c1b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_int_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="304" column="24" bodyfile="hal/nrf_mwu.h" bodystart="304" bodyend="307" declfile="hal/nrf_mwu.h" declline="140" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga63b2c98f28196c77c6deb863851de28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_int_enable_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_enable_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="309" column="28" bodyfile="hal/nrf_mwu.h" bodystart="309" bodyend="312" declfile="hal/nrf_mwu.h" declline="151" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga4791501dae2891aa9a015c05bd889e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_int_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_int_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__mwu__hal_1ga6510b484b7ba549a579e6e8d6f59885c" kindref="member">nrf_mwu_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="314" column="24" bodyfile="hal/nrf_mwu.h" bodystart="314" bodyend="317" declfile="hal/nrf_mwu.h" declline="160" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gaa74bc12c49194463dc2de242cf172bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_nmi_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified non-maskable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="319" column="24" bodyfile="hal/nrf_mwu.h" bodystart="319" bodyend="322" declfile="hal/nrf_mwu.h" declline="168" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga6fb89107ab17f307f71f3f4d52f7df7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_nmi_enable_check</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_enable_check</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified non-maskable interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="324" column="28" bodyfile="hal/nrf_mwu.h" bodystart="324" bodyend="327" declfile="hal/nrf_mwu.h" declline="178" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga697fe2025a8d20b365d7c68cd17ab7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_nmi_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_mwu_nmi_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified non-maskable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="329" column="24" bodyfile="hal/nrf_mwu.h" bodystart="329" bodyend="332" declfile="hal/nrf_mwu.h" declline="186" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga37745bc047c1e777909478b9727b5ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_user_region_range_set</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t region_idx, uint32_t start_addr, uint32_t end_addr)</argsstring>
        <name>nrf_mwu_user_region_range_set</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>region_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>end_addr</declname>
        </param>
        <briefdescription>
<para>Function for setting address range of the specified user region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">region_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory address defining the beginning of the region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory address defining the end of the region. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="334" column="24" bodyfile="hal/nrf_mwu.h" bodystart="334" bodyend="343" declfile="hal/nrf_mwu.h" declline="196" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga416c45ca26704fac75886294a9fcba2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_region_watch_enable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t reg_watch_mask)</argsstring>
        <name>nrf_mwu_region_watch_enable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_watch_mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling memory access watch mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_watch_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines regions and access types to watch. Compose this mask from <ref refid="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" kindref="member">nrf_mwu_region_watch_t</ref> values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="345" column="24" bodyfile="hal/nrf_mwu.h" bodystart="345" bodyend="348" declfile="hal/nrf_mwu.h" declline="208" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1gab22fa019a61a53ce83946839c3e6a13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_region_watch_disable</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint32_t reg_watch_mask)</argsstring>
        <name>nrf_mwu_region_watch_disable</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_watch_mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling memory access watch mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_watch_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines regions and access types to stop watching. Compose this mask from <ref refid="group__nrf__mwu__hal_1ga3ef13bc3357e467aa3d637ebb1163eff" kindref="member">nrf_mwu_region_watch_t</ref> values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="350" column="24" bodyfile="hal/nrf_mwu.h" bodystart="350" bodyend="353" declfile="hal/nrf_mwu.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga7b7255abc5aba39a83d58dcd7337ba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_region_watch_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg)</argsstring>
        <name>nrf_mwu_region_watch_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting memory access watch configuration mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask that defines regions and access types being watched. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="355" column="28" bodyfile="hal/nrf_mwu.h" bodystart="355" bodyend="358" declfile="hal/nrf_mwu.h" declline="226" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga24b1b3296949acf5884fa075a6f5d6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_configure</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_configure</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for configuring peripheral subregions for watching. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing specified subregions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregions to include into the specified peripheral region. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="360" column="24" bodyfile="hal/nrf_mwu.h" bodystart="360" bodyend="365" declfile="hal/nrf_mwu.h" declline="235" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga45626d7b774d743668227a721f436aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_subregions_write_accesses_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint8_t per_reg_idx)</argsstring>
        <name>nrf_mwu_subregions_write_accesses_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the mask of the write access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregions to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask specifying subregions that were write accessed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="367" column="28" bodyfile="hal/nrf_mwu.h" bodystart="367" bodyend="371" declfile="hal/nrf_mwu.h" declline="247" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga0d23ad2079e7bee845b531a0fd6de49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_write_accesses_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_write_accesses_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing write access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregion accesses to clear. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregion write accesses to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="373" column="24" bodyfile="hal/nrf_mwu.h" bodystart="373" bodyend="378" declfile="hal/nrf_mwu.h" declline="257" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga68a34cbbbea15269cb405d2f4312cb63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_mwu_subregions_read_accesses_get</definition>
        <argsstring>(NRF_MWU_Type const *p_reg, uint8_t per_reg_idx)</argsstring>
        <name>nrf_mwu_subregions_read_accesses_get</name>
        <param>
          <type>NRF_MWU_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <briefdescription>
<para>Function for getting the mask of the read access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregions to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask specifying subregions that were read accessed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="380" column="28" bodyfile="hal/nrf_mwu.h" bodystart="380" bodyend="384" declfile="hal/nrf_mwu.h" declline="269" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__mwu__hal_1ga9013094fb0489c6b26d9f2dc8f240a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_mwu_subregions_read_accesses_clear</definition>
        <argsstring>(NRF_MWU_Type *p_reg, uint8_t per_reg_idx, uint32_t subregion_mask)</argsstring>
        <name>nrf_mwu_subregions_read_accesses_clear</name>
        <param>
          <type>NRF_MWU_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>per_reg_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subregion_mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing read access flags of peripheral subregions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">per_reg_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral region containing subregion accesses to clear. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">subregion_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask that defines subregion read accesses to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_mwu.h" line="386" column="24" bodyfile="hal/nrf_mwu.h" bodystart="386" bodyend="391" declfile="hal/nrf_mwu.h" declline="279" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the Memory Watch Unit (MWU) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
