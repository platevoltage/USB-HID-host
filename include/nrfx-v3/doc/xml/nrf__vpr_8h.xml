<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__vpr_8h" kind="file" language="C++">
    <compoundname>nrf_vpr.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__vpr_8h" local="no">haly/nrfy_vpr.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_vpr.h</label>
        <link refid="nrf__vpr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga2cf1a86ea52ea334c7dfdc37683e3b69" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_COUNT</name>
        <initializer>VPR_EVENTS_TRIGGERED_MaxCount</initializer>
        <briefdescription>
<para>Symbol specifying maximum number of available events triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="51" column="9" bodyfile="hal/nrf_vpr.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1gaf3d5edb244b799223665a9d4c9abb989" prot="public" static="no">
        <name>NRF_VPR_ALL_CHANNELS_INT_MASK</name>
        <initializer>    ((uint32_t) (((1ULL &lt;&lt; <ref refid="group__nrf__vpr__hal_1ga2cf1a86ea52ea334c7dfdc37683e3b69" kindref="member">NRF_VPR_EVENTS_TRIGGERED_COUNT</ref>) - 1) \
     &lt;&lt; VPR_EVENTS_TRIGGERED_MinIndex))</initializer>
        <briefdescription>
<para>Macro for creating the interrupt bitmask for all event channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="54" column="9" bodyfile="hal/nrf_vpr.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga89809bd4ac1e84322d00528e4295b51d" prot="public" static="no">
        <name>NRF_VPR_TASK_TRIGGER_ALL_MASK</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
<para>Macro used as an mask to clear all triggered interrupts within CSR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="59" column="9" bodyfile="hal/nrf_vpr.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga3eb8273a1de1c8ca2e83cfcd46dc7f9a" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_MIN</name>
        <initializer>VPR_EVENTS_TRIGGERED_MinIndex</initializer>
        <briefdescription>
<para>Symbol specifying minimal index of TRIGGERED events array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="62" column="9" bodyfile="hal/nrf_vpr.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga0ff1807b2be95a18e5b0b48c0d60fddd" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_MAX</name>
        <initializer>VPR_EVENTS_TRIGGERED_MaxIndex</initializer>
        <briefdescription>
<para>Symbol specifying maximal index of TRIGGERED events array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="65" column="9" bodyfile="hal/nrf_vpr.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga3930c28a3b298d080fa13859da8100c1" prot="public" static="no">
        <name>NRF_VPR_TASKS_TRIGGER_MIN</name>
        <initializer>VPR_TASKS_TRIGGER_MinIndex</initializer>
        <briefdescription>
<para>Symbol specifying minimal index of TRIGGER tasks array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="68" column="9" bodyfile="hal/nrf_vpr.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1gadf1cc490aaaf9c25aae3b1049c4070f9" prot="public" static="no">
        <name>NRF_VPR_TASKS_TRIGGER_MAX</name>
        <initializer>VPR_TASKS_TRIGGER_MaxIndex</initializer>
        <briefdescription>
<para>Symbol specifying maximal index of TRIGGER tasks array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="71" column="9" bodyfile="hal/nrf_vpr.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_event_t</name>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaebf1d35d66aa1cc5488d5968fb2afc53" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_0</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 0 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaf3284ad6a341ec5e9fd9ea912273bbfc" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_1</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 1 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d1c14aa197044fc074e0f72dcc9ad83" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_2</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 2 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa70e8fe05f00c5348dd2ac115eef4fc29" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_3</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 3 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa08fe110c1b3296726f1e07fd210ba0b2" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_4</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 4 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa878f611e5d084a768bf256107a3c40dd" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_5</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 5 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa5c853ebf24283874e2aff1b5833bad64" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_6</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 6 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa58d031aacd89ad06567415e3be78d5e9" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_7</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 7 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa03f0429025abd3f72620b4cc9a3f8c7f" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_8</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 8 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa67ba0a90fce97bb0b9e73f0da6b68dfc" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_9</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 9 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadc6efd887188d21d62d982e5aee58a68" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_10</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 10 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa0c20a435947814b7e12e89fc2c6f9ea" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_11</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 11 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afafd2116ad66ddd6cfc0df3e0ba44086ef" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_12</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 12 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadde0574bf5cb8b436b0b08b4d0bf52d0" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_13</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 13 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa96a0a6df5b06885836f2f9014b65caac" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_14</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 14 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa9b27f175da1c114dd2f4c72485d58475" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_15</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 15 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa4cb1d80993dd549ebc625e5ed242434" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_16</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[16])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 16 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d7051f95f16fce21ffefee6b720432b" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_17</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[17])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 17 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7c112f67a15216b68bc53751176eaaac" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_18</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[18])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 18 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa40941e912b41798bac0d8bacbff82daf" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_19</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[19])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 19 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa4d4191c342ef8b50e7caa7760d9bfe0c" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_20</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[20])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 20 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afab5d05119370035cf64d1ae4048a90cb2" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_21</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[21])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 21 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7177d2356b180025a5bd607784cabdb1" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_22</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[22])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 22 event. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="74" column="1" bodyfile="hal/nrf_vpr.h" bodystart="75" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_int_mask_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a29ec38ed780e085f8ff94e159c8581a3" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_0_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 0 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a27b0e08428bdbf49853ccd033e530cd9" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_1_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 1 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3acb871908d5e4238d8df3a55297dc3f96" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_2_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 2 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ab9da7ed54f5d621984a5646472b73d8a" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_3_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED3_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 3 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a649a156a79069e252f03781ee3a45eef" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_4_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED4_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 4 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7b81ccd85a12e069027dcd8b15151f81" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_5_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED5_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 5 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a1d64a2bda9db1a95136853866d3f17d3" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_6_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED6_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 6 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a932dcc79572769c9e215dd2a38f0d407" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_7_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED7_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 7 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aca61706b22d81ee2742e23d0bfeca0e0" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_8_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED8_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 8 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a981df14f82787a8a098d1b748db11522" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_9_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED9_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 9 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ade381c22b1367e26fa287a5014a4c5dd" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_10_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED10_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 10 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afe4feb13f2bc9078ddf353f030f0561e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_11_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED11_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 11 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7bd4ee3237c948b3e9d6a7a68c40c622" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_12_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED12_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 12 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2fbe5d9390c7f65b5f6b3999c6a5a1c1" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_13_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED13_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 13 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a085bad0d6a483c5679c5ff5850f47e1d" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_14_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED14_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 14 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af0b6fc8b0c1002c66ccc0ce17eb6ae19" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_15_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED15_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 15 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af9ab402ddac30c4effcfb2c528684e2e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_16_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED16_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 16 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a4ff53b969135a75d282f9fd5d70dacbd" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_17_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED17_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 17 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ac015b6296424d8d12995099cec6b8f5a" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_18_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED18_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 18 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2d413d2175ed5ba00ba1aa434148b52b" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_19_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED19_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 19 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aa55b1cd35780881b93a0b7d76f46849e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_20_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED20_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 20 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afcfb846137ed5dd223d99f1b23df5f46" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_21_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED21_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 21 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a93131f1ca629e93631273ed3545b06cf" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_22_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED22_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 22 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="115" column="1" bodyfile="hal/nrf_vpr.h" bodystart="116" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_task_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6761a3b0b62e2aa411c57eea482d8df0" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_0</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 0 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a843553794eee086f6c8ce5abb1ea7407" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_1</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 1 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2b5dac9b63cab0aeb632246c2589cec2" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_2</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 2 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a9252edbf1dcfe01981578847111dce00" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_3</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 3 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a54c1a5037ff62c4e27dc868ceef6175b" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_4</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 4 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aef73fdf07668fe311d9cf3fcca3a4a89" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_5</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 5 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a35a995bc32f1ce6231cec5c0e16fe1ad" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_6</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 6 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a0d324d866cf4b0c530070560cd34437f" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_7</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 7 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6a224a153e7a93dfd0d485549b9bfabe" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_8</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 8 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aedc3bdff5d510b46476c996fef8d2c80" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_9</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 9 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a4953fd619f4cd0c4c73a5d7d1f7bda53" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_10</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 10 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a1b409dabb36840b21402869d38178202" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_11</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 11 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381abe60a721222d3a30b24679dd38eadfba" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_12</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 12 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2ec4e1ebe69bde12eb61b70a6bc8a295" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_13</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 13 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2abf8fc6b532460f81447febbb338788" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_14</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 14 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a5df2d2d95bab6696ca5eb9510812eb29" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_15</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 15 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a69dbb16e9e51f7b433fcd1c3edbfa6cb" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_16</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[16])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 16 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381ac6e96e85e95180b17aab11d8ab39de70" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_17</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[17])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 17 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a63e9facd5733bcbe5eaa10d31d586d75" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_18</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[18])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 18 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a714717cc943f238cb544126df03df29a" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_19</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[19])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 19 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a128181a4ab8faff94f8ba4ed073c7dc1" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_20</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[20])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 20 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aa273e4ac4fc3062e825e079821ba8056" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_21</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[21])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 21 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a847a392f4b9e0f6380188b59c0279d10" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_22</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[22])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 22 task. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="156" column="1" bodyfile="hal/nrf_vpr.h" bodystart="157" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_dmcontrol_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffafe98fa08f4a6b1327d4485b1614ca7b9" prot="public">
          <name>NRF_VPR_DMCONTROL_DMACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffa71646dcd2e74eb8eefc70ec886a6af2c" prot="public">
          <name>NRF_VPR_DMCONTROL_NDMRESET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Debug module active. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Debug Mode Control signals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="197" column="1" bodyfile="hal/nrf_vpr.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga120514d158e254bb0e94a1d683f05de6" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_dmcontrol_mask_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga120514d158e254bb0e94a1d683f05de6a7410678fe05ac178d48048e6d6e37b37" prot="public">
          <name>NRF_VPR_DMCONTROL_DMACTIVE_MASK</name>
          <initializer>= VPR_DEBUGIF_DMCONTROL_DMACTIVE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga120514d158e254bb0e94a1d683f05de6a0ac6af5d08248f6798d0ae292b59dcb2" prot="public">
          <name>NRF_VPR_DMCONTROL_NDMRESET_MASK</name>
          <initializer>= VPR_DEBUGIF_DMCONTROL_NDMRESET_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Debug module active mask. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Debug Mode Control signal masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="204" column="1" bodyfile="hal/nrf_vpr.h" bodystart="205" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga907c3749057d799427e19910a19c3d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_task_trigger</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrf_vpr_task_trigger</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for triggering the specified VPR task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be triggered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="380" column="24" bodyfile="hal/nrf_vpr.h" bodystart="380" bodyend="383" declfile="hal/nrf_vpr.h" declline="216" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga01815ed892820f3ecd7f7b2581061213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_task_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrf_vpr_task_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified VPR task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="385" column="28" bodyfile="hal/nrf_vpr.h" bodystart="385" bodyend="389" declfile="hal/nrf_vpr.h" declline="226" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gaa2da678a2b9a3737b0ec4b8a0f82bc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_task_t nrf_vpr_trigger_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_vpr_trigger_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the specified VPR TRIGGER task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Task index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGER task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="391" column="34" bodyfile="hal/nrf_vpr.h" bodystart="391" bodyend="394" declfile="hal/nrf_vpr.h" declline="236" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gad961b33210d4937bd0c7075f8c25cc5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_event_clear</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_clear</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified VPR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="396" column="24" bodyfile="hal/nrf_vpr.h" bodystart="396" bodyend="399" declfile="hal/nrf_vpr.h" declline="244" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga978f5d9abfae2e413c84334b291b407a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_event_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the VPR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="401" column="24" bodyfile="hal/nrf_vpr.h" bodystart="401" bodyend="404" declfile="hal/nrf_vpr.h" declline="255" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga46d1cac15ba0cb54eafc067aca7d6ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_event_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified VPR event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="406" column="28" bodyfile="hal/nrf_vpr.h" bodystart="406" bodyend="410" declfile="hal/nrf_vpr.h" declline="265" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga72b26e3e399d99b3fb484307a8c6c7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_event_t nrf_vpr_triggered_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_vpr_triggered_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the specified VPR TRIGGERED event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGERED event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="412" column="35" bodyfile="hal/nrf_vpr.h" bodystart="412" bodyend="415" declfile="hal/nrf_vpr.h" declline="275" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga7398319240c3fe8efd7b5df8aa3b1c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_int_enable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_enable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="417" column="24" bodyfile="hal/nrf_vpr.h" bodystart="417" bodyend="420" declfile="hal/nrf_vpr.h" declline="284" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga9d4752073b984bcd01e269d426939f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_int_disable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_disable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="422" column="24" bodyfile="hal/nrf_vpr.h" bodystart="422" bodyend="425" declfile="hal/nrf_vpr.h" declline="293" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga438dab7243ef940d2dce027b7786a4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_int_enable_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_enable_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="427" column="28" bodyfile="hal/nrf_vpr.h" bodystart="427" bodyend="431" declfile="hal/nrf_vpr.h" declline="304" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga012a27945c573679f902f2e345fc7792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_cpurun_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, bool enable)</argsstring>
        <name>nrf_vpr_cpurun_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of the CPU after core reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU is to be running, false if stopped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="433" column="24" bodyfile="hal/nrf_vpr.h" bodystart="433" bodyend="437" declfile="hal/nrf_vpr.h" declline="313" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga87c5af83ac3f0680747f8949cf9dfb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_cpurun_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrf_vpr_cpurun_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the state of the CPU after core reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be running after core reset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be stopped after core reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="439" column="24" bodyfile="hal/nrf_vpr.h" bodystart="439" bodyend="442" declfile="hal/nrf_vpr.h" declline="324" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga274fb49feaa99361a3f996131d8beb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_initpc_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t pc)</argsstring>
        <name>nrf_vpr_initpc_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pc</declname>
        </param>
        <briefdescription>
<para>Function for setting the initial value of the program counter after CPU reset. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This address value must be 64-bit aligned.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pc</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the program counter to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="444" column="24" bodyfile="hal/nrf_vpr.h" bodystart="444" bodyend="449" declfile="hal/nrf_vpr.h" declline="334" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga18503be618285e03dfcdbcaa8d1070be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_initpc_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrf_vpr_initpc_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the initial value of the program counter after CPU reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Initial value of the program counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="451" column="28" bodyfile="hal/nrf_vpr.h" bodystart="451" bodyend="454" declfile="hal/nrf_vpr.h" declline="344" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gaba0ea17e2364214ca0a36705e094a67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_debugif_dmcontrol_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_dmcontrol_t signal, bool enable)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified debug mode control signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if signal is to be 1, false if 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="456" column="24" bodyfile="hal/nrf_vpr.h" bodystart="456" bodyend="479" declfile="hal/nrf_vpr.h" declline="353" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga13c4059a6d45a65e9bb7d369f3755f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_debugif_dmcontrol_mask_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_mask_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the mask of debug mode control signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of signals to be set. Use <ref refid="group__nrf__vpr__hal_1ga120514d158e254bb0e94a1d683f05de6" kindref="member">nrf_vpr_dmcontrol_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="481" column="24" bodyfile="hal/nrf_vpr.h" bodystart="481" bodyend="485" declfile="hal/nrf_vpr.h" declline="364" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga9300eb8dd279fffc9434d6ddae7e60c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_debugif_dmcontrol_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_dmcontrol_t signal)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <briefdescription>
<para>Function for getting the debug mode control signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="487" column="24" bodyfile="hal/nrf_vpr.h" bodystart="487" bodyend="502" declfile="hal/nrf_vpr.h" declline="376" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_VPR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_vpr_hal<sp/>VPR<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_vpr</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>VPR<sp/>RISC-V<sp/>CPU<sp/>unit<sp/>(VPR).</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>specifying<sp/>maximum<sp/>number<sp/>of<sp/>available<sp/>events<sp/>triggered.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_EVENTS_TRIGGERED_COUNT<sp/>VPR_EVENTS_TRIGGERED_MaxCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>for<sp/>creating<sp/>the<sp/>interrupt<sp/>bitmask<sp/>for<sp/>all<sp/>event<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_ALL_CHANNELS_INT_MASK<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(((1ULL<sp/>&lt;&lt;<sp/>NRF_VPR_EVENTS_TRIGGERED_COUNT)<sp/>-<sp/>1)<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPR_EVENTS_TRIGGERED_MinIndex))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>@brief<sp/>Macro<sp/>used<sp/>as<sp/>an<sp/>mask<sp/>to<sp/>clear<sp/>all<sp/>triggered<sp/>interrupts<sp/>within<sp/>CSR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_TASK_TRIGGER_ALL_MASK<sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>specifying<sp/>minimal<sp/>index<sp/>of<sp/>TRIGGERED<sp/>events<sp/>array<sp/>that<sp/>is<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_EVENTS_TRIGGERED_MIN<sp/>VPR_EVENTS_TRIGGERED_MinIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>specifying<sp/>maximal<sp/>index<sp/>of<sp/>TRIGGERED<sp/>events<sp/>array<sp/>that<sp/>is<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_EVENTS_TRIGGERED_MAX<sp/>VPR_EVENTS_TRIGGERED_MaxIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>specifying<sp/>minimal<sp/>index<sp/>of<sp/>TRIGGER<sp/>tasks<sp/>array<sp/>that<sp/>is<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_TASKS_TRIGGER_MIN<sp/>VPR_TASKS_TRIGGER_MinIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>specifying<sp/>maximal<sp/>index<sp/>of<sp/>TRIGGER<sp/>tasks<sp/>array<sp/>that<sp/>is<sp/>implemented.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_TASKS_TRIGGER_MAX<sp/>VPR_TASKS_TRIGGER_MaxIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">/**<sp/>@brief<sp/>VPR<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_EVENTS_TRIGGERED_MIN<sp/>&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaebf1d35d66aa1cc5488d5968fb2afc53" kindref="member">NRF_VPR_EVENT_TRIGGERED_0</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[0]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>0<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaf3284ad6a341ec5e9fd9ea912273bbfc" kindref="member">NRF_VPR_EVENT_TRIGGERED_1</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[1]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>1<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d1c14aa197044fc074e0f72dcc9ad83" kindref="member">NRF_VPR_EVENT_TRIGGERED_2</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[2]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>2<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa70e8fe05f00c5348dd2ac115eef4fc29" kindref="member">NRF_VPR_EVENT_TRIGGERED_3</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[3]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>3<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa08fe110c1b3296726f1e07fd210ba0b2" kindref="member">NRF_VPR_EVENT_TRIGGERED_4</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[4]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>4<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa878f611e5d084a768bf256107a3c40dd" kindref="member">NRF_VPR_EVENT_TRIGGERED_5</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[5]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>5<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa5c853ebf24283874e2aff1b5833bad64" kindref="member">NRF_VPR_EVENT_TRIGGERED_6</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[6]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>6<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa58d031aacd89ad06567415e3be78d5e9" kindref="member">NRF_VPR_EVENT_TRIGGERED_7</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[7]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>7<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa03f0429025abd3f72620b4cc9a3f8c7f" kindref="member">NRF_VPR_EVENT_TRIGGERED_8</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[8]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>8<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa67ba0a90fce97bb0b9e73f0da6b68dfc" kindref="member">NRF_VPR_EVENT_TRIGGERED_9</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[9]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>9<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadc6efd887188d21d62d982e5aee58a68" kindref="member">NRF_VPR_EVENT_TRIGGERED_10</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[10]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>10<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa0c20a435947814b7e12e89fc2c6f9ea" kindref="member">NRF_VPR_EVENT_TRIGGERED_11</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[11]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>11<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afafd2116ad66ddd6cfc0df3e0ba44086ef" kindref="member">NRF_VPR_EVENT_TRIGGERED_12</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[12]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>12<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadde0574bf5cb8b436b0b08b4d0bf52d0" kindref="member">NRF_VPR_EVENT_TRIGGERED_13</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[13]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>13<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa96a0a6df5b06885836f2f9014b65caac" kindref="member">NRF_VPR_EVENT_TRIGGERED_14</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[14]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>14<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa9b27f175da1c114dd2f4c72485d58475" kindref="member">NRF_VPR_EVENT_TRIGGERED_15</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[15]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>15<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa4cb1d80993dd549ebc625e5ed242434" kindref="member">NRF_VPR_EVENT_TRIGGERED_16</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[16]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>16<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d7051f95f16fce21ffefee6b720432b" kindref="member">NRF_VPR_EVENT_TRIGGERED_17</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[17]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>17<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7c112f67a15216b68bc53751176eaaac" kindref="member">NRF_VPR_EVENT_TRIGGERED_18</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[18]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>18<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa40941e912b41798bac0d8bacbff82daf" kindref="member">NRF_VPR_EVENT_TRIGGERED_19</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[19]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>19<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa4d4191c342ef8b50e7caa7760d9bfe0c" kindref="member">NRF_VPR_EVENT_TRIGGERED_20</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[20]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>20<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afab5d05119370035cf64d1ae4048a90cb2" kindref="member">NRF_VPR_EVENT_TRIGGERED_21</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[21]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>21<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7177d2356b180025a5bd607784cabdb1" kindref="member">NRF_VPR_EVENT_TRIGGERED_22</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[22]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>22<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_EVENTS_TRIGGERED_MAX<sp/>&gt;<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_23<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[23]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>23<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_24<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[24]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>24<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_25<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[25]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>25<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_26<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[26]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>26<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_27<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[27]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>27<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_28<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[28]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>28<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_29<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[29]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>29<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_30<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[30]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>30<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_EVENT_TRIGGERED_31<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[31]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>31<sp/>event.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">/**<sp/>@brief<sp/>VPR<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_EVENTS_TRIGGERED_MIN<sp/>&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a29ec38ed780e085f8ff94e159c8581a3" kindref="member">NRF_VPR_INT_TRIGGERED_0_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED0_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>0<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a27b0e08428bdbf49853ccd033e530cd9" kindref="member">NRF_VPR_INT_TRIGGERED_1_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED1_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>1<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3acb871908d5e4238d8df3a55297dc3f96" kindref="member">NRF_VPR_INT_TRIGGERED_2_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED2_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>2<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ab9da7ed54f5d621984a5646472b73d8a" kindref="member">NRF_VPR_INT_TRIGGERED_3_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED3_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>3<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a649a156a79069e252f03781ee3a45eef" kindref="member">NRF_VPR_INT_TRIGGERED_4_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED4_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>4<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7b81ccd85a12e069027dcd8b15151f81" kindref="member">NRF_VPR_INT_TRIGGERED_5_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED5_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>5<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a1d64a2bda9db1a95136853866d3f17d3" kindref="member">NRF_VPR_INT_TRIGGERED_6_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED6_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>6<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a932dcc79572769c9e215dd2a38f0d407" kindref="member">NRF_VPR_INT_TRIGGERED_7_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED7_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>7<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aca61706b22d81ee2742e23d0bfeca0e0" kindref="member">NRF_VPR_INT_TRIGGERED_8_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED8_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>8<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a981df14f82787a8a098d1b748db11522" kindref="member">NRF_VPR_INT_TRIGGERED_9_MASK</ref><sp/><sp/>=<sp/>VPR_INTENSET_TRIGGERED9_Msk,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>9<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ade381c22b1367e26fa287a5014a4c5dd" kindref="member">NRF_VPR_INT_TRIGGERED_10_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED10_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>10<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afe4feb13f2bc9078ddf353f030f0561e" kindref="member">NRF_VPR_INT_TRIGGERED_11_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED11_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>11<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7bd4ee3237c948b3e9d6a7a68c40c622" kindref="member">NRF_VPR_INT_TRIGGERED_12_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED12_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>12<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2fbe5d9390c7f65b5f6b3999c6a5a1c1" kindref="member">NRF_VPR_INT_TRIGGERED_13_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED13_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>13<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a085bad0d6a483c5679c5ff5850f47e1d" kindref="member">NRF_VPR_INT_TRIGGERED_14_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED14_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>14<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af0b6fc8b0c1002c66ccc0ce17eb6ae19" kindref="member">NRF_VPR_INT_TRIGGERED_15_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED15_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>15<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af9ab402ddac30c4effcfb2c528684e2e" kindref="member">NRF_VPR_INT_TRIGGERED_16_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED16_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>16<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a4ff53b969135a75d282f9fd5d70dacbd" kindref="member">NRF_VPR_INT_TRIGGERED_17_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED17_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>17<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ac015b6296424d8d12995099cec6b8f5a" kindref="member">NRF_VPR_INT_TRIGGERED_18_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED18_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>18<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2d413d2175ed5ba00ba1aa434148b52b" kindref="member">NRF_VPR_INT_TRIGGERED_19_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED19_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>19<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aa55b1cd35780881b93a0b7d76f46849e" kindref="member">NRF_VPR_INT_TRIGGERED_20_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED20_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>20<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afcfb846137ed5dd223d99f1b23df5f46" kindref="member">NRF_VPR_INT_TRIGGERED_21_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED21_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>21<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a93131f1ca629e93631273ed3545b06cf" kindref="member">NRF_VPR_INT_TRIGGERED_22_MASK</ref><sp/>=<sp/>VPR_INTENSET_TRIGGERED22_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>22<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_EVENTS_TRIGGERED_MAX<sp/>&gt;<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_23_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED23_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>23<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_24_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED24_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>24<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_25_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED25_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>25<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_26_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED26_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>26<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_27_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED27_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>27<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_28_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED28_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>28<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_29_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED29_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>29<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_30_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED30_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>30<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_INT_TRIGGERED_31_MASK<sp/>=<sp/>VPR_INTENSET_TRIGGERED31_Msk,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Triggered<sp/>31<sp/>interrupt<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">/**<sp/>@brief<sp/>VPR<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_TASKS_TRIGGER_MIN<sp/>&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6761a3b0b62e2aa411c57eea482d8df0" kindref="member">NRF_VPR_TASK_TRIGGER_0</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[0]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>0<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a843553794eee086f6c8ce5abb1ea7407" kindref="member">NRF_VPR_TASK_TRIGGER_1</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[1]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>1<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2b5dac9b63cab0aeb632246c2589cec2" kindref="member">NRF_VPR_TASK_TRIGGER_2</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[2]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>2<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a9252edbf1dcfe01981578847111dce00" kindref="member">NRF_VPR_TASK_TRIGGER_3</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[3]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>3<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a54c1a5037ff62c4e27dc868ceef6175b" kindref="member">NRF_VPR_TASK_TRIGGER_4</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[4]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>4<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aef73fdf07668fe311d9cf3fcca3a4a89" kindref="member">NRF_VPR_TASK_TRIGGER_5</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[5]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>5<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a35a995bc32f1ce6231cec5c0e16fe1ad" kindref="member">NRF_VPR_TASK_TRIGGER_6</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[6]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>6<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a0d324d866cf4b0c530070560cd34437f" kindref="member">NRF_VPR_TASK_TRIGGER_7</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[7]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>7<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6a224a153e7a93dfd0d485549b9bfabe" kindref="member">NRF_VPR_TASK_TRIGGER_8</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[8]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>8<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aedc3bdff5d510b46476c996fef8d2c80" kindref="member">NRF_VPR_TASK_TRIGGER_9</ref><sp/><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[9]),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>9<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a4953fd619f4cd0c4c73a5d7d1f7bda53" kindref="member">NRF_VPR_TASK_TRIGGER_10</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[10]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>10<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a1b409dabb36840b21402869d38178202" kindref="member">NRF_VPR_TASK_TRIGGER_11</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[11]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>11<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381abe60a721222d3a30b24679dd38eadfba" kindref="member">NRF_VPR_TASK_TRIGGER_12</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[12]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>12<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2ec4e1ebe69bde12eb61b70a6bc8a295" kindref="member">NRF_VPR_TASK_TRIGGER_13</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[13]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>13<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2abf8fc6b532460f81447febbb338788" kindref="member">NRF_VPR_TASK_TRIGGER_14</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[14]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>14<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a5df2d2d95bab6696ca5eb9510812eb29" kindref="member">NRF_VPR_TASK_TRIGGER_15</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[15]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>15<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a69dbb16e9e51f7b433fcd1c3edbfa6cb" kindref="member">NRF_VPR_TASK_TRIGGER_16</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[16]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>16<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381ac6e96e85e95180b17aab11d8ab39de70" kindref="member">NRF_VPR_TASK_TRIGGER_17</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[17]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>17<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a63e9facd5733bcbe5eaa10d31d586d75" kindref="member">NRF_VPR_TASK_TRIGGER_18</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[18]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>18<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a714717cc943f238cb544126df03df29a" kindref="member">NRF_VPR_TASK_TRIGGER_19</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[19]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>19<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a128181a4ab8faff94f8ba4ed073c7dc1" kindref="member">NRF_VPR_TASK_TRIGGER_20</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[20]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>20<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aa273e4ac4fc3062e825e079821ba8056" kindref="member">NRF_VPR_TASK_TRIGGER_21</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[21]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>21<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a847a392f4b9e0f6380188b59c0279d10" kindref="member">NRF_VPR_TASK_TRIGGER_22</ref><sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[22]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>22<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_VPR_TASKS_TRIGGER_MAX<sp/>&gt;<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_23<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[23]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>23<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_24<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[24]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>24<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_25<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[25]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>25<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_26<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[26]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>26<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_27<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[27]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>27<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_28<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[28]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>28<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_29<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[29]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>29<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_30<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[30]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>30<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_TASK_TRIGGER_31<sp/>=<sp/>offsetof(NRF_VPR_Type,<sp/>TASKS_TRIGGER[31]),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Trigger<sp/>31<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">/**<sp/>@brief<sp/>Debug<sp/>Mode<sp/>Control<sp/>signals.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_DMCONTROL_DMACTIVE,<sp/></highlight><highlight class="comment">/**<sp/>Debug<sp/>module<sp/>active.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffa71646dcd2e74eb8eefc70ec886a6af2c" kindref="member">NRF_VPR_DMCONTROL_NDMRESET</ref>,<sp/></highlight><highlight class="comment">/**<sp/>Negative<sp/>system<sp/>reset<sp/>signal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**<sp/>@brief<sp/>Debug<sp/>Mode<sp/>Control<sp/>signal<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>NRF_VPR_DMCONTROL_DMACTIVE_MASK<sp/>=<sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Msk,<sp/></highlight><highlight class="comment">/**<sp/>Debug<sp/>module<sp/>active<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gga120514d158e254bb0e94a1d683f05de6a0ac6af5d08248f6798d0ae292b59dcb2" kindref="member">NRF_VPR_DMCONTROL_NDMRESET_MASK</ref><sp/>=<sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Msk,<sp/></highlight><highlight class="comment">/**<sp/>Negative<sp/>system<sp/>reset<sp/>signal<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__hal_1ga120514d158e254bb0e94a1d683f05de6" kindref="member">nrf_vpr_dmcontrol_mask_t</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>the<sp/>specified<sp/>VPR<sp/>task.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>triggered.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga907c3749057d799427e19910a19c3d78" kindref="member">nrf_vpr_task_trigger</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>VPR<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Specified<sp/>task.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga01815ed892820f3ecd7f7b2581061213" kindref="member">nrf_vpr_task_address_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>specified<sp/>VPR<sp/>TRIGGER<sp/>task.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Task<sp/>index.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>specified<sp/>VPR<sp/>TRIGGER<sp/>task.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/><ref refid="group__nrf__vpr__hal_1gaa2da678a2b9a3737b0ec4b8a0f82bc67" kindref="member">nrf_vpr_trigger_task_get</ref>(uint8_t<sp/>index);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>VPR<sp/>event.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gad961b33210d4937bd0c7075f8c25cc5a" kindref="member">nrf_vpr_event_clear</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>VPR<sp/>event.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga978f5d9abfae2e413c84334b291b407a" kindref="member">nrf_vpr_event_check</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>VPR<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Specified<sp/>event.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga46d1cac15ba0cb54eafc067aca7d6ec8" kindref="member">nrf_vpr_event_address_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>specified<sp/>VPR<sp/>TRIGGERED<sp/>event.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Event<sp/>index.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>specified<sp/>VPR<sp/>TRIGGERED<sp/>event.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/><ref refid="group__nrf__vpr__hal_1ga72b26e3e399d99b3fb484307a8c6c7e8" kindref="member">nrf_vpr_triggered_event_get</ref>(uint8_t<sp/>index);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_vpr_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga7398319240c3fe8efd7b5df8aa3b1c56" kindref="member">nrf_vpr_int_enable</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_vpr_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga9d4752073b984bcd01e269d426939f88" kindref="member">nrf_vpr_int_disable</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_vpr_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga438dab7243ef940d2dce027b7786a4af" kindref="member">nrf_vpr_int_enable_check</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>state<sp/>of<sp/>the<sp/>CPU<sp/>after<sp/>core<sp/>reset.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>CPU<sp/>is<sp/>to<sp/>be<sp/>running,<sp/>false<sp/>if<sp/>stopped.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga012a27945c573679f902f2e345fc7792" kindref="member">nrf_vpr_cpurun_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>state<sp/>of<sp/>the<sp/>CPU<sp/>after<sp/>core<sp/>reset.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>CPU<sp/>is<sp/>to<sp/>be<sp/>running<sp/>after<sp/>core<sp/>reset.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>CPU<sp/>is<sp/>to<sp/>be<sp/>stopped<sp/>after<sp/>core<sp/>reset.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga87c5af83ac3f0680747f8949cf9dfb4d" kindref="member">nrf_vpr_cpurun_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="326"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>initial<sp/>value<sp/>of<sp/>the<sp/>program<sp/>counter<sp/>after<sp/>CPU<sp/>reset.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>address<sp/>value<sp/>must<sp/>be<sp/>64-bit<sp/>aligned.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pc<sp/><sp/><sp/><sp/>Initial<sp/>value<sp/>of<sp/>the<sp/>program<sp/>counter<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga274fb49feaa99361a3f996131d8beb0e" kindref="member">nrf_vpr_initpc_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>initial<sp/>value<sp/>of<sp/>the<sp/>program<sp/>counter<sp/>after<sp/>CPU<sp/>reset.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@return<sp/>Initial<sp/>value<sp/>of<sp/>the<sp/>program<sp/>counter.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga18503be618285e03dfcdbcaa8d1070be" kindref="member">nrf_vpr_initpc_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>specified<sp/>debug<sp/>mode<sp/>control<sp/>signal.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>signal<sp/>Signal<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>1,<sp/>false<sp/>if<sp/>0.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gaba0ea17e2364214ca0a36705e094a67e" kindref="member">nrf_vpr_debugif_dmcontrol_set</ref>(NRF_VPR_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref><sp/>signal,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>mask<sp/>of<sp/>debug<sp/>mode<sp/>control<sp/>signals.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>signals<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_vpr_dmcontrol_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga13c4059a6d45a65e9bb7d369f3755f48" kindref="member">nrf_vpr_debugif_dmcontrol_mask_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>debug<sp/>mode<sp/>control<sp/>signals.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>signal<sp/>Signal<sp/>to<sp/>be<sp/>retrieved.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Signal<sp/>is<sp/>logical<sp/>1.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Signal<sp/>is<sp/>logical<sp/>0.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga9300eb8dd279fffc9434d6ddae7e60c5" kindref="member">nrf_vpr_debugif_dmcontrol_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref><sp/><sp/>signal);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga907c3749057d799427e19910a19c3d78" kindref="member">nrf_vpr_task_trigger</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga01815ed892820f3ecd7f7b2581061213" kindref="member">nrf_vpr_task_address_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref><sp/><ref refid="group__nrf__vpr__hal_1gaa2da678a2b9a3737b0ec4b8a0f82bc67" kindref="member">nrf_vpr_trigger_task_get</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref>)<ref refid="group__nrfx__common_1gaf356c97c2527d9ac57b04dd9f12fc9d3" kindref="member">NRFX_OFFSETOF</ref>(NRF_VPR_Type,<sp/>TASKS_TRIGGER[index]);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gad961b33210d4937bd0c7075f8c25cc5a" kindref="member">nrf_vpr_event_clear</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga978f5d9abfae2e413c84334b291b407a" kindref="member">nrf_vpr_event_check</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga46d1cac15ba0cb54eafc067aca7d6ec8" kindref="member">nrf_vpr_event_address_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref><sp/><ref refid="group__nrf__vpr__hal_1ga72b26e3e399d99b3fb484307a8c6c7e8" kindref="member">nrf_vpr_triggered_event_get</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref>)<ref refid="group__nrfx__common_1gaf356c97c2527d9ac57b04dd9f12fc9d3" kindref="member">NRFX_OFFSETOF</ref>(NRF_VPR_Type,<sp/>EVENTS_TRIGGERED[index]);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga7398319240c3fe8efd7b5df8aa3b1c56" kindref="member">nrf_vpr_int_enable</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga9d4752073b984bcd01e269d426939f88" kindref="member">nrf_vpr_int_disable</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga438dab7243ef940d2dce027b7786a4af" kindref="member">nrf_vpr_int_enable_check</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga012a27945c573679f902f2e345fc7792" kindref="member">nrf_vpr_cpurun_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CPURUN<sp/>=<sp/>(enable<sp/>?<sp/>VPR_CPURUN_EN_Running<sp/>:<sp/>VPR_CPURUN_EN_Stopped)<sp/>&lt;&lt;<sp/>VPR_CPURUN_EN_Pos;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga87c5af83ac3f0680747f8949cf9dfb4d" kindref="member">nrf_vpr_cpurun_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;CPURUN<sp/>&amp;<sp/>VPR_CPURUN_EN_Msk)<sp/>&gt;&gt;<sp/>VPR_CPURUN_EN_Pos;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga274fb49feaa99361a3f996131d8beb0e" kindref="member">nrf_vpr_initpc_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>((pc<sp/>&amp;<sp/>0x7FUL)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INITPC<sp/>=<sp/>pc;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__hal_1ga18503be618285e03dfcdbcaa8d1070be" kindref="member">nrf_vpr_initpc_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INITPC;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gaba0ea17e2364214ca0a36705e094a67e" kindref="member">nrf_vpr_debugif_dmcontrol_set</ref>(NRF_VPR_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref><sp/>signal,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(signal)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_VPR_DMCONTROL_DMACTIVE:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DEBUGIF.DMCONTROL<sp/>=<sp/>((p_reg-&gt;DEBUGIF.DMCONTROL<sp/>&amp;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~VPR_DEBUGIF_DMCONTROL_DMACTIVE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?<sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Disabled)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Pos));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffa71646dcd2e74eb8eefc70ec886a6af2c" kindref="member">NRF_VPR_DMCONTROL_NDMRESET</ref>:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DEBUGIF.DMCONTROL<sp/>=<sp/>((p_reg-&gt;DEBUGIF.DMCONTROL<sp/>&amp;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~VPR_DEBUGIF_DMCONTROL_NDMRESET_Msk)<sp/>|</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((enable<sp/>?<sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Active<sp/>:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Inactive)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Pos));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga13c4059a6d45a65e9bb7d369f3755f48" kindref="member">nrf_vpr_debugif_dmcontrol_mask_set</ref>(NRF_VPR_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;DEBUGIF.DMCONTROL<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1ga9300eb8dd279fffc9434d6ddae7e60c5" kindref="member">nrf_vpr_debugif_dmcontrol_get</ref>(NRF_VPR_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref><sp/><sp/>signal)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(signal)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NRF_VPR_DMCONTROL_DMACTIVE:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DEBUGIF.DMCONTROL<sp/>&amp;<sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Msk)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPR_DEBUGIF_DMCONTROL_DMACTIVE_Pos);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffa71646dcd2e74eb8eefc70ec886a6af2c" kindref="member">NRF_VPR_DMCONTROL_NDMRESET</ref>:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;DEBUGIF.DMCONTROL<sp/>&amp;<sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Msk)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPR_DEBUGIF_DMCONTROL_NDMRESET_Pos);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_VPR_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_vpr.h"/>
  </compounddef>
</doxygen>
