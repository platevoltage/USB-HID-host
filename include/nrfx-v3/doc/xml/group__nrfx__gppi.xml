<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfx__gppi" kind="group">
    <compoundname>nrfx_gppi</compoundname>
    <title>Generic PPI layer</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_gppi_channel_group_t</name>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8bb8dbcbb30287bf14a7c678a80297e6" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a17e513789a2d41feb4edec493f4c358a" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a8918e46a6571b581da1377dbdf81d19f" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a254d56ed3ec3b5bf27a96392a2379153" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a89ec98282a3e5e4be172c4dc8d35e227" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga53d2a58b54093ef707d310426f651eb0a5f01f1c2ba1406fb80fdbb6dca83dda2" prot="public">
          <name>NRFX_GPPI_CHANNEL_GROUP5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 5. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Generic PPI channel groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="166" column="1" bodyfile="helpers/nrfx_gppi.h" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" prot="public" static="no" strong="no">
        <type></type>
        <name>nrfx_gppi_task_t</name>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda2c9b411cbf7fa8f9b48afe5bceeddc36" prot="public">
          <name>NRFX_GPPI_TASK_CHG0_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda486ee3e9ffaa6f7bfdcca0913f7060d7" prot="public">
          <name>NRFX_GPPI_TASK_CHG0_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda4d8060242e948e89f71554ca7faa1f32" prot="public">
          <name>NRFX_GPPI_TASK_CHG1_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab2fc0fea0ab4d47acdb252c477790a02" prot="public">
          <name>NRFX_GPPI_TASK_CHG1_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda94b66df07a693037c98fcde8cc74d5c8" prot="public">
          <name>NRFX_GPPI_TASK_CHG2_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda87d6438c6182fc1bf76551892ced41b8" prot="public">
          <name>NRFX_GPPI_TASK_CHG2_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda9037ea75bdbbcb80c1b1252a8247110e" prot="public">
          <name>NRFX_GPPI_TASK_CHG3_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda99ad4390128a5296cb7886a93775e47a" prot="public">
          <name>NRFX_GPPI_TASK_CHG3_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda53a35a6099543cbc1f0d4d2ff19fbfcd" prot="public">
          <name>NRFX_GPPI_TASK_CHG4_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab8ca36722eba05b51f80b85ad9a93770" prot="public">
          <name>NRFX_GPPI_TASK_CHG4_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbdab223c5495a0cad39cb481e0f8cb401f4" prot="public">
          <name>NRFX_GPPI_TASK_CHG5_EN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrfx__gppi_1gga0102b85d71d04429294356ba42769dbda76fe8ce7ccebcf846b8d7adfc5691c49" prot="public">
          <name>NRFX_GPPI_TASK_CHG5_DIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 5 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Generic PPI tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="177" column="1" bodyfile="helpers/nrfx_gppi.h" bodystart="178" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfx__gppi_1gae03a0b72e449e8ec7ef73a0f30e66479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrfx_gppi_channel_check</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfx_gppi_channel_check</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for checking if a given channel is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="202" column="6" declfile="helpers/nrfx_gppi.h" declline="202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gac8c51de88ffdcbe3ba2fbb153864c763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_disable_all</definition>
        <argsstring>(void)</argsstring>
        <name>nrfx_gppi_channels_disable_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for disabling all channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="205" column="6" declfile="helpers/nrfx_gppi.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga9a2dc649beb3d5144d9b641498da0d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_enable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_gppi_channels_enable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling multiple channels. </para>
        </briefdescription>
        <detaileddescription>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. This means that writing 1 to bit 0 enables channel 0, writing 1 to bit 1 enables channel 1, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="215" column="6" declfile="helpers/nrfx_gppi.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga6b96cd981f8d4a606c27e0f9a86b4bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_disable</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>nrfx_gppi_channels_disable</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling multiple channels. </para>
        </briefdescription>
        <detaileddescription>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. This means that writing 1 to bit 0 disables channel 0, writing 1 to bit 1 disables channel 1, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="225" column="6" declfile="helpers/nrfx_gppi.h" declline="225" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga2ede53f653eb2aa889b39168b3070a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_event_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t eep)</argsstring>
        <name>nrfx_gppi_event_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <briefdescription>
<para>Function for associating a given channel with the specified event register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the DPPI publish configuration for a given event or sets the PPI event endpoint register.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which to assign the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="236" column="6" declfile="helpers/nrfx_gppi.h" declline="236" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga4b22684a1309780298cb5814e612d0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t tep)</argsstring>
        <name>nrfx_gppi_task_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for associating a given channel with the specified task register. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the DPPI subscribe configuration for a given task or sets the PPI task endpoint register.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which to assign the task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="247" column="6" declfile="helpers/nrfx_gppi.h" declline="247" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga476ae2c744201a4e69b21a3e1c000e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channel_endpoints_setup</definition>
        <argsstring>(uint8_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrfx_gppi_channel_endpoints_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the event and task endpoints for a given channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="256" column="6" declfile="helpers/nrfx_gppi.h" declline="256" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad93112e7016725905bf3e8976c2071c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channel_endpoints_clear</definition>
        <argsstring>(uint8_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrfx_gppi_channel_endpoints_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the event and task endpoints for a given channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="265" column="6" declfile="helpers/nrfx_gppi.h" declline="265" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga070a6c382efa69eeb16c3cadc40e350a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_event_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t eep)</argsstring>
        <name>nrfx_gppi_event_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI publish configuration for a given event register or for clearing the PPI event endpoint register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel for which to clear the event endpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the event register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="274" column="6" declfile="helpers/nrfx_gppi.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga737fd4ffc64e6fac9bce9047b945f4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t tep)</argsstring>
        <name>nrfx_gppi_task_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI subscribe configuration for a given task register or for clearing the PPI task endpoint register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel from which to disconnect the task enpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="283" column="6" declfile="helpers/nrfx_gppi.h" declline="283" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gaa132eb4028fa7f3fb3d323783766f0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_fork_endpoint_setup</definition>
        <argsstring>(uint8_t channel, uint32_t fork_tep)</argsstring>
        <name>nrfx_gppi_fork_endpoint_setup</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the task endpoint for a given PPI fork or for associating the DPPI channel with an additional task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given fork endpoint is assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="293" column="6" declfile="helpers/nrfx_gppi.h" declline="293" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga252cdc2f3ba2dc425be61411c6e8ac6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_fork_endpoint_clear</definition>
        <argsstring>(uint8_t channel, uint32_t fork_tep)</argsstring>
        <name>nrfx_gppi_fork_endpoint_clear</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for clearing the task endpoint for a given PPI fork or for clearing the DPPI subscribe register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel for which to clear the fork endpoint. Not used in DPPI. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the task register. Not used in PPI. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="302" column="6" declfile="helpers/nrfx_gppi.h" declline="302" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga5d9f62edcb68add2c943d6754885180b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_group_set</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_group_set</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for setting multiple channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be set in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="311" column="6" declfile="helpers/nrfx_gppi.h" declline="311" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga7ba2fef5427c77d5c10bf529855d09dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_include_in_group</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_include_in_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for including multiple channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be included in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="320" column="6" declfile="helpers/nrfx_gppi.h" declline="320" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gab9e5be105978e46fe99812027830e969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_channels_remove_from_group</definition>
        <argsstring>(uint32_t channel_mask, nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_channels_remove_from_group</name>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing multiple channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be removed from the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="329" column="6" declfile="helpers/nrfx_gppi.h" declline="329" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gaa6496e963d55b2e0998c5679f2db5f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_clear</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_clear</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing all channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="337" column="6" declfile="helpers/nrfx_gppi.h" declline="337" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga686c7571eeef92bd6373179f8ffa3fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_enable</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_enable</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for enabling a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="344" column="6" declfile="helpers/nrfx_gppi.h" declline="344" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gacc65427e93f89114215075e1941f058c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_group_disable</definition>
        <argsstring>(nrfx_gppi_channel_group_t channel_group)</argsstring>
        <name>nrfx_gppi_group_disable</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for disabling a group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="351" column="6" declfile="helpers/nrfx_gppi.h" declline="351" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga70c753e3f135f765024aaea8d9b9ab20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrfx_gppi_task_trigger</definition>
        <argsstring>(nrfx_gppi_task_t task)</argsstring>
        <name>nrfx_gppi_task_trigger</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating a task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="358" column="6" declfile="helpers/nrfx_gppi.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gab87c81b39189ea90958bb2f2bcc61374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t nrfx_gppi_task_address_get</definition>
        <argsstring>(nrfx_gppi_task_t task)</argsstring>
        <name>nrfx_gppi_task_address_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a specific task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI or DPPI task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="367" column="10" declfile="helpers/nrfx_gppi.h" declline="367" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad2da3dbd775c5081c5da9fbb2e3bcb1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
        <definition>nrfx_gppi_task_t nrfx_gppi_group_disable_task_get</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_disable_task_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a channel group disable task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Disable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="376" column="18" declfile="helpers/nrfx_gppi.h" declline="376" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga0db935d2d1c9b16d2dc56b575eda9baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__gppi_1ga0102b85d71d04429294356ba42769dbd" kindref="member">nrfx_gppi_task_t</ref></type>
        <definition>nrfx_gppi_task_t nrfx_gppi_group_enable_task_get</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_enable_task_get</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for returning the address of a channel group enable task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Enable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="385" column="18" declfile="helpers/nrfx_gppi.h" declline="385" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga6dd90aed8d0d35b00e3542c45fa986c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_channel_alloc</definition>
        <argsstring>(uint8_t *p_channel)</argsstring>
        <name>nrfx_gppi_channel_alloc</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
<para>Function for allocating a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_channel</parametername>
</parameternamelist>
<parameterdescription>
<para>After successful allocation, index of the allocated channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="396" column="12" declfile="helpers/nrfx_gppi.h" declline="396" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga69d26420e203027aa235ee448b0c99af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_channel_free</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>nrfx_gppi_channel_free</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for freeing a channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>(D)PPI channel to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified channel is not allocated or is not user-configurable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="408" column="12" declfile="helpers/nrfx_gppi.h" declline="408" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1ga004919d885105ccf92e3a0150c1eb293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_group_alloc</definition>
        <argsstring>(nrfx_gppi_channel_group_t *p_group)</argsstring>
        <name>nrfx_gppi_group_alloc</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref> *</type>
          <declname>p_group</declname>
        </param>
        <briefdescription>
<para>Function for allocating a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the (D)PPI channel group that has been allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel group was successfully allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NO_MEM</parametername>
</parameternamelist>
<parameterdescription>
<para>There is no available channel group to be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="419" column="12" declfile="helpers/nrfx_gppi.h" declline="419" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfx__gppi_1gad09cf8bf15c7d0df53c38276ebdf440e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__nrfx__error__codes_1ga2449720f8fa17b22243218068459a24b" kindref="member">nrfx_err_t</ref></type>
        <definition>nrfx_err_t nrfx_gppi_group_free</definition>
        <argsstring>(nrfx_gppi_channel_group_t group)</argsstring>
        <name>nrfx_gppi_group_free</name>
        <param>
          <type><ref refid="group__nrfx__gppi_1ga53d2a58b54093ef707d310426f651eb0" kindref="member">nrfx_gppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for freeing a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>(D)PPI channel group to be freed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRFX_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel was successfully freed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified channel is not allocated or is not user-configurable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRFX_ERROR_NOT_SUPPORTED</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="helpers/nrfx_gppi.h" line="431" column="12" declfile="helpers/nrfx_gppi.h" declline="431" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper layer that provides the common functionality of PPI and DPPI drivers. </para>
    </briefdescription>
    <detaileddescription>
<para>Use PPI and DPPI drivers directly. This layer is provided only to help create generic code that can be built for SoCs equipped with either of these peripherals. When using this layer, take into account that there are significant differences between the PPI and DPPI interfaces that affect the behavior of this layer.</para>
<para>One difference is that PPI allows associating of one task or event with more than one channel, whereas DPPI does not allow this. In DPPI, the second association overwrites the first one. Consequently, this helper layer cannot be used in applications that need to connect a task or event to multiple channels.</para>
<para>Another difference is that in DPPI one channel can be associated with multiple tasks and multiple events, while in PPI this is not possible (with the exception of the association of a second task as a fork). Because of this difference, it is important to clear the previous endpoints of the channel that is to be reused with some different ones. Otherwise, the behavior of this helper layer will be different, depending on the actual interface used: in DPPI the channel configuration will be extended with the new endpoints, and in PPI the new endpoints will replace the previous ones. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
