<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__ppi_8h" kind="file" language="C++">
    <compoundname>nrf_ppi.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfx__ppi_8h" local="no">drivers/include/nrfx_ppi.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_ppi.h</label>
        <link refid="nrf__ppi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ppi_channel_t</name>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a8d4a161da34e10e68e7df0e3dcdd8613" prot="public">
          <name>NRF_PPI_CHANNEL0</name>
          <initializer>= PPI_CHEN_CH0_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a4101b7d977e85dfacff22498f945c356" prot="public">
          <name>NRF_PPI_CHANNEL1</name>
          <initializer>= PPI_CHEN_CH1_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ace9d966d8ba50a42fce8fa5a7bfd107a" prot="public">
          <name>NRF_PPI_CHANNEL2</name>
          <initializer>= PPI_CHEN_CH2_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a56d87bfcb40e6f8311ab71b2b01fb813" prot="public">
          <name>NRF_PPI_CHANNEL3</name>
          <initializer>= PPI_CHEN_CH3_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a282e94538492f8bb465f70bc3389e79e" prot="public">
          <name>NRF_PPI_CHANNEL4</name>
          <initializer>= PPI_CHEN_CH4_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a61dca185012d0555ddd18efe455a76be" prot="public">
          <name>NRF_PPI_CHANNEL5</name>
          <initializer>= PPI_CHEN_CH5_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 5. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af533e95d4d6a4efbcfe9cd2161e828b3" prot="public">
          <name>NRF_PPI_CHANNEL6</name>
          <initializer>= PPI_CHEN_CH6_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 6. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aed5c33cb1a04f76f9916b98d44f9ce11" prot="public">
          <name>NRF_PPI_CHANNEL7</name>
          <initializer>= PPI_CHEN_CH7_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 7. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a21936dd8a575e60baa5c40035ebbaec2" prot="public">
          <name>NRF_PPI_CHANNEL8</name>
          <initializer>= PPI_CHEN_CH8_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 8. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a48c517d5831719ca9ed47781ae38cc8e" prot="public">
          <name>NRF_PPI_CHANNEL9</name>
          <initializer>= PPI_CHEN_CH9_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 9. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a7cb2a5e54337a1f8ef199eff46b90b04" prot="public">
          <name>NRF_PPI_CHANNEL10</name>
          <initializer>= PPI_CHEN_CH10_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 10. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a19e90508486487b23cfe6a1d4c68aaaf" prot="public">
          <name>NRF_PPI_CHANNEL11</name>
          <initializer>= PPI_CHEN_CH11_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 11. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ac08029cd42eeaff7bcf2bd833ce781c4" prot="public">
          <name>NRF_PPI_CHANNEL12</name>
          <initializer>= PPI_CHEN_CH12_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 12. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a50f09533cd070bdbe3acfe017ee9b11f" prot="public">
          <name>NRF_PPI_CHANNEL13</name>
          <initializer>= PPI_CHEN_CH13_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 13. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a67ed35c1b18e02ec53edcc06ce874e7f" prot="public">
          <name>NRF_PPI_CHANNEL14</name>
          <initializer>= PPI_CHEN_CH14_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 14. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76abc011e084606be9044e57569ed9033ab" prot="public">
          <name>NRF_PPI_CHANNEL15</name>
          <initializer>= PPI_CHEN_CH15_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 15. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aab38f06ac0ad3b917b45d285aae7b3a2" prot="public">
          <name>NRF_PPI_CHANNEL16</name>
          <initializer>= PPI_CHEN_CH16_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 16. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aeaf901ae12a814311ab2830b2f235332" prot="public">
          <name>NRF_PPI_CHANNEL17</name>
          <initializer>= PPI_CHEN_CH17_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 17. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ad8bf51c33a9c403e1818f5b45097034a" prot="public">
          <name>NRF_PPI_CHANNEL18</name>
          <initializer>= PPI_CHEN_CH18_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 18. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a20108ab39d61d4dcfc19ddd10309ad93" prot="public">
          <name>NRF_PPI_CHANNEL19</name>
          <initializer>= PPI_CHEN_CH19_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 19. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a7208376c394f9c416fe39b7c8cb0bcc9" prot="public">
          <name>NRF_PPI_CHANNEL20</name>
          <initializer>= PPI_CHEN_CH20_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 20. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a4281a0a0ede596b85082778dd6d1a655" prot="public">
          <name>NRF_PPI_CHANNEL21</name>
          <initializer>= PPI_CHEN_CH21_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 21. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76abe6ed353a2f5848ef241740bf92b6ee4" prot="public">
          <name>NRF_PPI_CHANNEL22</name>
          <initializer>= PPI_CHEN_CH22_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 22. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a713b008aa37b725411506100337823ab" prot="public">
          <name>NRF_PPI_CHANNEL23</name>
          <initializer>= PPI_CHEN_CH23_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 23. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ac281e0418ab3be718bc4d51b14e1e28d" prot="public">
          <name>NRF_PPI_CHANNEL24</name>
          <initializer>= PPI_CHEN_CH24_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 24. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a507a9ca118f021c5e0e0523dfd79dcfa" prot="public">
          <name>NRF_PPI_CHANNEL25</name>
          <initializer>= PPI_CHEN_CH25_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 25. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af0b32d39b387cb10ffea6ff148c7ce10" prot="public">
          <name>NRF_PPI_CHANNEL26</name>
          <initializer>= PPI_CHEN_CH26_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 26. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a859048c95a34a9a185472889004b7b0d" prot="public">
          <name>NRF_PPI_CHANNEL27</name>
          <initializer>= PPI_CHEN_CH27_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 27. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a1e2bbd07ce3358cc735da334ad98cea6" prot="public">
          <name>NRF_PPI_CHANNEL28</name>
          <initializer>= PPI_CHEN_CH28_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 28. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ad866501c1ef60222d15e1bf9dc2fb78e" prot="public">
          <name>NRF_PPI_CHANNEL29</name>
          <initializer>= PPI_CHEN_CH29_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 29. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af0aad5ef0902e45a2c0afff829bdb5dd" prot="public">
          <name>NRF_PPI_CHANNEL30</name>
          <initializer>= PPI_CHEN_CH30_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 30. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a6aa12755b8490f27d531a64362b216ff" prot="public">
          <name>NRF_PPI_CHANNEL31</name>
          <initializer>= PPI_CHEN_CH31_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel 31. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PPI channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="52" column="1" bodyfile="hal/nrf_ppi.h" bodystart="53" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ppi_channel_group_t</name>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2b1ab39b5fd36d4d152891da6f68d5ee" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a85d970faefe62feea7a6fb8c6fcb6c8d" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a05d74a2763578be328ffa6f5a419587c" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a5640aa7d39475e0f57e1d61c0a95e16e" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2581f61ae1ada7918a5b30f6bc7fbdb4" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP4</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a6d649305e996ad3c21c35f20d43ffdb9" prot="public">
          <name>NRF_PPI_CHANNEL_GROUP5</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel group 5. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PPI channel groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="93" column="1" bodyfile="hal/nrf_ppi.h" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ppi__hal_1gad90f23c06a4154cbce9685d0d1b3fa13" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ppi_channel_include_t</name>
        <enumvalue id="group__nrf__ppi__hal_1ggad90f23c06a4154cbce9685d0d1b3fa13a38c9ea229e1f9b54cd9cf3e04817a2ea" prot="public">
          <name>NRF_PPI_CHANNEL_EXCLUDE</name>
          <initializer>= PPI_CHG_CH0_Excluded</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel excluded from a group. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggad90f23c06a4154cbce9685d0d1b3fa13aef8d39e6c737f2e8550461665e192b5a" prot="public">
          <name>NRF_PPI_CHANNEL_INCLUDE</name>
          <initializer>= PPI_CHG_CH0_Included</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel included in a group. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Definition of whether a PPI channel belongs to a group. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="106" column="1" bodyfile="hal/nrf_ppi.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ppi__hal_1gaed93e5d585bc992e385515a9bac1a982" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ppi_channel_enable_t</name>
        <enumvalue id="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a68a4d85ae89f02def486ee9c776f277e" prot="public">
          <name>NRF_PPI_CHANNEL_DISABLED</name>
          <initializer>= PPI_CHEN_CH0_Disabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel disabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a2bb5e355cd8d9d07cbe38e6b3152520d" prot="public">
          <name>NRF_PPI_CHANNEL_ENABLED</name>
          <initializer>= PPI_CHEN_CH0_Enabled</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Channel enabled. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Definition of whether a PPI channel is enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="113" column="1" bodyfile="hal/nrf_ppi.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ppi_task_t</name>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbadfba241e39265b88291653d1a266a8dc" prot="public">
          <name>NRF_PPI_TASK_CHG0_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[0].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba4eff14795cf79cc8bbd68211b2e204fa" prot="public">
          <name>NRF_PPI_TASK_CHG0_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[0].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba37af13fc5dcba24c7b178ef04792bb2e" prot="public">
          <name>NRF_PPI_TASK_CHG1_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[1].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5a0a1b8d19fc6fd8238f2f0461d51b21" prot="public">
          <name>NRF_PPI_TASK_CHG1_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[1].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9cb151e8065f6491036fdce3e1c95708" prot="public">
          <name>NRF_PPI_TASK_CHG2_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[2].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5c948fbc7e0a3a489b7f13b7c73940c1" prot="public">
          <name>NRF_PPI_TASK_CHG2_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[2].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 2. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba26235ce0764de3a09d1317bb33340b83" prot="public">
          <name>NRF_PPI_TASK_CHG3_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[3].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba21bf55476926564e8ac3e46e5f490ff6" prot="public">
          <name>NRF_PPI_TASK_CHG3_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[3].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 3. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaddbf6a0ff281ca2a6e2a049543c15e93" prot="public">
          <name>NRF_PPI_TASK_CHG4_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[4].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaf9d48f5c21c6229f6589aaffe91ce083" prot="public">
          <name>NRF_PPI_TASK_CHG4_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[4].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 4. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9e6954c2881ad0a4b7b00c7068fbfa6f" prot="public">
          <name>NRF_PPI_TASK_CHG5_EN</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[5].EN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for enabling channel group 5. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba98f562494c0941a4a5c45b9692d6c67b" prot="public">
          <name>NRF_PPI_TASK_CHG5_DIS</name>
          <initializer>= offsetof(NRF_PPI_Type, TASKS_CHG[5].DIS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Task for disabling channel group 5. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PPI tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="120" column="1" bodyfile="hal/nrf_ppi.h" bodystart="121" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga5d79b07c5138751dec723f1858e776e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_enable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel)</argsstring>
        <name>nrf_ppi_channel_enable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for enabling a given PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function enables only one channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="418" column="24" bodyfile="hal/nrf_ppi.h" bodystart="418" bodyend="421" declfile="hal/nrf_ppi.h" declline="147" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga439e4a98609fb34c4fcfd8a47655a6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_disable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel)</argsstring>
        <name>nrf_ppi_channel_disable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for disabling a given PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para>This function disables only one channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="423" column="24" bodyfile="hal/nrf_ppi.h" bodystart="423" bodyend="426" declfile="hal/nrf_ppi.h" declline="157" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gae997ee2ceed1bcf84293ce61f57c09c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ppi__hal_1gaed93e5d585bc992e385515a9bac1a982" kindref="member">nrf_ppi_channel_enable_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ppi_channel_enable_t nrf_ppi_channel_enable_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, nrf_ppi_channel_t channel)</argsstring>
        <name>nrf_ppi_channel_enable_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for checking if a given PPI channel is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks only one channel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>NRF_PPI_CHANNEL_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NRF_PPI_CHANNEL_DISABLED</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="428" column="44" bodyfile="hal/nrf_ppi.h" bodystart="428" bodyend="439" declfile="hal/nrf_ppi.h" declline="171" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gac0331bd35cd0ba765aa36e536440af58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_disable_all</definition>
        <argsstring>(NRF_PPI_Type *p_reg)</argsstring>
        <name>nrf_ppi_channels_disable_all</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling all PPI channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="441" column="24" bodyfile="hal/nrf_ppi.h" bodystart="441" bodyend="444" declfile="hal/nrf_ppi.h" declline="179" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga555d9ad74d84df3e191103fdc74e56d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_enable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_ppi_channels_enable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling multiple PPI channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="446" column="24" bodyfile="hal/nrf_ppi.h" bodystart="446" bodyend="449" declfile="hal/nrf_ppi.h" declline="187" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gafd9d6821b8384a3ac5bd75438ac01ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_disable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_ppi_channels_disable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling multiple PPI channels. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="451" column="24" bodyfile="hal/nrf_ppi.h" bodystart="451" bodyend="454" declfile="hal/nrf_ppi.h" declline="195" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gadb8cc9e4cda287d9fa9aad24eb7e98e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_endpoint_setup</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, uint32_t eep, uint32_t tep)</argsstring>
        <name>nrf_ppi_channel_endpoint_setup</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up event and task endpoints for a given PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Event register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Task register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="456" column="24" bodyfile="hal/nrf_ppi.h" bodystart="456" bodyend="463" declfile="hal/nrf_ppi.h" declline="205" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga12ed4fc901eafa1fa925c7984f79a7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_event_endpoint_setup</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, uint32_t eep)</argsstring>
        <name>nrf_ppi_event_endpoint_setup</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the event endpoint for a given PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Event register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoint is assigned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="465" column="24" bodyfile="hal/nrf_ppi.h" bodystart="465" bodyend="470" declfile="hal/nrf_ppi.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gab1ba66486b3efdd9569541bbe12a8b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_task_endpoint_setup</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, uint32_t tep)</argsstring>
        <name>nrf_ppi_task_endpoint_setup</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up the task endpoint for a given PPI channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Task register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoint is assigned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="472" column="24" bodyfile="hal/nrf_ppi.h" bodystart="472" bodyend="477" declfile="hal/nrf_ppi.h" declline="228" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga17b4d06f9ef66067576e44ec904cf6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_fork_endpoint_setup</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, uint32_t fork_tep)</argsstring>
        <name>nrf_ppi_fork_endpoint_setup</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up task endpoint for a given PPI fork. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Task register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given fork endpoint is assigned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="241" column="24" declfile="hal/nrf_ppi.h" declline="241" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga7cbbef9235e2c80e489fe9a5b95366f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_and_fork_endpoint_setup</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, uint32_t eep, uint32_t tep, uint32_t fork_tep)</argsstring>
        <name>nrf_ppi_channel_and_fork_endpoint_setup</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>eep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fork_tep</declname>
        </param>
        <briefdescription>
<para>Function for setting up event and task endpoints for a given PPI channel and fork. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eep</parametername>
</parameternamelist>
<parameterdescription>
<para>Event register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Task register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fork_tep</parametername>
</parameternamelist>
<parameterdescription>
<para>Fork task register address (register value). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to which the given endpoints are assigned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="254" column="24" declfile="hal/nrf_ppi.h" declline="254" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga5f3cf0b91545d3d593e35f1b169a46ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_include_in_group</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, nrf_ppi_channel_group_t channel_group)</argsstring>
        <name>nrf_ppi_channel_include_in_group</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for including a PPI channel in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds only one channel to the group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be included in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="499" column="24" bodyfile="hal/nrf_ppi.h" bodystart="499" bodyend="504" declfile="hal/nrf_ppi.h" declline="270" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gaaa96054052cf8d5cd7d8834a97135783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_group_set</definition>
        <argsstring>(NRF_PPI_Type *p_reg, uint32_t channel_mask, nrf_ppi_channel_group_t channel_group)</argsstring>
        <name>nrf_ppi_channels_group_set</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for setting multiple PPI channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds all specified channels to the group.</para>
<para><simplesect kind="warning"><para>All channels included previously will be overwritten.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be assgined in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="506" column="24" bodyfile="hal/nrf_ppi.h" bodystart="506" bodyend="511" declfile="hal/nrf_ppi.h" declline="285" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga837c212323ae059eb28f4f1cc72ad1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_include_in_group</definition>
        <argsstring>(NRF_PPI_Type *p_reg, uint32_t channel_mask, nrf_ppi_channel_group_t channel_group)</argsstring>
        <name>nrf_ppi_channels_include_in_group</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for including multiple PPI channels in a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds all specified channels to the group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be included in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="513" column="24" bodyfile="hal/nrf_ppi.h" bodystart="513" bodyend="518" declfile="hal/nrf_ppi.h" declline="298" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gad5fa9ba61b878e00190e0338dab72c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channel_remove_from_group</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_t channel, nrf_ppi_channel_group_t channel_group)</argsstring>
        <name>nrf_ppi_channel_remove_from_group</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing a PPI channel from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes only one channel from the group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be removed from the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="520" column="24" bodyfile="hal/nrf_ppi.h" bodystart="520" bodyend="525" declfile="hal/nrf_ppi.h" declline="311" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gaa74be7302aa7691a239ae5131fece229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_channels_remove_from_group</definition>
        <argsstring>(NRF_PPI_Type *p_reg, uint32_t channel_mask, nrf_ppi_channel_group_t channel_group)</argsstring>
        <name>nrf_ppi_channels_remove_from_group</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
<para>Function for removing multiple PPI channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes all specified channels from the group.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be removed from the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="527" column="24" bodyfile="hal/nrf_ppi.h" bodystart="527" bodyend="532" declfile="hal/nrf_ppi.h" declline="324" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gad0b2de9ea89a72f6ea0bc64cfdc05f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_group_clear</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrf_ppi_group_clear</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for removing all PPI channels from a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="534" column="24" bodyfile="hal/nrf_ppi.h" bodystart="534" bodyend="537" declfile="hal/nrf_ppi.h" declline="334" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gacb4d74010d019e9a9cdfb5860f3b7019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_group_enable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrf_ppi_group_enable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for enabling a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="539" column="24" bodyfile="hal/nrf_ppi.h" bodystart="539" bodyend="542" declfile="hal/nrf_ppi.h" declline="342" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga10d9859191c78e12c060ce793e3f84c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_group_disable</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrf_ppi_group_disable</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for disabling a channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="544" column="24" bodyfile="hal/nrf_ppi.h" bodystart="544" bodyend="547" declfile="hal/nrf_ppi.h" declline="350" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gad7860f26b94e4c3848de790cc0ae5434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ppi_task_trigger</definition>
        <argsstring>(NRF_PPI_Type *p_reg, nrf_ppi_task_t ppi_task)</argsstring>
        <name>nrf_ppi_task_trigger</name>
        <param>
          <type>NRF_PPI_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref></type>
          <declname>ppi_task</declname>
        </param>
        <briefdescription>
<para>Function for setting a PPI task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ppi_task</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI task to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="549" column="24" bodyfile="hal/nrf_ppi.h" bodystart="549" bodyend="552" declfile="hal/nrf_ppi.h" declline="358" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga1927eb3ac3a032b7b9e06cd8626cfc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ppi_task_address_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, nrf_ppi_task_t ppi_task)</argsstring>
        <name>nrf_ppi_task_address_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref></type>
          <declname>ppi_task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified PPI task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ppi_task</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested PPI task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="554" column="28" bodyfile="hal/nrf_ppi.h" bodystart="554" bodyend="558" declfile="hal/nrf_ppi.h" declline="368" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gac551a0000765c5ce386f53c07ceb5d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ppi_task_group_enable_address_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrf_ppi_task_group_enable_address_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for getting the PPI enable task address of the specified group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PPI enable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="560" column="28" bodyfile="hal/nrf_ppi.h" bodystart="560" bodyend="564" declfile="hal/nrf_ppi.h" declline="379" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga9c5b38010497468634d2dda0789542e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ppi_task_group_disable_address_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, nrf_ppi_channel_group_t group)</argsstring>
        <name>nrf_ppi_task_group_disable_address_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
<para>Function for getting the PPI disable task address of the specified group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI group.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PPI disable task address of the specified group. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="566" column="28" bodyfile="hal/nrf_ppi.h" bodystart="566" bodyend="570" declfile="hal/nrf_ppi.h" declline="390" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1gabde5903586050300acac6bfc0a737ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ppi_task_t nrf_ppi_group_enable_task_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_ppi_group_enable_task_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the ENABLE task associated with the specified channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested ENABLE task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="572" column="34" bodyfile="hal/nrf_ppi.h" bodystart="572" bodyend="578" declfile="hal/nrf_ppi.h" declline="401" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ppi__hal_1ga9f4d64c5514288b71787465560c71068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ppi_task_t nrf_ppi_group_disable_task_get</definition>
        <argsstring>(NRF_PPI_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_ppi_group_disable_task_get</name>
        <param>
          <type>NRF_PPI_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the DISABLE task associated with the specified channel group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested DISABLE task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ppi.h" line="580" column="34" bodyfile="hal/nrf_ppi.h" bodystart="580" bodyend="586" declfile="hal/nrf_ppi.h" declline="412" declcolumn="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_ppi_hal<sp/>PPI<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_ppi</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>(HAL)<sp/>for<sp/>managing<sp/>the<sp/>Programmable<sp/>Peripheral<sp/>Interconnect<sp/>(PPI)</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>PPI<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a8d4a161da34e10e68e7df0e3dcdd8613" kindref="member">NRF_PPI_CHANNEL0</ref><sp/><sp/>=<sp/>PPI_CHEN_CH0_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a4101b7d977e85dfacff22498f945c356" kindref="member">NRF_PPI_CHANNEL1</ref><sp/><sp/>=<sp/>PPI_CHEN_CH1_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ace9d966d8ba50a42fce8fa5a7bfd107a" kindref="member">NRF_PPI_CHANNEL2</ref><sp/><sp/>=<sp/>PPI_CHEN_CH2_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a56d87bfcb40e6f8311ab71b2b01fb813" kindref="member">NRF_PPI_CHANNEL3</ref><sp/><sp/>=<sp/>PPI_CHEN_CH3_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a282e94538492f8bb465f70bc3389e79e" kindref="member">NRF_PPI_CHANNEL4</ref><sp/><sp/>=<sp/>PPI_CHEN_CH4_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a61dca185012d0555ddd18efe455a76be" kindref="member">NRF_PPI_CHANNEL5</ref><sp/><sp/>=<sp/>PPI_CHEN_CH5_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>5.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af533e95d4d6a4efbcfe9cd2161e828b3" kindref="member">NRF_PPI_CHANNEL6</ref><sp/><sp/>=<sp/>PPI_CHEN_CH6_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>6.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aed5c33cb1a04f76f9916b98d44f9ce11" kindref="member">NRF_PPI_CHANNEL7</ref><sp/><sp/>=<sp/>PPI_CHEN_CH7_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>7.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a21936dd8a575e60baa5c40035ebbaec2" kindref="member">NRF_PPI_CHANNEL8</ref><sp/><sp/>=<sp/>PPI_CHEN_CH8_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>8.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a48c517d5831719ca9ed47781ae38cc8e" kindref="member">NRF_PPI_CHANNEL9</ref><sp/><sp/>=<sp/>PPI_CHEN_CH9_Pos,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>9.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_CH_NUM<sp/>&gt;<sp/>10)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a7cb2a5e54337a1f8ef199eff46b90b04" kindref="member">NRF_PPI_CHANNEL10</ref><sp/>=<sp/>PPI_CHEN_CH10_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>10.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a19e90508486487b23cfe6a1d4c68aaaf" kindref="member">NRF_PPI_CHANNEL11</ref><sp/>=<sp/>PPI_CHEN_CH11_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>11.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ac08029cd42eeaff7bcf2bd833ce781c4" kindref="member">NRF_PPI_CHANNEL12</ref><sp/>=<sp/>PPI_CHEN_CH12_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>12.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a50f09533cd070bdbe3acfe017ee9b11f" kindref="member">NRF_PPI_CHANNEL13</ref><sp/>=<sp/>PPI_CHEN_CH13_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>13.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a67ed35c1b18e02ec53edcc06ce874e7f" kindref="member">NRF_PPI_CHANNEL14</ref><sp/>=<sp/>PPI_CHEN_CH14_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>14.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76abc011e084606be9044e57569ed9033ab" kindref="member">NRF_PPI_CHANNEL15</ref><sp/>=<sp/>PPI_CHEN_CH15_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>15.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_CH_NUM<sp/>&gt;<sp/>16)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aab38f06ac0ad3b917b45d285aae7b3a2" kindref="member">NRF_PPI_CHANNEL16</ref><sp/>=<sp/>PPI_CHEN_CH16_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>16.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76aeaf901ae12a814311ab2830b2f235332" kindref="member">NRF_PPI_CHANNEL17</ref><sp/>=<sp/>PPI_CHEN_CH17_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>17.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ad8bf51c33a9c403e1818f5b45097034a" kindref="member">NRF_PPI_CHANNEL18</ref><sp/>=<sp/>PPI_CHEN_CH18_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>18.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a20108ab39d61d4dcfc19ddd10309ad93" kindref="member">NRF_PPI_CHANNEL19</ref><sp/>=<sp/>PPI_CHEN_CH19_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>19.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a7208376c394f9c416fe39b7c8cb0bcc9" kindref="member">NRF_PPI_CHANNEL20</ref><sp/>=<sp/>PPI_CHEN_CH20_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>20.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a4281a0a0ede596b85082778dd6d1a655" kindref="member">NRF_PPI_CHANNEL21</ref><sp/>=<sp/>PPI_CHEN_CH21_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>21.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76abe6ed353a2f5848ef241740bf92b6ee4" kindref="member">NRF_PPI_CHANNEL22</ref><sp/>=<sp/>PPI_CHEN_CH22_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>22.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a713b008aa37b725411506100337823ab" kindref="member">NRF_PPI_CHANNEL23</ref><sp/>=<sp/>PPI_CHEN_CH23_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>23.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ac281e0418ab3be718bc4d51b14e1e28d" kindref="member">NRF_PPI_CHANNEL24</ref><sp/>=<sp/>PPI_CHEN_CH24_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>24.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a507a9ca118f021c5e0e0523dfd79dcfa" kindref="member">NRF_PPI_CHANNEL25</ref><sp/>=<sp/>PPI_CHEN_CH25_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>25.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af0b32d39b387cb10ffea6ff148c7ce10" kindref="member">NRF_PPI_CHANNEL26</ref><sp/>=<sp/>PPI_CHEN_CH26_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>26.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a859048c95a34a9a185472889004b7b0d" kindref="member">NRF_PPI_CHANNEL27</ref><sp/>=<sp/>PPI_CHEN_CH27_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>27.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a1e2bbd07ce3358cc735da334ad98cea6" kindref="member">NRF_PPI_CHANNEL28</ref><sp/>=<sp/>PPI_CHEN_CH28_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>28.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76ad866501c1ef60222d15e1bf9dc2fb78e" kindref="member">NRF_PPI_CHANNEL29</ref><sp/>=<sp/>PPI_CHEN_CH29_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>29.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76af0aad5ef0902e45a2c0afff829bdb5dd" kindref="member">NRF_PPI_CHANNEL30</ref><sp/>=<sp/>PPI_CHEN_CH30_Pos,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>30.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggabb15d5be643cacaa7fa78d89ba1b9e76a6aa12755b8490f27d531a64362b216ff" kindref="member">NRF_PPI_CHANNEL31</ref><sp/>=<sp/>PPI_CHEN_CH31_Pos<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>31.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">/**<sp/>@brief<sp/>PPI<sp/>channel<sp/>groups.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2b1ab39b5fd36d4d152891da6f68d5ee" kindref="member">NRF_PPI_CHANNEL_GROUP0</ref><sp/>=<sp/>0,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a85d970faefe62feea7a6fb8c6fcb6c8d" kindref="member">NRF_PPI_CHANNEL_GROUP1</ref><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a05d74a2763578be328ffa6f5a419587c" kindref="member">NRF_PPI_CHANNEL_GROUP2</ref><sp/>=<sp/>2,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a5640aa7d39475e0f57e1d61c0a95e16e" kindref="member">NRF_PPI_CHANNEL_GROUP3</ref><sp/>=<sp/>3,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_GROUP_NUM<sp/>&gt;<sp/>4)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a2581f61ae1ada7918a5b30f6bc7fbdb4" kindref="member">NRF_PPI_CHANNEL_GROUP4</ref><sp/>=<sp/>4,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga5d139812e3ea8178cc6dc66ab724ee13a6d649305e996ad3c21c35f20d43ffdb9" kindref="member">NRF_PPI_CHANNEL_GROUP5</ref><sp/>=<sp/>5<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>group<sp/>5.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">/**<sp/>@brief<sp/>Definition<sp/>of<sp/>whether<sp/>a<sp/>PPI<sp/>channel<sp/>belongs<sp/>to<sp/>a<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggad90f23c06a4154cbce9685d0d1b3fa13a38c9ea229e1f9b54cd9cf3e04817a2ea" kindref="member">NRF_PPI_CHANNEL_EXCLUDE</ref><sp/>=<sp/>PPI_CHG_CH0_Excluded,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>excluded<sp/>from<sp/>a<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggad90f23c06a4154cbce9685d0d1b3fa13aef8d39e6c737f2e8550461665e192b5a" kindref="member">NRF_PPI_CHANNEL_INCLUDE</ref><sp/>=<sp/>PPI_CHG_CH0_Included<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>included<sp/>in<sp/>a<sp/>group.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><ref refid="group__nrf__ppi__hal_1gad90f23c06a4154cbce9685d0d1b3fa13" kindref="member">nrf_ppi_channel_include_t</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">/**<sp/>@brief<sp/>Definition<sp/>of<sp/>whether<sp/>a<sp/>PPI<sp/>channel<sp/>is<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a68a4d85ae89f02def486ee9c776f277e" kindref="member">NRF_PPI_CHANNEL_DISABLED</ref><sp/>=<sp/>PPI_CHEN_CH0_Disabled,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>disabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a2bb5e355cd8d9d07cbe38e6b3152520d" kindref="member">NRF_PPI_CHANNEL_ENABLED</ref><sp/><sp/>=<sp/>PPI_CHEN_CH0_Enabled<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Channel<sp/>enabled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><ref refid="group__nrf__ppi__hal_1gaed93e5d585bc992e385515a9bac1a982" kindref="member">nrf_ppi_channel_enable_t</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/**<sp/>@brief<sp/>PPI<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbadfba241e39265b88291653d1a266a8dc" kindref="member">NRF_PPI_TASK_CHG0_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[0].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba4eff14795cf79cc8bbd68211b2e204fa" kindref="member">NRF_PPI_TASK_CHG0_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[0].DIS),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba37af13fc5dcba24c7b178ef04792bb2e" kindref="member">NRF_PPI_TASK_CHG1_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[1].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5a0a1b8d19fc6fd8238f2f0461d51b21" kindref="member">NRF_PPI_TASK_CHG1_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[1].DIS),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9cb151e8065f6491036fdce3e1c95708" kindref="member">NRF_PPI_TASK_CHG2_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[2].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba5c948fbc7e0a3a489b7f13b7c73940c1" kindref="member">NRF_PPI_TASK_CHG2_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[2].DIS),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba26235ce0764de3a09d1317bb33340b83" kindref="member">NRF_PPI_TASK_CHG3_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[3].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba21bf55476926564e8ac3e46e5f490ff6" kindref="member">NRF_PPI_TASK_CHG3_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[3].DIS),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(PPI_GROUP_NUM<sp/>&gt;<sp/>4)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaddbf6a0ff281ca2a6e2a049543c15e93" kindref="member">NRF_PPI_TASK_CHG4_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[4].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cbaf9d48f5c21c6229f6589aaffe91ce083" kindref="member">NRF_PPI_TASK_CHG4_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[4].DIS),<sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba9e6954c2881ad0a4b7b00c7068fbfa6f" kindref="member">NRF_PPI_TASK_CHG5_EN</ref><sp/><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[5].EN),<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>enabling<sp/>channel<sp/>group<sp/>5.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gga95b58499eef7b652941cec5df888f1cba98f562494c0941a4a5c45b9692d6c67b" kindref="member">NRF_PPI_TASK_CHG5_DIS</ref><sp/>=<sp/>offsetof(NRF_PPI_Type,<sp/>TASKS_CHG[5].DIS)<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Task<sp/>for<sp/>disabling<sp/>channel<sp/>group<sp/>5.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>given<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>enables<sp/>only<sp/>one<sp/>channel.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga5d79b07c5138751dec723f1858e776e8" kindref="member">nrf_ppi_channel_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>given<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>disables<sp/>only<sp/>one<sp/>channel.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga439e4a98609fb34c4fcfd8a47655a6c2" kindref="member">nrf_ppi_channel_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>a<sp/>given<sp/>PPI<sp/>channel<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>checks<sp/>only<sp/>one<sp/>channel.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRF_PPI_CHANNEL_ENABLED<sp/><sp/>The<sp/>channel<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>@retval<sp/>NRF_PPI_CHANNEL_DISABLED<sp/>The<sp/>channel<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1gaed93e5d585bc992e385515a9bac1a982" kindref="member">nrf_ppi_channel_enable_t</ref><sp/><ref refid="group__nrf__ppi__hal_1gae997ee2ceed1bcf84293ce61f57c09c3" kindref="member">nrf_ppi_channel_enable_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>all<sp/>PPI<sp/>channels.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gac0331bd35cd0ba765aa36e536440af58" kindref="member">nrf_ppi_channels_disable_all</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>multiple<sp/>PPI<sp/>channels.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga555d9ad74d84df3e191103fdc74e56d8" kindref="member">nrf_ppi_channels_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>multiple<sp/>PPI<sp/>channels.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gafd9d6821b8384a3ac5bd75438ac01ae4" kindref="member">nrf_ppi_channels_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>event<sp/>and<sp/>task<sp/>endpoints<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Event<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Task<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoints<sp/>are<sp/>assigned.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gadb8cc9e4cda287d9fa9aad24eb7e98e1" kindref="member">nrf_ppi_channel_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>event<sp/>endpoint<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/>Event<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoint<sp/>is<sp/>assigned.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga12ed4fc901eafa1fa925c7984f79a7de" kindref="member">nrf_ppi_event_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>task<sp/>endpoint<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>channel.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/>Task<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoint<sp/>is<sp/>assigned.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gab1ba66486b3efdd9569541bbe12a8b00" kindref="member">nrf_ppi_task_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PPI_FEATURE_FORKS_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>task<sp/>endpoint<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>fork.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>fork_tep<sp/>Task<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>fork<sp/>endpoint<sp/>is<sp/>assigned.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga17b4d06f9ef66067576e44ec904cf6e2" kindref="member">nrf_ppi_fork_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fork_tep);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>event<sp/>and<sp/>task<sp/>endpoints<sp/>for<sp/>a<sp/>given<sp/>PPI<sp/>channel<sp/>and<sp/>fork.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>eep<sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tep<sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>register<sp/>address.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>fork_tep<sp/>Fork<sp/>task<sp/>register<sp/>address<sp/>(register<sp/>value).</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>Channel<sp/>to<sp/>which<sp/>the<sp/>given<sp/>endpoints<sp/>are<sp/>assigned.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga7cbbef9235e2c80e489fe9a5b95366f6" kindref="member">nrf_ppi_channel_and_fork_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fork_tep);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>including<sp/>a<sp/>PPI<sp/>channel<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>adds<sp/>only<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga5f3cf0b91545d3d593e35f1b169a46ab" kindref="member">nrf_ppi_channel_include_in_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>multiple<sp/>PPI<sp/>channels<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>adds<sp/>all<sp/>specified<sp/>channels<sp/>to<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>@warning<sp/>All<sp/>channels<sp/>included<sp/>previously<sp/>will<sp/>be<sp/>overwritten.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>assgined<sp/>in<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gaaa96054052cf8d5cd7d8834a97135783" kindref="member">nrf_ppi_channels_group_set</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>including<sp/>multiple<sp/>PPI<sp/>channels<sp/>in<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>adds<sp/>all<sp/>specified<sp/>channels<sp/>to<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga837c212323ae059eb28f4f1cc72ad1cb" kindref="member">nrf_ppi_channels_include_in_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>a<sp/>PPI<sp/>channel<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>removes<sp/>only<sp/>one<sp/>channel<sp/>from<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Channel<sp/>to<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad5fa9ba61b878e00190e0338dab72c94" kindref="member">nrf_ppi_channel_remove_from_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>multiple<sp/>PPI<sp/>channels<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@details<sp/>This<sp/>function<sp/>removes<sp/>all<sp/>specified<sp/>channels<sp/>from<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_mask<sp/><sp/>Channels<sp/>to<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>group.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel_group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gaa74be7302aa7691a239ae5131fece229" kindref="member">nrf_ppi_channels_remove_from_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>removing<sp/>all<sp/>PPI<sp/>channels<sp/>from<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad0b2de9ea89a72f6ea0bc64cfdc05f1d" kindref="member">nrf_ppi_group_clear</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gacb4d74010d019e9a9cdfb5860f3b7019" kindref="member">nrf_ppi_group_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>a<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>Channel<sp/>group.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga10d9859191c78e12c060ce793e3f84c6" kindref="member">nrf_ppi_group_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>a<sp/>PPI<sp/>task.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ppi_task<sp/>PPI<sp/>task<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad7860f26b94e4c3848de790cc0ae5434" kindref="member">nrf_ppi_task_trigger</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/>ppi_task);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>PPI<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ppi_task<sp/>PPI<sp/>task.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>requested<sp/>PPI<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1ga1927eb3ac3a032b7b9e06cd8626cfc66" kindref="member">nrf_ppi_task_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppi_task);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>PPI<sp/>enable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>PPI<sp/>group.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@return<sp/>PPI<sp/>enable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1gac551a0000765c5ce386f53c07ceb5d3d" kindref="member">nrf_ppi_task_group_enable_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>PPI<sp/>disable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>group<sp/>PPI<sp/>group.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@return<sp/>PPI<sp/>disable<sp/>task<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>group.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1ga9c5b38010497468634d2dda0789542e4" kindref="member">nrf_ppi_task_group_disable_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>ENABLE<sp/>task<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Channel<sp/>group<sp/>index.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>@return<sp/>Requested<sp/>ENABLE<sp/>task.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><ref refid="group__nrf__ppi__hal_1gabde5903586050300acac6bfc0a737ca5" kindref="member">nrf_ppi_group_enable_task_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>DISABLE<sp/>task<sp/>associated<sp/>with<sp/>the<sp/>specified<sp/>channel<sp/>group.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>index<sp/>Channel<sp/>group<sp/>index.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@return<sp/>Requested<sp/>DISABLE<sp/>task.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><ref refid="group__nrf__ppi__hal_1ga9f4d64c5514288b71787465560c71068" kindref="member">nrf_ppi_group_disable_task_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga5d79b07c5138751dec723f1858e776e8" kindref="member">nrf_ppi_channel_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHENSET<sp/>=<sp/>PPI_CHENSET_CH0_Set<sp/>&lt;&lt;<sp/>((uint32_t)<sp/>channel);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga439e4a98609fb34c4fcfd8a47655a6c2" kindref="member">nrf_ppi_channel_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHENCLR<sp/>=<sp/>PPI_CHENCLR_CH0_Clear<sp/>&lt;&lt;<sp/>((uint32_t)<sp/>channel);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1gaed93e5d585bc992e385515a9bac1a982" kindref="member">nrf_ppi_channel_enable_t</ref><sp/><ref refid="group__nrf__ppi__hal_1gae997ee2ceed1bcf84293ce61f57c09c3" kindref="member">nrf_ppi_channel_enable_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_reg-&gt;CHEN<sp/>&amp;<sp/>(PPI_CHEN_CH0_Msk<sp/>&lt;&lt;<sp/>((uint32_t)<sp/>channel)))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a2bb5e355cd8d9d07cbe38e6b3152520d" kindref="member">NRF_PPI_CHANNEL_ENABLED</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ggaed93e5d585bc992e385515a9bac1a982a68a4d85ae89f02def486ee9c776f277e" kindref="member">NRF_PPI_CHANNEL_DISABLED</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gac0331bd35cd0ba765aa36e536440af58" kindref="member">nrf_ppi_channels_disable_all</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHENCLR<sp/>=<sp/>((uint32_t)0xFFFFFFFFuL);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga555d9ad74d84df3e191103fdc74e56d8" kindref="member">nrf_ppi_channels_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gafd9d6821b8384a3ac5bd75438ac01ae4" kindref="member">nrf_ppi_channels_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gadb8cc9e4cda287d9fa9aad24eb7e98e1" kindref="member">nrf_ppi_channel_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CH[(uint32_t)<sp/>channel].EEP<sp/>=<sp/>eep;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CH[(uint32_t)<sp/>channel].TEP<sp/>=<sp/>tep;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga12ed4fc901eafa1fa925c7984f79a7de" kindref="member">nrf_ppi_event_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CH[(uint32_t)<sp/>channel].EEP<sp/>=<sp/>eep;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gab1ba66486b3efdd9569541bbe12a8b00" kindref="member">nrf_ppi_task_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CH[(uint32_t)<sp/>channel].TEP<sp/>=<sp/>tep;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PPI_FEATURE_FORKS_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga17b4d06f9ef66067576e44ec904cf6e2" kindref="member">nrf_ppi_fork_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fork_tep)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;FORK[(uint32_t)<sp/>channel].TEP<sp/>=<sp/>fork_tep;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga7cbbef9235e2c80e489fe9a5b95366f6" kindref="member">nrf_ppi_channel_and_fork_endpoint_setup</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eep,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tep,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fork_tep)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gadb8cc9e4cda287d9fa9aad24eb7e98e1" kindref="member">nrf_ppi_channel_endpoint_setup</ref>(p_reg,<sp/>channel,<sp/>eep,<sp/>tep);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga17b4d06f9ef66067576e44ec904cf6e2" kindref="member">nrf_ppi_fork_endpoint_setup</ref>(p_reg,<sp/>channel,<sp/>fork_tep);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga5f3cf0b91545d3d593e35f1b169a46ab" kindref="member">nrf_ppi_channel_include_in_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>channel_group]<sp/>|=<sp/>(PPI_CHG_CH0_Included<sp/>&lt;&lt;<sp/>((uint32_t)<sp/>channel));</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gaaa96054052cf8d5cd7d8834a97135783" kindref="member">nrf_ppi_channels_group_set</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>channel_group]<sp/>=<sp/>channel_mask;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga837c212323ae059eb28f4f1cc72ad1cb" kindref="member">nrf_ppi_channels_include_in_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>channel_group]<sp/>|=<sp/>channel_mask;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad5fa9ba61b878e00190e0338dab72c94" kindref="member">nrf_ppi_channel_remove_from_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1gabb15d5be643cacaa7fa78d89ba1b9e76" kindref="member">nrf_ppi_channel_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>channel_group]<sp/>&amp;=<sp/>~(PPI_CHG_CH0_Included<sp/>&lt;&lt;<sp/>((uint32_t)<sp/>channel));</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gaa74be7302aa7691a239ae5131fece229" kindref="member">nrf_ppi_channels_remove_from_group</ref>(NRF_PPI_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>channel_group]<sp/>&amp;=<sp/>~(channel_mask);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad0b2de9ea89a72f6ea0bc64cfdc05f1d" kindref="member">nrf_ppi_group_clear</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CHG[(uint32_t)<sp/>group]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gacb4d74010d019e9a9cdfb5860f3b7019" kindref="member">nrf_ppi_group_enable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TASKS_CHG[(uint32_t)<sp/>group].EN<sp/>=<sp/>1UL;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1ga10d9859191c78e12c060ce793e3f84c6" kindref="member">nrf_ppi_group_disable</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TASKS_CHG[(uint32_t)<sp/>group].DIS<sp/>=<sp/>1UL;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__ppi__hal_1gad7860f26b94e4c3848de790cc0ae5434" kindref="member">nrf_ppi_task_trigger</ref>(NRF_PPI_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/>ppi_task)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>ppi_task))<sp/>=<sp/>1UL;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1ga1927eb3ac3a032b7b9e06cd8626cfc66" kindref="member">nrf_ppi_task_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppi_task)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>ppi_task);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1gac551a0000765c5ce386f53c07ceb5d3d" kindref="member">nrf_ppi_task_group_enable_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)<sp/>&amp;p_reg-&gt;TASKS_CHG[(uint32_t)<sp/>group].EN;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__ppi__hal_1ga9c5b38010497468634d2dda0789542e4" kindref="member">nrf_ppi_task_group_disable_address_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__ppi__hal_1ga5d139812e3ea8178cc6dc66ab724ee13" kindref="member">nrf_ppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)<sp/>&amp;p_reg-&gt;TASKS_CHG[(uint32_t)<sp/>group].DIS;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><ref refid="group__nrf__ppi__hal_1gabde5903586050300acac6bfc0a737ca5" kindref="member">nrf_ppi_group_enable_task_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)p_reg;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>PPI_GROUP_NUM);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref>)<ref refid="group__nrfx__common_1gaf356c97c2527d9ac57b04dd9f12fc9d3" kindref="member">NRFX_OFFSETOF</ref>(NRF_PPI_Type,<sp/>TASKS_CHG[index].EN);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref><sp/><ref refid="group__nrf__ppi__hal_1ga9f4d64c5514288b71787465560c71068" kindref="member">nrf_ppi_group_disable_task_get</ref>(NRF_PPI_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)p_reg;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(index<sp/>&lt;<sp/>PPI_GROUP_NUM);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__ppi__hal_1ga95b58499eef7b652941cec5df888f1cb" kindref="member">nrf_ppi_task_t</ref>)<ref refid="group__nrfx__common_1gaf356c97c2527d9ac57b04dd9f12fc9d3" kindref="member">NRFX_OFFSETOF</ref>(NRF_PPI_Type,<sp/>TASKS_CHG[index].DIS);</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="590"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_PPI_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_ppi.h"/>
  </compounddef>
</doxygen>
