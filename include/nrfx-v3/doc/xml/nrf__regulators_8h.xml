<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__regulators_8h" kind="file" language="C++">
    <compoundname>nrf_regulators.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_regulators.h</label>
        <link refid="nrf__regulators_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrf__regulators__pof__config__t" prot="public">nrf_regulators_pof_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__regulators__hal_1gad6a0a2b82c399e7768ddf7f1179b309c" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_HIGH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether high voltage regulator (VREGH) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="52" column="9" bodyfile="hal/nrf_regulators.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga4ff51384b92755789fad6efce9968677" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_MEDIUM</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether medium voltage regulator (VREGM) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="59" column="9" bodyfile="hal/nrf_regulators.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga7c43f733a5c5d5e2d293aa05c5fec980" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_RADIO</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether radio regulator (VREGRADIO) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="66" column="9" bodyfile="hal/nrf_regulators.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga91904bc5eff662dd5e178719a6359b76" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether Power-On-Fail Comparator (POF Comparator) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="73" column="9" bodyfile="hal/nrf_regulators.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga37136d4e369e40698f4848791594785b" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_VDDH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator for VDDH is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="80" column="9" bodyfile="hal/nrf_regulators.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga3c320fcaeb798af297f31ca877661eef" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_WARN_DISABLE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator can disable POFWARN event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="87" column="9" bodyfile="hal/nrf_regulators.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1gabce02432199f281e790b711ff3dbc33f" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_STATUS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator status is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="94" column="9" bodyfile="hal/nrf_regulators.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga066833d960faa38609c673839231d630" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_TRIM</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TRIM register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="101" column="9" bodyfile="hal/nrf_regulators.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga279aad54938782a4b3af73054caf8586" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_MAIN_STATUS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether main supply status is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="108" column="9" bodyfile="hal/nrf_regulators.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga689ee50e653915bde5ce003f52cc09ae" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_INDUCTOR_DET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether inductor detection is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="115" column="9" bodyfile="hal/nrf_regulators.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_vreg_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa000c6b8eee287198f0ea85f45b802f53" prot="public">
          <name>NRF_REGULATORS_VREG_MAIN</name>
          <briefdescription>
<para>Main voltage regulator (VREGMAIN). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffaa8c63545624040d9fdd7badfb351cac7" prot="public">
          <name>NRF_REGULATORS_VREG_HIGH</name>
          <briefdescription>
<para>High voltage regulator (VREGH). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa9afee227055eee567b291a14e3a4fa03" prot="public">
          <name>NRF_REGULATORS_VREG_MEDIUM</name>
          <briefdescription>
<para>Medium voltage regulator (VREGM). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa1fc588a2bcde9461df5931a0bc2284be" prot="public">
          <name>NRF_REGULATORS_VREG_RADIO</name>
          <briefdescription>
<para>Radio voltage regulator (VREGRADIO). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Voltage regulators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="121" column="1" bodyfile="hal/nrf_regulators.h" bodystart="122" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga69b75c63af2ecda706462bdaec674b49" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_pof_thr_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a6d9c24f8b07a3952637871be0a1f4936" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V17</initializer>
          <briefdescription>
<para>Set threshold to 1.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad4b9f19deeccf453e7d0cc8e234b24be" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V18</initializer>
          <briefdescription>
<para>Set threshold to 1.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a03327fcb877f0ac854d94320509f905c" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V19</initializer>
          <briefdescription>
<para>Set threshold to 1.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aeebbae00b64c4ff6a08120bf1f5f37dd" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V20</initializer>
          <briefdescription>
<para>Set threshold to 2.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a0e75d5bdab220c2009e9bb182f910aa5" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V21</initializer>
          <briefdescription>
<para>Set threshold to 2.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad0e0b620a462d3e8472f711443e63528" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V22</initializer>
          <briefdescription>
<para>Set threshold to 2.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49adefaea9e0609fdb924d78fabd3383f6a" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V3</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V23</initializer>
          <briefdescription>
<para>Set threshold to 2.3 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a340d78004e63ee715001d959868c97ec" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V4</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V24</initializer>
          <briefdescription>
<para>Set threshold to 2.4 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aba171aea2a2ed1a1fe314c947e19eaf4" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V5</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V25</initializer>
          <briefdescription>
<para>Set threshold to 2.5 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a4e70288c5e84eb79355c340b31e4af11" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V6</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V26</initializer>
          <briefdescription>
<para>Set threshold to 2.6 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ac9f6ac25e7a39adc79e74ab025757bfa" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V27</initializer>
          <briefdescription>
<para>Set threshold to 2.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aef7683696453e50ab345f63682f72058" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V28</initializer>
          <briefdescription>
<para>Set threshold to 2.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>POF Comparator thresholds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="137" column="1" bodyfile="hal/nrf_regulators.h" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1gabea9e8c5dd49ed64aea6eb9dc866808b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_pof_thr_vddh_t</name>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba995bd0536690565f946e8070a6b9fff9" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V27</initializer>
          <briefdescription>
<para>Set threshold to 2.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad4455edf06a04be3a863582914f08ac5" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V28</initializer>
          <briefdescription>
<para>Set threshold to 2.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad3f0fa11e486300b0a56ddd4e9bcca42" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V29</initializer>
          <briefdescription>
<para>Set threshold to 2.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808baf24f69580898c6f7e2d5b5fc37b2f2fb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V30</initializer>
          <briefdescription>
<para>Set threshold to 3.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba600dad1ffd6f49c3b7119c62dade49cb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V31</initializer>
          <briefdescription>
<para>Set threshold to 3.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba041504a78682fca73db429f2baed2019" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V32</initializer>
          <briefdescription>
<para>Set threshold to 3.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bacb17efca86df00293da2f3b9c711368a" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V3</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V33</initializer>
          <briefdescription>
<para>Set threshold to 3.3 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba21b24c7df78164957972dff54ad1b57c" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V4</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V34</initializer>
          <briefdescription>
<para>Set threshold to 3.4 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba9c83fc569fdadcf860f2d7435eda8355" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V5</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V35</initializer>
          <briefdescription>
<para>Set threshold to 3.5 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2ba47d3714440cd58f6b7a748c46d67e" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V6</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V36</initializer>
          <briefdescription>
<para>Set threshold to 3.6 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba396f1b50a95ffbb5d784878189ebb0df" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V37</initializer>
          <briefdescription>
<para>Set threshold to 3.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2dce423ed0b63756195e57f4e4b84465" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V38</initializer>
          <briefdescription>
<para>Set threshold to 3.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba0dcba4a339ba200abd6d2b97b717d7fb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V39</initializer>
          <briefdescription>
<para>Set threshold to 3.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba616ffeb9febd708a456f052c2c796438" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V40</initializer>
          <briefdescription>
<para>Set threshold to 4.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba1d7831fb465564535a93d63e1c4fffa5" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V41</initializer>
          <briefdescription>
<para>Set threshold to 4.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bac26f8530f7fe170cce44175bbaa821a3" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V42</initializer>
          <briefdescription>
<para>Set threshold to 4.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>POF Comparator thresholds for VDDH. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="160" column="1" bodyfile="hal/nrf_regulators.h" bodystart="161" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_elv_mode_allow_mask_t</name>
        <enumvalue id="group__nrf__regulators__hal_1ggae14716c41df2dff382a4fdf40c736e01a55a2d9b0fb1352ad9096abd153c5b846" prot="public">
          <name>NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT</name>
          <briefdescription>
<para>Reserved. For internal use only. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Components allowed to introduce ELV mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="183" column="1" bodyfile="hal/nrf_regulators.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_main_status_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a08457f02e9b9d6a15eb21630c372e9b7" prot="public">
          <name>NRF_REGULATORS_MAIN_STATUS_NORMAL</name>
          <initializer>= REGULATORS_MAINREGSTATUS_VREGH_Inactive</initializer>
          <briefdescription>
<para>Normal voltage mode. Voltage supplied on VDD and VDDH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a298e1f5c4c974bc3cd482a154a14c7f8" prot="public">
          <name>NRF_REGULATORS_MAIN_STATUS_HIGH</name>
          <initializer>= REGULATORS_MAINREGSTATUS_VREGH_Active</initializer>
          <briefdescription>
<para>High voltage mode. Voltage supplied on VDDH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Main supply status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="205" column="1" bodyfile="hal/nrf_regulators.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__regulators__hal_1gadfca2ae4d12293d8f7d45dc78b26f462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_vreg_enable_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, nrf_regulators_vreg_t regulator, bool enable)</argsstring>
        <name>nrf_regulators_vreg_enable_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref></type>
          <declname>regulator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the specified voltage regulator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regulator</parametername>
</parameternamelist>
<parameterdescription>
<para>Regulator to be enabled or disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if specified voltage regulator is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="329" column="24" bodyfile="hal/nrf_regulators.h" bodystart="329" bodyend="378" declfile="hal/nrf_regulators.h" declline="219" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaf7ed473147b902c1bc9ff8aa5732fd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_vreg_enable_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg, nrf_regulators_vreg_t regulator)</argsstring>
        <name>nrf_regulators_vreg_enable_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref></type>
          <declname>regulator</declname>
        </param>
        <briefdescription>
<para>Function for checking whether the specified voltage regulator is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regulator</parametername>
</parameternamelist>
<parameterdescription>
<para>Regulator to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified voltage regulator is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified voltage regulator is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="380" column="24" bodyfile="hal/nrf_regulators.h" bodystart="380" bodyend="419" declfile="hal/nrf_regulators.h" declline="232" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gafedd3f46bd0f37b2191580b72050135d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_system_off</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg)</argsstring>
        <name>nrf_regulators_system_off</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for putting the CPU in System OFF mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function never returns.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="421" column="24" bodyfile="hal/nrf_regulators.h" bodystart="421" bodyend="431" declfile="hal/nrf_regulators.h" declline="242" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaa16a19b3635e6630874c8ccaf1e952ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_regulators_main_status_t nrf_regulators_main_status_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_main_status_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the main supply status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current main supply status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="435" column="30" bodyfile="hal/nrf_regulators.h" bodystart="435" bodyend="438" declfile="hal/nrf_regulators.h" declline="253" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gad5219287b8a4adf780d10c5e757f5d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_pof_config_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, nrf_regulators_pof_config_t const *p_config)</argsstring>
        <name>nrf_regulators_pof_config_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting the POF Comparator configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing POF Comparator configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="442" column="24" bodyfile="hal/nrf_regulators.h" bodystart="442" bodyend="459" declfile="hal/nrf_regulators.h" declline="263" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaedc19c1388499d17cd3fe6a3ac878444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_pof_config_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg, nrf_regulators_pof_config_t *p_config)</argsstring>
        <name>nrf_regulators_pof_config_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref> *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for getting the POF Comparator configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with POF Comparator configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="461" column="24" bodyfile="hal/nrf_regulators.h" bodystart="461" bodyend="484" declfile="hal/nrf_regulators.h" declline="272" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1ga5c07b577fbff9768347ee2f50bed20ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_pof_below_thr_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_pof_below_thr_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the detected voltage is below or above the threshold of VPOF (POF Comparator&apos;s threshold voltage). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Voltage below VPOF threshold has been detected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Voltage above VPOF threshold has been detected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="488" column="24" bodyfile="hal/nrf_regulators.h" bodystart="488" bodyend="492" declfile="hal/nrf_regulators.h" declline="285" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaa3393fe07c57260a798a77899a53c346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_elv_mode_allow_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_regulators_elv_mode_allow_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting components that are allowed to introduce the ELV mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This register is retained when retention is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of components to be set, created using <ref refid="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" kindref="member">nrf_regulators_elv_mode_allow_mask_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="496" column="24" bodyfile="hal/nrf_regulators.h" bodystart="496" bodyend="501" declfile="hal/nrf_regulators.h" declline="297" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaff311fb33836896f7863f35d7d8ef37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_regulators_elv_mode_allow_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_elv_mode_allow_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for geting components that are allowed to introduce the ELV mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This register is retained when retention is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of components allowed to introduce ELV mode, created using <ref refid="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" kindref="member">nrf_regulators_elv_mode_allow_mask_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="503" column="28" bodyfile="hal/nrf_regulators.h" bodystart="503" bodyend="506" declfile="hal/nrf_regulators.h" declline="310" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1ga667f90b9aa015dbdce197f44327cd544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_inductor_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_inductor_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking whether an inductor is connected to the DCC pin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The detection can only take place if the VREG_MAIN DC/DC converter is not enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Inductor detected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Inductor not detected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="510" column="24" bodyfile="hal/nrf_regulators.h" bodystart="510" bodyend="515" declfile="hal/nrf_regulators.h" declline="324" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_REGULATORS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_regulators_hal<sp/>REGULATORS<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_power</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>REGULATORS<sp/>peripheral.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_VREGH_DCDCEN_DCDCEN_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>high<sp/>voltage<sp/>regulator<sp/>(VREGH)<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_HIGH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_HIGH<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_VREGM_ENABLE_ENABLE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>medium<sp/>voltage<sp/>regulator<sp/>(VREGM)<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_MEDIUM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_MEDIUM<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>radio<sp/>regulator<sp/>(VREGRADIO)<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_RADIO<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_VREG_RADIO<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFCON_POF_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>Power-On-Fail<sp/>Comparator<sp/>(POF<sp/>Comparator)<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFCON_THRESHOLDVDDH_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>POF<sp/>Comparator<sp/>for<sp/>VDDH<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_VDDH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_VDDH<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFCON_EVENTDISABLE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>POF<sp/>Comparator<sp/>can<sp/>disable<sp/>POFWARN<sp/>event.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_WARN_DISABLE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_WARN_DISABLE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFSTAT_COMPARATOR_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>POF<sp/>Comparator<sp/>status<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_STATUS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_POF_STATUS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_TRIM_ResetValue)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>TRIM<sp/>register<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_TRIM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_TRIM<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_MAINREGSTATUS_VREGH_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>main<sp/>supply<sp/>status<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_MAIN_STATUS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_MAIN_STATUS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_VREGMAIN_INDUCTORDET_DETECTED_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>inductor<sp/>detection<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_INDUCTOR_DET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_REGULATORS_HAS_INDUCTOR_DET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">/**<sp/>@brief<sp/>Voltage<sp/>regulators.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa000c6b8eee287198f0ea85f45b802f53" kindref="member">NRF_REGULATORS_VREG_MAIN</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Main<sp/>voltage<sp/>regulator<sp/>(VREGMAIN).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffaa8c63545624040d9fdd7badfb351cac7" kindref="member">NRF_REGULATORS_VREG_HIGH</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>High<sp/>voltage<sp/>regulator<sp/>(VREGH).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_MEDIUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa9afee227055eee567b291a14e3a4fa03" kindref="member">NRF_REGULATORS_VREG_MEDIUM</ref>,<sp/></highlight><highlight class="comment">///&lt;<sp/>Medium<sp/>voltage<sp/>regulator<sp/>(VREGM).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_RADIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa1fc588a2bcde9461df5931a0bc2284be" kindref="member">NRF_REGULATORS_VREG_RADIO</ref>,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Radio<sp/>voltage<sp/>regulator<sp/>(VREGRADIO).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}<sp/><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">/**<sp/>@brief<sp/>POF<sp/>Comparator<sp/>thresholds.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFCON_THRESHOLD_V17)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a6d9c24f8b07a3952637871be0a1f4936" kindref="member">NRF_REGULATORS_POF_THR_1V7</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V17,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>1.7<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_POFCON_THRESHOLD_V18)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad4b9f19deeccf453e7d0cc8e234b24be" kindref="member">NRF_REGULATORS_POF_THR_1V8</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V18,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>1.8<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a03327fcb877f0ac854d94320509f905c" kindref="member">NRF_REGULATORS_POF_THR_1V9</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V19,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>1.9<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aeebbae00b64c4ff6a08120bf1f5f37dd" kindref="member">NRF_REGULATORS_POF_THR_2V0</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V20,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.0<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a0e75d5bdab220c2009e9bb182f910aa5" kindref="member">NRF_REGULATORS_POF_THR_2V1</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V21,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.1<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad0e0b620a462d3e8472f711443e63528" kindref="member">NRF_REGULATORS_POF_THR_2V2</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V22,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.2<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49adefaea9e0609fdb924d78fabd3383f6a" kindref="member">NRF_REGULATORS_POF_THR_2V3</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V23,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.3<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a340d78004e63ee715001d959868c97ec" kindref="member">NRF_REGULATORS_POF_THR_2V4</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V24,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.4<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aba171aea2a2ed1a1fe314c947e19eaf4" kindref="member">NRF_REGULATORS_POF_THR_2V5</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V25,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.5<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a4e70288c5e84eb79355c340b31e4af11" kindref="member">NRF_REGULATORS_POF_THR_2V6</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V26,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.6<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ac9f6ac25e7a39adc79e74ab025757bfa" kindref="member">NRF_REGULATORS_POF_THR_2V7</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V27,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.7<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aef7683696453e50ab345f63682f72058" kindref="member">NRF_REGULATORS_POF_THR_2V8</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLD_V28,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.8<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/><ref refid="group__nrf__regulators__hal_1ga69b75c63af2ecda706462bdaec674b49" kindref="member">nrf_regulators_pof_thr_t</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_VDDH</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**<sp/>@brief<sp/>POF<sp/>Comparator<sp/>thresholds<sp/>for<sp/>VDDH.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba995bd0536690565f946e8070a6b9fff9" kindref="member">NRF_REGULATORS_POF_THR_VDDH_2V7</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V27,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.7<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad4455edf06a04be3a863582914f08ac5" kindref="member">NRF_REGULATORS_POF_THR_VDDH_2V8</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V28,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.8<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad3f0fa11e486300b0a56ddd4e9bcca42" kindref="member">NRF_REGULATORS_POF_THR_VDDH_2V9</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V29,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>2.9<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808baf24f69580898c6f7e2d5b5fc37b2f2fb" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V0</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V30,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.0<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba600dad1ffd6f49c3b7119c62dade49cb" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V1</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V31,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.1<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba041504a78682fca73db429f2baed2019" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V2</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V32,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.2<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bacb17efca86df00293da2f3b9c711368a" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V3</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V33,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.3<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba21b24c7df78164957972dff54ad1b57c" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V4</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V34,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.4<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba9c83fc569fdadcf860f2d7435eda8355" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V5</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V35,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.5<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2ba47d3714440cd58f6b7a748c46d67e" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V6</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V36,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.6<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba396f1b50a95ffbb5d784878189ebb0df" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V7</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V37,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.7<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2dce423ed0b63756195e57f4e4b84465" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V8</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V38,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.8<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba0dcba4a339ba200abd6d2b97b717d7fb" kindref="member">NRF_REGULATORS_POF_THR_VDDH_3V9</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V39,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>3.9<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba616ffeb9febd708a456f052c2c796438" kindref="member">NRF_REGULATORS_POF_THR_VDDH_4V0</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V40,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>4.0<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba1d7831fb465564535a93d63e1c4fffa5" kindref="member">NRF_REGULATORS_POF_THR_VDDH_4V1</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V41,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>4.1<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bac26f8530f7fe170cce44175bbaa821a3" kindref="member">NRF_REGULATORS_POF_THR_VDDH_4V2</ref><sp/>=<sp/>REGULATORS_POFCON_THRESHOLDVDDH_V42,<sp/></highlight><highlight class="comment">///&lt;<sp/>Set<sp/>threshold<sp/>to<sp/>4.2<sp/>V.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="group__nrf__regulators__hal_1gabea9e8c5dd49ed64aea6eb9dc866808b" kindref="member">nrf_regulators_pof_thr_vddh_t</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment">/**<sp/>@brief<sp/>Components<sp/>allowed<sp/>to<sp/>introduce<sp/>ELV<sp/>mode.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ggae14716c41df2dff382a4fdf40c736e01a55a2d9b0fb1352ad9096abd153c5b846" kindref="member">NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT</ref><sp/></highlight><highlight class="comment">///&lt;<sp/>Reserved.<sp/>For<sp/>internal<sp/>use<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/><ref refid="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" kindref="member">nrf_regulators_elv_mode_allow_mask_t</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">/**<sp/>@brief<sp/>POF<sp/>Comparator<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structnrf__regulators__pof__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>or<sp/>disable<sp/>POF<sp/>Comparator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ga69b75c63af2ecda706462bdaec674b49" kindref="member">nrf_regulators_pof_thr_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>thr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>to<sp/>be<sp/>set<sp/>for<sp/>POF<sp/>Comparator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_VDDH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gabea9e8c5dd49ed64aea6eb9dc866808b" kindref="member">nrf_regulators_pof_thr_vddh_t</ref><sp/>thr_vddh;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>to<sp/>be<sp/>set<sp/>for<sp/>POF<sp/>Comparator<sp/>for<sp/>VDDH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_WARN_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warn_disable;<sp/></highlight><highlight class="comment">///&lt;<sp/>Disable<sp/>or<sp/>enable<sp/>POFWARN<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_MAIN_STATUS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**<sp/>@brief<sp/>Main<sp/>supply<sp/>status.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a08457f02e9b9d6a15eb21630c372e9b7" kindref="member">NRF_REGULATORS_MAIN_STATUS_NORMAL</ref><sp/>=<sp/>REGULATORS_MAINREGSTATUS_VREGH_Inactive,<sp/></highlight><highlight class="comment">///&lt;<sp/>Normal<sp/>voltage<sp/>mode.<sp/>Voltage<sp/>supplied<sp/>on<sp/>VDD<sp/>and<sp/>VDDH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a298e1f5c4c974bc3cd482a154a14c7f8" kindref="member">NRF_REGULATORS_MAIN_STATUS_HIGH</ref><sp/><sp/><sp/>=<sp/>REGULATORS_MAINREGSTATUS_VREGH_Active<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>High<sp/>voltage<sp/>mode.<sp/>Voltage<sp/>supplied<sp/>on<sp/>VDDH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}<sp/><ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>specified<sp/>voltage<sp/>regulator.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>regulator<sp/>Regulator<sp/>to<sp/>be<sp/>enabled<sp/>or<sp/>disabled.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/>True<sp/>if<sp/>specified<sp/>voltage<sp/>regulator<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gadfca2ae4d12293d8f7d45dc78b26f462" kindref="member">nrf_regulators_vreg_enable_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref><sp/>regulator,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>specified<sp/>voltage<sp/>regulator<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>regulator<sp/>Regulator<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Specified<sp/>voltage<sp/>regulator<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Specified<sp/>voltage<sp/>regulator<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaf7ed473147b902c1bc9ff8aa5732fd5e" kindref="member">nrf_regulators_vreg_enable_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regulator);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>putting<sp/>the<sp/>CPU<sp/>in<sp/>System<sp/>OFF<sp/>mode.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>never<sp/>returns.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gafedd3f46bd0f37b2191580b72050135d" kindref="member">nrf_regulators_system_off</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_MAIN_STATUS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>main<sp/>supply<sp/>status.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>current<sp/>main<sp/>supply<sp/>status.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">NRF_STATIC_INLINE</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref><sp/><ref refid="group__nrf__regulators__hal_1gaa16a19b3635e6630874c8ccaf1e952ed" kindref="member">nrf_regulators_main_status_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>POF<sp/>Comparator<sp/>configuration.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>POF<sp/>Comparator<sp/>configuration.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gad5219287b8a4adf780d10c5e757f5d07" kindref="member">nrf_regulators_pof_config_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="266"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>POF<sp/>Comparator<sp/>configuration.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>POF<sp/>Comparator<sp/>configuration.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaedc19c1388499d17cd3fe6a3ac878444" kindref="member">nrf_regulators_pof_config_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_STATUS</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>detected<sp/>voltage<sp/>is<sp/>below<sp/>or<sp/>above<sp/>the<sp/>threshold<sp/>of<sp/>VPOF<sp/>(POF<sp/>Comparator&apos;s<sp/>threshold<sp/>voltage).</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Voltage<sp/>below<sp/>VPOF<sp/>threshold<sp/>has<sp/>been<sp/>detected.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Voltage<sp/>above<sp/>VPOF<sp/>threshold<sp/>has<sp/>been<sp/>detected.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1ga5c07b577fbff9768347ee2f50bed20ec" kindref="member">nrf_regulators_pof_below_thr_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>components<sp/>that<sp/>are<sp/>allowed<sp/>to<sp/>introduce<sp/>the<sp/>ELV<sp/>mode.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@warning<sp/>This<sp/>register<sp/>is<sp/>retained<sp/>when<sp/>retention<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>components<sp/>to<sp/>be<sp/>set,<sp/>created<sp/>using<sp/>@ref<sp/>nrf_regulators_elv_mode_allow_mask_t.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaa3393fe07c57260a798a77899a53c346" kindref="member">nrf_regulators_elv_mode_allow_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>geting<sp/>components<sp/>that<sp/>are<sp/>allowed<sp/>to<sp/>introduce<sp/>the<sp/>ELV<sp/>mode.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@warning<sp/>This<sp/>register<sp/>is<sp/>retained<sp/>when<sp/>retention<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>components<sp/>allowed<sp/>to<sp/>introduce<sp/>ELV<sp/>mode,</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created<sp/>using<sp/>@ref<sp/>nrf_regulators_elv_mode_allow_mask_t.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__regulators__hal_1gaff311fb33836896f7863f35d7d8ef37b" kindref="member">nrf_regulators_elv_mode_allow_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_INDUCTOR_DET</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>an<sp/>inductor<sp/>is<sp/>connected<sp/>to<sp/>the<sp/>DCC<sp/>pin.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>detection<sp/>can<sp/>only<sp/>take<sp/>place<sp/>if<sp/>the<sp/>VREG_MAIN<sp/>DC/DC<sp/>converter<sp/>is<sp/>not<sp/>enabled.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Inductor<sp/>detected.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Inductor<sp/>not<sp/>detected.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1ga667f90b9aa015dbdce197f44327cd544" kindref="member">nrf_regulators_inductor_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gadfca2ae4d12293d8f7d45dc78b26f462" kindref="member">nrf_regulators_vreg_enable_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref><sp/>regulator,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(regulator)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa000c6b8eee287198f0ea85f45b802f53" kindref="member">NRF_REGULATORS_VREG_MAIN</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_DCDCEN_DCDCEN_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;DCDCEN<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_DCDCEN_DCDCEN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_DCDCEN_DCDCEN_Disabled)<sp/>&lt;&lt;<sp/>REGULATORS_DCDCEN_DCDCEN_Pos;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(REGULATORS_VREGMAIN_DCDCEN_VAL_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;VREGMAIN.DCDCEN<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_VREGMAIN_DCDCEN_VAL_Enabled<sp/>:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGMAIN_DCDCEN_VAL_Disabled)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_VREGMAIN_DCDCEN_VAL_Pos;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;VREGMAIN.DCDCEN<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_VREGMAIN_DCDCEN_DCDCEN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGMAIN_DCDCEN_DCDCEN_Disabled)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_VREGMAIN_DCDCEN_DCDCEN_Pos;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffaa8c63545624040d9fdd7badfb351cac7" kindref="member">NRF_REGULATORS_VREG_HIGH</ref>:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;VREGH.DCDCEN<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_VREGH_DCDCEN_DCDCEN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGH_DCDCEN_DCDCEN_Disabled)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_VREGH_DCDCEN_DCDCEN_Pos;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_MEDIUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa9afee227055eee567b291a14e3a4fa03" kindref="member">NRF_REGULATORS_VREG_MEDIUM</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;VREGM.ENABLE<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_VREGM_ENABLE_ENABLE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGM_ENABLE_ENABLE_Disabled)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_VREGM_ENABLE_ENABLE_Pos;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_RADIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa1fc588a2bcde9461df5931a0bc2284be" kindref="member">NRF_REGULATORS_VREG_RADIO</ref>:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;VREGRADIO.DCDCEN<sp/>=<sp/>(enable<sp/>?<sp/>REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Disabled)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Pos;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaf7ed473147b902c1bc9ff8aa5732fd5e" kindref="member">nrf_regulators_vreg_enable_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regulator)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(regulator)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa000c6b8eee287198f0ea85f45b802f53" kindref="member">NRF_REGULATORS_VREG_MAIN</ref>:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(REGULATORS_DCDCEN_DCDCEN_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;DCDCEN<sp/>&gt;&gt;<sp/>REGULATORS_DCDCEN_DCDCEN_Pos)<sp/>==</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_DCDCEN_DCDCEN_Enabled;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(REGULATORS_VREGMAIN_DCDCEN_VAL_Msk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGMAIN.DCDCEN<sp/>&gt;&gt;<sp/>REGULATORS_VREGMAIN_DCDCEN_VAL_Pos)<sp/>==</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGMAIN_DCDCEN_VAL_Enabled;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGMAIN.DCDCEN<sp/>&gt;&gt;<sp/>REGULATORS_VREGMAIN_DCDCEN_DCDCEN_Pos)<sp/>==</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGMAIN_DCDCEN_DCDCEN_Enabled;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_HIGH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffaa8c63545624040d9fdd7badfb351cac7" kindref="member">NRF_REGULATORS_VREG_HIGH</ref>:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGH.DCDCEN<sp/>&gt;&gt;<sp/>REGULATORS_VREGH_DCDCEN_DCDCEN_Pos)<sp/>==</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGH_DCDCEN_DCDCEN_Enabled;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_MEDIUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa9afee227055eee567b291a14e3a4fa03" kindref="member">NRF_REGULATORS_VREG_MEDIUM</ref>:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGM.ENABLE<sp/>&gt;&gt;<sp/>REGULATORS_VREGM_ENABLE_ENABLE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGM_ENABLE_ENABLE_Enabled;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_VREG_RADIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa1fc588a2bcde9461df5931a0bc2284be" kindref="member">NRF_REGULATORS_VREG_RADIO</ref>:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGRADIO.DCDCEN<sp/>&gt;&gt;<sp/>REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Pos)<sp/>==</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_VREGRADIO_DCDCEN_DCDCEN_Enabled;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gafedd3f46bd0f37b2191580b72050135d" kindref="member">nrf_regulators_system_off</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;SYSTEMOFF<sp/>=<sp/>REGULATORS_SYSTEMOFF_SYSTEMOFF_Msk;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>__DSB();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Solution<sp/>for<sp/>simulated<sp/>System<sp/>OFF<sp/>in<sp/>debug<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__WFE();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_MAIN_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">NRF_STATIC_INLINE</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref><sp/><ref refid="group__nrf__regulators__hal_1gaa16a19b3635e6630874c8ccaf1e952ed" kindref="member">nrf_regulators_main_status_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref>)p_reg-&gt;MAINREGSTATUS;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gad5219287b8a4adf780d10c5e757f5d07" kindref="member">nrf_regulators_pof_config_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;POFCON<sp/>=<sp/>((p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a9fa6b961bc519f0e2626978629b463a4" kindref="member">enable</ref><sp/>?<sp/>REGULATORS_POFCON_POF_Enabled<sp/>:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_POFCON_POF_Disabled)<sp/>&lt;&lt;<sp/>REGULATORS_POFCON_POF_Pos)<sp/>|</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1ab194ba9c0bf2472ae1279f3615d3a56c" kindref="member">thr</ref>)<sp/>&lt;&lt;<sp/>REGULATORS_POFCON_THRESHOLD_Pos)<sp/>|</highlight></codeline>
<codeline lineno="450"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1ga37136d4e369e40698f4848791594785b" kindref="member">NRF_REGULATORS_HAS_POF_VDDH</ref></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a12e9361f6082f6451ca00d69853318fd" kindref="member">thr_vddh</ref>)<sp/>&lt;&lt;<sp/>REGULATORS_POFCON_THRESHOLDVDDH_Pos)<sp/>|</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_WARN_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a2654cf8dd7f05e494d25cbcd0d633289" kindref="member">warn_disable</ref><sp/>?<sp/>REGULATORS_POFCON_EVENTDISABLE_Disabled<sp/>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_POFCON_EVENTDISABLE_Enabled)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>REGULATORS_POFCON_EVENTDISABLE_Pos)<sp/>|</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaedc19c1388499d17cd3fe6a3ac878444" kindref="member">nrf_regulators_pof_config_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a9fa6b961bc519f0e2626978629b463a4" kindref="member">enable</ref><sp/>=<sp/>((p_reg-&gt;POFCON<sp/>&amp;<sp/>REGULATORS_POFCON_POF_Msk)<sp/>&gt;&gt;<sp/>REGULATORS_POFCON_POF_Pos)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>REGULATORS_POFCON_POF_Enabled;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1ab194ba9c0bf2472ae1279f3615d3a56c" kindref="member">thr</ref><sp/>=<sp/>(<ref refid="group__nrf__regulators__hal_1ga69b75c63af2ecda706462bdaec674b49" kindref="member">nrf_regulators_pof_thr_t</ref>)((p_reg-&gt;POFCON<sp/>&amp;<sp/>REGULATORS_POFCON_THRESHOLD_Msk)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>REGULATORS_POFCON_THRESHOLD_Pos);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_VDDH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a12e9361f6082f6451ca00d69853318fd" kindref="member">thr_vddh</ref><sp/>=<sp/>(<ref refid="group__nrf__regulators__hal_1gabea9e8c5dd49ed64aea6eb9dc866808b" kindref="member">nrf_regulators_pof_thr_vddh_t</ref>)((p_reg-&gt;POFCON<sp/>&amp;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGULATORS_POFCON_THRESHOLDVDDH_Msk)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>REGULATORS_POFCON_THRESHOLDVDDH_Pos);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_WARN_DISABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__regulators__pof__config__t_1a2654cf8dd7f05e494d25cbcd0d633289" kindref="member">warn_disable</ref><sp/>=<sp/>((p_reg-&gt;POFCON<sp/>&amp;<sp/>REGULATORS_POFCON_EVENTDISABLE_Msk)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>REGULATORS_POFCON_EVENTDISABLE_Pos)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>REGULATORS_POFCON_EVENTDISABLE_Disabled;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_HAS_POF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_POF_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1ga5c07b577fbff9768347ee2f50bed20ec" kindref="member">nrf_regulators_pof_below_thr_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;POFSTAT<sp/>&amp;<sp/>REGULATORS_POFSTAT_COMPARATOR_Msk)<sp/>&gt;&gt;<sp/>REGULATORS_POFSTAT_COMPARATOR_Pos</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>REGULATORS_POFSTAT_COMPARATOR_Below;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1gaa3393fe07c57260a798a77899a53c346" kindref="member">nrf_regulators_elv_mode_allow_set</ref>(NRF_REGULATORS_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TRIM<sp/>=<sp/>((p_reg-&gt;TRIM<sp/>&amp;<sp/>~NRF_REGULATORS_ELV_MODE_ALL_MASK)<sp/>|</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(~mask<sp/>&amp;<sp/>NRF_REGULATORS_ELV_MODE_ALL_MASK));</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__regulators__hal_1gaff311fb33836896f7863f35d7d8ef37b" kindref="member">nrf_regulators_elv_mode_allow_get</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>~(p_reg-&gt;TRIM<sp/>&amp;<sp/>NRF_REGULATORS_ELV_MODE_ALL_MASK);</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_HAS_TRIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_REGULATORS_HAS_INDUCTOR_DET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__regulators__hal_1ga667f90b9aa015dbdce197f44327cd544" kindref="member">nrf_regulators_inductor_check</ref>(NRF_REGULATORS_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;VREGMAIN.INDUCTORDET<sp/>&amp;<sp/>REGULATORS_VREGMAIN_INDUCTORDET_DETECTED_Msk)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>REGULATORS_VREGMAIN_INDUCTORDET_DETECTED_Pos</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>REGULATORS_VREGMAIN_INDUCTORDET_DETECTED_InductorDetected;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_REGULATORS_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_regulators.h"/>
  </compounddef>
</doxygen>
