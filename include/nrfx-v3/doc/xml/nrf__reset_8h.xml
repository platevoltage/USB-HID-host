<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__reset_8h" kind="file" language="C++">
    <compoundname>nrf_reset.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes local="no">nrf_erratas.h</includes>
    <includedby refid="nrfx__reset__reason_8h" local="no">helpers/nrfx_reset_reason.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_reset.h</label>
        <link refid="nrf__reset_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nrf_erratas.h</label>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__reset__hal_1ga6e069550ef47e48761539039baaf4ad1" prot="public" static="no">
        <name>NRF_RESET_HAS_NETWORK</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of Network core RESET functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="53" column="9" bodyfile="hal/nrf_reset.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga9d0809cb7d8f32511e229df11629dd46" prot="public" static="no">
        <name>NRF_RESET_HAS_APPLICATION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Presence of Application core RESET functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="60" column="9" bodyfile="hal/nrf_reset.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga016f0e31cc44eb8799eecda87e4f64b6" prot="public" static="no">
        <name>NRF_RESET_HAS_VBUS_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether VBUS reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="67" column="9" bodyfile="hal/nrf_reset.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga8298367e08c5641691629df7b416cc8f" prot="public" static="no">
        <name>NRF_RESET_HAS_CTRLAP_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRAP reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="74" column="9" bodyfile="hal/nrf_reset.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1gaf3cd91f127c282c0cf6cc7aaa48aa058" prot="public" static="no">
        <name>NRF_RESET_HAS_CTRLAPSOFT_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRAPSOFT reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="81" column="9" bodyfile="hal/nrf_reset.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1gac40f5b7dca65b2fb2edbe1a23ca15e91" prot="public" static="no">
        <name>NRF_RESET_HAS_CTRLAPHARD_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRAPHARD reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="88" column="9" bodyfile="hal/nrf_reset.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga24e7e429b007d387bcea78e126d4adab" prot="public" static="no">
        <name>NRF_RESET_HAS_CTRLAPPIN_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether CTRAPPIN reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="95" column="9" bodyfile="hal/nrf_reset.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1gad989711beacd5ac6079cfc0e2a71a9ce" prot="public" static="no">
        <name>NRF_RESET_HAS_LPCOMP_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether LPCOMP reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="102" column="9" bodyfile="hal/nrf_reset.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1gad65be72392009db1867f72c46492d5a7" prot="public" static="no">
        <name>NRF_RESET_HAS_LLOCKUP_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether LLOCKUP reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="109" column="9" bodyfile="hal/nrf_reset.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga26f249ac835b288eb9764ecbbbbb8c3b" prot="public" static="no">
        <name>NRF_RESET_HAS_LDOG_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether LDOG reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="116" column="9" bodyfile="hal/nrf_reset.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga2fe6b2ac7ef2fcad12dd3201863ca834" prot="public" static="no">
        <name>NRF_RESET_HAS_MFORCEOFF_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether MFORCEOFF reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="123" column="9" bodyfile="hal/nrf_reset.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga54dae7f1663c774196589c77e0278319" prot="public" static="no">
        <name>NRF_RESET_HAS_GRTC_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether GRTC reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="130" column="9" bodyfile="hal/nrf_reset.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__reset__hal_1ga218a0fb95d647ab4c3da6ea2985ce4bb" prot="public" static="no">
        <name>NRF_RESET_HAS_SECTAMPER_RESET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether SECTAMPER reset is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="137" column="9" bodyfile="hal/nrf_reset.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__reset__hal_1gac9abb5d9950834cdc8beb4e2eff98e15" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_reset_resetreas_mask_t</name>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a5b90dbcb584fb199638cf9451b627795" prot="public">
          <name>NRF_RESET_RESETREAS_RESETPIN_MASK</name>
          <initializer>= RESET_RESETREAS_RESETPIN_Msk</initializer>
          <briefdescription>
<para>Bit mask of RESETPIN field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a89b09ae8313e09d2d288b7c4945387c2" prot="public">
          <name>NRF_RESET_RESETREAS_DOG0_MASK</name>
          <initializer>= RESET_RESETREAS_DOG0_Msk</initializer>
          <briefdescription>
<para>Bit mask of DOG0 field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a29f07aaec8c98ba83f396aea0cf1deb1" prot="public">
          <name>NRF_RESET_RESETREAS_SREQ_MASK</name>
          <initializer>= RESET_RESETREAS_SREQ_Msk</initializer>
          <briefdescription>
<para>Bit mask of SREQ field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aefb470a032b964c23b79d663daadb1af" prot="public">
          <name>NRF_RESET_RESETREAS_LOCKUP_MASK</name>
          <initializer>= RESET_RESETREAS_LOCKUP_Msk</initializer>
          <briefdescription>
<para>Bit mask of LOCKUP field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a1d504cd3eadf9876500ad6532f42e231" prot="public">
          <name>NRF_RESET_RESETREAS_OFF_MASK</name>
          <initializer>= RESET_RESETREAS_OFF_Msk</initializer>
          <briefdescription>
<para>Bit mask of OFF field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a861a437d97967259ead686f5c6b22438" prot="public">
          <name>NRF_RESET_RESETREAS_DIF_MASK</name>
          <initializer>= RESET_RESETREAS_DIF_Msk</initializer>
          <briefdescription>
<para>Bit mask of DIF field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a394e704ae9bbc1078b7ef933a7d95137" prot="public">
          <name>NRF_RESET_RESETREAS_NFC_MASK</name>
          <initializer>= RESET_RESETREAS_NFC_Msk</initializer>
          <briefdescription>
<para>Bit mask of NFC field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aa3a08367c3c0a6820cc171978f5cf445" prot="public">
          <name>NRF_RESET_RESETREAS_DOG1_MASK</name>
          <initializer>= RESET_RESETREAS_DOG1_Msk</initializer>
          <briefdescription>
<para>Bit mask of DOG1 field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a9523064009e1ffab1d3956b135b5bee6" prot="public">
          <name>NRF_RESET_RESETREAS_CTRLAPSOFT_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAPSOFT_Msk</initializer>
          <briefdescription>
<para>Bit mask of CTRLAPSOFT field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a6222d366f0e566b7161934dd8a2783bc" prot="public">
          <name>NRF_RESET_RESETREAS_CTRLAPHARD_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAPHARD_Msk</initializer>
          <briefdescription>
<para>Bit mask of CTRLAPHARD field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ae7790d83b96d52c5ec33e7949ee1d91c" prot="public">
          <name>NRF_RESET_RESETREAS_CTRLAPPIN_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAPPIN_Msk</initializer>
          <briefdescription>
<para>Bit mask of CTRLAPPIN field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a53bb4d3011cabba80909c318f7bbbd45" prot="public">
          <name>NRF_RESET_RESETREAS_CTRLAP_MASK</name>
          <initializer>= RESET_RESETREAS_CTRLAP_Msk</initializer>
          <briefdescription>
<para>Bit mask of CTRLAP field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a4e4d8ccf379dc34d1e3c7e5963f37ab4" prot="public">
          <name>NRF_RESET_RESETREAS_LPCOMP_MASK</name>
          <initializer>= RESET_RESETREAS_LPCOMP_Msk</initializer>
          <briefdescription>
<para>Bit mask of LPCOMP field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aa91729ef9892cdf2505fbe70076135b4" prot="public">
          <name>NRF_RESET_RESETREAS_LSREQ_MASK</name>
          <initializer>= RESET_RESETREAS_LSREQ_Msk</initializer>
          <briefdescription>
<para>Bit mask of LSREQ field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ad53d3f3bfadc79760a49b7059a9fcb37" prot="public">
          <name>NRF_RESET_RESETREAS_LLOCKUP_MASK</name>
          <initializer>= RESET_RESETREAS_LLOCKUP_Msk</initializer>
          <briefdescription>
<para>Bit mask of LLOCKUP field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a1d0b80453991fe73474eb73117ac29da" prot="public">
          <name>NRF_RESET_RESETREAS_LDOG_MASK</name>
          <initializer>= RESET_RESETREAS_LDOG_Msk</initializer>
          <briefdescription>
<para>Bit mask of LDOG field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aac285175158e839af44b5ba5f8008c7b" prot="public">
          <name>NRF_RESET_RESETREAS_MFORCEOFF_MASK</name>
          <initializer>= RESET_RESETREAS_MFORCEOFF_Msk</initializer>
          <briefdescription>
<para>Bit mask of MFORCEOFF field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a6d056bd1e1b6d60dbf1a3a1307e7fd27" prot="public">
          <name>NRF_RESET_RESETREAS_GRTC_MASK</name>
          <initializer>= RESET_RESETREAS_GRTC_Msk</initializer>
          <briefdescription>
<para>Bit mask of GRTC field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ada653b0d696a807c078bd58af2e81490" prot="public">
          <name>NRF_RESET_RESETREAS_VBUS_MASK</name>
          <initializer>= RESET_RESETREAS_VBUS_Msk</initializer>
          <briefdescription>
<para>Bit mask of VBUS field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ab823e840076abee5ad6e60aba7d6d2cc" prot="public">
          <name>NRF_RESET_RESETREAS_LCTRLAP_MASK</name>
          <initializer>= RESET_RESETREAS_LCTRLAP_Msk</initializer>
          <briefdescription>
<para>Bit mask of LCTRLAP field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a534ebc6e9853eeeec470182981285336" prot="public">
          <name>NRF_RESET_RESETREAS_SECTAMPER_MASK</name>
          <initializer>= RESET_RESETREAS_SECTAMPER_Msk</initializer>
          <briefdescription>
<para>Bit mask of SECTAMPER field. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Reset reason bit masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="143" column="1" bodyfile="hal/nrf_reset.h" bodystart="144" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__reset__hal_1ga2956ac48322d4ebd37e8dca22ae9dd4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_reset_resetreas_get</definition>
        <argsstring>(NRF_RESET_Type const *p_reg)</argsstring>
        <name>nrf_reset_resetreas_get</name>
        <param>
          <type>NRF_RESET_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the reset reason bitmask. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the reset reason bitmask. Unless cleared, the RESETREAS register is cumulative. If none of the reset sources is flagged, the chip was reset from the on-chip reset generator. This indicates a power-on-reset or a brown out reset.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mask of reset reasons constructed with <ref refid="group__nrf__reset__hal_1gac9abb5d9950834cdc8beb4e2eff98e15" kindref="member">nrf_reset_resetreas_mask_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="231" column="28" bodyfile="hal/nrf_reset.h" bodystart="231" bodyend="234" declfile="hal/nrf_reset.h" declline="206" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__reset__hal_1ga763234a24c71ba8cb31e82956fce9496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_reset_resetreas_clear</definition>
        <argsstring>(NRF_RESET_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_reset_resetreas_clear</name>
        <param>
          <type>NRF_RESET_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing the selected reset reason field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The mask constructed from <ref refid="group__nrf__reset__hal_1gac9abb5d9950834cdc8beb4e2eff98e15" kindref="member">nrf_reset_resetreas_mask_t</ref> enumerator values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="236" column="24" bodyfile="hal/nrf_reset.h" bodystart="236" bodyend="239" declfile="hal/nrf_reset.h" declline="214" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__reset__hal_1gae9adc3f0b8a4303316cf73b1874786d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_reset_network_force_off</definition>
        <argsstring>(NRF_RESET_Type *p_reg, bool hold)</argsstring>
        <name>nrf_reset_network_force_off</name>
        <param>
          <type>NRF_RESET_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hold</declname>
        </param>
        <briefdescription>
<para>Function for setting the force off signal for the Network core. </para>
        </briefdescription>
        <detaileddescription>
<para>A force off will reset the Network core and switch off its power and clocks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hold</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the force off signal is to be held. False if the force off signal is to be released. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_reset.h" line="242" column="24" bodyfile="hal/nrf_reset.h" bodystart="242" bodyend="267" declfile="hal/nrf_reset.h" declline="226" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_RESET_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrf_erratas.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_reset_hal<sp/>RESET<sp/>HAL</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_power</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>RESET<sp/>peripheral.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF5340_XXAA_NETWORK)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>Network<sp/>core<sp/>RESET<sp/>functionality.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_NETWORK<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_NETWORK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NRF5340_XXAA_APPLICATION)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">/**<sp/>@brief<sp/>Presence<sp/>of<sp/>Application<sp/>core<sp/>RESET<sp/>functionality.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_APPLICATION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_APPLICATION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_VBUS_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>VBUS<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_VBUS_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_VBUS_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_CTRLAP_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRAP<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAP_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAP_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_CTRLAPSOFT_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRAPSOFT<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPSOFT_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPSOFT_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_CTRLAPHARD_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRAPHARD<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPHARD_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPHARD_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_CTRLAPPIN_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>CTRAPPIN<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPPIN_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_CTRLAPPIN_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_LPCOMP_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>LPCOMP<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LPCOMP_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LPCOMP_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_LLOCKUP_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>LLOCKUP<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LLOCKUP_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LLOCKUP_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_LDOG_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>LDOG<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LDOG_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_LDOG_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_MFORCEOFF_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>MFORCEOFF<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_MFORCEOFF_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_MFORCEOFF_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_GRTC_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>GRTC<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_GRTC_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_GRTC_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(RESET_RESETREAS_SECTAMPER_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>SECTAMPER<sp/>reset<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_SECTAMPER_RESET<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_RESET_HAS_SECTAMPER_RESET<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**<sp/>@brief<sp/>Reset<sp/>reason<sp/>bit<sp/>masks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a5b90dbcb584fb199638cf9451b627795" kindref="member">NRF_RESET_RESETREAS_RESETPIN_MASK</ref><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_RESETPIN_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>RESETPIN<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a89b09ae8313e09d2d288b7c4945387c2" kindref="member">NRF_RESET_RESETREAS_DOG0_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DOG0_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>DOG0<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a29f07aaec8c98ba83f396aea0cf1deb1" kindref="member">NRF_RESET_RESETREAS_SREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_SREQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>SREQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aefb470a032b964c23b79d663daadb1af" kindref="member">NRF_RESET_RESETREAS_LOCKUP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LOCKUP_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LOCKUP<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a1d504cd3eadf9876500ad6532f42e231" kindref="member">NRF_RESET_RESETREAS_OFF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_OFF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>OFF<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a861a437d97967259ead686f5c6b22438" kindref="member">NRF_RESET_RESETREAS_DIF_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DIF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>DIF<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a394e704ae9bbc1078b7ef933a7d95137" kindref="member">NRF_RESET_RESETREAS_NFC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_NFC_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>NFC<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aa3a08367c3c0a6820cc171978f5cf445" kindref="member">NRF_RESET_RESETREAS_DOG1_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_DOG1_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>DOG1<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_CTRLAPSOFT_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a9523064009e1ffab1d3956b135b5bee6" kindref="member">NRF_RESET_RESETREAS_CTRLAPSOFT_MASK</ref><sp/>=<sp/>RESET_RESETREAS_CTRLAPSOFT_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>CTRLAPSOFT<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_CTRLAPHARD_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a6222d366f0e566b7161934dd8a2783bc" kindref="member">NRF_RESET_RESETREAS_CTRLAPHARD_MASK</ref><sp/>=<sp/>RESET_RESETREAS_CTRLAPHARD_Msk,<sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>CTRLAPHARD<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_CTRLAPPIN_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ae7790d83b96d52c5ec33e7949ee1d91c" kindref="member">NRF_RESET_RESETREAS_CTRLAPPIN_MASK</ref><sp/><sp/>=<sp/>RESET_RESETREAS_CTRLAPPIN_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>CTRLAPPIN<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_CTRLAP_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a53bb4d3011cabba80909c318f7bbbd45" kindref="member">NRF_RESET_RESETREAS_CTRLAP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_CTRLAP_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>CTRLAP<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_LPCOMP_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a4e4d8ccf379dc34d1e3c7e5963f37ab4" kindref="member">NRF_RESET_RESETREAS_LPCOMP_MASK</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LPCOMP_Msk,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LPCOMP<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_NETWORK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aa91729ef9892cdf2505fbe70076135b4" kindref="member">NRF_RESET_RESETREAS_LSREQ_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LSREQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LSREQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_LLOCKUP_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ad53d3f3bfadc79760a49b7059a9fcb37" kindref="member">NRF_RESET_RESETREAS_LLOCKUP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LLOCKUP_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LLOCKUP<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_LDOG_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a1d0b80453991fe73474eb73117ac29da" kindref="member">NRF_RESET_RESETREAS_LDOG_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LDOG_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LDOG<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_MFORCEOFF_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15aac285175158e839af44b5ba5f8008c7b" kindref="member">NRF_RESET_RESETREAS_MFORCEOFF_MASK</ref><sp/><sp/>=<sp/>RESET_RESETREAS_MFORCEOFF_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>MFORCEOFF<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_GRTC_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a6d056bd1e1b6d60dbf1a3a1307e7fd27" kindref="member">NRF_RESET_RESETREAS_GRTC_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_GRTC_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>GRTC<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_VBUS_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ada653b0d696a807c078bd58af2e81490" kindref="member">NRF_RESET_RESETREAS_VBUS_MASK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_VBUS_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>VBUS<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_NETWORK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15ab823e840076abee5ad6e60aba7d6d2cc" kindref="member">NRF_RESET_RESETREAS_LCTRLAP_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>RESET_RESETREAS_LCTRLAP_Msk,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>LCTRLAP<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_SECTAMPER_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__reset__hal_1ggac9abb5d9950834cdc8beb4e2eff98e15a534ebc6e9853eeeec470182981285336" kindref="member">NRF_RESET_RESETREAS_SECTAMPER_MASK</ref><sp/><sp/>=<sp/>RESET_RESETREAS_SECTAMPER_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bit<sp/>mask<sp/>of<sp/>SECTAMPER<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}<sp/><ref refid="group__nrf__reset__hal_1gac9abb5d9950834cdc8beb4e2eff98e15" kindref="member">nrf_reset_resetreas_mask_t</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>reset<sp/>reason<sp/>bitmask.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>reset<sp/>reason<sp/>bitmask.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>Unless<sp/>cleared,<sp/>the<sp/>RESETREAS<sp/>register<sp/>is<sp/>cumulative.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>If<sp/>none<sp/>of<sp/>the<sp/>reset<sp/>sources<sp/>is<sp/>flagged,<sp/>the<sp/>chip<sp/>was<sp/>reset<sp/>from<sp/>the<sp/>on-chip<sp/>reset<sp/>generator.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>This<sp/>indicates<sp/>a<sp/>power-on-reset<sp/>or<sp/>a<sp/>brown<sp/>out<sp/>reset.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>mask<sp/>of<sp/>reset<sp/>reasons<sp/>constructed<sp/>with<sp/>@ref<sp/>nrf_reset_resetreas_mask_t.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__reset__hal_1ga2956ac48322d4ebd37e8dca22ae9dd4d" kindref="member">nrf_reset_resetreas_get</ref>(NRF_RESET_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>selected<sp/>reset<sp/>reason<sp/>field.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>The<sp/>mask<sp/>constructed<sp/>from<sp/>@ref<sp/>nrf_reset_resetreas_mask_t<sp/>enumerator<sp/>values.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__reset__hal_1ga763234a24c71ba8cb31e82956fce9496" kindref="member">nrf_reset_resetreas_clear</ref>(NRF_RESET_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_APPLICATION</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>force<sp/>off<sp/>signal<sp/>for<sp/>the<sp/>Network<sp/>core.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>A<sp/>force<sp/>off<sp/>will<sp/>reset<sp/>the<sp/>Network<sp/>core<sp/>and<sp/>switch<sp/>off<sp/>its<sp/>power<sp/>and<sp/>clocks.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>hold<sp/><sp/>True<sp/>if<sp/>the<sp/>force<sp/>off<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>held.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>False<sp/>if<sp/>the<sp/>force<sp/>off<sp/>signal<sp/>is<sp/>to<sp/>be<sp/>released.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__reset__hal_1gae9adc3f0b8a4303316cf73b1874786d5" kindref="member">nrf_reset_network_force_off</ref>(NRF_RESET_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hold);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_RESET_HAS_APPLICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__reset__hal_1ga2956ac48322d4ebd37e8dca22ae9dd4d" kindref="member">nrf_reset_resetreas_get</ref>(NRF_RESET_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;RESETREAS;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__reset__hal_1ga763234a24c71ba8cb31e82956fce9496" kindref="member">nrf_reset_resetreas_clear</ref>(NRF_RESET_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RESETREAS<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_RESET_HAS_APPLICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__reset__hal_1gae9adc3f0b8a4303316cf73b1874786d5" kindref="member">nrf_reset_network_force_off</ref>(NRF_RESET_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hold)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hold)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;NETWORK.FORCEOFF<sp/>=<sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Hold<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Pos;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nrf53_errata_161())</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)0x50005618UL<sp/>=<sp/>1UL;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;NETWORK.FORCEOFF<sp/>=<sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Release<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Pos;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga97d116463eb34d7e7b6317861b905d7b" kindref="member">NRFX_DELAY_US</ref>(5);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;NETWORK.FORCEOFF<sp/>=<sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Hold<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Pos;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga97d116463eb34d7e7b6317861b905d7b" kindref="member">NRFX_DELAY_US</ref>(1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;NETWORK.FORCEOFF<sp/>=<sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Release<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Pos;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)0x50005618UL<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;NETWORK.FORCEOFF<sp/>=<sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Release<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESET_NETWORK_FORCEOFF_FORCEOFF_Pos;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_RESET_HAS_APPLICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_RESET_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_reset.h"/>
  </compounddef>
</doxygen>
