<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__hsfll_8h" kind="file" language="C++">
    <compoundname>nrf_hsfll.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_hsfll.h</label>
        <link refid="nrf__hsfll_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrf__hsfll__status__clk__t" prot="public">nrf_hsfll_status_clk_t</innerclass>
    <innerclass refid="structnrf__hsfll__freqm__error__t" prot="public">nrf_hsfll_freqm_error_t</innerclass>
    <innerclass refid="structnrf__hsfll__clkctrl__t" prot="public">nrf_hsfll_clkctrl_t</innerclass>
    <innerclass refid="structnrf__hsfll__dithering__t" prot="public">nrf_hsfll_dithering_t</innerclass>
    <innerclass refid="structnrf__hsfll__sleep__t" prot="public">nrf_hsfll_sleep_t</innerclass>
    <innerclass refid="structnrf__hsfll__trim__t" prot="public">nrf_hsfll_trim_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__hsfll__hal_1ga8a46b0d61ca2d324682b76884330e549" prot="public" static="no">
        <name>NRF_HSFLL_HAS_DITHERING_INITVALUE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether initial value for clock dithering configuration is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="52" column="9" bodyfile="hal/nrf_hsfll.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__hsfll__hal_1ga319d84caea05a82fe36f5a717e12d354" prot="public" static="no">
        <name>NRF_HSFLL_HAS_DITHERINIT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether initial value for clock dithering seed configuration is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="59" column="9" bodyfile="hal/nrf_hsfll.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_hsfll_task_t</name>
        <enumvalue id="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a1d1aa0962f779b54ae27d2d3406989ae" prot="public">
          <name>NRF_HSFLL_TASK_START</name>
          <initializer>= offsetof(NRF_HSFLL_Type, TASKS_START)</initializer>
          <briefdescription>
<para>Start the HSFLL. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a626ed1e7d60ba132a4c196c8e7f558bd" prot="public">
          <name>NRF_HSFLL_TASK_STOP</name>
          <initializer>= offsetof(NRF_HSFLL_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stop the HSFLL. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a9fd42b7f977773a1f028565c5ccd2b34" prot="public">
          <name>NRF_HSFLL_TASK_FREQ_MEAS</name>
          <initializer>= offsetof(NRF_HSFLL_Type, TASKS_FREQMEAS)</initializer>
          <briefdescription>
<para>Start frequency measurement in software-controlled mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a5cacc8169f1737a957426789174ea5d0" prot="public">
          <name>NRF_HSFLL_TASK_FREQ_CHANGE</name>
          <initializer>= offsetof(NRF_HSFLL_Type, TASKS_FREQCHANGE)</initializer>
          <briefdescription>
<para>Trigger frequency change. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HSFLL tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="65" column="1" bodyfile="hal/nrf_hsfll.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_hsfll_event_t</name>
        <enumvalue id="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500a577fa5953e1f9ddf58fc4b0fa0f35b67" prot="public">
          <name>NRF_HSFLL_EVENT_STARTED</name>
          <initializer>= offsetof(NRF_HSFLL_Type, EVENTS_STARTED)</initializer>
          <briefdescription>
<para>HSFLL started. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500aee8611794727dea5269e6efe4a205ab8" prot="public">
          <name>NRF_HSFLL_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_HSFLL_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>HSFLL stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500aa8fe7cc76c9f6af4b19f0e180db644c9" prot="public">
          <name>NRF_HSFLL_EVENT_FREQM_DONE</name>
          <initializer>= offsetof(NRF_HSFLL_Type, EVENTS_FREQMDONE)</initializer>
          <briefdescription>
<para>HSFLL frequency measurement done. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500a5b4f6c091326004d42baa02fa970cc42" prot="public">
          <name>NRF_HSFLL_EVENT_FREQ_CHANGED</name>
          <initializer>= offsetof(NRF_HSFLL_Type, EVENTS_FREQCHANGED)</initializer>
          <briefdescription>
<para>HSFLL frequency change done. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HSFLL events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="74" column="1" bodyfile="hal/nrf_hsfll.h" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__hsfll__hal_1ga22d84dbd304c5820d04b30f24eb51876" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_hsfll_mode_status_t</name>
        <enumvalue id="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876ae4707366f19688348511e74363840e40" prot="public">
          <name>NRF_HSFLL_MODE_STATUS_OPEN_LOOP</name>
          <initializer>= HSFLL_CLOCKSTATUS_MODE_OpenLoop</initializer>
          <briefdescription>
<para>Open loop mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876ac3c5b3bfe3187d5425cee3c46e0c90e2" prot="public">
          <name>NRF_HSFLL_MODE_STATUS_CLOSED_LOOP</name>
          <initializer>= HSFLL_CLOCKSTATUS_MODE_ClosedLoop</initializer>
          <briefdescription>
<para>Closed loop mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876a64fafb5c9c162b7a91b3e4f06ce33162" prot="public">
          <name>NRF_HSFLL_MODE_STATUS_BYPASS</name>
          <initializer>= HSFLL_CLOCKSTATUS_MODE_Bypass</initializer>
          <briefdescription>
<para>Bypass mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HSFLL clock status operating modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="83" column="1" bodyfile="hal/nrf_hsfll.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__hsfll__hal_1ga39dc8779fe0c54cc97619419fe1a8882" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_hsfll_mode_ctrl_t</name>
        <enumvalue id="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a170b39f552c1e309a6695fe6108d0915" prot="public">
          <name>NRF_HSFLL_MODE_CTRL_AUTO</name>
          <initializer>= HSFLL_CLOCKCTRL_MODE_MODE_Auto</initializer>
          <briefdescription>
<para>The PCGC controls the mode automatically. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882adea16baa54cd516deccdf3c8b1f8813e" prot="public">
          <name>NRF_HSFLL_MODE_CTRL_OPEN_LOOP</name>
          <initializer>= HSFLL_CLOCKCTRL_MODE_MODE_OpenLoop</initializer>
          <briefdescription>
<para>Open loop mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a299ea696692e727ed26aedf36330560b" prot="public">
          <name>NRF_HSFLL_MODE_CTRL_CLOSED_LOOP</name>
          <initializer>= HSFLL_CLOCKCTRL_MODE_MODE_ClosedLoop</initializer>
          <briefdescription>
<para>Closed loop mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a8f2480b89871d9f9038335794a14a5a2" prot="public">
          <name>NRF_HSFLL_MODE_CTRL_BYPASS</name>
          <initializer>= HSFLL_CLOCKCTRL_MODE_MODE_Bypass</initializer>
          <briefdescription>
<para>Bypass mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HSFLL clock control operating mode settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="108" column="1" bodyfile="hal/nrf_hsfll.h" bodystart="109" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga9dddcf75c0f04862a06387fe606edd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_hsfll_task_address_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_task_t task)</argsstring>
        <name>nrf_hsfll_task_address_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>HSFLL task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the requested task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="366" column="28" bodyfile="hal/nrf_hsfll.h" bodystart="366" bodyend="370" declfile="hal/nrf_hsfll.h" declline="157" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gad25640261347cb07eb76941a2368e09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_task_trigger</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_task_t task)</argsstring>
        <name>nrf_hsfll_task_trigger</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for triggering the specified task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="372" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="372" bodyend="375" declfile="hal/nrf_hsfll.h" declline="166" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga19d1e811d34aee962e02e8fb979fafbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_hsfll_event_address_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_event_t event)</argsstring>
        <name>nrf_hsfll_event_address_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the address of the specified event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>HSFLL event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="377" column="28" bodyfile="hal/nrf_hsfll.h" bodystart="377" bodyend="381" declfile="hal/nrf_hsfll.h" declline="176" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga3eaaa073b59ea26da9b23dcb22c73e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_event_clear</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_event_t event)</argsstring>
        <name>nrf_hsfll_event_clear</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="383" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="383" bodyend="387" declfile="hal/nrf_hsfll.h" declline="185" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gae60378a605af57564f44e359b7d2043b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_hsfll_event_check</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_event_t event)</argsstring>
        <name>nrf_hsfll_event_check</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the specified event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="389" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="389" bodyend="393" declfile="hal/nrf_hsfll.h" declline="196" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gadac31e8d57d71c6b4186f59db8f1340e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_status_clk_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_status_clk_t *p_status)</argsstring>
        <name>nrf_hsfll_status_clk_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__status__clk__t" kindref="compound">nrf_hsfll_status_clk_t</ref> *</type>
          <declname>p_status</declname>
        </param>
        <briefdescription>
<para>Function for getting the HSFLL status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with the HSFLL status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="395" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="395" bodyend="412" declfile="hal/nrf_hsfll.h" declline="205" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gaa7adafcaa53407dc41099e5d74155d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_hsfll_freqm_done_check</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg)</argsstring>
        <name>nrf_hsfll_freqm_done_check</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking whether the HSFLL frequency measurement is completed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The frequency measurement is completed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The frequency measurement is in progress. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="414" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="414" bodyend="418" declfile="hal/nrf_hsfll.h" declline="216" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga1c70443d909e28515ece4bc694bd5277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_freqm_error_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_freqm_error_t *p_error)</argsstring>
        <name>nrf_hsfll_freqm_error_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__freqm__error__t" kindref="compound">nrf_hsfll_freqm_error_t</ref> *</type>
          <declname>p_error</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL frequency measurement errors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with HSFLL frequency measurement errors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="420" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="420" bodyend="433" declfile="hal/nrf_hsfll.h" declline="225" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga05d00a41e4e025418a0b54875bf03864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_hsfll_freqm_meas_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg)</argsstring>
        <name>nrf_hsfll_freqm_meas_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL frequency measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last frequency measurement value. Measures the number of reference clock cycles. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="435" column="28" bodyfile="hal/nrf_hsfll.h" bodystart="435" bodyend="438" declfile="hal/nrf_hsfll.h" declline="235" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gacd78b204be22175d34bb81942ccaa8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_mode_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_clkctrl_t const *p_clkctrl)</argsstring>
        <name>nrf_hsfll_clkctrl_mode_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref> const *</type>
          <declname>p_clkctrl</declname>
        </param>
        <briefdescription>
<para>Function for setting HSFLL clock control mode settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_clkctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with new HSFLL clock control mode settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="440" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="440" bodyend="451" declfile="hal/nrf_hsfll.h" declline="243" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga98ef21e04eb98689965abb5a129b3066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_mode_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_clkctrl_t *p_clkctrl)</argsstring>
        <name>nrf_hsfll_clkctrl_mode_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref> *</type>
          <declname>p_clkctrl</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL clock control mode settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_clkctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with HSFLL clock control settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="453" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="453" bodyend="465" declfile="hal/nrf_hsfll.h" declline="252" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gaa8613335cda9ae2024187c716f9cfc36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_dithering_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_dithering_t const *p_config)</argsstring>
        <name>nrf_hsfll_clkctrl_dithering_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting HSFLL clock dithering configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with new HSFLL clock dithering configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="467" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="467" bodyend="484" declfile="hal/nrf_hsfll.h" declline="261" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gae9621d76a7feb65ac1ded46406f12bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_dithering_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_dithering_t *p_config)</argsstring>
        <name>nrf_hsfll_clkctrl_dithering_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref> *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL clock dithering configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with HSFLL clock dithering configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="486" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="486" bodyend="501" declfile="hal/nrf_hsfll.h" declline="271" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga8128f0a55ca09443c6156bbb7b18406f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_mult_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, uint32_t multiplier)</argsstring>
        <name>nrf_hsfll_clkctrl_mult_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>multiplier</declname>
        </param>
        <briefdescription>
<para>Function for setting HSFLL frequency multiplier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">multiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of new multiplier. Valid <computeroutput>multiplier</computeroutput> range is from 4 to 25. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="503" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="503" bodyend="508" declfile="hal/nrf_hsfll.h" declline="280" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga16416adfeb7ad9ce1f7ba5284a86c085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_hsfll_clkctrl_mult_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg)</argsstring>
        <name>nrf_hsfll_clkctrl_mult_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL frequency multiplier. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current value of frequency multiplier used by HSFLL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="510" column="28" bodyfile="hal/nrf_hsfll.h" bodystart="510" bodyend="513" declfile="hal/nrf_hsfll.h" declline="289" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga2b2da2ee38c67145860f9ef0a593f2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_sleep_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_sleep_t const *p_config)</argsstring>
        <name>nrf_hsfll_clkctrl_sleep_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting HSFLL clock sleep configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with new HSFLL clock sleep configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="515" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="515" bodyend="529" declfile="hal/nrf_hsfll.h" declline="297" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga3f5f1222dffd22bee5b1b863f65f8d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_sleep_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_sleep_t *p_config)</argsstring>
        <name>nrf_hsfll_clkctrl_sleep_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref> *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for getting HSFLL clock sleep configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with HSFLL clock sleep configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="531" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="531" bodyend="540" declfile="hal/nrf_hsfll.h" declline="306" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gaaf9a3a9f0bc7019d955ed88d82fa0684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_retainfinetrim_enable_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, bool retain)</argsstring>
        <name>nrf_hsfll_clkctrl_retainfinetrim_enable_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>retain</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the retention of HSFLL fine trim control. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">retain</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the fine trim control is to be retained when HSFLL goes to open-loop mode, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="542" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="542" bodyend="550" declfile="hal/nrf_hsfll.h" declline="316" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga60dc7710809a136d150ffd4fa1f9c085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_overridelocked_enable_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, bool override)</argsstring>
        <name>nrf_hsfll_clkctrl_overridelocked_enable_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>override</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the override of the HSFLL LOCKED signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">override</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the override is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="552" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="552" bodyend="560" declfile="hal/nrf_hsfll.h" declline="325" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gaa8da86a746b26811c0c29681653c9085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_clkctrl_dither_init_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, uint32_t seed)</argsstring>
        <name>nrf_hsfll_clkctrl_dither_init_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Function for setting the configurable seed of HSFLL clock dithering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>32-bit initial value for the PRBS. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="563" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="563" bodyend="567" declfile="hal/nrf_hsfll.h" declline="335" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga20306b5cda469bc8cfd0e86b26984507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_mirror_lock_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, bool enable)</argsstring>
        <name>nrf_hsfll_mirror_lock_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling lock for mirrored registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the lock is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="571" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="571" bodyend="575" declfile="hal/nrf_hsfll.h" declline="344" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1gaf927798c0f1c728d9dfbab02b337ad9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_trim_set</definition>
        <argsstring>(NRF_HSFLL_Type *p_reg, nrf_hsfll_trim_t const *p_trim)</argsstring>
        <name>nrf_hsfll_trim_set</name>
        <param>
          <type>NRF_HSFLL_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref> const *</type>
          <declname>p_trim</declname>
        </param>
        <briefdescription>
<para>Function to setup trims configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_trim</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with new HSFLL trim configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="577" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="577" bodyend="588" declfile="hal/nrf_hsfll.h" declline="352" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__hsfll__hal_1ga6a0b3a01f766199a67d2ca7473a764b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_hsfll_trim_get</definition>
        <argsstring>(NRF_HSFLL_Type const *p_reg, nrf_hsfll_trim_t *p_trim)</argsstring>
        <name>nrf_hsfll_trim_get</name>
        <param>
          <type>NRF_HSFLL_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref> *</type>
          <declname>p_trim</declname>
        </param>
        <briefdescription>
<para>Function to getting trims configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_trim</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with HSFLL trim configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_hsfll.h" line="590" column="24" bodyfile="hal/nrf_hsfll.h" bodystart="590" bodyend="598" declfile="hal/nrf_hsfll.h" declline="361" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_HSFLL_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_HSFLL_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_hsfll_hal<sp/>HSFLL<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_clock</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>High<sp/>Speed<sp/>Frequency<sp/>Locked<sp/>Loop<sp/>(HSFLL).</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HSFLL_CLOCKCTRL_DITHERING_INITVALUE_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>initial<sp/>value<sp/>for<sp/>clock<sp/>dithering<sp/>configuration<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_HSFLL_HAS_DITHERING_INITVALUE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_HSFLL_HAS_DITHERING_INITVALUE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HSFLL_CLOCKCTRL_DITHERINIT_ResetValue)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>initial<sp/>value<sp/>for<sp/>clock<sp/>dithering<sp/>seed<sp/>configuration<sp/>is<sp/>present.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_HSFLL_HAS_DITHERINIT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_HSFLL_HAS_DITHERINIT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a1d1aa0962f779b54ae27d2d3406989ae" kindref="member">NRF_HSFLL_TASK_START</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>TASKS_START),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>the<sp/>HSFLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a626ed1e7d60ba132a4c196c8e7f558bd" kindref="member">NRF_HSFLL_TASK_STOP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>TASKS_STOP),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stop<sp/>the<sp/>HSFLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a9fd42b7f977773a1f028565c5ccd2b34" kindref="member">NRF_HSFLL_TASK_FREQ_MEAS</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>TASKS_FREQMEAS),<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Start<sp/>frequency<sp/>measurement<sp/>in<sp/>software-controlled<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ggaaf63c801dadc3cc404e66e2288ecdd70a5cacc8169f1737a957426789174ea5d0" kindref="member">NRF_HSFLL_TASK_FREQ_CHANGE</ref><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>TASKS_FREQCHANGE),<sp/></highlight><highlight class="comment">///&lt;<sp/>Trigger<sp/>frequency<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500a577fa5953e1f9ddf58fc4b0fa0f35b67" kindref="member">NRF_HSFLL_EVENT_STARTED</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>EVENTS_STARTED),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>started.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500aee8611794727dea5269e6efe4a205ab8" kindref="member">NRF_HSFLL_EVENT_STOPPED</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>EVENTS_STOPPED),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500aa8fe7cc76c9f6af4b19f0e180db644c9" kindref="member">NRF_HSFLL_EVENT_FREQM_DONE</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>EVENTS_FREQMDONE),<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>frequency<sp/>measurement<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga67c57226bb78f8858844566d3c89b500a5b4f6c091326004d42baa02fa970cc42" kindref="member">NRF_HSFLL_EVENT_FREQ_CHANGED</ref><sp/>=<sp/>offsetof(NRF_HSFLL_Type,<sp/>EVENTS_FREQCHANGED),<sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>frequency<sp/>change<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>status<sp/>operating<sp/>modes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876ae4707366f19688348511e74363840e40" kindref="member">NRF_HSFLL_MODE_STATUS_OPEN_LOOP</ref><sp/><sp/><sp/>=<sp/>HSFLL_CLOCKSTATUS_MODE_OpenLoop,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Open<sp/>loop<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876ac3c5b3bfe3187d5425cee3c46e0c90e2" kindref="member">NRF_HSFLL_MODE_STATUS_CLOSED_LOOP</ref><sp/>=<sp/>HSFLL_CLOCKSTATUS_MODE_ClosedLoop,<sp/></highlight><highlight class="comment">///&lt;<sp/>Closed<sp/>loop<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga22d84dbd304c5820d04b30f24eb51876a64fafb5c9c162b7a91b3e4f06ce33162" kindref="member">NRF_HSFLL_MODE_STATUS_BYPASS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HSFLL_CLOCKSTATUS_MODE_Bypass,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bypass<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><ref refid="group__nrf__hsfll__hal_1ga22d84dbd304c5820d04b30f24eb51876" kindref="member">nrf_hsfll_mode_status_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>status.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structnrf__hsfll__status__clk__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga22d84dbd304c5820d04b30f24eb51876" kindref="member">nrf_hsfll_mode_status_t</ref><sp/>mode;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>operating<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>override<sp/>mode<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accuracy;<sp/></highlight><highlight class="comment">///&lt;<sp/>Clock<sp/>accurracy<sp/>is<sp/>within<sp/>2%.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>locked<sp/>to<sp/>reference<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__status__clk__t" kindref="compound">nrf_hsfll_status_clk_t</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>frequency<sp/>measurements<sp/>errors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structnrf__hsfll__freqm__error__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Trim<sp/>error<sp/>status.<sp/>True<sp/>if<sp/>outside<sp/>limit,<sp/>false<sp/>if<sp/>within.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim_underflow;<sp/></highlight><highlight class="comment">///&lt;<sp/>Underflow<sp/>error<sp/>status.<sp/>True<sp/>if<sp/>outside<sp/>limit,<sp/>false<sp/>if<sp/>within.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim_overflow;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Overflow<sp/>error<sp/>status.<sp/>True<sp/>if<sp/>outside<sp/>limit,<sp/>false<sp/>if<sp/>within.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__freqm__error__t" kindref="compound">nrf_hsfll_freqm_error_t</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>control<sp/>operating<sp/>mode<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a170b39f552c1e309a6695fe6108d0915" kindref="member">NRF_HSFLL_MODE_CTRL_AUTO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HSFLL_CLOCKCTRL_MODE_MODE_Auto,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>PCGC<sp/>controls<sp/>the<sp/>mode<sp/>automatically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882adea16baa54cd516deccdf3c8b1f8813e" kindref="member">NRF_HSFLL_MODE_CTRL_OPEN_LOOP</ref><sp/><sp/><sp/>=<sp/>HSFLL_CLOCKCTRL_MODE_MODE_OpenLoop,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Open<sp/>loop<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a299ea696692e727ed26aedf36330560b" kindref="member">NRF_HSFLL_MODE_CTRL_CLOSED_LOOP</ref><sp/>=<sp/>HSFLL_CLOCKCTRL_MODE_MODE_ClosedLoop,<sp/></highlight><highlight class="comment">///&lt;<sp/>Closed<sp/>loop<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gga39dc8779fe0c54cc97619419fe1a8882a8f2480b89871d9f9038335794a14a5a2" kindref="member">NRF_HSFLL_MODE_CTRL_BYPASS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HSFLL_CLOCKCTRL_MODE_MODE_Bypass,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bypass<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="group__nrf__hsfll__hal_1ga39dc8779fe0c54cc97619419fe1a8882" kindref="member">nrf_hsfll_mode_ctrl_t</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>control.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structnrf__hsfll__clkctrl__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga39dc8779fe0c54cc97619419fe1a8882" kindref="member">nrf_hsfll_mode_ctrl_t</ref><sp/>mode;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>operating<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///&lt;<sp/>HSFLL<sp/>override<sp/>mode.<sp/>True<sp/>if<sp/>enabled,<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>dithering<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structnrf__hsfll__dithering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>cyclecount;<sp/></highlight><highlight class="comment">///&lt;<sp/>Cycle<sp/>count<sp/>configuration<sp/>for<sp/>clock<sp/>dithering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>maxoffset;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Maximum<sp/>offset<sp/>configuration<sp/>for<sp/>clock<sp/>dithering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_HSFLL_HAS_DITHERING_INITVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>initvalue;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Initial<sp/>value<sp/>for<sp/>the<sp/>clock<sp/>dithering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>enable;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Enable<sp/>the<sp/>clock<sp/>dithering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>clock<sp/>sleep<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structnrf__hsfll__sleep__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mode;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Power<sp/>down<sp/>the<sp/>HSFLL<sp/>core.<sp/>True<sp/>if<sp/>powered<sp/>down,<sp/>false<sp/>if<sp/>in<sp/>normal<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retain;<sp/></highlight><highlight class="comment">///&lt;<sp/>Retain<sp/>all<sp/>inputs<sp/>while<sp/>powered<sp/>down.<sp/>True<sp/>if<sp/>retention<sp/>is<sp/>enabled,<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">/**<sp/>@brief<sp/>HSFLL<sp/>trims<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structnrf__hsfll__trim__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>coarse;<sp/></highlight><highlight class="comment">///&lt;<sp/>Coarse<sp/>frequance<sp/>trimming.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>fine;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Fine<sp/>frequency<sp/>trimming.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>vsup;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Internal<sp/>regulator<sp/>voltage<sp/>supply<sp/>level<sp/>trimming.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>task.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>HSFLL<sp/>task.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>requested<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga9dddcf75c0f04862a06387fe606edd88" kindref="member">nrf_hsfll_task_address_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>triggering<sp/>the<sp/>specified<sp/>task.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gad25640261347cb07eb76941a2368e09c" kindref="member">nrf_hsfll_task_trigger</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>HSFLL<sp/>event.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga19d1e811d34aee962e02e8fb979fafbf" kindref="member">nrf_hsfll_event_address_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>cleared.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga3eaaa073b59ea26da9b23dcb22c73e00" kindref="member">nrf_hsfll_event_clear</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>specified<sp/>event.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gae60378a605af57564f44e359b7d2043b" kindref="member">nrf_hsfll_event_check</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>HSFLL<sp/>status.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_status<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>the<sp/>HSFLL<sp/>status.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gadac31e8d57d71c6b4186f59db8f1340e" kindref="member">nrf_hsfll_status_clk_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__status__clk__t" kindref="compound">nrf_hsfll_status_clk_t</ref><sp/>*<sp/>p_status);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>HSFLL<sp/>frequency<sp/>measurement<sp/>is<sp/>completed.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>frequency<sp/>measurement<sp/>is<sp/>completed.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>frequency<sp/>measurement<sp/>is<sp/>in<sp/>progress.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa7adafcaa53407dc41099e5d74155d0e" kindref="member">nrf_hsfll_freqm_done_check</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>frequency<sp/>measurement<sp/>errors.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_error<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>HSFLL<sp/>frequency<sp/>measurement</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga1c70443d909e28515ece4bc694bd5277" kindref="member">nrf_hsfll_freqm_error_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__freqm__error__t" kindref="compound">nrf_hsfll_freqm_error_t</ref><sp/>*<sp/>p_error);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>frequency<sp/>measurement.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>last<sp/>frequency<sp/>measurement<sp/>value.<sp/>Measures<sp/>the<sp/>number<sp/>of<sp/>reference<sp/>clock<sp/>cycles.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga05d00a41e4e025418a0b54875bf03864" kindref="member">nrf_hsfll_freqm_meas_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>HSFLL<sp/>clock<sp/>control<sp/>mode<sp/>settings.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_clkctrl<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>new<sp/>HSFLL<sp/>clock<sp/>control<sp/>mode<sp/>settings.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gacd78b204be22175d34bb81942ccaa8cc" kindref="member">nrf_hsfll_clkctrl_mode_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_clkctrl);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>clock<sp/>control<sp/>mode<sp/>settings.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_clkctrl<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>HSFLL<sp/>clock<sp/>control<sp/>settings.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga98ef21e04eb98689965abb5a129b3066" kindref="member">nrf_hsfll_clkctrl_mode_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref><sp/>*<sp/><sp/>p_clkctrl);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>HSFLL<sp/>clock<sp/>dithering<sp/>configuration.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>new<sp/>HSFLL<sp/>clock<sp/>dithering<sp/>configuration.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa8613335cda9ae2024187c716f9cfc36" kindref="member">nrf_hsfll_clkctrl_dithering_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>clock<sp/>dithering<sp/>configuration.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>HSFLL<sp/>clock<sp/>dithering</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configuration.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gae9621d76a7feb65ac1ded46406f12bb9" kindref="member">nrf_hsfll_clkctrl_dithering_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>HSFLL<sp/>frequency<sp/>multiplier.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>multiplier<sp/>Value<sp/>of<sp/>new<sp/>multiplier.<sp/>Valid<sp/>@c<sp/>multiplier<sp/>range<sp/>is<sp/>from<sp/>4<sp/>to<sp/>25.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga8128f0a55ca09443c6156bbb7b18406f" kindref="member">nrf_hsfll_clkctrl_mult_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>multiplier);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>frequency<sp/>multiplier.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@return<sp/>Current<sp/>value<sp/>of<sp/>frequency<sp/>multiplier<sp/>used<sp/>by<sp/>HSFLL.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga16416adfeb7ad9ce1f7ba5284a86c085" kindref="member">nrf_hsfll_clkctrl_mult_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>HSFLL<sp/>clock<sp/>sleep<sp/>configuration.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>new<sp/>HSFLL<sp/>clock<sp/>sleep<sp/>configuration.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga2b2da2ee38c67145860f9ef0a593f2ab" kindref="member">nrf_hsfll_clkctrl_sleep_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>HSFLL<sp/>clock<sp/>sleep<sp/>configuration.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>HSFLL<sp/>clock<sp/>sleep<sp/>configuration.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga3f5f1222dffd22bee5b1b863f65f8d84" kindref="member">nrf_hsfll_clkctrl_sleep_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref><sp/>*<sp/><sp/><sp/><sp/>p_config);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>retention<sp/>of<sp/>HSFLL<sp/>fine<sp/>trim<sp/>control.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>retain<sp/>True<sp/>if<sp/>the<sp/>fine<sp/>trim<sp/>control<sp/>is<sp/>to<sp/>be<sp/>retained<sp/>when<sp/>HSFLL<sp/>goes<sp/>to<sp/>open-loop</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaaf9a3a9f0bc7019d955ed88d82fa0684" kindref="member">nrf_hsfll_clkctrl_retainfinetrim_enable_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retain);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>override<sp/>of<sp/>the<sp/>HSFLL<sp/>LOCKED<sp/>signal.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>override<sp/>True<sp/>if<sp/>the<sp/>override<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga60dc7710809a136d150ffd4fa1f9c085" kindref="member">nrf_hsfll_clkctrl_overridelocked_enable_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_HSFLL_HAS_DITHERINIT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>configurable<sp/>seed<sp/>of<sp/>HSFLL<sp/>clock<sp/>dithering.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>seed<sp/><sp/>32-bit<sp/>initial<sp/>value<sp/>for<sp/>the<sp/>PRBS.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa8da86a746b26811c0c29681653c9085" kindref="member">nrf_hsfll_clkctrl_dither_init_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>seed);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_HSFLL_HAS_DITHERINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>lock<sp/>for<sp/>mirrored<sp/>registers.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>the<sp/>lock<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga20306b5cda469bc8cfd0e86b26984507" kindref="member">nrf_hsfll_mirror_lock_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>to<sp/>setup<sp/>trims<sp/>configuration.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_trim<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>new<sp/>HSFLL<sp/>trim<sp/>configuration.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaf927798c0f1c728d9dfbab02b337ad9e" kindref="member">nrf_hsfll_trim_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_trim);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>to<sp/>getting<sp/>trims<sp/>configuration.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_trim<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>HSFLL<sp/>trim<sp/>configuration.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga6a0b3a01f766199a67d2ca7473a764b0" kindref="member">nrf_hsfll_trim_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_trim);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga9dddcf75c0f04862a06387fe606edd88" kindref="member">nrf_hsfll_task_address_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gad25640261347cb07eb76941a2368e09c" kindref="member">nrf_hsfll_task_trigger</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__hsfll__hal_1gaaf63c801dadc3cc404e66e2288ecdd70" kindref="member">nrf_hsfll_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga19d1e811d34aee962e02e8fb979fafbf" kindref="member">nrf_hsfll_event_address_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_task_event_address_get(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga3eaaa073b59ea26da9b23dcb22c73e00" kindref="member">nrf_hsfll_event_clear</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gae60378a605af57564f44e359b7d2043b" kindref="member">nrf_hsfll_event_check</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga67c57226bb78f8858844566d3c89b500" kindref="member">nrf_hsfll_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gadac31e8d57d71c6b4186f59db8f1340e" kindref="member">nrf_hsfll_status_clk_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__status__clk__t" kindref="compound">nrf_hsfll_status_clk_t</ref><sp/>*<sp/>p_status)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_status);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>p_reg-&gt;CLOCKSTATUS;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>p_status-&gt;<ref refid="structnrf__hsfll__status__clk__t_1abe37b7af88588a848c66cf0c7e33f939" kindref="member">mode</ref><sp/>=</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__nrf__hsfll__hal_1ga22d84dbd304c5820d04b30f24eb51876" kindref="member">nrf_hsfll_mode_status_t</ref>)((reg<sp/>&amp;<sp/>HSFLL_CLOCKSTATUS_MODE_Msk)<sp/>&gt;&gt;<sp/>HSFLL_CLOCKSTATUS_MODE_Pos);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>p_status-&gt;<ref refid="structnrf__hsfll__status__clk__t_1a1fed69b09e553ff64dba0f1b9ddb43bd" kindref="member">override</ref><sp/>=<sp/>((reg<sp/>&amp;<sp/>HSFLL_CLOCKSTATUS_OVERRIDE_Msk)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKSTATUS_OVERRIDE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKSTATUS_OVERRIDE_Enabled;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>p_status-&gt;<ref refid="structnrf__hsfll__status__clk__t_1a23aa6008205628dea5ba2de10306b16a" kindref="member">accuracy</ref><sp/>=<sp/>((reg<sp/>&amp;<sp/>HSFLL_CLOCKSTATUS_ACCURACY_Msk)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKSTATUS_ACCURACY_Pos)<sp/>==</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKSTATUS_ACCURACY_WithinLimit;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>p_status-&gt;<ref refid="structnrf__hsfll__status__clk__t_1ae41c337b6e36e586469a779f0c4c98da" kindref="member">locked</ref><sp/>=<sp/>((reg<sp/>&amp;<sp/>HSFLL_CLOCKSTATUS_LOCKED_Msk)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKSTATUS_LOCKED_Pos)<sp/>==</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKSTATUS_LOCKED_Locked;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa7adafcaa53407dc41099e5d74155d0e" kindref="member">nrf_hsfll_freqm_done_check</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((p_reg-&gt;FREQM.DONE<sp/>&amp;<sp/>HSFLL_FREQM_DONE_DONE_Msk)<sp/>&gt;&gt;<sp/>HSFLL_FREQM_DONE_DONE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_FREQM_DONE_DONE_Completed;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga1c70443d909e28515ece4bc694bd5277" kindref="member">nrf_hsfll_freqm_error_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__freqm__error__t" kindref="compound">nrf_hsfll_freqm_error_t</ref><sp/>*<sp/>p_error)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_error);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>p_error-&gt;<ref refid="structnrf__hsfll__freqm__error__t_1a718be3ce4592c8cb38e8acf2e5fda79c" kindref="member">error</ref><sp/>=</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_reg-&gt;FREQM.ERROR<sp/>&amp;<sp/>HSFLL_FREQM_ERROR_ERROR_Msk)<sp/>&gt;&gt;<sp/>HSFLL_FREQM_ERROR_ERROR_Pos)<sp/>==</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_FREQM_ERROR_ERROR_OutsideLimit;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>p_error-&gt;<ref refid="structnrf__hsfll__freqm__error__t_1a9f84f15deb1e4eb2b411f1e54b4250e4" kindref="member">trim_underflow</ref><sp/>=<sp/>((p_reg-&gt;FREQM.ERROR<sp/>&amp;<sp/>HSFLL_FREQM_ERROR_TRIMUNDERFLOW_Msk)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_FREQM_ERROR_TRIMUNDERFLOW_Pos)<sp/>==</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_FREQM_ERROR_TRIMUNDERFLOW_OutsideLimit;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>p_error-&gt;<ref refid="structnrf__hsfll__freqm__error__t_1a8eeb5ec7ca8a348877a29c200fad8923" kindref="member">trim_overflow</ref><sp/>=<sp/>((p_reg-&gt;FREQM.ERROR<sp/>&amp;<sp/>HSFLL_FREQM_ERROR_TRIMOVERFLOW_Msk)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_FREQM_ERROR_TRIMOVERFLOW_Pos)<sp/>==</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_FREQM_ERROR_TRIMOVERFLOW_OutsideLimit;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga05d00a41e4e025418a0b54875bf03864" kindref="member">nrf_hsfll_freqm_meas_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;FREQM.MEAS<sp/>&amp;<sp/>HSFLL_FREQM_MEAS_VALUE_Msk)<sp/>&gt;&gt;<sp/>HSFLL_FREQM_MEAS_VALUE_Pos;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gacd78b204be22175d34bb81942ccaa8cc" kindref="member">nrf_hsfll_clkctrl_mode_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_clkctrl)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_clkctrl);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.MODE<sp/>=<sp/>((p_clkctrl-&gt;<ref refid="structnrf__hsfll__clkctrl__t_1ac64b3739e4cb37a0a69c7ed40e02ce8e" kindref="member">mode</ref><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_MODE_MODE_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MODE_MODE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p_clkctrl-&gt;<ref refid="structnrf__hsfll__clkctrl__t_1a9f2b7c3c50d04c558b37e99eb1a3567d" kindref="member">override</ref><sp/>?</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Disabled)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Msk);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga98ef21e04eb98689965abb5a129b3066" kindref="member">nrf_hsfll_clkctrl_mode_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__clkctrl__t" kindref="compound">nrf_hsfll_clkctrl_t</ref><sp/>*<sp/><sp/>p_clkctrl)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_clkctrl);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>p_reg-&gt;CLOCKCTRL.MODE;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>p_clkctrl-&gt;<ref refid="structnrf__hsfll__clkctrl__t_1ac64b3739e4cb37a0a69c7ed40e02ce8e" kindref="member">mode</ref><sp/>=</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__nrf__hsfll__hal_1ga39dc8779fe0c54cc97619419fe1a8882" kindref="member">nrf_hsfll_mode_ctrl_t</ref>)((reg<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_MODE_MODE_Msk)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_MODE_MODE_Pos);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>p_clkctrl-&gt;<ref refid="structnrf__hsfll__clkctrl__t_1a9f2b7c3c50d04c558b37e99eb1a3567d" kindref="member">override</ref><sp/>=<sp/>((reg<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Msk)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Pos)<sp/>==</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MODE_OVERRIDE_Enabled;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa8613335cda9ae2024187c716f9cfc36" kindref="member">nrf_hsfll_clkctrl_dithering_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.DITHERING<sp/>=</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_HSFLL_HAS_DITHERING_INITVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1ab720172bf5b46279f7101581876c75b4" kindref="member">initvalue</ref><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_DITHERING_INITVALUE_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_INITVALUE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1ad8b63f26776f6c9e6d04e7649a0587ae" kindref="member">cyclecount</ref><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_DITHERING_CYCLECOUNT_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_CYCLECOUNT_Msk)<sp/>|</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1aa239ead888f2777ab5df41fdab6dcab0" kindref="member">maxoffset</ref><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_DITHERING_MAXOFFSET_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_MAXOFFSET_Msk)<sp/>|</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1a0f783d5974ad8530315d9238776bd561" kindref="member">enable</ref><sp/>?</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Disabled)<sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Msk);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gae9621d76a7feb65ac1ded46406f12bb9" kindref="member">nrf_hsfll_clkctrl_dithering_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__dithering__t" kindref="compound">nrf_hsfll_dithering_t</ref><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1ad8b63f26776f6c9e6d04e7649a0587ae" kindref="member">cyclecount</ref><sp/>=<sp/>(p_reg-&gt;CLOCKCTRL.MODE<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_DITHERING_CYCLECOUNT_Msk)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_DITHERING_CYCLECOUNT_Pos;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1aa239ead888f2777ab5df41fdab6dcab0" kindref="member">maxoffset</ref><sp/>=<sp/>(p_reg-&gt;CLOCKCTRL.MODE<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_DITHERING_MAXOFFSET_Msk)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_DITHERING_MAXOFFSET_Pos;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1a0f783d5974ad8530315d9238776bd561" kindref="member">enable</ref><sp/>=<sp/>((p_reg-&gt;CLOCKCTRL.MODE<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Msk)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_DITHERING_MAXOFFSET_Pos)<sp/>==</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERING_EN_Enabled;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_HSFLL_HAS_DITHERING_INITVALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__dithering__t_1ab720172bf5b46279f7101581876c75b4" kindref="member">initvalue</ref><sp/>=<sp/>(p_reg-&gt;CLOCKCTRL.MODE<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_DITHERING_INITVALUE_Msk)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_DITHERING_INITVALUE_Pos;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga8128f0a55ca09443c6156bbb7b18406f" kindref="member">nrf_hsfll_clkctrl_mult_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.MULT<sp/>=<sp/>(multiplier<sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_MULT_VAL_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_MULT_VAL_Msk;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__hsfll__hal_1ga16416adfeb7ad9ce1f7ba5284a86c085" kindref="member">nrf_hsfll_clkctrl_mult_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p_reg-&gt;CLOCKCTRL.MULT<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_MULT_VAL_Msk)<sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_MULT_VAL_Pos;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga2b2da2ee38c67145860f9ef0a593f2ab" kindref="member">nrf_hsfll_clkctrl_sleep_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.SLEEP<sp/>=<sp/>(((p_config-&gt;<ref refid="structnrf__hsfll__sleep__t_1a568e95d8c277cfe21a8a43c764fecaa0" kindref="member">mode</ref><sp/>?</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Sleep<sp/>:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Normal)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Msk)<sp/>|</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p_config-&gt;<ref refid="structnrf__hsfll__sleep__t_1aaf48fee2e595d1199d1a8b1be50388b1" kindref="member">retain</ref><sp/>?</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Disabled)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Msk);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga3f5f1222dffd22bee5b1b863f65f8d84" kindref="member">nrf_hsfll_clkctrl_sleep_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__sleep__t" kindref="compound">nrf_hsfll_sleep_t</ref><sp/>*<sp/><sp/><sp/><sp/>p_config)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_config);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__sleep__t_1a568e95d8c277cfe21a8a43c764fecaa0" kindref="member">mode</ref><sp/>=<sp/>((p_reg-&gt;CLOCKCTRL.SLEEP<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Msk)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Pos)<sp/>==<sp/>HSFLL_CLOCKCTRL_SLEEP_MODE_Sleep;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrf__hsfll__sleep__t_1aaf48fee2e595d1199d1a8b1be50388b1" kindref="member">retain</ref><sp/>=<sp/>((p_reg-&gt;CLOCKCTRL.SLEEP<sp/>&amp;<sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Msk)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Pos)<sp/>==</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_SLEEP_RETAIN_Enabled;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaaf9a3a9f0bc7019d955ed88d82fa0684" kindref="member">nrf_hsfll_clkctrl_retainfinetrim_enable_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retain)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.RETAINFINETRIM<sp/>=<sp/>((retain<sp/>?</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_RETAINFINETRIM_RETAIN_Retain<sp/>:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_RETAINFINETRIM_RETAIN_NoRetain)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_RETAINFINETRIM_RETAIN_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_RETAINFINETRIM_RETAIN_Msk;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga60dc7710809a136d150ffd4fa1f9c085" kindref="member">nrf_hsfll_clkctrl_overridelocked_enable_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.OVERRIDELOCKED<sp/>=<sp/>((</highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>?</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_OVERRIDELOCKED_OVERRIDE_Override<sp/>:</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_OVERRIDELOCKED_OVERRIDE_NoOperation)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_OVERRIDELOCKED_OVERRIDE_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_OVERRIDELOCKED_OVERRIDE_Msk;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_HSFLL_HAS_DITHERINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaa8da86a746b26811c0c29681653c9085" kindref="member">nrf_hsfll_clkctrl_dither_init_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>seed)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CLOCKCTRL.DITHERINIT<sp/>=<sp/>(seed<sp/>&lt;&lt;<sp/>HSFLL_CLOCKCTRL_DITHERINIT_SEED_Pos)<sp/>&amp;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HSFLL_CLOCKCTRL_DITHERINIT_SEED_Msk;</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_HSFLL_HAS_DITHERINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga20306b5cda469bc8cfd0e86b26984507" kindref="member">nrf_hsfll_mirror_lock_set</ref>(NRF_HSFLL_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;MIRROR<sp/>=<sp/>((enable<sp/>?<sp/>HSFLL_MIRROR_LOCK_Enabled<sp/>:<sp/>HSFLL_MIRROR_LOCK_Disabled)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>HSFLL_MIRROR_LOCK_Pos)<sp/>&amp;<sp/>HSFLL_MIRROR_LOCK_Msk;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1gaf927798c0f1c728d9dfbab02b337ad9e" kindref="member">nrf_hsfll_trim_set</ref>(NRF_HSFLL_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_trim)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_trim);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga20306b5cda469bc8cfd0e86b26984507" kindref="member">nrf_hsfll_mirror_lock_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TRIM.VSUP<sp/><sp/><sp/>=<sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1aa811bd2180bf3d397f6b96db21015460" kindref="member">vsup</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TRIM.COARSE<sp/>=<sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1ad88f582c4a3180d91f1f35619978586e" kindref="member">coarse</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TRIM.FINE<sp/><sp/><sp/>=<sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1a5f71ce7aedfae8e3dc6b315e24107cf7" kindref="member">fine</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__hsfll__hal_1ga20306b5cda469bc8cfd0e86b26984507" kindref="member">nrf_hsfll_mirror_lock_set</ref>(p_reg,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__hsfll__hal_1ga6a0b3a01f766199a67d2ca7473a764b0" kindref="member">nrf_hsfll_trim_get</ref>(NRF_HSFLL_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__hsfll__trim__t" kindref="compound">nrf_hsfll_trim_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>p_trim)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(p_trim);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1aa811bd2180bf3d397f6b96db21015460" kindref="member">vsup</ref><sp/><sp/><sp/>=<sp/>(uint8_t)p_reg-&gt;TRIM.VSUP;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1ad88f582c4a3180d91f1f35619978586e" kindref="member">coarse</ref><sp/>=<sp/>(uint8_t)p_reg-&gt;TRIM.COARSE;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>p_trim-&gt;<ref refid="structnrf__hsfll__trim__t_1a5f71ce7aedfae8e3dc6b315e24107cf7" kindref="member">fine</ref><sp/><sp/><sp/>=<sp/>(uint8_t)p_reg-&gt;TRIM.FINE;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="602"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_HSFLL_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_hsfll.h"/>
  </compounddef>
</doxygen>
