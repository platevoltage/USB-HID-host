<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__vpr__csr_8h" kind="file" language="C++">
    <compoundname>nrf_vpr_csr.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_vpr_csr.h</label>
        <link refid="nrf__vpr__csr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" prot="public" static="no">
        <name>NRF_VPR_CSR_NORDIC_KEY_MASK</name>
        <initializer>    (VPRCSR_NORDIC_VPRNORDICCTRL_NORDICKEY_Enabled &lt;&lt; VPRCSR_NORDIC_VPRNORDICCTRL_NORDICKEY_Pos)</initializer>
        <briefdescription>
<para>Nordic key for CSR writes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="52" column="9" bodyfile="hal/nrf_vpr_csr.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_csr_int_threshold_t</name>
        <enumvalue id="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a3d5fb389265e7c1232742d6aeb5f04a8" prot="public">
          <name>NRF_VPR_CSR_INT_THRESHOLD_DISABLED</name>
          <initializer>= VPRCSR_MINTTHRESH_TH_DISABLED</initializer>
          <briefdescription>
<para>Threshold disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68aacd21bd622d960f0879c83d74a6ec9fb" prot="public">
          <name>NRF_VPR_CSR_INT_THRESHOLD_LEVEL0</name>
          <initializer>= VPRCSR_MINTTHRESH_TH_THRESHLEVEL0</initializer>
          <briefdescription>
<para>Threshold level 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a3906dbc27e8ef8053e95592f222ed273" prot="public">
          <name>NRF_VPR_CSR_INT_THRESHOLD_LEVEL1</name>
          <initializer>= VPRCSR_MINTTHRESH_TH_THRESHLEVEL1</initializer>
          <briefdescription>
<para>Threshold level 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a48460faa30c0ce1b7b985b4835b3738b" prot="public">
          <name>NRF_VPR_CSR_INT_THRESHOLD_LEVEL2</name>
          <initializer>= VPRCSR_MINTTHRESH_TH_THRESHLEVEL2</initializer>
          <briefdescription>
<para>Threshold level 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68afc81871bce5749b98333d159030d0aba" prot="public">
          <name>NRF_VPR_CSR_INT_THRESHOLD_LEVEL3</name>
          <initializer>= VPRCSR_MINTTHRESH_TH_THRESHLEVEL3</initializer>
          <briefdescription>
<para>Threshold level 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt threshold levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="56" column="1" bodyfile="hal/nrf_vpr_csr.h" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_csr_trap_cause_t</name>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a5e8e8519d632d5be2cd0465f77eb87f0" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_INSTADDRMISALIGN</initializer>
          <briefdescription>
<para>Instruction address misaligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a6223cf7f68faa85fcff9a032114ab993" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_INSTACCESSFAULT</initializer>
          <briefdescription>
<para>Instruction access fault. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67ac62432c9669f1e56fbbcd33ea46d7a2a" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_ILLEGALINST</initializer>
          <briefdescription>
<para>Illegal instruction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a5898aa368b5c6e7e072189511a09e2ec" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_BKPT</initializer>
          <briefdescription>
<para>Breakpoint. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67adc5bf3f1fa9105e25260d48571b10e1a" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_LOADADDRMISALIGN</initializer>
          <briefdescription>
<para>Load address misaligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a392358c0fddb5b0a524bf746c615a6d2" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_LOADACCESSFAULT</initializer>
          <briefdescription>
<para>Load access fault. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67afeff081147d47088f80641b96bb9c2f5" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_STOREADDRMISALIGN</initializer>
          <briefdescription>
<para>Store/AMO address misaligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67af2b862aca206781f5b13f77414ebaa2b" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_STOREACCESSFAULT</initializer>
          <briefdescription>
<para>Store/AMO access misaligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67aa49c3078ba8e770f5ce77a971ce7b2b6" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_ECALL_M</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_ECALLMMODE</initializer>
          <briefdescription>
<para>Environment call M-mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0b25ce51d53fb1ce577c24b84495cc2a" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_BUSFAULTSTACKING</initializer>
          <briefdescription>
<para>Bus fault on stacking. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a6e25429a927e3be5d27ccb03a0e797ae" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_MISALIGNSTACKING</initializer>
          <briefdescription>
<para>Misaligned Stacking. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a3b30f7c53d8635be59c45f79ef103415" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_INTVECTORFAULT</initializer>
          <briefdescription>
<para>Interrupt Vector Fault. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a1b6ec9ff4545628811f93e1274d72a6e" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_STACKINGEXCFAULT</initializer>
          <briefdescription>
<para>Fault on Exception Stacking. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0d5fb9e26a41b834ae7ad8964ef2c078" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_MISALIGNUNSTACKING</initializer>
          <briefdescription>
<para>Misaligned Unstacking. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0cf7e90486c554c995ed7ae1566ea5b6" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_BUSFAULTUNSTACKING</initializer>
          <briefdescription>
<para>Bus fault on unstacking. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a7d583d75679b414411bbd303767491ac" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_STORETIMEOUTFAULT</initializer>
          <briefdescription>
<para>Store timeout fault. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67acce3314f63784fe86a20630df427c46b" prot="public">
          <name>NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT</name>
          <initializer>= VPRCSR_MCAUSE_EXCEPTIONCODE_LOADTIMEOUTFAULT</initializer>
          <briefdescription>
<para>Load timeout fault. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Trap causes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="66" column="1" bodyfile="hal/nrf_vpr_csr.h" bodystart="67" bodyend="85"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_csr_sleep_state_t</name>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79aa75e51af21c82be67e56af33cab69786" prot="public">
          <name>NRF_VPR_CSR_SLEEP_STATE_WAIT</name>
          <initializer>= VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_WAIT</initializer>
          <briefdescription>
<para>During sleep, clock is not turned off. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79aa4def5a9eead7d2bc6bce2c1528f8c70" prot="public">
          <name>NRF_VPR_CSR_SLEEP_STATE_RESET</name>
          <initializer>= VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_RESET</initializer>
          <briefdescription>
<para>Sleep mode out of reset. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a5f1163beb1bba96417adea42c567430b" prot="public">
          <name>NRF_VPR_CSR_SLEEP_STATE_SLEEP</name>
          <initializer>= VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_SLEEP</initializer>
          <briefdescription>
<para>During sleep, clock is turned off. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a3c840a75af92fb6f9dcb3af67739c414" prot="public">
          <name>NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP</name>
          <initializer>= VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_DEEPSLEEP</initializer>
          <briefdescription>
<para>During sleep, clock and power are turned off. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a22e877037d56690cb1e753665fa191c9" prot="public">
          <name>NRF_VPR_CSR_SLEEP_STATE_HIBERNATE</name>
          <initializer>= VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_HIBERNATE</initializer>
          <briefdescription>
<para>During sleep, clock is turned off. All the registers are saved automatically. Restart by a reset. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sleep states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="88" column="1" bodyfile="hal/nrf_vpr_csr.h" bodystart="89" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga4d227b47e648efbad434f580e41c6bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_interrupts_enable</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_interrupts_enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for enabling the interrupts in machine mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="320" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="320" bodyend="323" declfile="hal/nrf_vpr_csr.h" declline="98" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga4e2eafd2cbdf4ab1193d80e1215832ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_interrupts_disable</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_interrupts_disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for disabling the interrupts in machine mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="325" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="325" bodyend="328" declfile="hal/nrf_vpr_csr.h" declline="101" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga6a0d0450d80b65df870c0163c6b95298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_machine_interrupts_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_interrupts_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether interrupts are enabled in machine mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts are enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts are disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="330" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="330" bodyend="333" declfile="hal/nrf_vpr_csr.h" declline="109" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga3e21a4e0f8dda772f7804711dbdcc2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_trap_vector_table_addr_set</definition>
        <argsstring>(uint32_t address)</argsstring>
        <name>nrf_vpr_csr_machine_trap_vector_table_addr_set</name>
        <param>
          <type>uint32_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Function for setting the base address of trap vector table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>Machine trap vector table base address to be set. Has to be aligned on 64-byte or greater power-of-two boundary. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="335" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="335" bodyend="340" declfile="hal/nrf_vpr_csr.h" declline="117" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga9e3ae13c1cf007efac26ffe6370900ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_csr_machine_trap_vector_table_addr_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_trap_vector_table_addr_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine trap vector table base address. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Machine trap vector table base address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="342" column="28" bodyfile="hal/nrf_vpr_csr.h" bodystart="342" bodyend="345" declfile="hal/nrf_vpr_csr.h" declline="124" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gaeb121df8116e12e2c73ed35e8f9175fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_csr_machine_exception_pc_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_exception_pc_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine exception program counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Virtual address of the instruction that was interrupted or that encountered the exception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="347" column="28" bodyfile="hal/nrf_vpr_csr.h" bodystart="347" bodyend="350" declfile="hal/nrf_vpr_csr.h" declline="131" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga1257cb94feed99dadba196376913b1b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" kindref="member">nrf_vpr_csr_trap_cause_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_csr_trap_cause_t nrf_vpr_csr_machine_trap_cause_code_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_trap_cause_code_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine trap cause exception code. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Exception code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="352" column="44" bodyfile="hal/nrf_vpr_csr.h" bodystart="352" bodyend="357" declfile="hal/nrf_vpr_csr.h" declline="138" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gac51065c53920bf97d7a065e19c785a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_machine_trap_interrupt_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_trap_interrupt_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking the state of the interrupt bit for machine trap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Trap was caused by an interrupt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Trap was not caused by an interrupt. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="359" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="359" bodyend="362" declfile="hal/nrf_vpr_csr.h" declline="146" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gaa4f4dc9075b3891b049d9ab2072ef5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_csr_machine_trap_value_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_trap_value_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine trap value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Exception-specific information. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="364" column="28" bodyfile="hal/nrf_vpr_csr.h" bodystart="364" bodyend="367" declfile="hal/nrf_vpr_csr.h" declline="153" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga39fd48bd7f2dc491ba45cfc9ef54d274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_interrupt_threshold_set</definition>
        <argsstring>(nrf_vpr_csr_int_threshold_t th)</argsstring>
        <name>nrf_vpr_csr_machine_interrupt_threshold_set</name>
        <param>
          <type><ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref></type>
          <declname>th</declname>
        </param>
        <briefdescription>
<para>Function for setting the machine mode interrupt level threshold. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">th</parametername>
</parameternamelist>
<parameterdescription>
<para>Machine mode interrupt level threshold to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="369" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="369" bodyend="372" declfile="hal/nrf_vpr_csr.h" declline="160" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gac50e976558e8ac13e5edd2b7f93e3e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_csr_int_threshold_t nrf_vpr_csr_machine_interrupt_threshold_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_interrupt_threshold_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine mode interrupt level threshold. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Machine mode interrupt level threshold. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="374" column="47" bodyfile="hal/nrf_vpr_csr.h" bodystart="374" bodyend="377" declfile="hal/nrf_vpr_csr.h" declline="167" declcolumn="47"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga9ace52d02873e1cdfb917a75c1ec7ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_cycle_counter_enable_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_machine_cycle_counter_enable_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the Cycle Counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if Cycle Counter is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="379" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="379" bodyend="388" declfile="hal/nrf_vpr_csr.h" declline="174" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gacc37e82ae52d1e0c773aec9ce2feb224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_machine_cycle_counter_enable_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_cycle_counter_enable_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the Cycle Counter is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Cycle counter is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Cycle counter is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="390" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="390" bodyend="395" declfile="hal/nrf_vpr_csr.h" declline="182" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga31b1cbec0ae6d61d7dddaf037737510f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint64_t</type>
        <definition>NRF_STATIC_INLINE uint64_t nrf_vpr_csr_machine_cycle_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_cycle_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine cycle counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of clock cycles executed by the processor core. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="397" column="28" bodyfile="hal/nrf_vpr_csr.h" bodystart="397" bodyend="400" declfile="hal/nrf_vpr_csr.h" declline="189" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga5dce54f098deb1999bb09b85e20a0d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_machine_instruction_counter_enable_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_machine_instruction_counter_enable_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the Instruction Counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if Instruction Counter is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="402" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="402" bodyend="411" declfile="hal/nrf_vpr_csr.h" declline="196" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gab9873e1a0f12bb4d0134399c23f236c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_machine_instruction_counter_enable_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_instruction_counter_enable_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the Instruction Counter is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Instruction counter is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Instruction counter is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="413" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="413" bodyend="418" declfile="hal/nrf_vpr_csr.h" declline="204" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gafb6fb029a028961eb5504bb5e0952527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint64_t</type>
        <definition>NRF_STATIC_INLINE uint64_t nrf_vpr_csr_machine_instruction_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_machine_instruction_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the machine instruction counter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of instructions exectuted by the processor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="420" column="28" bodyfile="hal/nrf_vpr_csr.h" bodystart="420" bodyend="423" declfile="hal/nrf_vpr_csr.h" declline="210" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga89124521c55e1b2a7f7199e9a0238862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_rtperiph_enable_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_rtperiph_enable_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the Real-Time Peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if RT Perhiperals are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="425" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="425" bodyend="435" declfile="hal/nrf_vpr_csr.h" declline="217" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gac6ed7c42cb570cff4f8ca72f3c71ee69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_rtperiph_enable_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_rtperiph_enable_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the Real-Time Peripherals are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>RT Peripherals are enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>RT Peripherals are disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="437" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="437" bodyend="441" declfile="hal/nrf_vpr_csr.h" declline="225" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga456f7ae39591639514d7677f82ed811a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_cnt_irq_enable_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_cnt_irq_enable_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the generation of IRQ at position CNT_IRQ_POSITION. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if generation of IRQ at position CNT_IRQ_POSITION is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="443" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="443" bodyend="453" declfile="hal/nrf_vpr_csr.h" declline="232" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga877675bbb1fc9acf8cbce1d3a4e44a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_cnt_irq_enable_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_cnt_irq_enable_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the generation of IRQ at position CNT_IRQ_POSITION is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Generation of IRQ is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Generation of IRQ is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="455" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="455" bodyend="459" declfile="hal/nrf_vpr_csr.h" declline="240" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga944f6bbfba5c507fe3445863bfdf9ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_sleep_state_set</definition>
        <argsstring>(nrf_vpr_csr_sleep_state_t state)</argsstring>
        <name>nrf_vpr_csr_sleep_state_set</name>
        <param>
          <type><ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Function for setting the sleep state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>Sleep state to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="461" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="461" bodyend="468" declfile="hal/nrf_vpr_csr.h" declline="247" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga7549c7d81b290f455fdcaa7c079661ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_csr_sleep_state_t nrf_vpr_csr_sleep_state_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_sleep_state_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the sleep state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current sleep state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="470" column="45" bodyfile="hal/nrf_vpr_csr.h" bodystart="470" bodyend="475" declfile="hal/nrf_vpr_csr.h" declline="254" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga11b70347f6a4d16c24d1e61119eff6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_return_to_sleep_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_return_to_sleep_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the return to sleep functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU should be forced to return to sleep when it returns in a non-handler program, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="477" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="477" bodyend="486" declfile="hal/nrf_vpr_csr.h" declline="262" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga8b678487a98388822d167bae7e5f69ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_return_to_sleep_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_return_to_sleep_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the return to sleep functionality is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Return to sleep functionality is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Return to sleep functionality is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="488" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="488" bodyend="493" declfile="hal/nrf_vpr_csr.h" declline="270" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gac3833b70344c2c9d9c26ca2b0dde4478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_stack_on_sleep_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_stack_on_sleep_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the stack on sleep functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU should be forced to stack the context before going to sleep (used in order to have a fast wake-up), false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="495" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="495" bodyend="504" declfile="hal/nrf_vpr_csr.h" declline="278" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga142b7d445f6fd709082fa05504114082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_stack_on_sleep_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_stack_on_sleep_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the stack on sleep functionality is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack on sleep functionality is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Stack on sleep functionality is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="506" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="506" bodyend="511" declfile="hal/nrf_vpr_csr.h" declline="286" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga1d5bce98e041ca93055b62e25fba56f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_clic_round_robin_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_clic_round_robin_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the CLIC round robin arbitration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if round robin arbitration should be used for CLIC interrupt requests, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="513" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="513" bodyend="523" declfile="hal/nrf_vpr_csr.h" declline="294" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga90f06e25db1fafb5a87dbcfc1770ac55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_clic_round_robin_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_clic_round_robin_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the CLIC round robin arbitration is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>CLIC round robin arbitration is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>CLIC round robin arbitration is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="525" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="525" bodyend="531" declfile="hal/nrf_vpr_csr.h" declline="302" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1gadf3d446c294ad0e82f868292f41e7b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_unrecoverable_return_set</definition>
        <argsstring>(bool enable)</argsstring>
        <name>nrf_vpr_csr_unrecoverable_return_set</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the unrecoverable return functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if unrecoverable return from exception is to be forced, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="533" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="533" bodyend="543" declfile="hal/nrf_vpr_csr.h" declline="309" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__hal_1ga1102fc08b8ff5cf96e062c2495d5cf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_csr_unrecoverable_return_check</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_unrecoverable_return_check</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for checking whether the unrecoverable return is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Unrecoverable return is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Unrecoverable return is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr.h" line="545" column="24" bodyfile="hal/nrf_vpr_csr.h" bodystart="545" bodyend="551" declfile="hal/nrf_vpr_csr.h" declline="317" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_VPR_CSR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_CSR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_vpr_csr_hal<sp/>VPR<sp/>CSR<sp/>HAL</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_vpr</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>VPR<sp/>RISC-V<sp/>CPU<sp/>Control</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>Status<sp/>Registers<sp/>(VPR<sp/>CSR).</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>@brief<sp/>Nordic<sp/>key<sp/>for<sp/>CSR<sp/>writes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_VPR_CSR_NORDIC_KEY_MASK<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(VPRCSR_NORDIC_VPRNORDICCTRL_NORDICKEY_Enabled<sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_NORDICKEY_Pos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">/**<sp/>@brief<sp/>Interrupt<sp/>threshold<sp/>levels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a3d5fb389265e7c1232742d6aeb5f04a8" kindref="member">NRF_VPR_CSR_INT_THRESHOLD_DISABLED</ref><sp/>=<sp/>VPRCSR_MINTTHRESH_TH_DISABLED,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68aacd21bd622d960f0879c83d74a6ec9fb" kindref="member">NRF_VPR_CSR_INT_THRESHOLD_LEVEL0</ref><sp/><sp/><sp/>=<sp/>VPRCSR_MINTTHRESH_TH_THRESHLEVEL0,<sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>level<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a3906dbc27e8ef8053e95592f222ed273" kindref="member">NRF_VPR_CSR_INT_THRESHOLD_LEVEL1</ref><sp/><sp/><sp/>=<sp/>VPRCSR_MINTTHRESH_TH_THRESHLEVEL1,<sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68a48460faa30c0ce1b7b985b4835b3738b" kindref="member">NRF_VPR_CSR_INT_THRESHOLD_LEVEL2</ref><sp/><sp/><sp/>=<sp/>VPRCSR_MINTTHRESH_TH_THRESHLEVEL2,<sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>level<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1gga5a489f5c9dd05366b4853f03961a8e68afc81871bce5749b98333d159030d0aba" kindref="member">NRF_VPR_CSR_INT_THRESHOLD_LEVEL3</ref><sp/><sp/><sp/>=<sp/>VPRCSR_MINTTHRESH_TH_THRESHLEVEL3,<sp/></highlight><highlight class="comment">///&lt;<sp/>Threshold<sp/>level<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**<sp/>@brief<sp/>Trap<sp/>causes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a5e8e8519d632d5be2cd0465f77eb87f0" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED</ref><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_INSTADDRMISALIGN,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Instruction<sp/>address<sp/>misaligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a6223cf7f68faa85fcff9a032114ab993" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT</ref><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_INSTACCESSFAULT,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Instruction<sp/>access<sp/>fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67ac62432c9669f1e56fbbcd33ea46d7a2a" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_ILLEGALINST,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Illegal<sp/>instruction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a5898aa368b5c6e7e072189511a09e2ec" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_BKPT,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Breakpoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67adc5bf3f1fa9105e25260d48571b10e1a" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED</ref><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_LOADADDRMISALIGN,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Load<sp/>address<sp/>misaligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a392358c0fddb5b0a524bf746c615a6d2" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_LOADACCESSFAULT,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Load<sp/>access<sp/>fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67afeff081147d47088f80641b96bb9c2f5" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED</ref><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_STOREADDRMISALIGN,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store/AMO<sp/>address<sp/>misaligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67af2b862aca206781f5b13f77414ebaa2b" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT</ref><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_STOREACCESSFAULT,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store/AMO<sp/>access<sp/>misaligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67aa49c3078ba8e770f5ce77a971ce7b2b6" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_ECALL_M</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_ECALLMMODE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Environment<sp/>call<sp/>M-mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0b25ce51d53fb1ce577c24b84495cc2a" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT</ref><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_BUSFAULTSTACKING,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Bus<sp/>fault<sp/>on<sp/>stacking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a6e25429a927e3be5d27ccb03a0e797ae" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED</ref><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_MISALIGNSTACKING,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Misaligned<sp/>Stacking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a3b30f7c53d8635be59c45f79ef103415" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_INTVECTORFAULT,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>Vector<sp/>Fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a1b6ec9ff4545628811f93e1274d72a6e" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX</ref><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_STACKINGEXCFAULT,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Fault<sp/>on<sp/>Exception<sp/>Stacking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0d5fb9e26a41b834ae7ad8964ef2c078" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED</ref><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_MISALIGNUNSTACKING,<sp/></highlight><highlight class="comment">///&lt;<sp/>Misaligned<sp/>Unstacking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a0cf7e90486c554c995ed7ae1566ea5b6" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT</ref><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_BUSFAULTUNSTACKING,<sp/></highlight><highlight class="comment">///&lt;<sp/>Bus<sp/>fault<sp/>on<sp/>unstacking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67a7d583d75679b414411bbd303767491ac" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT</ref><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_STORETIMEOUTFAULT,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>timeout<sp/>fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggacc63c2e15b42da5ad68198b87ca50b67acce3314f63784fe86a20630df427c46b" kindref="member">NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT</ref><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_LOADTIMEOUTFAULT,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Load<sp/>timeout<sp/>fault.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" kindref="member">nrf_vpr_csr_trap_cause_t</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**<sp/>@brief<sp/>Sleep<sp/>states.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79aa75e51af21c82be67e56af33cab69786" kindref="member">NRF_VPR_CSR_SLEEP_STATE_WAIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_WAIT,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>During<sp/>sleep,<sp/>clock<sp/>is<sp/>not<sp/>turned<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79aa4def5a9eead7d2bc6bce2c1528f8c70" kindref="member">NRF_VPR_CSR_SLEEP_STATE_RESET</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_RESET,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sleep<sp/>mode<sp/>out<sp/>of<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a5f1163beb1bba96417adea42c567430b" kindref="member">NRF_VPR_CSR_SLEEP_STATE_SLEEP</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_SLEEP,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>During<sp/>sleep,<sp/>clock<sp/>is<sp/>turned<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a3c840a75af92fb6f9dcb3af67739c414" kindref="member">NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP</ref><sp/>=<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_DEEPSLEEP,<sp/></highlight><highlight class="comment">///&lt;<sp/>During<sp/>sleep,<sp/>clock<sp/>and<sp/>power<sp/>are<sp/>turned<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ggafef64352097ea118be88599515fbfc79a22e877037d56690cb1e753665fa191c9" kindref="member">NRF_VPR_CSR_SLEEP_STATE_HIBERNATE</ref><sp/><sp/>=<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_HIBERNATE,<sp/></highlight><highlight class="comment">///&lt;<sp/>During<sp/>sleep,<sp/>clock<sp/>is<sp/>turned<sp/>off.<sp/>All<sp/>the<sp/>registers<sp/>are<sp/>saved<sp/>automatically.<sp/>Restart<sp/>by<sp/>a<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>interrupts<sp/>in<sp/>machine<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4d227b47e648efbad434f580e41c6bbc" kindref="member">nrf_vpr_csr_machine_interrupts_enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>interrupts<sp/>in<sp/>machine<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4e2eafd2cbdf4ab1193d80e1215832ac" kindref="member">nrf_vpr_csr_machine_interrupts_disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>interrupts<sp/>are<sp/>enabled<sp/>in<sp/>machine<sp/>mode.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Interrupts<sp/>are<sp/>disabled.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga6a0d0450d80b65df870c0163c6b95298" kindref="member">nrf_vpr_csr_machine_interrupts_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>base<sp/>address<sp/>of<sp/>trap<sp/>vector<sp/>table.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>address<sp/>Machine<sp/>trap<sp/>vector<sp/>table<sp/>base<sp/>address<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Has<sp/>to<sp/>be<sp/>aligned<sp/>on<sp/>64-byte<sp/>or<sp/>greater<sp/>power-of-two<sp/>boundary.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga3e21a4e0f8dda772f7804711dbdcc2f7" kindref="member">nrf_vpr_csr_machine_trap_vector_table_addr_set</ref>(uint32_t<sp/>address);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>trap<sp/>vector<sp/>table<sp/>base<sp/>address.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@return<sp/>Machine<sp/>trap<sp/>vector<sp/>table<sp/>base<sp/>address.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1ga9e3ae13c1cf007efac26ffe6370900ae" kindref="member">nrf_vpr_csr_machine_trap_vector_table_addr_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>exception<sp/>program<sp/>counter.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@return<sp/>Virtual<sp/>address<sp/>of<sp/>the<sp/>instruction<sp/>that<sp/>was<sp/>interrupted<sp/>or<sp/>that<sp/>encountered<sp/>the<sp/>exception.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gaeb121df8116e12e2c73ed35e8f9175fa" kindref="member">nrf_vpr_csr_machine_exception_pc_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>trap<sp/>cause<sp/>exception<sp/>code.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>@return<sp/>Exception<sp/>code.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" kindref="member">nrf_vpr_csr_trap_cause_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1257cb94feed99dadba196376913b1b2" kindref="member">nrf_vpr_csr_machine_trap_cause_code_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>the<sp/>state<sp/>of<sp/>the<sp/>interrupt<sp/>bit<sp/>for<sp/>machine<sp/>trap.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Trap<sp/>was<sp/>caused<sp/>by<sp/>an<sp/>interrupt.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Trap<sp/>was<sp/>not<sp/>caused<sp/>by<sp/>an<sp/>interrupt.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac51065c53920bf97d7a065e19c785a35" kindref="member">nrf_vpr_csr_machine_trap_interrupt_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>trap<sp/>value.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@return<sp/>Exception-specific<sp/>information.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gaa4f4dc9075b3891b049d9ab2072ef5c5" kindref="member">nrf_vpr_csr_machine_trap_value_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>machine<sp/>mode<sp/>interrupt<sp/>level<sp/>threshold.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>th<sp/>Machine<sp/>mode<sp/>interrupt<sp/>level<sp/>threshold<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga39fd48bd7f2dc491ba45cfc9ef54d274" kindref="member">nrf_vpr_csr_machine_interrupt_threshold_set</ref>(<ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref><sp/>th);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>mode<sp/>interrupt<sp/>level<sp/>threshold.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>@return<sp/>Machine<sp/>mode<sp/>interrupt<sp/>level<sp/>threshold.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1gac50e976558e8ac13e5edd2b7f93e3e73" kindref="member">nrf_vpr_csr_machine_interrupt_threshold_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>Cycle<sp/>Counter.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>Cycle<sp/>Counter<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga9ace52d02873e1cdfb917a75c1ec7ce6" kindref="member">nrf_vpr_csr_machine_cycle_counter_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>Cycle<sp/>Counter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Cycle<sp/>counter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Cycle<sp/>counter<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gacc37e82ae52d1e0c773aec9ce2feb224" kindref="member">nrf_vpr_csr_machine_cycle_counter_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>cycle<sp/>counter.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>clock<sp/>cycles<sp/>executed<sp/>by<sp/>the<sp/>processor<sp/>core.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrf__vpr__csr__hal_1ga31b1cbec0ae6d61d7dddaf037737510f" kindref="member">nrf_vpr_csr_machine_cycle_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>Instruction<sp/>Counter.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>Instruction<sp/>Counter<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga5dce54f098deb1999bb09b85e20a0d93" kindref="member">nrf_vpr_csr_machine_instruction_counter_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="198"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>Instruction<sp/>Counter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Instruction<sp/>counter<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Instruction<sp/>counter<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gab9873e1a0f12bb4d0134399c23f236c3" kindref="member">nrf_vpr_csr_machine_instruction_counter_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>machine<sp/>instruction<sp/>counter.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@return<sp/>Number<sp/>of<sp/>instructions<sp/>exectuted<sp/>by<sp/>the<sp/>processor.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gafb6fb029a028961eb5504bb5e0952527" kindref="member">nrf_vpr_csr_machine_instruction_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>Real-Time<sp/>Peripherals.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>RT<sp/>Perhiperals<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga89124521c55e1b2a7f7199e9a0238862" kindref="member">nrf_vpr_csr_rtperiph_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>Real-Time<sp/>Peripherals<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>RT<sp/>Peripherals<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>RT<sp/>Peripherals<sp/>are<sp/>disabled.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac6ed7c42cb570cff4f8ca72f3c71ee69" kindref="member">nrf_vpr_csr_rtperiph_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>generation<sp/>of<sp/>IRQ<sp/>at<sp/>position<sp/>CNT_IRQ_POSITION.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>generation<sp/>of<sp/>IRQ<sp/>at<sp/>position<sp/>CNT_IRQ_POSITION<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga456f7ae39591639514d7677f82ed811a" kindref="member">nrf_vpr_csr_cnt_irq_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>generation<sp/>of<sp/>IRQ<sp/>at<sp/>position<sp/>CNT_IRQ_POSITION<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Generation<sp/>of<sp/>IRQ<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Generation<sp/>of<sp/>IRQ<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga877675bbb1fc9acf8cbce1d3a4e44a0e" kindref="member">nrf_vpr_csr_cnt_irq_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>sleep<sp/>state.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>state<sp/>Sleep<sp/>state<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga944f6bbfba5c507fe3445863bfdf9ad1" kindref="member">nrf_vpr_csr_sleep_state_set</ref>(<ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref><sp/>state);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>sleep<sp/>state.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>@return<sp/>Current<sp/>sleep<sp/>state.</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1ga7549c7d81b290f455fdcaa7c079661ec" kindref="member">nrf_vpr_csr_sleep_state_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="256"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>return<sp/>to<sp/>sleep<sp/>functionality.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>CPU<sp/>should<sp/>be<sp/>forced<sp/>to<sp/>return<sp/>to<sp/>sleep<sp/>when<sp/>it<sp/>returns<sp/>in<sp/>a<sp/>non-handler<sp/>program,</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga11b70347f6a4d16c24d1e61119eff6b7" kindref="member">nrf_vpr_csr_return_to_sleep_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>return<sp/>to<sp/>sleep<sp/>functionality<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Return<sp/>to<sp/>sleep<sp/>functionality<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Return<sp/>to<sp/>sleep<sp/>functionality<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga8b678487a98388822d167bae7e5f69ba" kindref="member">nrf_vpr_csr_return_to_sleep_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>stack<sp/>on<sp/>sleep<sp/>functionality.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>CPU<sp/>should<sp/>be<sp/>forced<sp/>to<sp/>stack<sp/>the<sp/>context<sp/>before<sp/>going<sp/>to<sp/>sleep<sp/>(used<sp/>in<sp/>order<sp/>to<sp/>have<sp/>a<sp/>fast<sp/>wake-up),</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac3833b70344c2c9d9c26ca2b0dde4478" kindref="member">nrf_vpr_csr_stack_on_sleep_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>stack<sp/>on<sp/>sleep<sp/>functionality<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Stack<sp/>on<sp/>sleep<sp/>functionality<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Stack<sp/>on<sp/>sleep<sp/>functionality<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga142b7d445f6fd709082fa05504114082" kindref="member">nrf_vpr_csr_stack_on_sleep_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>CLIC<sp/>round<sp/>robin<sp/>arbitration.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>round<sp/>robin<sp/>arbitration<sp/>should<sp/>be<sp/>used<sp/>for<sp/>CLIC<sp/>interrupt<sp/>requests,</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1d5bce98e041ca93055b62e25fba56f8" kindref="member">nrf_vpr_csr_clic_round_robin_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="296"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>CLIC<sp/>round<sp/>robin<sp/>arbitration<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>CLIC<sp/>round<sp/>robin<sp/>arbitration<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>CLIC<sp/>round<sp/>robin<sp/>arbitration<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga90f06e25db1fafb5a87dbcfc1770ac55" kindref="member">nrf_vpr_csr_clic_round_robin_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>unrecoverable<sp/>return<sp/>functionality.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>unrecoverable<sp/>return<sp/>from<sp/>exception<sp/>is<sp/>to<sp/>be<sp/>forced,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gadf3d446c294ad0e82f868292f41e7b9a" kindref="member">nrf_vpr_csr_unrecoverable_return_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>whether<sp/>the<sp/>unrecoverable<sp/>return<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>Unrecoverable<sp/>return<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>Unrecoverable<sp/>return<sp/>is<sp/>disabled.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1102fc08b8ff5cf96e062c2495d5cf88" kindref="member">nrf_vpr_csr_unrecoverable_return_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4d227b47e648efbad434f580e41c6bbc" kindref="member">nrf_vpr_csr_machine_interrupts_enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_set_bits(VPRCSR_MSTATUS,<sp/>VPRCSR_MSTATUS_MIE_Msk);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4e2eafd2cbdf4ab1193d80e1215832ac" kindref="member">nrf_vpr_csr_machine_interrupts_disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_clear_bits(VPRCSR_MSTATUS,<sp/>VPRCSR_MSTATUS_MIE_Msk);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga6a0d0450d80b65df870c0163c6b95298" kindref="member">nrf_vpr_csr_machine_interrupts_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MSTATUS)<sp/>&amp;<sp/>VPRCSR_MSTATUS_MIE_Msk;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga3e21a4e0f8dda772f7804711dbdcc2f7" kindref="member">nrf_vpr_csr_machine_trap_vector_table_addr_set</ref>(uint32_t<sp/>address)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga9698a3f6b6bea455d2b54a79e514ee36" kindref="member">NRFX_ASSERT</ref>(!(address<sp/>&amp;<sp/>0xF));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_MTVT,<sp/>address);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1ga9e3ae13c1cf007efac26ffe6370900ae" kindref="member">nrf_vpr_csr_machine_trap_vector_table_addr_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MTVT);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gaeb121df8116e12e2c73ed35e8f9175fa" kindref="member">nrf_vpr_csr_machine_exception_pc_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MEPC);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" kindref="member">nrf_vpr_csr_trap_cause_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1257cb94feed99dadba196376913b1b2" kindref="member">nrf_vpr_csr_machine_trap_cause_code_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__vpr__csr__hal_1gacc63c2e15b42da5ad68198b87ca50b67" kindref="member">nrf_vpr_csr_trap_cause_t</ref>)((nrf_csr_read(VPRCSR_MCAUSE)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_Msk)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_MCAUSE_EXCEPTIONCODE_Pos);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac51065c53920bf97d7a065e19c785a35" kindref="member">nrf_vpr_csr_machine_trap_interrupt_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_MCAUSE)<sp/>&amp;<sp/>VPRCSR_MCAUSE_INTERRUPT_Msk)<sp/>&gt;&gt;<sp/>VPRCSR_MCAUSE_INTERRUPT_Pos;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gaa4f4dc9075b3891b049d9ab2072ef5c5" kindref="member">nrf_vpr_csr_machine_trap_value_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MTVAL);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga39fd48bd7f2dc491ba45cfc9ef54d274" kindref="member">nrf_vpr_csr_machine_interrupt_threshold_set</ref>(<ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref><sp/>th)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_MINTTHRESH,<sp/>(th<sp/>&lt;&lt;<sp/>VPRCSR_MINTTHRESH_TH_Pos));</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1ga5a489f5c9dd05366b4853f03961a8e68" kindref="member">nrf_vpr_csr_int_threshold_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1gac50e976558e8ac13e5edd2b7f93e3e73" kindref="member">nrf_vpr_csr_machine_interrupt_threshold_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_MINTTHRESH)<sp/>&amp;<sp/>VPRCSR_MINTTHRESH_TH_Msk)<sp/>&gt;&gt;<sp/>VPRCSR_MINTTHRESH_TH_Pos;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga9ace52d02873e1cdfb917a75c1ec7ce6" kindref="member">nrf_vpr_csr_machine_cycle_counter_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_MCOUNTINHIBIT);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>(reg<sp/>&amp;<sp/>~VPRCSR_MCOUNTINHIBIT_CY_Msk)<sp/>|<sp/>(enable<sp/>?</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VPRCSR_MCOUNTINHIBIT_CY_INCREMENT<sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_CY_Pos)<sp/>:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VPRCSR_MCOUNTINHIBIT_CY_INHIBIT<sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_CY_Pos));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_MCOUNTINHIBIT,<sp/>reg);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gacc37e82ae52d1e0c773aec9ce2feb224" kindref="member">nrf_vpr_csr_machine_cycle_counter_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_MCOUNTINHIBIT);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(reg<sp/>&amp;<sp/>(VPRCSR_MCOUNTINHIBIT_CY_INHIBIT<sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_CY_Pos))<sp/>?<sp/>false<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrf__vpr__csr__hal_1ga31b1cbec0ae6d61d7dddaf037737510f" kindref="member">nrf_vpr_csr_machine_cycle_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MCYCLE)<sp/>|<sp/>((uint64_t)nrf_csr_read(VPRCSR_MCYCLEH)<sp/>&lt;&lt;<sp/>32);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga5dce54f098deb1999bb09b85e20a0d93" kindref="member">nrf_vpr_csr_machine_instruction_counter_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_MCOUNTINHIBIT);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>(reg<sp/>&amp;<sp/>~VPRCSR_MCOUNTINHIBIT_IR_Msk)<sp/>|<sp/>(enable<sp/>?</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VPRCSR_MCOUNTINHIBIT_IR_INCREMENT<sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_IR_Pos)<sp/>:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(VPRCSR_MCOUNTINHIBIT_IR_INHIBIT<sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_IR_Pos));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_MCOUNTINHIBIT,<sp/>reg);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gab9873e1a0f12bb4d0134399c23f236c3" kindref="member">nrf_vpr_csr_machine_instruction_counter_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_MCOUNTINHIBIT);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(reg<sp/>&amp;<sp/>(VPRCSR_MCOUNTINHIBIT_IR_INHIBIT<sp/>&lt;&lt;<sp/>VPRCSR_MCOUNTINHIBIT_IR_Pos))<sp/>?<sp/>false<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group__nrf__vpr__csr__hal_1gafb6fb029a028961eb5504bb5e0952527" kindref="member">nrf_vpr_csr_machine_instruction_counter_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_csr_read(VPRCSR_MINSTRET)<sp/>|<sp/>((uint64_t)nrf_csr_read(VPRCSR_MINSTRETH)<sp/>&lt;&lt;<sp/>32);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga89124521c55e1b2a7f7199e9a0238862" kindref="member">nrf_vpr_csr_rtperiph_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICCTRL);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>(reg<sp/>&amp;<sp/>~VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Msk)<sp/>|<sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>((enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Enabled<sp/>:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Disabled)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Pos)<sp/>|<sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICCTRL,<sp/>reg);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac6ed7c42cb570cff4f8ca72f3c71ee69" kindref="member">nrf_vpr_csr_rtperiph_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_NORDIC_VPRNORDICCTRL)<sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Msk)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_ENABLERTPERIPH_Pos;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga456f7ae39591639514d7677f82ed811a" kindref="member">nrf_vpr_csr_cnt_irq_enable_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICCTRL);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>&amp;=<sp/>~(VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Msk<sp/>|<sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>((enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Enabled<sp/>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Disabled)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Pos)<sp/>|<sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICCTRL,<sp/>reg);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga877675bbb1fc9acf8cbce1d3a4e44a0e" kindref="member">nrf_vpr_csr_cnt_irq_enable_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_NORDIC_VPRNORDICCTRL)<sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Msk)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICCTRL_CNTIRQENABLE_Pos;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga944f6bbfba5c507fe3445863bfdf9ad1" kindref="member">nrf_vpr_csr_sleep_state_set</ref>(<ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref><sp/>state)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>&amp;=<sp/>~VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_Msk;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>(uint32_t)state<sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_Pos;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL,<sp/>reg);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">NRF_STATIC_INLINE<sp/><ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref><sp/><ref refid="group__nrf__vpr__csr__hal_1ga7549c7d81b290f455fdcaa7c079661ec" kindref="member">nrf_vpr_csr_sleep_state_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__vpr__csr__hal_1gafef64352097ea118be88599515fbfc79" kindref="member">nrf_vpr_csr_sleep_state_t</ref>)((nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_Msk)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_SLEEPSTATE_Pos);</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga11b70347f6a4d16c24d1e61119eff6b7" kindref="member">nrf_vpr_csr_return_to_sleep_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>&amp;=<sp/>~VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Msk;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>(enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Enabled<sp/>:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Disabled)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Pos;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL,<sp/>reg);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga8b678487a98388822d167bae7e5f69ba" kindref="member">nrf_vpr_csr_return_to_sleep_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Msk)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_RETURNTOSLEEP_Pos;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gac3833b70344c2c9d9c26ca2b0dde4478" kindref="member">nrf_vpr_csr_stack_on_sleep_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>&amp;=<sp/>~VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Msk;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>(enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Enabled<sp/>:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Disabled)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Pos;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL,<sp/>reg);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga142b7d445f6fd709082fa05504114082" kindref="member">nrf_vpr_csr_stack_on_sleep_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrf_csr_read(VPRCSR_NORDIC_VPRNORDICSLEEPCTRL)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Msk)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICSLEEPCTRL_STACKONSLEEP_Pos;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1d5bce98e041ca93055b62e25fba56f8" kindref="member">nrf_vpr_csr_clic_round_robin_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>(reg<sp/>&amp;<sp/>~VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>(enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Disabled)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Pos;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE,<sp/>reg);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga90f06e25db1fafb5a87dbcfc1770ac55" kindref="member">nrf_vpr_csr_clic_round_robin_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((nrf_csr_read(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Msk)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Pos</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_DISABLECLICROUNDROBIN_Enabled);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1gadf3d446c294ad0e82f868292f41e7b9a" kindref="member">nrf_vpr_csr_unrecoverable_return_set</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reg<sp/>=<sp/>nrf_csr_read(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>(reg<sp/>&amp;<sp/>~VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Msk)<sp/>|</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vpr__csr__hal_1ga4c59a41d1b8430ec09588ef7306d221d" kindref="member">NRF_VPR_CSR_NORDIC_KEY_MASK</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>reg<sp/>|=<sp/>(enable<sp/>?<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Enabled<sp/>:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Disabled)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Pos;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_csr_write(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE,<sp/>reg);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__vpr__csr__hal_1ga1102fc08b8ff5cf96e062c2495d5cf88" kindref="member">nrf_vpr_csr_unrecoverable_return_check</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((nrf_csr_read(VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Msk)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Pos</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>VPRCSR_NORDIC_VPRNORDICFEATURESDISABLE_UNRECOVRETURN_Enabled);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="555"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_VPR_CSR_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_vpr_csr.h"/>
  </compounddef>
</doxygen>
