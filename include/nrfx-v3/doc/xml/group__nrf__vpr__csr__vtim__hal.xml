<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__vpr__csr__vtim__hal" kind="group">
    <compoundname>nrf_vpr_csr_vtim_hal</compoundname>
    <title>VPR CSR VTIM HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__vpr__csr__vtim__hal_1gaf273ee37843343825d23707160759bc1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_csr_vtim_count_t</name>
        <enumvalue id="group__nrf__vpr__csr__vtim__hal_1ggaf273ee37843343825d23707160759bc1a9880228ac0edb029392a9267b6ce8905" prot="public">
          <name>NRF_VPR_CSR_VTIM_COUNT_STOP</name>
          <initializer>= VPRCSR_NORDIC_CNTMODE0_CNTMODE0_STOP</initializer>
          <briefdescription>
<para>Counter stops at 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__vtim__hal_1ggaf273ee37843343825d23707160759bc1a0f5c6b228554f3fd0e5b5c893da9dd06" prot="public">
          <name>NRF_VPR_CSR_VTIM_COUNT_WRAP</name>
          <initializer>= VPRCSR_NORDIC_CNTMODE0_CNTMODE0_WRAP</initializer>
          <briefdescription>
<para>Counter will continue counting from 0xFFF. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__vtim__hal_1ggaf273ee37843343825d23707160759bc1aaa7786994ac0aa72b5a13529b7357d08" prot="public">
          <name>NRF_VPR_CSR_VTIM_COUNT_RELOAD</name>
          <initializer>= VPRCSR_NORDIC_CNTMODE0_CNTMODE0_RELOAD</initializer>
          <briefdescription>
<para>Counter will continue counting from the value in counter top. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__csr__vtim__hal_1ggaf273ee37843343825d23707160759bc1a6e401a478cb2c5a05cf5838d873cb35d" prot="public">
          <name>NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED</name>
          <initializer>= VPRCSR_NORDIC_CNTMODE0_CNTMODE0_TRIGCOMB</initializer>
          <briefdescription>
<para>Trigger (counter 0) or combined (counter 1) mode. </para>
          </briefdescription>
          <detaileddescription>
<para>Trigger (applies to counter 0): Counter stops at 0. Counting will restart when a VIO event happens. Combined (applies to counter 1): Counter 1 acts as an extension of counter 0. (16 most significant bits of a 32-bit counter.) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Counter modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="52" column="1" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="53" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gaeb4dd30faa22a984ff379b95eef65c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__csr__vtim__hal_1gaf273ee37843343825d23707160759bc1" kindref="member">nrf_vpr_csr_vtim_count_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_csr_vtim_count_t nrf_vpr_cst_vtim_count_mode_get</definition>
        <argsstring>(uint8_t counter)</argsstring>
        <name>nrf_vpr_cst_vtim_count_mode_get</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Function for getting the counter mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Counter mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="194" column="44" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="194" bodyend="206" declfile="hal/nrf_vpr_csr_vtim.h" declline="71" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga29f20cbd973bf1208da400282864ead2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_count_mode_set</definition>
        <argsstring>(uint8_t counter, nrf_vpr_csr_vtim_count_t mode)</argsstring>
        <name>nrf_vpr_csr_vtim_count_mode_set</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__csr__vtim__hal_1gaf273ee37843343825d23707160759bc1" kindref="member">nrf_vpr_csr_vtim_count_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Function for setting the counter mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter mode to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="208" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="208" bodyend="223" declfile="hal/nrf_vpr_csr_vtim.h" declline="79" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga9c7c354a85b8c90818468a076b27b8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_vpr_csr_vtim_simple_counter_get</definition>
        <argsstring>(uint8_t counter)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_counter_get</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Function for getting the counter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Counter value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="225" column="28" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="225" bodyend="237" declfile="hal/nrf_vpr_csr_vtim.h" declline="89" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gafaca2bbb44b469ad0cb08761b66398d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_simple_counter_set</definition>
        <argsstring>(uint8_t counter, uint16_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_counter_set</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the counter value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="239" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="239" bodyend="253" declfile="hal/nrf_vpr_csr_vtim.h" declline="97" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga5c3bec2fd505d2b0fa3d9b82b63cbe5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint16_t</type>
        <definition>NRF_STATIC_INLINE uint16_t nrf_vpr_csr_vtim_simple_counter_top_get</definition>
        <argsstring>(uint8_t counter)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_counter_top_get</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Function for getting the counter top. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Counter top. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="255" column="28" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="255" bodyend="268" declfile="hal/nrf_vpr_csr_vtim.h" declline="106" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga1b2214cebfa609766a3e3e6cef4b95fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_simple_counter_top_set</definition>
        <argsstring>(uint8_t counter, uint16_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_counter_top_set</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the counter top. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Top value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="270" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="270" bodyend="292" declfile="hal/nrf_vpr_csr_vtim.h" declline="114" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga53f8a2f942e663c3d3e03672903a92c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_simple_counter_add_set</definition>
        <argsstring>(uint8_t counter, uint16_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_counter_add_set</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the counter add. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Add value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="294" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="294" bodyend="308" declfile="hal/nrf_vpr_csr_vtim.h" declline="122" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga8718b4ab442cc0e2b015b2e5be38f42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_simple_wait_set</definition>
        <argsstring>(uint8_t counter, bool write, uint16_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_simple_wait_set</name>
        <param>
          <type>uint8_t</type>
          <declname>counter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the wait register. </para>
        </briefdescription>
        <detaileddescription>
<para>Writing to this register will stall the CPU until counter reaches 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">write</parametername>
</parameternamelist>
<parameterdescription>
<para>True if <computeroutput>value</computeroutput> is to be writtten to the counter value before starting the wait. False otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be written to the counter if <computeroutput>write</computeroutput> is true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="310" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="310" bodyend="332" declfile="hal/nrf_vpr_csr_vtim.h" declline="134" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gaf3607a5b62a3a728290876910b009b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_csr_vtim_combined_counter_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_counter_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the combined counter value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Lower 16 bits represent counter 0, while higher 16 bits represent counter 1.</para>
</simplesect>
<simplesect kind="return"><para>Counter value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="334" column="28" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="334" bodyend="337" declfile="hal/nrf_vpr_csr_vtim.h" declline="145" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga7673387755512daba1a04e43199e2f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_combined_counter_set</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_counter_set</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the combined counter value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Lower 16 bits represent counter 0, while higher 16 bits represent counter 1.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="339" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="339" bodyend="342" declfile="hal/nrf_vpr_csr_vtim.h" declline="154" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gab0ceb55587900ff6125aaa732e39dfc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_csr_vtim_combined_counter_top_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_counter_top_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the combined counter top. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Lower 16 bits represent counter 0, while higher 16 bits represent counter 1.</para>
</simplesect>
<simplesect kind="return"><para>Counter top. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="344" column="28" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="344" bodyend="347" declfile="hal/nrf_vpr_csr_vtim.h" declline="163" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gaddf46ec2a8e7ce0ef97607357b1fdfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_combined_counter_top_set</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_counter_top_set</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the combined counter top. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Lower 16 bits represent counter 0, while higher 16 bits represent counter 1.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Top value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="349" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="349" bodyend="352" declfile="hal/nrf_vpr_csr_vtim.h" declline="172" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1gaef3038fbcfb1904556d3dac3f2de3cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_combined_counter_add_set</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_counter_add_set</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Function for setting the combined counter add. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function should be used in 32-bit counter mode.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Add value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="354" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="354" bodyend="357" declfile="hal/nrf_vpr_csr_vtim.h" declline="181" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__csr__vtim__hal_1ga79beb8fd665e11d66c1f96832694b574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_csr_vtim_combined_wait_trigger</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_vpr_csr_vtim_combined_wait_trigger</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for triggering the wait. </para>
        </briefdescription>
        <detaileddescription>
<para>Writing to this register will stall the CPU until 32-bit counter reaches 0.</para>
<para><simplesect kind="note"><para>This function should be used in 32-bit counter mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr_csr_vtim.h" line="359" column="24" bodyfile="hal/nrf_vpr_csr_vtim.h" bodystart="359" bodyend="363" declfile="hal/nrf_vpr_csr_vtim.h" declline="190" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the VPR RISC-V CPU Control and Status Registers for VPR Timer (VPR CSR VTIM). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
