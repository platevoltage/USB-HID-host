<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__comp__hal" kind="group">
    <compoundname>nrf_comp_hal</compoundname>
    <title>COMP HAL</title>
    <innerclass refid="structnrf__comp__th__t" prot="public">nrf_comp_th_t</innerclass>
    <innerclass refid="structnrf__comp__ref__conf__t" prot="public">nrf_comp_ref_conf_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__comp__hal_1ga2cb45b32907064f8b15ae54d91ca7470" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_ref_t</name>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470a683a97562633fe24b117a2ccbc0faa90" prot="public">
          <name>NRF_COMP_REF_INT_1V2</name>
          <initializer>= COMP_REFSEL_REFSEL_Int1V2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = internal 1.2 V reference (VDD &gt;= 1.7 V). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470a9deceb6914afc21b109a3e8adf565098" prot="public">
          <name>NRF_COMP_REF_INT_1V8</name>
          <initializer>= COMP_REFSEL_REFSEL_Int1V8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = internal 1.8 V reference (VDD &gt;= VREF + 0.2 V). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470a12a30003593a48a4213b4136b31ed9e7" prot="public">
          <name>NRF_COMP_REF_INT_2V4</name>
          <initializer>= COMP_REFSEL_REFSEL_Int2V4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = internal 2.4 V reference (VDD &gt;= VREF + 0.2 V). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470a0ccdb9ee6317bfaa2be3360c334a576c" prot="public">
          <name>NRF_COMP_REF_AVDDAO1V8</name>
          <initializer>= COMP_REFSEL_REFSEL_AVDDAO1V8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = AVDD_AO_1V8. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470aa3f446be7d1fcd2c8e0710ea8bbe3c49" prot="public">
          <name>NRF_COMP_REF_VDD</name>
          <initializer>= COMP_REFSEL_REFSEL_VDD</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = VDD. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga2cb45b32907064f8b15ae54d91ca7470ad4b2a1a578ad12d820f421c4eaded048" prot="public">
          <name>NRF_COMP_REF_AREF</name>
          <initializer>= COMP_REFSEL_REFSEL_ARef</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VREF = AREF (VDD &gt;= VREF &gt;= AREFMIN). </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP reference selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="96" column="1" bodyfile="hal/nrf_comp.h" bodystart="97" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1ga501c4187cafe59f88ed8e98c7de2bfe6" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_main_mode_t</name>
        <enumvalue id="group__nrf__comp__hal_1gga501c4187cafe59f88ed8e98c7de2bfe6ac957c24d7ddc8c5ed4ff64430d2965db" prot="public">
          <name>NRF_COMP_MAIN_MODE_SE</name>
          <initializer>= COMP_MODE_MAIN_SE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Single-ended mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga501c4187cafe59f88ed8e98c7de2bfe6acc65bd4c0459d7bce4beb36cbbc35ebf" prot="public">
          <name>NRF_COMP_MAIN_MODE_DIFF</name>
          <initializer>= COMP_MODE_MAIN_Diff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Differential mode. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP main operation mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="147" column="1" bodyfile="hal/nrf_comp.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1gab73023f0b42ab46c65312f9ea9419e05" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_sp_mode_t</name>
        <enumvalue id="group__nrf__comp__hal_1ggab73023f0b42ab46c65312f9ea9419e05a913d611ea3940e37924497ee95ffef78" prot="public">
          <name>NRF_COMP_SP_MODE_LOW</name>
          <initializer>= COMP_MODE_SP_Low</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Low power mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggab73023f0b42ab46c65312f9ea9419e05a698a3502bbddf2b190d724d3ebf7e3c4" prot="public">
          <name>NRF_COMP_SP_MODE_NORMAL</name>
          <initializer>= COMP_MODE_SP_Normal</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Normal mode. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggab73023f0b42ab46c65312f9ea9419e05ab112225d17bad73d2ab7729a8a1d76de" prot="public">
          <name>NRF_COMP_SP_MODE_HIGH</name>
          <initializer>= COMP_MODE_SP_High</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>High-speed mode. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP speed and power mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="154" column="1" bodyfile="hal/nrf_comp.h" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1gaad279eda81a34c4cc4534f2603ab2717" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_hyst_t</name>
        <enumvalue id="group__nrf__comp__hal_1ggaad279eda81a34c4cc4534f2603ab2717a83a04f019cc200d74e481e644420b6fe" prot="public">
          <name>NRF_COMP_HYST_NO_HYST</name>
          <initializer>= COMP_HYST_HYST_NoHyst</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparator hysteresis disabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggaad279eda81a34c4cc4534f2603ab2717a71200a7942d1434ea7ce5df178918563" prot="public">
          <name>NRF_COMP_HYST_40MV</name>
          <initializer>= COMP_HYST_HYST_Hyst40mV</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparator hysteresis enabled at 40 mV level. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggaad279eda81a34c4cc4534f2603ab2717a93499a63e3c0553cef478b471a1a724a" prot="public">
          <name>NRF_COMP_HYST_50MV</name>
          <initializer>= COMP_HYST_HYST_Hyst50mV</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparator hysteresis enabled at 50 mV level. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP comparator hysteresis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="164" column="1" bodyfile="hal/nrf_comp.h" bodystart="165" bodyend="173"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1gaee0ea1e7c432520ed0ff1fb8ed3e9586" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_isource_t</name>
        <enumvalue id="group__nrf__comp__hal_1ggaee0ea1e7c432520ed0ff1fb8ed3e9586ad24db8d5831ad607e770c5a426131710" prot="public">
          <name>NRF_COMP_ISOURCE_OFF</name>
          <initializer>= COMP_ISOURCE_ISOURCE_Off</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current source disabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggaee0ea1e7c432520ed0ff1fb8ed3e9586acacf524a0c3e83d679b6903d58b6af7a" prot="public">
          <name>NRF_COMP_ISOURCE_IEN_2UA5</name>
          <initializer>= COMP_ISOURCE_ISOURCE_Ien2uA5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current source enabled (+/- 2.5 uA). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggaee0ea1e7c432520ed0ff1fb8ed3e9586aa734781d1bd5da1585fc5f57b293e530" prot="public">
          <name>NRF_COMP_ISOURCE_IEN_5UA</name>
          <initializer>= COMP_ISOURCE_ISOURCE_Ien5uA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current source enabled (+/- 5 uA). </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggaee0ea1e7c432520ed0ff1fb8ed3e9586a2640cbdac92d7c14fc2164b0b3fe9e0a" prot="public">
          <name>NRF_COMP_ISOURCE_IEN_10UA</name>
          <initializer>= COMP_ISOURCE_ISOURCE_Ien10uA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current source enabled (+/- 10 uA). </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP current source selection on analog input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="177" column="1" bodyfile="hal/nrf_comp.h" bodystart="178" bodyend="195"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1ga0a587fcb0646329cb6d9700f555787f8" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_task_t</name>
        <enumvalue id="group__nrf__comp__hal_1gga0a587fcb0646329cb6d9700f555787f8aedc5ccaa13628f7af6836e5ebe95895b" prot="public">
          <name>NRF_COMP_TASK_START</name>
          <initializer>= offsetof(NRF_COMP_Type, TASKS_START)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>COMP start sampling task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga0a587fcb0646329cb6d9700f555787f8aaa6e596dc463abb077e160e4dd869a8c" prot="public">
          <name>NRF_COMP_TASK_STOP</name>
          <initializer>= offsetof(NRF_COMP_Type, TASKS_STOP)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>COMP stop sampling task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga0a587fcb0646329cb6d9700f555787f8aee22b3249ada6965b7859d383de2cb70" prot="public">
          <name>NRF_COMP_TASK_SAMPLE</name>
          <initializer>= offsetof(NRF_COMP_Type, TASKS_SAMPLE)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sample comparator value. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="199" column="1" bodyfile="hal/nrf_comp.h" bodystart="200" bodyend="204"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1ga17ffea3865f2db28127bae9411bce036" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_event_t</name>
        <enumvalue id="group__nrf__comp__hal_1gga17ffea3865f2db28127bae9411bce036af14fa8579f8161312ce9320216316cfe" prot="public">
          <name>NRF_COMP_EVENT_READY</name>
          <initializer>= offsetof(NRF_COMP_Type, EVENTS_READY)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>COMP is ready and output is valid. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga17ffea3865f2db28127bae9411bce036aaa4c13d4069ae0dfba1ffe3406cfa267" prot="public">
          <name>NRF_COMP_EVENT_DOWN</name>
          <initializer>= offsetof(NRF_COMP_Type, EVENTS_DOWN)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Input voltage crossed the threshold going down. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga17ffea3865f2db28127bae9411bce036a01c26def4266ae02e4f6abeb18ae5f4f" prot="public">
          <name>NRF_COMP_EVENT_UP</name>
          <initializer>= offsetof(NRF_COMP_Type, EVENTS_UP)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Input voltage crossed the threshold going up. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1gga17ffea3865f2db28127bae9411bce036a6eb2fb92c021fde7a3c1590094782b7f" prot="public">
          <name>NRF_COMP_EVENT_CROSS</name>
          <initializer>= offsetof(NRF_COMP_Type, EVENTS_CROSS)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Input voltage crossed the threshold in any direction. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="207" column="1" bodyfile="hal/nrf_comp.h" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1gab671bf5df533600ad4538f8ca2005a43" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_int_mask_t</name>
        <enumvalue id="group__nrf__comp__hal_1ggab671bf5df533600ad4538f8ca2005a43a5416dd348fbaa0b85363fc1b5525099d" prot="public">
          <name>NRF_COMP_INT_READY_MASK</name>
          <initializer>= COMP_INTENSET_READY_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt on READY event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggab671bf5df533600ad4538f8ca2005a43ad78cf001b11ef4dd67f8f28c9f2dbe0c" prot="public">
          <name>NRF_COMP_INT_DOWN_MASK</name>
          <initializer>= COMP_INTENSET_DOWN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt on DOWN event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggab671bf5df533600ad4538f8ca2005a43a25b4fc71542b4e626dd99ef643768fb5" prot="public">
          <name>NRF_COMP_INT_UP_MASK</name>
          <initializer>= COMP_INTENSET_UP_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt on UP event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggab671bf5df533600ad4538f8ca2005a43a8bf5389eb68ecca5d1fad116f711eda2" prot="public">
          <name>NRF_COMP_INT_CROSS_MASK</name>
          <initializer>= COMP_INTENSET_CROSS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt on CROSS event. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="216" column="1" bodyfile="hal/nrf_comp.h" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__comp__hal_1gac21bbfe9589f7dfa639396957d2f2d79" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_comp_short_mask_t</name>
        <enumvalue id="group__nrf__comp__hal_1ggac21bbfe9589f7dfa639396957d2f2d79ab244208dd383122017e2f5ce0e593564" prot="public">
          <name>NRF_COMP_SHORT_STOP_CROSS_MASK</name>
          <initializer>= COMP_SHORTS_CROSS_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between the CROSS event and the STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggac21bbfe9589f7dfa639396957d2f2d79a238f7ff2ccecbe44a8f2c5ecd9defe9b" prot="public">
          <name>NRF_COMP_SHORT_STOP_UP_MASK</name>
          <initializer>= COMP_SHORTS_UP_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between the UP event and the STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__comp__hal_1ggac21bbfe9589f7dfa639396957d2f2d79a9a48568b373cedda97dff468bf5e40f8" prot="public">
          <name>NRF_COMP_SHORT_STOP_DOWN_MASK</name>
          <initializer>= COMP_SHORTS_DOWN_STOP_Msk</initializer>
          <briefdescription>
<para>Shortcut between the DOWN event and the STOP task. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>COMP shortcut masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="225" column="1" bodyfile="hal/nrf_comp.h" bodystart="226" bodyend="230"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrf__comp__hal_1ga4fb8152c87746c98fa6952a30ef7ad01" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t nrf_comp_input_t</definition>
        <argsstring></argsstring>
        <name>nrf_comp_input_t</name>
        <briefdescription>
<para>COMP analog pin selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="66" column="18" bodyfile="hal/nrf_comp.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__nrf__comp__hal_1gaa940ec4e99c2581cdf5000e61d327a8e" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t nrf_comp_ext_ref_t</definition>
        <argsstring></argsstring>
        <name>nrf_comp_ext_ref_t</name>
        <briefdescription>
<para>COMP external analog reference selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="116" column="18" bodyfile="hal/nrf_comp.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__comp__hal_1ga5c05f52c23dd3844511462c680a4417c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_enable</definition>
        <argsstring>(NRF_COMP_Type *p_reg)</argsstring>
        <name>nrf_comp_enable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the COMP peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="442" column="24" bodyfile="hal/nrf_comp.h" bodystart="442" bodyend="445" declfile="hal/nrf_comp.h" declline="244" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gac09cea25dd0a0d2669ae72bfa8f3ccb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_disable</definition>
        <argsstring>(NRF_COMP_Type *p_reg)</argsstring>
        <name>nrf_comp_disable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the COMP peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="447" column="24" bodyfile="hal/nrf_comp.h" bodystart="447" bodyend="450" declfile="hal/nrf_comp.h" declline="251" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga5f7499ef1f0b88f8215c720387821279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_comp_enable_check</definition>
        <argsstring>(NRF_COMP_Type const *p_reg)</argsstring>
        <name>nrf_comp_enable_check</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the COMP peripheral is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The COMP peripheral is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The COMP peripheral is not enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="452" column="24" bodyfile="hal/nrf_comp.h" bodystart="452" bodyend="455" declfile="hal/nrf_comp.h" declline="261" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga8097d4f1c755b65c111fd3d43456e0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_ref_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_ref_t reference)</argsstring>
        <name>nrf_comp_ref_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga2cb45b32907064f8b15ae54d91ca7470" kindref="member">nrf_comp_ref_t</ref></type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Function for setting the reference source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reference</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP reference selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="457" column="24" bodyfile="hal/nrf_comp.h" bodystart="457" bodyend="460" declfile="hal/nrf_comp.h" declline="269" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gaf2c4ded08a41d04b0b739b2053d72975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_ext_ref_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_ext_ref_t ext_ref)</argsstring>
        <name>nrf_comp_ext_ref_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1gaa940ec4e99c2581cdf5000e61d327a8e" kindref="member">nrf_comp_ext_ref_t</ref></type>
          <declname>ext_ref</declname>
        </param>
        <briefdescription>
<para>Function for setting the external analog reference source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ext_ref</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP external analog reference selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="462" column="24" bodyfile="hal/nrf_comp.h" bodystart="462" bodyend="472" declfile="hal/nrf_comp.h" declline="277" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga500c5806660982e218ce77192d364757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_th_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_th_t threshold)</argsstring>
        <name>nrf_comp_th_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__comp__th__t" kindref="compound">nrf_comp_th_t</ref></type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Function for setting threshold voltages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP VDOWN and VUP thresholds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="474" column="24" bodyfile="hal/nrf_comp.h" bodystart="474" bodyend="479" declfile="hal/nrf_comp.h" declline="285" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga2ceb27145e46165c2bf722120ced720d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_main_mode_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_main_mode_t main_mode)</argsstring>
        <name>nrf_comp_main_mode_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga501c4187cafe59f88ed8e98c7de2bfe6" kindref="member">nrf_comp_main_mode_t</ref></type>
          <declname>main_mode</declname>
        </param>
        <briefdescription>
<para>Function for setting the main mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">main_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP main operation mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="481" column="24" bodyfile="hal/nrf_comp.h" bodystart="481" bodyend="485" declfile="hal/nrf_comp.h" declline="293" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga8117597efb3ea6d5ee41aaa1a230332d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_speed_mode_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_sp_mode_t speed_mode)</argsstring>
        <name>nrf_comp_speed_mode_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1gab73023f0b42ab46c65312f9ea9419e05" kindref="member">nrf_comp_sp_mode_t</ref></type>
          <declname>speed_mode</declname>
        </param>
        <briefdescription>
<para>Function for setting the speed mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">speed_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP speed and power mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="487" column="24" bodyfile="hal/nrf_comp.h" bodystart="487" bodyend="491" declfile="hal/nrf_comp.h" declline="302" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gabd2c44d11c6c3e9e34ab8da3f3a2441d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_hysteresis_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_hyst_t hyst)</argsstring>
        <name>nrf_comp_hysteresis_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1gaad279eda81a34c4cc4534f2603ab2717" kindref="member">nrf_comp_hyst_t</ref></type>
          <declname>hyst</declname>
        </param>
        <briefdescription>
<para>Function for setting the hysteresis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hyst</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP comparator hysteresis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="493" column="24" bodyfile="hal/nrf_comp.h" bodystart="493" bodyend="496" declfile="hal/nrf_comp.h" declline="311" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga6b3db242bd32551bc5460bec2c39f727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_isource_set</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_isource_t isource)</argsstring>
        <name>nrf_comp_isource_set</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1gaee0ea1e7c432520ed0ff1fb8ed3e9586" kindref="member">nrf_isource_t</ref></type>
          <declname>isource</declname>
        </param>
        <briefdescription>
<para>Function for setting the current source on the analog input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isource</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP current source selection on analog input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="320" column="24" declfile="hal/nrf_comp.h" declline="320" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga95a7abbc3a0213fc6532300c57200010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_input_select</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_input_t input)</argsstring>
        <name>nrf_comp_input_select</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga4fb8152c87746c98fa6952a30ef7ad01" kindref="member">nrf_comp_input_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function for selecting the active input of the COMP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input to be selected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="505" column="24" bodyfile="hal/nrf_comp.h" bodystart="505" bodyend="514" declfile="hal/nrf_comp.h" declline="329" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga7c28874b0f93f96651b711a982fc8936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_comp_result_get</definition>
        <argsstring>(NRF_COMP_Type const *p_reg)</argsstring>
        <name>nrf_comp_result_get</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the last COMP compare result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If VIN+ == VIN-, the return value depends on the previous result.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last compare result. If 0, then VIN+ &lt; VIN-. If 1, then VIN+ &gt; VIN-. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="516" column="28" bodyfile="hal/nrf_comp.h" bodystart="516" bodyend="519" declfile="hal/nrf_comp.h" declline="340" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga4b55bc056e76b423b75e62a2a5b032be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_int_enable</definition>
        <argsstring>(NRF_COMP_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_comp_int_enable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling interrupts from COMP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__comp__hal_1gab671bf5df533600ad4538f8ca2005a43" kindref="member">nrf_comp_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__nrf__comp__hal_1ga8779fcf92170dc1f02ea74c091f7b6ef" kindref="member">nrf_comp_int_enable_check</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="521" column="24" bodyfile="hal/nrf_comp.h" bodystart="521" bodyend="524" declfile="hal/nrf_comp.h" declline="351" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga3684f8b0cc17571c7c112f538b262311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_int_disable</definition>
        <argsstring>(NRF_COMP_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_comp_int_disable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling interrupts from COMP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__comp__hal_1gab671bf5df533600ad4538f8ca2005a43" kindref="member">nrf_comp_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__nrf__comp__hal_1ga8779fcf92170dc1f02ea74c091f7b6ef" kindref="member">nrf_comp_int_enable_check</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="526" column="24" bodyfile="hal/nrf_comp.h" bodystart="526" bodyend="529" declfile="hal/nrf_comp.h" declline="362" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga8779fcf92170dc1f02ea74c091f7b6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_comp_int_enable_check</definition>
        <argsstring>(NRF_COMP_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_comp_int_enable_check</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__comp__hal_1gab671bf5df533600ad4538f8ca2005a43" kindref="member">nrf_comp_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="531" column="28" bodyfile="hal/nrf_comp.h" bodystart="531" bodyend="534" declfile="hal/nrf_comp.h" declline="373" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gafa255ea77d914b7abf54edbac9375f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_comp_task_address_get</definition>
        <argsstring>(NRF_COMP_Type const *p_reg, nrf_comp_task_t task)</argsstring>
        <name>nrf_comp_task_address_get</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga0a587fcb0646329cb6d9700f555787f8" kindref="member">nrf_comp_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified COMP task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified COMP task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="536" column="28" bodyfile="hal/nrf_comp.h" bodystart="536" bodyend="540" declfile="hal/nrf_comp.h" declline="383" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gacd266bda717882290555993230244d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_comp_event_address_get</definition>
        <argsstring>(NRF_COMP_Type const *p_reg, nrf_comp_event_t event)</argsstring>
        <name>nrf_comp_event_address_get</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga17ffea3865f2db28127bae9411bce036" kindref="member">nrf_comp_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified COMP event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified COMP event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="542" column="28" bodyfile="hal/nrf_comp.h" bodystart="542" bodyend="546" declfile="hal/nrf_comp.h" declline="394" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga5e27ebf4b606f2cfe394df53a611c20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_shorts_enable</definition>
        <argsstring>(NRF_COMP_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_comp_shorts_enable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting COMP shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="548" column="24" bodyfile="hal/nrf_comp.h" bodystart="548" bodyend="551" declfile="hal/nrf_comp.h" declline="403" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga940bea65f2f301b560de50f7982c220a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_shorts_disable</definition>
        <argsstring>(NRF_COMP_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_comp_shorts_disable</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for clearing COMP shortcuts by mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="553" column="24" bodyfile="hal/nrf_comp.h" bodystart="553" bodyend="556" declfile="hal/nrf_comp.h" declline="411" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga44bf51b858aa721c9259de645facadc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_task_trigger</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_task_t task)</argsstring>
        <name>nrf_comp_task_trigger</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga0a587fcb0646329cb6d9700f555787f8" kindref="member">nrf_comp_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified COMP task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="558" column="24" bodyfile="hal/nrf_comp.h" bodystart="558" bodyend="561" declfile="hal/nrf_comp.h" declline="419" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1ga4cddceff06a97a15d763b963059b20a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_comp_event_clear</definition>
        <argsstring>(NRF_COMP_Type *p_reg, nrf_comp_event_t event)</argsstring>
        <name>nrf_comp_event_clear</name>
        <param>
          <type>NRF_COMP_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga17ffea3865f2db28127bae9411bce036" kindref="member">nrf_comp_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified COMP event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>COMP event to be cleared. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="563" column="24" bodyfile="hal/nrf_comp.h" bodystart="563" bodyend="567" declfile="hal/nrf_comp.h" declline="427" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__comp__hal_1gac382518feeb776a5e52c3e82b1d3f43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_comp_event_check</definition>
        <argsstring>(NRF_COMP_Type const *p_reg, nrf_comp_event_t event)</argsstring>
        <name>nrf_comp_event_check</name>
        <param>
          <type>NRF_COMP_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__comp__hal_1ga17ffea3865f2db28127bae9411bce036" kindref="member">nrf_comp_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the COMP event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="569" column="24" bodyfile="hal/nrf_comp.h" bodystart="569" bodyend="572" declfile="hal/nrf_comp.h" declline="438" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__comp__hal_1gae7541cca597fceac27d9155082b16248" prot="public" static="no">
        <name>NRF_COMP_HAS_ISOURCE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether COMP has ISOURCE register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="52" column="9" bodyfile="hal/nrf_comp.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__comp__hal_1ga12753db5a9e4ad645e57fbf992289d78" prot="public" static="no">
        <name>NRF_COMP_HAS_AIN_AS_PIN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether the configuration of analog input using pin number is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_comp.h" line="59" column="9" bodyfile="hal/nrf_comp.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer (HAL) for managing the Comparator (COMP) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
