<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrf__i2s_8h" kind="file" language="C++">
    <compoundname>nrf_i2s.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includedby refid="nrfy__i2s_8h" local="no">haly/nrfy_i2s.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>hal/nrf_i2s.h</label>
        <link refid="nrf__i2s_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrf__i2s__config__t" prot="public">nrf_i2s_config_t</innerclass>
    <innerclass refid="structnrf__i2s__pins__t" prot="public">nrf_i2s_pins_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__i2s__hal_1gae6fd9e57a9e93488c6200e98a1c53c60" prot="public" static="no">
        <name>NRF_I2S_HAS_CLKCONFIG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether clock source configuration is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="62" column="9" bodyfile="hal/nrf_i2s.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1ga8deb74881fd11355aa7a79c8d1f5d987" prot="public" static="no">
        <name>NRF_I2S_HAS_FRAMESTART</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether frame start event is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="69" column="9" bodyfile="hal/nrf_i2s.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1ga2327c9ec121c8ded6b631ce0e34f594c" prot="public" static="no">
        <name>NRF_I2S_HAS_GPIO_PORT_SELECTION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether GPIO port selection for pins is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="76" column="9" bodyfile="hal/nrf_i2s.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1gaa890efc8f7bdf507e07763fbdab319f3" prot="public" static="no">
        <name>NRF_I2S_HAS_SWIDTH_32BIT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether 32-bit sample width is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="83" column="9" bodyfile="hal/nrf_i2s.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1ga56f6e18ab6537022f562378c27e5a4d9" prot="public" static="no">
        <name>NRF_I2S_PIN_NOT_CONNECTED</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
<para>This value can be provided as a parameter for the <ref refid="group__nrf__i2s__hal_1gaa24e58ad729cb0f561c8d3fb2f264aba" kindref="member">nrf_i2s_pins_set</ref> function call to specify that the given I2S signal (SDOUT, SDIN, or MCK) shall not be connected to a physical pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="93" column="9" bodyfile="hal/nrf_i2s.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1ga48568a306a6e92daf4154f4c487b81ba" prot="public" static="no">
        <name>NRF_I2S_PSEL_SCK_PIN_MASK</name>
        <initializer>I2S_PSEL_SCK_PIN_Msk</initializer>
        <briefdescription>
<para>I2S SCK pin selection mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="96" column="9" bodyfile="hal/nrf_i2s.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__i2s__hal_1ga6c3b902ba174c76aa2a186044047521a" prot="public" static="no">
        <name>NRF_I2S_PSEL_SCK_PORT_MASK</name>
        <initializer>I2S_PSEL_SCK_PORT_Msk</initializer>
        <briefdescription>
<para>I2S SCK port selection mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="99" column="9" bodyfile="hal/nrf_i2s.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_task_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga1b0d6237adff2552380ed192c4f2446cabbefc91625909b371318b3cfc78b1456" prot="public">
          <name>NRF_I2S_TASK_START</name>
          <initializer>= offsetof(NRF_I2S_Type, TASKS_START)</initializer>
          <briefdescription>
<para>Starts continuous I2S transfer. Also starts the MCK generator if this is enabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1b0d6237adff2552380ed192c4f2446ca9754abf68b9149b7f599fcccdd29586b" prot="public">
          <name>NRF_I2S_TASK_STOP</name>
          <initializer>= offsetof(NRF_I2S_Type, TASKS_STOP)</initializer>
          <briefdescription>
<para>Stops I2S transfer. Also stops the MCK generator. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="102" column="1" bodyfile="hal/nrf_i2s.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_event_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a1f7f78cdb45f7a6792810623c6806798" prot="public">
          <name>NRF_I2S_EVENT_RXPTRUPD</name>
          <initializer>= offsetof(NRF_I2S_Type, EVENTS_RXPTRUPD)</initializer>
          <briefdescription>
<para>The RXD.PTR register has been copied to internal double buffers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130ac532888736efb62e2afb6c76aeb0d651" prot="public">
          <name>NRF_I2S_EVENT_TXPTRUPD</name>
          <initializer>= offsetof(NRF_I2S_Type, EVENTS_TXPTRUPD)</initializer>
          <briefdescription>
<para>The TXD.PTR register has been copied to internal double buffers. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a8c791bd62d42d5761f0920076c1dd2cf" prot="public">
          <name>NRF_I2S_EVENT_STOPPED</name>
          <initializer>= offsetof(NRF_I2S_Type, EVENTS_STOPPED)</initializer>
          <briefdescription>
<para>I2S transfer stopped. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a93d84b351e2600ed47959e2e6a429b95" prot="public">
          <name>NRF_I2S_EVENT_FRAMESTART</name>
          <initializer>= offsetof(NRF_I2S_Type, EVENTS_FRAMESTART)</initializer>
          <briefdescription>
<para>Frame start event, generated on the active edge of LRCK. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="109" column="1" bodyfile="hal/nrf_i2s.h" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1gaee5d64ab1aaaca42c89ea5aa2bfc4029" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_int_mask_t</name>
        <enumvalue id="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029af03b50ce11123bdaa44c148e73c340c7" prot="public">
          <name>NRF_I2S_INT_RXPTRUPD_MASK</name>
          <initializer>= I2S_INTENSET_RXPTRUPD_Msk</initializer>
          <briefdescription>
<para>Interrupt on RXPTRUPD event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029a43e537211fbe458d62a9fae275163514" prot="public">
          <name>NRF_I2S_INT_TXPTRUPD_MASK</name>
          <initializer>= I2S_INTENSET_TXPTRUPD_Msk</initializer>
          <briefdescription>
<para>Interrupt on TXPTRUPD event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029a3154828ac8dfc2c4a70101c9acd60c1c" prot="public">
          <name>NRF_I2S_INT_STOPPED_MASK</name>
          <initializer>= I2S_INTENSET_STOPPED_Msk</initializer>
          <briefdescription>
<para>Interrupt on STOPPED event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029acc6166c86d5e63e4288d0b892c8d7504" prot="public">
          <name>NRF_I2S_INT_FRAMESTART_MASK</name>
          <initializer>= I2S_INTENCLR_FRAMESTART_Msk</initializer>
          <briefdescription>
<para>Interrupt on FRAMESTART event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="120" column="1" bodyfile="hal/nrf_i2s.h" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga05fa70f696366c5a06fa5f5e673735af" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_mode_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga05fa70f696366c5a06fa5f5e673735afa24a0b56d47e1d15b9b5c9b9d3775d4b2" prot="public">
          <name>NRF_I2S_MODE_MASTER</name>
          <initializer>= I2S_CONFIG_MODE_MODE_Master</initializer>
          <briefdescription>
<para>Master mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga05fa70f696366c5a06fa5f5e673735afa381753eabfe4bd24348d05f27fe9f946" prot="public">
          <name>NRF_I2S_MODE_SLAVE</name>
          <initializer>= I2S_CONFIG_MODE_MODE_Slave</initializer>
          <briefdescription>
<para>Slave mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S modes of operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="131" column="1" bodyfile="hal/nrf_i2s.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga1e7fb828b72fa48367cbaeed264f9372" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_mck_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a91a3ed8417e245a7a6f40e9265e9f8b4" prot="public">
          <name>NRF_I2S_MCK_DISABLED</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>MCK disabled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a8e0d2df6f941afbc0b221275d8dac217" prot="public">
          <name>NRF_I2S_MCK_32MDIV2</name>
          <initializer>= (int)I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV2</initializer>
          <briefdescription>
<para>32 MHz / 2 = 16.0 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a07799733c266afe2a3ff6e287ba16570" prot="public">
          <name>NRF_I2S_MCK_32MDIV3</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV3</initializer>
          <briefdescription>
<para>32 MHz / 3 = 10.6666667 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a37099054b461641464a581ae3501ba0b" prot="public">
          <name>NRF_I2S_MCK_32MDIV4</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV4</initializer>
          <briefdescription>
<para>32 MHz / 4 = 8.0 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aab3fd645d05c261d6c02cee0426712d5" prot="public">
          <name>NRF_I2S_MCK_32MDIV5</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV5</initializer>
          <briefdescription>
<para>32 MHz / 5 = 6.4 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a0e8a600b3c708080f06e5ae79eacdb29" prot="public">
          <name>NRF_I2S_MCK_32MDIV6</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV6</initializer>
          <briefdescription>
<para>32 MHz / 6 = 5.3333333 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aa02748b1a696e23de61f2587c972cb80" prot="public">
          <name>NRF_I2S_MCK_32MDIV8</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV8</initializer>
          <briefdescription>
<para>32 MHz / 8 = 4.0 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372af462345fd7fa15e375430f3e4c7d0b1c" prot="public">
          <name>NRF_I2S_MCK_32MDIV10</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV10</initializer>
          <briefdescription>
<para>32 MHz / 10 = 3.2 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a9f18c1c2b24039ed3d462141cda5044a" prot="public">
          <name>NRF_I2S_MCK_32MDIV11</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV11</initializer>
          <briefdescription>
<para>32 MHz / 11 = 2.9090909 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a1a81c1a63a0be014b2fabec4180c1e1d" prot="public">
          <name>NRF_I2S_MCK_32MDIV15</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV15</initializer>
          <briefdescription>
<para>32 MHz / 15 = 2.1333333 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a80fbb2b7d6c7f8fe7843d7b44b591f49" prot="public">
          <name>NRF_I2S_MCK_32MDIV16</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV16</initializer>
          <briefdescription>
<para>32 MHz / 16 = 2.0 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a5d5cd5dfa34dde86151c1623d26be14d" prot="public">
          <name>NRF_I2S_MCK_32MDIV21</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV21</initializer>
          <briefdescription>
<para>32 MHz / 21 = 1.5238095 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a14d8add095a0d9394d83a557bbebdd2b" prot="public">
          <name>NRF_I2S_MCK_32MDIV23</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV23</initializer>
          <briefdescription>
<para>32 MHz / 23 = 1.3913043 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a5cd00d9c0315ebd896ddd79e1080bb5b" prot="public">
          <name>NRF_I2S_MCK_32MDIV30</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV30</initializer>
          <briefdescription>
<para>32 MHz / 30 = 1.0666667 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372afe9d9c0d12809516b94fe3aa9617c7ed" prot="public">
          <name>NRF_I2S_MCK_32MDIV31</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV31</initializer>
          <briefdescription>
<para>32 MHz / 31 = 1.0322581 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372adcc9a908c6d0ff260403eb8b5355334c" prot="public">
          <name>NRF_I2S_MCK_32MDIV32</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV32</initializer>
          <briefdescription>
<para>32 MHz / 32 = 1.0 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a47c43818a811318535b52e60d385b608" prot="public">
          <name>NRF_I2S_MCK_32MDIV42</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV42</initializer>
          <briefdescription>
<para>32 MHz / 42 = 0.7619048 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aee4dee75ed99dcbe8b6ab72ba0e6fca9" prot="public">
          <name>NRF_I2S_MCK_32MDIV63</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV63</initializer>
          <briefdescription>
<para>32 MHz / 63 = 0.5079365 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372ac955cbfda803705f9b419a7249e62620" prot="public">
          <name>NRF_I2S_MCK_32MDIV125</name>
          <initializer>= I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV125</initializer>
          <briefdescription>
<para>32 MHz / 125 = 0.256 MHz. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S master clock generator settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="138" column="1" bodyfile="hal/nrf_i2s.h" bodystart="139" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga11ab985aa62eb48d2177d6784e9a1820" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_ratio_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a2e0d2025041a5f77159649b23c4e3be1" prot="public">
          <name>NRF_I2S_RATIO_32X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_32X</initializer>
          <briefdescription>
<para>LRCK = MCK / 32. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a464eb658eb4dc14be2778c4206df5e3d" prot="public">
          <name>NRF_I2S_RATIO_48X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_48X</initializer>
          <briefdescription>
<para>LRCK = MCK / 48. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a9e5b735f322f0837f125ed8800bb03cb" prot="public">
          <name>NRF_I2S_RATIO_64X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_64X</initializer>
          <briefdescription>
<para>LRCK = MCK / 64. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820ace83ade3551e12b1e6d6786552236ef3" prot="public">
          <name>NRF_I2S_RATIO_96X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_96X</initializer>
          <briefdescription>
<para>LRCK = MCK / 96. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a95043fb96126d45f7962ecb44fcc8326" prot="public">
          <name>NRF_I2S_RATIO_128X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_128X</initializer>
          <briefdescription>
<para>LRCK = MCK / 128. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a002df3214118ae5d9dc5a5a681be27b4" prot="public">
          <name>NRF_I2S_RATIO_192X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_192X</initializer>
          <briefdescription>
<para>LRCK = MCK / 192. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a54378d898f762ca10e8c19bb2fbf92f7" prot="public">
          <name>NRF_I2S_RATIO_256X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_256X</initializer>
          <briefdescription>
<para>LRCK = MCK / 256. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a7ad64239518ee68973609b7dec83a850" prot="public">
          <name>NRF_I2S_RATIO_384X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_384X</initializer>
          <briefdescription>
<para>LRCK = MCK / 384. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820aa20a211b8d083895903d1131d2f6fbb2" prot="public">
          <name>NRF_I2S_RATIO_512X</name>
          <initializer>= I2S_CONFIG_RATIO_RATIO_512X</initializer>
          <briefdescription>
<para>LRCK = MCK / 512. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S MCK/LRCK ratios. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="174" column="1" bodyfile="hal/nrf_i2s.h" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1gac06986979fa6e2b0f4dd1f444b95ef00" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_swidth_t</name>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a1d5cf8f57d1b2987c2c8026ae6f6e8d4" prot="public">
          <name>NRF_I2S_SWIDTH_8BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_8Bit</initializer>
          <briefdescription>
<para>8 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a736f17419ddfa2cd390715b0b5c933eb" prot="public">
          <name>NRF_I2S_SWIDTH_16BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_16Bit</initializer>
          <briefdescription>
<para>16 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a6c2eae4d02cd3c2bf5d5117911a986ad" prot="public">
          <name>NRF_I2S_SWIDTH_24BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_24Bit</initializer>
          <briefdescription>
<para>24 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00ae68942ddf8363103641f3a3a03ecca0a" prot="public">
          <name>NRF_I2S_SWIDTH_32BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_32Bit</initializer>
          <briefdescription>
<para>32 bit. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00af63112e2a72c606cdab0953c01ac8e9c" prot="public">
          <name>NRF_I2S_SWIDTH_8BIT_IN16BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_8BitIn16</initializer>
          <briefdescription>
<para>8 bit sample in a 16-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a80848a2aed6c474753e23f5e1b50ceab" prot="public">
          <name>NRF_I2S_SWIDTH_8BIT_IN32BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_8BitIn32</initializer>
          <briefdescription>
<para>8 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a193365ba6e28558ab9f8f639203cf8bc" prot="public">
          <name>NRF_I2S_SWIDTH_16BIT_IN32BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_16BitIn32</initializer>
          <briefdescription>
<para>16 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a9c541cb19eed47f8cc3335260d9c8c3b" prot="public">
          <name>NRF_I2S_SWIDTH_24BIT_IN32BIT</name>
          <initializer>= I2S_CONFIG_SWIDTH_SWIDTH_24BitIn32</initializer>
          <briefdescription>
<para>24 bit sample in a 32-bit half-frame. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S sample widths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="188" column="1" bodyfile="hal/nrf_i2s.h" bodystart="189" bodyend="208"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1gae48fd73f7f8f0c2f321f192e4b9ed190" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_align_t</name>
        <enumvalue id="group__nrf__i2s__hal_1ggae48fd73f7f8f0c2f321f192e4b9ed190aa0c153dfb284d0433cf811e257f68e92" prot="public">
          <name>NRF_I2S_ALIGN_LEFT</name>
          <initializer>= I2S_CONFIG_ALIGN_ALIGN_Left</initializer>
          <briefdescription>
<para>Left-aligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggae48fd73f7f8f0c2f321f192e4b9ed190a89c6fd3bdfdc412617fc6328b8b882f7" prot="public">
          <name>NRF_I2S_ALIGN_RIGHT</name>
          <initializer>= I2S_CONFIG_ALIGN_ALIGN_Right</initializer>
          <briefdescription>
<para>Right-aligned. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S alignments of sample within a frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="211" column="1" bodyfile="hal/nrf_i2s.h" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga18ab6f73e00677525e1ab53f24dfc1cc" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_format_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga18ab6f73e00677525e1ab53f24dfc1cca68f5e22fc456e548528bf1037201ae68" prot="public">
          <name>NRF_I2S_FORMAT_I2S</name>
          <initializer>= I2S_CONFIG_FORMAT_FORMAT_I2S</initializer>
          <briefdescription>
<para>Original I2S format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga18ab6f73e00677525e1ab53f24dfc1ccabdf99037b33682b6cffafc9240283121" prot="public">
          <name>NRF_I2S_FORMAT_ALIGNED</name>
          <initializer>= I2S_CONFIG_FORMAT_FORMAT_Aligned</initializer>
          <briefdescription>
<para>Alternate (left-aligned or right-aligned) format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S frame formats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="218" column="1" bodyfile="hal/nrf_i2s.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1ga60b286e35e447040e992a3ded4375dbe" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_channels_t</name>
        <enumvalue id="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbea2b60ebd0c804a2a9d7cecbe1f073dab5" prot="public">
          <name>NRF_I2S_CHANNELS_STEREO</name>
          <initializer>= I2S_CONFIG_CHANNELS_CHANNELS_Stereo</initializer>
          <briefdescription>
<para>Stereo. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbea1c11023af3fc2f8d9bd8bad901275234" prot="public">
          <name>NRF_I2S_CHANNELS_LEFT</name>
          <initializer>= I2S_CONFIG_CHANNELS_CHANNELS_Left</initializer>
          <briefdescription>
<para>Left only. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbeabf436a70e4b064360cfa54ecd459c348" prot="public">
          <name>NRF_I2S_CHANNELS_RIGHT</name>
          <initializer>= I2S_CONFIG_CHANNELS_CHANNELS_Right</initializer>
          <briefdescription>
<para>Right only. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S enabled channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="225" column="1" bodyfile="hal/nrf_i2s.h" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__i2s__hal_1gad0c72277d28dba147ebb0696a425c38c" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_i2s_clksrc_t</name>
        <enumvalue id="group__nrf__i2s__hal_1ggad0c72277d28dba147ebb0696a425c38ca006d0a833b037022286e7c7cb196b1ef" prot="public">
          <name>NRF_I2S_CLKSRC_PCLK32M</name>
          <initializer>= I2S_CONFIG_CLKCONFIG_CLKSRC_PCLK32M</initializer>
          <briefdescription>
<para>32MHz peripheral clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__i2s__hal_1ggad0c72277d28dba147ebb0696a425c38ca05504cc606fa043629a895cb9a8986e2" prot="public">
          <name>NRF_I2S_CLKSRC_ACLK</name>
          <initializer>= I2S_CONFIG_CLKCONFIG_CLKSRC_ACLK</initializer>
          <briefdescription>
<para>Audio PLL clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>I2S Clock source selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="234" column="1" bodyfile="hal/nrf_i2s.h" bodystart="235" bodyend="238"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga9a685f05dd1d4b12353186b7046c6e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_task_trigger</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_task_t task)</argsstring>
        <name>nrf_i2s_task_trigger</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for activating the specified I2S task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="552" column="24" bodyfile="hal/nrf_i2s.h" bodystart="552" bodyend="556" declfile="hal/nrf_i2s.h" declline="275" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga50d49f34a959cc036ab0ce55ff1840d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_task_address_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg, nrf_i2s_task_t task)</argsstring>
        <name>nrf_i2s_task_address_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified I2S task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="558" column="28" bodyfile="hal/nrf_i2s.h" bodystart="558" bodyend="562" declfile="hal/nrf_i2s.h" declline="286" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga38474d2787174fb01658bb28d7dfaba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_event_clear</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_event_t event)</argsstring>
        <name>nrf_i2s_event_clear</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified I2S event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="564" column="24" bodyfile="hal/nrf_i2s.h" bodystart="564" bodyend="569" declfile="hal/nrf_i2s.h" declline="295" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gaa21fbad4b6843761743180678de57d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_i2s_event_check</definition>
        <argsstring>(NRF_I2S_Type const *p_reg, nrf_i2s_event_t event)</argsstring>
        <name>nrf_i2s_event_check</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the I2S event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="571" column="24" bodyfile="hal/nrf_i2s.h" bodystart="571" bodyend="575" declfile="hal/nrf_i2s.h" declline="307" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga53a98a96f313e6e74143d7dcb60a98a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_event_address_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg, nrf_i2s_event_t event)</argsstring>
        <name>nrf_i2s_event_address_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified I2S event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="577" column="28" bodyfile="hal/nrf_i2s.h" bodystart="577" bodyend="581" declfile="hal/nrf_i2s.h" declline="318" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gae6ad420da3decfe88fdaf1795878e28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_int_enable</definition>
        <argsstring>(NRF_I2S_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_i2s_int_enable</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__i2s__hal_1gaee5d64ab1aaaca42c89ea5aa2bfc4029" kindref="member">nrf_i2s_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="583" column="24" bodyfile="hal/nrf_i2s.h" bodystart="583" bodyend="586" declfile="hal/nrf_i2s.h" declline="328" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga296d21e44439e25f10cc4dd717d45b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_int_disable</definition>
        <argsstring>(NRF_I2S_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_i2s_int_disable</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__i2s__hal_1gaee5d64ab1aaaca42c89ea5aa2bfc4029" kindref="member">nrf_i2s_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="588" column="24" bodyfile="hal/nrf_i2s.h" bodystart="588" bodyend="591" declfile="hal/nrf_i2s.h" declline="337" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga87f4010060652e1620d24a3fddefed09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_int_enable_check</definition>
        <argsstring>(NRF_I2S_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_i2s_int_enable_check</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__i2s__hal_1gaee5d64ab1aaaca42c89ea5aa2bfc4029" kindref="member">nrf_i2s_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="593" column="28" bodyfile="hal/nrf_i2s.h" bodystart="593" bodyend="596" declfile="hal/nrf_i2s.h" declline="348" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga88eb6dcb016cc499886e58bd5c914089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_enable</definition>
        <argsstring>(NRF_I2S_Type *p_reg)</argsstring>
        <name>nrf_i2s_enable</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for enabling the I2S peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="598" column="24" bodyfile="hal/nrf_i2s.h" bodystart="598" bodyend="601" declfile="hal/nrf_i2s.h" declline="355" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gab762c64e38a866a51001b50ef6e2ed2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_disable</definition>
        <argsstring>(NRF_I2S_Type *p_reg)</argsstring>
        <name>nrf_i2s_disable</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling the I2S peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="603" column="24" bodyfile="hal/nrf_i2s.h" bodystart="603" bodyend="606" declfile="hal/nrf_i2s.h" declline="362" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga1cc8e79f477a2ae232123bda7648bd24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_subscribe_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_task_t task, uint8_t channel)</argsstring>
        <name>nrf_i2s_subscribe_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the subscribe configuration for a given I2S task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="373" column="24" declfile="hal/nrf_i2s.h" declline="373" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga842b1ddeaec04def545f9e6d948ee0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_subscribe_clear</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_task_t task)</argsstring>
        <name>nrf_i2s_subscribe_clear</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the subscribe configuration for a given I2S task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="384" column="24" declfile="hal/nrf_i2s.h" declline="384" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gadb2bbc32fe7c8ce5dada74f7e85cf89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_publish_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_event_t event, uint8_t channel)</argsstring>
        <name>nrf_i2s_publish_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the publish configuration for a given I2S event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="395" column="24" declfile="hal/nrf_i2s.h" declline="395" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga41e38e06a6caa21708e69e89f1d8b5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_publish_clear</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_event_t event)</argsstring>
        <name>nrf_i2s_publish_clear</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the publish configuration for a given I2S event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="406" column="24" declfile="hal/nrf_i2s.h" declline="406" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gaa24e58ad729cb0f561c8d3fb2f264aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_pins_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_pins_t const *p_pins)</argsstring>
        <name>nrf_i2s_pins_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__i2s__pins__t" kindref="compound">nrf_i2s_pins_t</ref> const *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for configuring I2S pins. </para>
        </briefdescription>
        <detaileddescription>
<para>Usage of the SDOUT, SDIN, and MCK signals is optional. If a given signal is not needed, pass the <ref refid="group__nrf__i2s__hal_1ga56f6e18ab6537022f562378c27e5a4d9" kindref="member">NRF_I2S_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with pins selection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="638" column="24" bodyfile="hal/nrf_i2s.h" bodystart="638" bodyend="645" declfile="hal/nrf_i2s.h" declline="420" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gab71de58ff97197873fa3872370ed7002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_sck_pin_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_sck_pin_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="647" column="28" bodyfile="hal/nrf_i2s.h" bodystart="647" bodyend="650" declfile="hal/nrf_i2s.h" declline="429" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga95fb128feef63ca105d8d35600baa5aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_lrck_pin_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_lrck_pin_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the LRCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LRCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="652" column="28" bodyfile="hal/nrf_i2s.h" bodystart="652" bodyend="655" declfile="hal/nrf_i2s.h" declline="438" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga10e1013c82eb5ef067aa11eb141c4a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_mck_pin_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_mck_pin_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the MCK pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MCK pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="657" column="28" bodyfile="hal/nrf_i2s.h" bodystart="657" bodyend="660" declfile="hal/nrf_i2s.h" declline="447" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gace9c22fceb75c64829fafbade7aa6860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_sdout_pin_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_sdout_pin_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SDOUT pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDOUT pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="662" column="28" bodyfile="hal/nrf_i2s.h" bodystart="662" bodyend="665" declfile="hal/nrf_i2s.h" declline="456" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga909727234ecb199fcdf436b15f6223cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_i2s_sdin_pin_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_sdin_pin_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the SDIN pin selection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIN pin selection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="667" column="28" bodyfile="hal/nrf_i2s.h" bodystart="667" bodyend="670" declfile="hal/nrf_i2s.h" declline="465" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga1e35046cd7d3decaf2e9c7e304c51487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_configure</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_config_t const *p_config)</argsstring>
        <name>nrf_i2s_configure</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__i2s__config__t" kindref="compound">nrf_i2s_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting the I2S peripheral configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure with configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="672" column="24" bodyfile="hal/nrf_i2s.h" bodystart="672" bodyend="692" declfile="hal/nrf_i2s.h" declline="473" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga4f58fc8e84570286d4abfdedbdf80530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_transfer_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, uint16_t size, uint32_t *p_rx_buffer, uint32_t const *p_tx_buffer)</argsstring>
        <name>nrf_i2s_transfer_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_rx_buffer</declname>
        </param>
        <param>
          <type>uint32_t const *</type>
          <declname>p_tx_buffer</declname>
        </param>
        <briefdescription>
<para>Function for setting up the I2S transfer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets up the RX and TX buffers and enables reception or transmission (or both) accordingly. If the transfer in a given direction is not required, pass NULL instead of the pointer to the corresponding buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffers (in 32-bit words). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_rx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the receive buffer. Pass NULL to disable reception. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_tx_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the transmit buffer. Pass NULL to disable transmission. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="694" column="24" bodyfile="hal/nrf_i2s.h" bodystart="694" bodyend="710" declfile="hal/nrf_i2s.h" declline="489" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gaef70cd84afcc91341aa82324155e5b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_rx_buffer_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, uint32_t *p_buffer)</argsstring>
        <name>nrf_i2s_rx_buffer_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Function for setting the pointer to the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The size of the buffer can be set only by calling <ref refid="group__nrf__i2s__hal_1ga4f58fc8e84570286d4abfdedbdf80530" kindref="member">nrf_i2s_transfer_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the receive buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="712" column="24" bodyfile="hal/nrf_i2s.h" bodystart="712" bodyend="716" declfile="hal/nrf_i2s.h" declline="503" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga300c23337833839f4c517069604bc4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t *</type>
        <definition>NRF_STATIC_INLINE uint32_t * nrf_i2s_rx_buffer_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_rx_buffer_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the receive buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="718" column="29" bodyfile="hal/nrf_i2s.h" bodystart="718" bodyend="721" declfile="hal/nrf_i2s.h" declline="513" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gaedfeb0764a02f811b3cd7f37096ff284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_tx_buffer_set</definition>
        <argsstring>(NRF_I2S_Type *p_reg, uint32_t const *p_buffer)</argsstring>
        <name>nrf_i2s_tx_buffer_set</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Function for setting the pointer to the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The size of the buffer can be set only by calling <ref refid="group__nrf__i2s__hal_1ga4f58fc8e84570286d4abfdedbdf80530" kindref="member">nrf_i2s_transfer_set</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the transmit buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="723" column="24" bodyfile="hal/nrf_i2s.h" bodystart="723" bodyend="727" declfile="hal/nrf_i2s.h" declline="524" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1ga599b42b26c7c26fdc277eb1c72602d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t *</type>
        <definition>NRF_STATIC_INLINE uint32_t * nrf_i2s_tx_buffer_get</definition>
        <argsstring>(NRF_I2S_Type const *p_reg)</argsstring>
        <name>nrf_i2s_tx_buffer_get</name>
        <param>
          <type>NRF_I2S_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the pointer to the transmit buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the transmit buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="729" column="29" bodyfile="hal/nrf_i2s.h" bodystart="729" bodyend="732" declfile="hal/nrf_i2s.h" declline="534" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__i2s__hal_1gaad29a9133da28846b000d43a4edd5553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_i2s_clk_configure</definition>
        <argsstring>(NRF_I2S_Type *p_reg, nrf_i2s_clksrc_t clksrc, bool enable_bypass)</argsstring>
        <name>nrf_i2s_clk_configure</name>
        <param>
          <type>NRF_I2S_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__i2s__hal_1gad0c72277d28dba147ebb0696a425c38c" kindref="member">nrf_i2s_clksrc_t</ref></type>
          <declname>clksrc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_bypass</declname>
        </param>
        <briefdescription>
<para>Function for configuring I2S Clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>I2S Clock source selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_bypass</parametername>
</parameternamelist>
<parameterdescription>
<para>Bypass clock generator. MCK will be equal to source input. If bypass is enabled the MCKFREQ setting has no effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_i2s.h" line="735" column="24" bodyfile="hal/nrf_i2s.h" bodystart="735" bodyend="741" declfile="hal/nrf_i2s.h" declline="545" declcolumn="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_I2S_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HALTIUM_XXAA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_CLOCKPIN_SCK_NEEDED<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_CLOCKPIN_LRCK_NEEDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_CLOCKPIN_MCK_NEEDED<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NRF_I2S0)<sp/>&amp;&amp;<sp/>defined(NRF_I2S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S0<sp/>NRF_I2S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrf_i2s_hal<sp/>I2S<sp/>HAL</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_i2s</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>for<sp/>managing<sp/>the<sp/>Inter-IC<sp/>Sound<sp/>(I2S)<sp/>peripheral.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_CLKCONFIG_CLKSRC_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>clock<sp/>source<sp/>configuration<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_CLKCONFIG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_CLKCONFIG<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_INTENSET_FRAMESTART_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>frame<sp/>start<sp/>event<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_FRAMESTART<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_FRAMESTART<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_PSEL_SCK_PORT_Msk)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>GPIO<sp/>port<sp/>selection<sp/>for<sp/>pins<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_GPIO_PORT_SELECTION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_GPIO_PORT_SELECTION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_SWIDTH_SWIDTH_32Bit)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@brief<sp/>Symbol<sp/>indicating<sp/>whether<sp/>32-bit<sp/>sample<sp/>width<sp/>is<sp/>available.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_SWIDTH_32BIT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_HAS_SWIDTH_32BIT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>value<sp/>can<sp/>be<sp/>provided<sp/>as<sp/>a<sp/>parameter<sp/>for<sp/>the<sp/>@ref<sp/>nrf_i2s_pins_set</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>call<sp/>to<sp/>specify<sp/>that<sp/>the<sp/>given<sp/>I2S<sp/>signal<sp/>(SDOUT,<sp/>SDIN,<sp/>or<sp/>MCK)</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>connected<sp/>to<sp/>a<sp/>physical<sp/>pin.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_PIN_NOT_CONNECTED<sp/><sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>SCK<sp/>pin<sp/>selection<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_PSEL_SCK_PIN_MASK<sp/><sp/>I2S_PSEL_SCK_PIN_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>SCK<sp/>port<sp/>selection<sp/>mask.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_I2S_PSEL_SCK_PORT_MASK<sp/>I2S_PSEL_SCK_PORT_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>tasks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1b0d6237adff2552380ed192c4f2446cabbefc91625909b371318b3cfc78b1456" kindref="member">NRF_I2S_TASK_START</ref><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>TASKS_START),<sp/></highlight><highlight class="comment">///&lt;<sp/>Starts<sp/>continuous<sp/>I2S<sp/>transfer.<sp/>Also<sp/>starts<sp/>the<sp/>MCK<sp/>generator<sp/>if<sp/>this<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1b0d6237adff2552380ed192c4f2446ca9754abf68b9149b7f599fcccdd29586b" kindref="member">NRF_I2S_TASK_STOP</ref><sp/><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>TASKS_STOP)<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Stops<sp/>I2S<sp/>transfer.<sp/>Also<sp/>stops<sp/>the<sp/>MCK<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a1f7f78cdb45f7a6792810623c6806798" kindref="member">NRF_I2S_EVENT_RXPTRUPD</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>EVENTS_RXPTRUPD),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>RXD.PTR<sp/>register<sp/>has<sp/>been<sp/>copied<sp/>to<sp/>internal<sp/>double<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130ac532888736efb62e2afb6c76aeb0d651" kindref="member">NRF_I2S_EVENT_TXPTRUPD</ref><sp/><sp/><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>EVENTS_TXPTRUPD),<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>TXD.PTR<sp/>register<sp/>has<sp/>been<sp/>copied<sp/>to<sp/>internal<sp/>double<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a8c791bd62d42d5761f0920076c1dd2cf" kindref="member">NRF_I2S_EVENT_STOPPED</ref><sp/><sp/><sp/><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>EVENTS_STOPPED),<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>I2S<sp/>transfer<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_FRAMESTART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga967706637d88bdbccfff09608a2b4130a93d84b351e2600ed47959e2e6a429b95" kindref="member">NRF_I2S_EVENT_FRAMESTART</ref><sp/>=<sp/>offsetof(NRF_I2S_Type,<sp/>EVENTS_FRAMESTART)<sp/></highlight><highlight class="comment">///&lt;<sp/>Frame<sp/>start<sp/>event,<sp/>generated<sp/>on<sp/>the<sp/>active<sp/>edge<sp/>of<sp/>LRCK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029af03b50ce11123bdaa44c148e73c340c7" kindref="member">NRF_I2S_INT_RXPTRUPD_MASK</ref><sp/><sp/><sp/>=<sp/>I2S_INTENSET_RXPTRUPD_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>RXPTRUPD<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029a43e537211fbe458d62a9fae275163514" kindref="member">NRF_I2S_INT_TXPTRUPD_MASK</ref><sp/><sp/><sp/>=<sp/>I2S_INTENSET_TXPTRUPD_Msk,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>TXPTRUPD<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029a3154828ac8dfc2c4a70101c9acd60c1c" kindref="member">NRF_I2S_INT_STOPPED_MASK</ref><sp/><sp/><sp/><sp/>=<sp/>I2S_INTENSET_STOPPED_Msk,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>STOPPED<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_FRAMESTART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggaee5d64ab1aaaca42c89ea5aa2bfc4029acc6166c86d5e63e4288d0b892c8d7504" kindref="member">NRF_I2S_INT_FRAMESTART_MASK</ref><sp/>=<sp/>I2S_INTENCLR_FRAMESTART_Msk<sp/></highlight><highlight class="comment">///&lt;<sp/>Interrupt<sp/>on<sp/>FRAMESTART<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1gaee5d64ab1aaaca42c89ea5aa2bfc4029" kindref="member">nrf_i2s_int_mask_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>modes<sp/>of<sp/>operation.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga05fa70f696366c5a06fa5f5e673735afa24a0b56d47e1d15b9b5c9b9d3775d4b2" kindref="member">NRF_I2S_MODE_MASTER</ref><sp/>=<sp/>I2S_CONFIG_MODE_MODE_Master,<sp/></highlight><highlight class="comment">///&lt;<sp/>Master<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga05fa70f696366c5a06fa5f5e673735afa381753eabfe4bd24348d05f27fe9f946" kindref="member">NRF_I2S_MODE_SLAVE</ref><sp/><sp/>=<sp/>I2S_CONFIG_MODE_MODE_Slave<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Slave<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga05fa70f696366c5a06fa5f5e673735af" kindref="member">nrf_i2s_mode_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>master<sp/>clock<sp/>generator<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a91a3ed8417e245a7a6f40e9265e9f8b4" kindref="member">NRF_I2S_MCK_DISABLED</ref><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV2)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[conversion<sp/>to<sp/>&apos;int&apos;<sp/>needed<sp/>to<sp/>prevent<sp/>compilers<sp/>from<sp/>complaining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>that<sp/>the<sp/>provided<sp/>value<sp/>(0x80000000UL)<sp/>is<sp/>out<sp/>of<sp/>range<sp/>of<sp/>&quot;int&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a8e0d2df6f941afbc0b221275d8dac217" kindref="member">NRF_I2S_MCK_32MDIV2</ref><sp/><sp/><sp/>=<sp/>(int)I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV2,<sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>2<sp/>=<sp/>16.0<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="146"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV3)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a07799733c266afe2a3ff6e287ba16570" kindref="member">NRF_I2S_MCK_32MDIV3</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV3,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>3<sp/>=<sp/>10.6666667<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV4)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a37099054b461641464a581ae3501ba0b" kindref="member">NRF_I2S_MCK_32MDIV4</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV4,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>4<sp/>=<sp/>8.0<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV5)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aab3fd645d05c261d6c02cee0426712d5" kindref="member">NRF_I2S_MCK_32MDIV5</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV5,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>5<sp/>=<sp/>6.4<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV6)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a0e8a600b3c708080f06e5ae79eacdb29" kindref="member">NRF_I2S_MCK_32MDIV6</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV6,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>6<sp/>=<sp/>5.3333333<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aa02748b1a696e23de61f2587c972cb80" kindref="member">NRF_I2S_MCK_32MDIV8</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV8,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>8<sp/>=<sp/>4.0<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372af462345fd7fa15e375430f3e4c7d0b1c" kindref="member">NRF_I2S_MCK_32MDIV10</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV10,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>10<sp/>=<sp/>3.2<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a9f18c1c2b24039ed3d462141cda5044a" kindref="member">NRF_I2S_MCK_32MDIV11</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV11,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>11<sp/>=<sp/>2.9090909<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a1a81c1a63a0be014b2fabec4180c1e1d" kindref="member">NRF_I2S_MCK_32MDIV15</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV15,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>15<sp/>=<sp/>2.1333333<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a80fbb2b7d6c7f8fe7843d7b44b591f49" kindref="member">NRF_I2S_MCK_32MDIV16</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV16,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>16<sp/>=<sp/>2.0<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a5d5cd5dfa34dde86151c1623d26be14d" kindref="member">NRF_I2S_MCK_32MDIV21</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV21,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>21<sp/>=<sp/>1.5238095<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a14d8add095a0d9394d83a557bbebdd2b" kindref="member">NRF_I2S_MCK_32MDIV23</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV23,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>23<sp/>=<sp/>1.3913043<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a5cd00d9c0315ebd896ddd79e1080bb5b" kindref="member">NRF_I2S_MCK_32MDIV30</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV30,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>30<sp/>=<sp/>1.0666667<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372afe9d9c0d12809516b94fe3aa9617c7ed" kindref="member">NRF_I2S_MCK_32MDIV31</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV31,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>31<sp/>=<sp/>1.0322581<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372adcc9a908c6d0ff260403eb8b5355334c" kindref="member">NRF_I2S_MCK_32MDIV32</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV32,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>32<sp/>=<sp/>1.0<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a47c43818a811318535b52e60d385b608" kindref="member">NRF_I2S_MCK_32MDIV42</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV42,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>42<sp/>=<sp/>0.7619048<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372aee4dee75ed99dcbe8b6ab72ba0e6fca9" kindref="member">NRF_I2S_MCK_32MDIV63</ref><sp/><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV63,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>63<sp/>=<sp/>0.5079365<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372ac955cbfda803705f9b419a7249e62620" kindref="member">NRF_I2S_MCK_32MDIV125</ref><sp/>=<sp/>I2S_CONFIG_MCKFREQ_MCKFREQ_32MDIV125<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>MHz<sp/>/<sp/>125<sp/>=<sp/>0.256<sp/>MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga1e7fb828b72fa48367cbaeed264f9372" kindref="member">nrf_i2s_mck_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>MCK/LRCK<sp/>ratios.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a2e0d2025041a5f77159649b23c4e3be1" kindref="member">NRF_I2S_RATIO_32X</ref><sp/><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_32X,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a464eb658eb4dc14be2778c4206df5e3d" kindref="member">NRF_I2S_RATIO_48X</ref><sp/><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_48X,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>48.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a9e5b735f322f0837f125ed8800bb03cb" kindref="member">NRF_I2S_RATIO_64X</ref><sp/><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_64X,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820ace83ade3551e12b1e6d6786552236ef3" kindref="member">NRF_I2S_RATIO_96X</ref><sp/><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_96X,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>96.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a95043fb96126d45f7962ecb44fcc8326" kindref="member">NRF_I2S_RATIO_128X</ref><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_128X,<sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>128.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a002df3214118ae5d9dc5a5a681be27b4" kindref="member">NRF_I2S_RATIO_192X</ref><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_192X,<sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>192.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a54378d898f762ca10e8c19bb2fbf92f7" kindref="member">NRF_I2S_RATIO_256X</ref><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_256X,<sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>256.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820a7ad64239518ee68973609b7dec83a850" kindref="member">NRF_I2S_RATIO_384X</ref><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_384X,<sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>384.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga11ab985aa62eb48d2177d6784e9a1820aa20a211b8d083895903d1131d2f6fbb2" kindref="member">NRF_I2S_RATIO_512X</ref><sp/>=<sp/>I2S_CONFIG_RATIO_RATIO_512X<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>=<sp/>MCK<sp/>/<sp/>512.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga11ab985aa62eb48d2177d6784e9a1820" kindref="member">nrf_i2s_ratio_t</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>sample<sp/>widths.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a1d5cf8f57d1b2987c2c8026ae6f6e8d4" kindref="member">NRF_I2S_SWIDTH_8BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_8Bit,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a736f17419ddfa2cd390715b0b5c933eb" kindref="member">NRF_I2S_SWIDTH_16BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_16Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a6c2eae4d02cd3c2bf5d5117911a986ad" kindref="member">NRF_I2S_SWIDTH_24BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_24Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>24<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_SWIDTH_32BIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00ae68942ddf8363103641f3a3a03ecca0a" kindref="member">NRF_I2S_SWIDTH_32BIT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_32Bit,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>32<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_SWIDTH_SWIDTH_8BitIn16)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00af63112e2a72c606cdab0953c01ac8e9c" kindref="member">NRF_I2S_SWIDTH_8BIT_IN16BIT</ref><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_8BitIn16,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>16-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_SWIDTH_SWIDTH_8BitIn32)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a80848a2aed6c474753e23f5e1b50ceab" kindref="member">NRF_I2S_SWIDTH_8BIT_IN32BIT</ref><sp/><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_8BitIn32,<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>8<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_SWIDTH_SWIDTH_16BitIn32)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a193365ba6e28558ab9f8f639203cf8bc" kindref="member">NRF_I2S_SWIDTH_16BIT_IN32BIT</ref><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_16BitIn32,<sp/></highlight><highlight class="comment">///&lt;<sp/>16<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(I2S_CONFIG_SWIDTH_SWIDTH_24BitIn32)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggac06986979fa6e2b0f4dd1f444b95ef00a9c541cb19eed47f8cc3335260d9c8c3b" kindref="member">NRF_I2S_SWIDTH_24BIT_IN32BIT</ref><sp/>=<sp/>I2S_CONFIG_SWIDTH_SWIDTH_24BitIn32,<sp/></highlight><highlight class="comment">///&lt;<sp/>24<sp/>bit<sp/>sample<sp/>in<sp/>a<sp/>32-bit<sp/>half-frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1gac06986979fa6e2b0f4dd1f444b95ef00" kindref="member">nrf_i2s_swidth_t</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>alignments<sp/>of<sp/>sample<sp/>within<sp/>a<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggae48fd73f7f8f0c2f321f192e4b9ed190aa0c153dfb284d0433cf811e257f68e92" kindref="member">NRF_I2S_ALIGN_LEFT</ref><sp/><sp/>=<sp/>I2S_CONFIG_ALIGN_ALIGN_Left,<sp/></highlight><highlight class="comment">///&lt;<sp/>Left-aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggae48fd73f7f8f0c2f321f192e4b9ed190a89c6fd3bdfdc412617fc6328b8b882f7" kindref="member">NRF_I2S_ALIGN_RIGHT</ref><sp/>=<sp/>I2S_CONFIG_ALIGN_ALIGN_Right<sp/></highlight><highlight class="comment">///&lt;<sp/>Right-aligned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1gae48fd73f7f8f0c2f321f192e4b9ed190" kindref="member">nrf_i2s_align_t</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>frame<sp/>formats.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga18ab6f73e00677525e1ab53f24dfc1cca68f5e22fc456e548528bf1037201ae68" kindref="member">NRF_I2S_FORMAT_I2S</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_FORMAT_FORMAT_I2S,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Original<sp/>I2S<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga18ab6f73e00677525e1ab53f24dfc1ccabdf99037b33682b6cffafc9240283121" kindref="member">NRF_I2S_FORMAT_ALIGNED</ref><sp/>=<sp/>I2S_CONFIG_FORMAT_FORMAT_Aligned<sp/></highlight><highlight class="comment">///&lt;<sp/>Alternate<sp/>(left-aligned<sp/>or<sp/>right-aligned)<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga18ab6f73e00677525e1ab53f24dfc1cc" kindref="member">nrf_i2s_format_t</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>enabled<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbea2b60ebd0c804a2a9d7cecbe1f073dab5" kindref="member">NRF_I2S_CHANNELS_STEREO</ref><sp/>=<sp/>I2S_CONFIG_CHANNELS_CHANNELS_Stereo,<sp/></highlight><highlight class="comment">///&lt;<sp/>Stereo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbea1c11023af3fc2f8d9bd8bad901275234" kindref="member">NRF_I2S_CHANNELS_LEFT</ref><sp/><sp/><sp/>=<sp/>I2S_CONFIG_CHANNELS_CHANNELS_Left,<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Left<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gga60b286e35e447040e992a3ded4375dbeabf436a70e4b064360cfa54ecd459c348" kindref="member">NRF_I2S_CHANNELS_RIGHT</ref><sp/><sp/>=<sp/>I2S_CONFIG_CHANNELS_CHANNELS_Right<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Right<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1ga60b286e35e447040e992a3ded4375dbe" kindref="member">nrf_i2s_channels_t</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_CLKCONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>Clock<sp/>source<sp/>selection.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggad0c72277d28dba147ebb0696a425c38ca006d0a833b037022286e7c7cb196b1ef" kindref="member">NRF_I2S_CLKSRC_PCLK32M</ref><sp/>=<sp/>I2S_CONFIG_CLKCONFIG_CLKSRC_PCLK32M,<sp/></highlight><highlight class="comment">///&lt;<sp/>32MHz<sp/>peripheral<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ggad0c72277d28dba147ebb0696a425c38ca05504cc606fa043629a895cb9a8986e2" kindref="member">NRF_I2S_CLKSRC_ACLK</ref><sp/><sp/><sp/><sp/>=<sp/>I2S_CONFIG_CLKCONFIG_CLKSRC_ACLK<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Audio<sp/>PLL<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}<sp/><ref refid="group__nrf__i2s__hal_1gad0c72277d28dba147ebb0696a425c38c" kindref="member">nrf_i2s_clksrc_t</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>configuration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="structnrf__i2s__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga05fa70f696366c5a06fa5f5e673735af" kindref="member">nrf_i2s_mode_t</ref><sp/><sp/><sp/><sp/><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Mode<sp/>of<sp/>operation<sp/>(master<sp/>or<sp/>slave).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga18ab6f73e00677525e1ab53f24dfc1cc" kindref="member">nrf_i2s_format_t</ref><sp/><sp/><sp/>format;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>I2S<sp/>frame<sp/>format.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gae48fd73f7f8f0c2f321f192e4b9ed190" kindref="member">nrf_i2s_align_t</ref><sp/><sp/><sp/><sp/>alignment;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Alignment<sp/>of<sp/>sample<sp/>within<sp/>a<sp/>frame.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gac06986979fa6e2b0f4dd1f444b95ef00" kindref="member">nrf_i2s_swidth_t</ref><sp/><sp/><sp/>sample_width;<sp/></highlight><highlight class="comment">/**&lt;<sp/>Sample<sp/>width.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga60b286e35e447040e992a3ded4375dbe" kindref="member">nrf_i2s_channels_t</ref><sp/>channels;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Enabled<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1e7fb828b72fa48367cbaeed264f9372" kindref="member">nrf_i2s_mck_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>mck_setup;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Master<sp/>clock<sp/>generator<sp/>setup.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga11ab985aa62eb48d2177d6784e9a1820" kindref="member">nrf_i2s_ratio_t</ref><sp/><sp/><sp/><sp/>ratio;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>MCK/LRCK<sp/>ratio.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}<sp/><ref refid="structnrf__i2s__config__t" kindref="compound">nrf_i2s_config_t</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">/**<sp/>@brief<sp/>I2S<sp/>pins.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="structnrf__i2s__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sck_pin;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>lrck_pin;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>LRCK<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mck_pin;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>MCK<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_I2S_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdout_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>SDOUT<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_I2S_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdin_pin;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SDIN<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Optional.<sp/>Use<sp/>@ref<sp/>NRF_I2S_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}<sp/><ref refid="structnrf__i2s__pins__t" kindref="compound">nrf_i2s_pins_t</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>activating<sp/>the<sp/>specified<sp/>I2S<sp/>task.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>to<sp/>be<sp/>activated.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga9a685f05dd1d4b12353186b7046c6e23" kindref="member">nrf_i2s_task_trigger</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>I2S<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Specified<sp/>task.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>task<sp/>register.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga50d49f34a959cc036ab0ce55ff1840d8" kindref="member">nrf_i2s_task_address_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>specified<sp/>I2S<sp/>event.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>clear.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga38474d2787174fb01658bb28d7dfaba9" kindref="member">nrf_i2s_event_clear</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>retrieving<sp/>the<sp/>state<sp/>of<sp/>the<sp/>I2S<sp/>event.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/><sp/>The<sp/>event<sp/>has<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@retval<sp/>false<sp/>The<sp/>event<sp/>has<sp/>not<sp/>been<sp/>generated.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaa21fbad4b6843761743180678de57d46" kindref="member">nrf_i2s_event_check</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>address<sp/>of<sp/>the<sp/>specified<sp/>I2S<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Specified<sp/>event.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@return<sp/>Address<sp/>of<sp/>the<sp/>specified<sp/>event<sp/>register.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga53a98a96f313e6e74143d7dcb60a98a2" kindref="member">nrf_i2s_event_address_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_i2s_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gae6ad420da3decfe88fdaf1795878e28f" kindref="member">nrf_i2s_int_enable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>specified<sp/>interrupts.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>disabled.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_i2s_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga296d21e44439e25f10cc4dd717d45b18" kindref="member">nrf_i2s_int_disable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>checking<sp/>if<sp/>the<sp/>specified<sp/>interrupts<sp/>are<sp/>enabled.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>@ref<sp/>nrf_i2s_int_mask_t<sp/>values<sp/>for<sp/>bit<sp/>masking.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>enabled<sp/>interrupts.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga87f4010060652e1620d24a3fddefed09" kindref="member">nrf_i2s_int_enable_check</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>the<sp/>I2S<sp/>peripheral.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga88eb6dcb016cc499886e58bd5c914089" kindref="member">nrf_i2s_enable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>the<sp/>I2S<sp/>peripheral.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gab762c64e38a866a51001b50ef6e2ed2a" kindref="member">nrf_i2s_disable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="365"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2S<sp/>task.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/><sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>subscribe<sp/>events.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga1cc8e79f477a2ae232123bda7648bd24" kindref="member">nrf_i2s_subscribe_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>subscribe<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2S<sp/>task.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>task<sp/><sp/>Task<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga842b1ddeaec04def545f9e6d948ee0e1" kindref="member">nrf_i2s_subscribe_clear</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2S<sp/>event.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/><sp/><sp/>Event<sp/>for<sp/>which<sp/>to<sp/>set<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/>Channel<sp/>through<sp/>which<sp/>to<sp/>publish<sp/>the<sp/>event.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gadb2bbc32fe7c8ce5dada74f7e85cf89e" kindref="member">nrf_i2s_publish_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>clearing<sp/>the<sp/>publish<sp/>configuration<sp/>for<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2S<sp/>event.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>event<sp/>Event<sp/>for<sp/>which<sp/>to<sp/>clear<sp/>the<sp/>configuration.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga41e38e06a6caa21708e69e89f1d8b5fc" kindref="member">nrf_i2s_publish_clear</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>I2S<sp/>pins.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>Usage<sp/>of<sp/>the<sp/>SDOUT,<sp/>SDIN,<sp/>and<sp/>MCK<sp/>signals<sp/>is<sp/>optional.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>given<sp/>signal<sp/>is<sp/>not<sp/>needed,<sp/>pass<sp/>the<sp/>@ref<sp/>NRF_I2S_PIN_NOT_CONNECTED</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>value<sp/>instead<sp/>of<sp/>its<sp/>pin<sp/>number.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>pins<sp/>selection.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaa24e58ad729cb0f561c8d3fb2f264aba" kindref="member">nrf_i2s_pins_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__i2s__pins__t" kindref="compound">nrf_i2s_pins_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pins);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>@return<sp/>SCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1gab71de58ff97197873fa3872370ed7002" kindref="member">nrf_i2s_sck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>LRCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>@return<sp/>LRCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga95fb128feef63ca105d8d35600baa5aa" kindref="member">nrf_i2s_lrck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>@return<sp/>MCK<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga10e1013c82eb5ef067aa11eb141c4a38" kindref="member">nrf_i2s_mck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="449"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SDOUT<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>@return<sp/>SDOUT<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1gace9c22fceb75c64829fafbade7aa6860" kindref="member">nrf_i2s_sdout_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="458"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SDIN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>@return<sp/>SDIN<sp/>pin<sp/>selection.</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga909727234ecb199fcdf436b15f6223cd" kindref="member">nrf_i2s_sdin_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>I2S<sp/>peripheral<sp/>configuration.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>with<sp/>configuration.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga1e35046cd7d3decaf2e9c7e304c51487" kindref="member">nrf_i2s_configure</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__i2s__config__t" kindref="compound">nrf_i2s_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="475"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>I2S<sp/>transfer.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>sets<sp/>up<sp/>the<sp/>RX<sp/>and<sp/>TX<sp/>buffers<sp/>and<sp/>enables<sp/>reception<sp/>or</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>transmission<sp/>(or<sp/>both)<sp/>accordingly.<sp/>If<sp/>the<sp/>transfer<sp/>in<sp/>a<sp/>given<sp/>direction<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>required,<sp/>pass<sp/>NULL<sp/>instead<sp/>of<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>corresponding<sp/>buffer.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffers<sp/>(in<sp/>32-bit<sp/>words).</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_rx_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pass<sp/>NULL<sp/>to<sp/>disable<sp/>reception.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_tx_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pass<sp/>NULL<sp/>to<sp/>disable<sp/>transmission.</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga4f58fc8e84570286d4abfdedbdf80530" kindref="member">nrf_i2s_transfer_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_rx_buffer,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_tx_buffer);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>set<sp/>only<sp/>by<sp/>calling</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_i2s_transfer_set.</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaef70cd84afcc91341aa82324155e5b36" kindref="member">nrf_i2s_rx_buffer_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/>p_buffer);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__i2s__hal_1ga300c23337833839f4c517069604bc4a5" kindref="member">nrf_i2s_rx_buffer_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="515"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>can<sp/>be<sp/>set<sp/>only<sp/>by<sp/>calling</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>@ref<sp/>nrf_i2s_transfer_set.</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_buffer<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaedfeb0764a02f811b3cd7f37096ff284" kindref="member">nrf_i2s_tx_buffer_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>to<sp/>the<sp/>transmit<sp/>buffer.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__i2s__hal_1ga599b42b26c7c26fdc277eb1c72602d4a" kindref="member">nrf_i2s_tx_buffer_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_CLKCONFIG</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="537"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>I2S<sp/>Clock.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>clksrc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2S<sp/>Clock<sp/>source<sp/>selection.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable_bypass<sp/>Bypass<sp/>clock<sp/>generator.<sp/>MCK<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>source<sp/>input.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>bypass<sp/>is<sp/>enabled<sp/>the<sp/>MCKFREQ<sp/>setting<sp/>has<sp/>no<sp/>effect.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaad29a9133da28846b000d43a4edd5553" kindref="member">nrf_i2s_clk_configure</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gad0c72277d28dba147ebb0696a425c38c" kindref="member">nrf_i2s_clksrc_t</ref><sp/>clksrc,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga9a685f05dd1d4b12353186b7046c6e23" kindref="member">nrf_i2s_task_trigger</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)task))<sp/>=<sp/>0x1UL;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga50d49f34a959cc036ab0ce55ff1840d8" kindref="member">nrf_i2s_task_address_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)p_reg<sp/>+<sp/>(uint32_t)task);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga38474d2787174fb01658bb28d7dfaba9" kindref="member">nrf_i2s_event_clear</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event))<sp/>=<sp/>0x0UL;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_event_readback((uint8_t<sp/>*)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaa21fbad4b6843761743180678de57d46" kindref="member">nrf_i2s_event_check</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrf_event_check(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga53a98a96f313e6e74143d7dcb60a98a2" kindref="member">nrf_i2s_event_address_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)p_reg<sp/>+<sp/>(uint32_t)event);</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gae6ad420da3decfe88fdaf1795878e28f" kindref="member">nrf_i2s_int_enable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENSET<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga296d21e44439e25f10cc4dd717d45b18" kindref="member">nrf_i2s_int_disable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;INTENCLR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga87f4010060652e1620d24a3fddefed09" kindref="member">nrf_i2s_int_enable_check</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;INTENSET<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga88eb6dcb016cc499886e58bd5c914089" kindref="member">nrf_i2s_enable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(I2S_ENABLE_ENABLE_Enabled<sp/>&lt;&lt;<sp/>I2S_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gab762c64e38a866a51001b50ef6e2ed2a" kindref="member">nrf_i2s_disable</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;ENABLE<sp/>=<sp/>(I2S_ENABLE_ENABLE_Disabled<sp/>&lt;&lt;<sp/>I2S_ENABLE_ENABLE_Pos);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga1cc8e79f477a2ae232123bda7648bd24" kindref="member">nrf_i2s_subscribe_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga842b1ddeaec04def545f9e6d948ee0e1" kindref="member">nrf_i2s_subscribe_clear</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga1b0d6237adff2552380ed192c4f2446c" kindref="member">nrf_i2s_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>task<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gadb2bbc32fe7c8ce5dada74f7e85cf89e" kindref="member">nrf_i2s_publish_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)channel<sp/>|<sp/>NRF_SUBSCRIBE_PUBLISH_ENABLE);</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga41e38e06a6caa21708e69e89f1d8b5fc" kindref="member">nrf_i2s_publish_clear</ref>(NRF_I2S_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1ga967706637d88bdbccfff09608a2b4130" kindref="member">nrf_i2s_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>((uint8_t<sp/>*)<sp/>p_reg<sp/>+<sp/>(uint32_t)<sp/>event<sp/>+<sp/>0x80uL))<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaa24e58ad729cb0f561c8d3fb2f264aba" kindref="member">nrf_i2s_pins_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__i2s__pins__t" kindref="compound">nrf_i2s_pins_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pins)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SCK<sp/><sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__i2s__pins__t_1a6583910884a06eb529c35c49754957d2" kindref="member">sck_pin</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.LRCK<sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__i2s__pins__t_1a6efd1aaec13f77bb86b7fdbcae69ea0d" kindref="member">lrck_pin</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.MCK<sp/><sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__i2s__pins__t_1a21e7d864b30f42733f8fa06cdca41d20" kindref="member">mck_pin</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SDOUT<sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__i2s__pins__t_1a7bebea4f8503e6d75c75d011acf0f369" kindref="member">sdout_pin</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;PSEL.SDIN<sp/><sp/>=<sp/>p_pins-&gt;<ref refid="structnrf__i2s__pins__t_1ae3a0581e8377eed6e43b327adaf7b111" kindref="member">sdin_pin</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1gab71de58ff97197873fa3872370ed7002" kindref="member">nrf_i2s_sck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SCK;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga95fb128feef63ca105d8d35600baa5aa" kindref="member">nrf_i2s_lrck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.LRCK;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga10e1013c82eb5ef067aa11eb141c4a38" kindref="member">nrf_i2s_mck_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.MCK;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1gace9c22fceb75c64829fafbade7aa6860" kindref="member">nrf_i2s_sdout_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SDOUT;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrf__i2s__hal_1ga909727234ecb199fcdf436b15f6223cd" kindref="member">nrf_i2s_sdin_pin_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_reg-&gt;PSEL.SDIN;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga1e35046cd7d3decaf2e9c7e304c51487" kindref="member">nrf_i2s_configure</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrf__i2s__config__t" kindref="compound">nrf_i2s_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MODE<sp/><sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1a6f1b9e5a75274eb901305233a71bc98d" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.FORMAT<sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1a57c5a5993018ec5a730e340bdac3fbe8" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.ALIGN<sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1aa9390ecdf99ac9c3a288eddbeaa7d95d" kindref="member">alignment</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.SWIDTH<sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1a681ec1b659b60964234576da4db4e8e9" kindref="member">sample_width</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.CHANNELS<sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1a83298082dfa9f6277a79623cefcfad26" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.RATIO<sp/><sp/><sp/><sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1ac891fb12199d8c9370d5003219086955" kindref="member">ratio</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_config-&gt;<ref refid="structnrf__i2s__config__t_1ae966f3c9781e1f92f4401ec686fc4cff" kindref="member">mck_setup</ref><sp/>==<sp/><ref refid="group__nrf__i2s__hal_1gga1e7fb828b72fa48367cbaeed264f9372a91a3ed8417e245a7a6f40e9265e9f8b4" kindref="member">NRF_I2S_MCK_DISABLED</ref>)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCKEN<sp/>=</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(I2S_CONFIG_MCKEN_MCKEN_Disabled<sp/>&lt;&lt;<sp/>I2S_CONFIG_MCKEN_MCKEN_Pos);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCKFREQ<sp/>=<sp/>p_config-&gt;<ref refid="structnrf__i2s__config__t_1ae966f3c9781e1f92f4401ec686fc4cff" kindref="member">mck_setup</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.MCKEN<sp/>=</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(I2S_CONFIG_MCKEN_MCKEN_Enabled<sp/>&lt;&lt;<sp/>I2S_CONFIG_MCKEN_MCKEN_Pos);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1ga4f58fc8e84570286d4abfdedbdf80530" kindref="member">nrf_i2s_transfer_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer_rx,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer_tx)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DMA_BUFFER_UNIFIED_BYTE_ACCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXTXD.MAXCNT<sp/>=<sp/>size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXTXD.MAXCNT<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gaef70cd84afcc91341aa82324155e5b36" kindref="member">nrf_i2s_rx_buffer_set</ref>(p_reg,<sp/>p_buffer_rx);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.RXEN<sp/>=<sp/>(p_buffer_rx<sp/>!=<sp/>NULL)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gaedfeb0764a02f811b3cd7f37096ff284" kindref="member">nrf_i2s_tx_buffer_set</ref>(p_reg,<sp/>p_buffer_tx);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.TXEN<sp/>=<sp/>(p_buffer_tx<sp/>!=<sp/>NULL)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaef70cd84afcc91341aa82324155e5b36" kindref="member">nrf_i2s_rx_buffer_set</ref>(NRF_I2S_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/>p_buffer)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;RXD.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__i2s__hal_1ga300c23337833839f4c517069604bc4a5" kindref="member">nrf_i2s_rx_buffer_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)(p_reg-&gt;RXD.PTR);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaedfeb0764a02f811b3cd7f37096ff284" kindref="member">nrf_i2s_tx_buffer_set</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;TXD.PTR<sp/>=<sp/>(uint32_t)p_buffer;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">NRF_STATIC_INLINE<sp/>uint32_t<sp/>*<sp/><ref refid="group__nrf__i2s__hal_1ga599b42b26c7c26fdc277eb1c72602d4a" kindref="member">nrf_i2s_tx_buffer_get</ref>(NRF_I2S_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t<sp/>*)(p_reg-&gt;TXD.PTR);</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_I2S_HAS_CLKCONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">NRF_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrf__i2s__hal_1gaad29a9133da28846b000d43a4edd5553" kindref="member">nrf_i2s_clk_configure</ref>(NRF_I2S_Type<sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__i2s__hal_1gad0c72277d28dba147ebb0696a425c38c" kindref="member">nrf_i2s_clksrc_t</ref><sp/>clksrc,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_bypass)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>p_reg-&gt;CONFIG.CLKCONFIG<sp/>=<sp/>((uint32_t)<sp/>clksrc<sp/>&lt;&lt;<sp/>I2S_CONFIG_CLKCONFIG_CLKSRC_Pos)<sp/>|</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>enable_bypass<sp/>&lt;&lt;<sp/>I2S_CONFIG_CLKCONFIG_BYPASS_Pos);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_DECLARE_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="746"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_I2S_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hal/nrf_i2s.h"/>
  </compounddef>
</doxygen>
