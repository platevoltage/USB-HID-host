<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrfy__pwm" kind="group">
    <compoundname>nrfy_pwm</compoundname>
    <title>PWM HALY</title>
    <innerclass refid="structnrfy__pwm__config__t" prot="public">nrfy_pwm_config_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfy__pwm_1gaf6f6a3d5fd4674f857d42c9a81bae7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_periph_configure</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrfy_pwm_config_t const *p_config)</argsstring>
        <name>nrfy_pwm_periph_configure</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__pwm__config__t" kindref="compound">nrfy_pwm_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the PWM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="90" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gad8b47c9b19e52fa0a8219e04d7dfd15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_int_init</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_pwm_int_init</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified PWM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="110" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="110" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga0f5089e9c6586003ef8cbabd535a63eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_int_uninit</definition>
        <argsstring>(NRF_PWM_Type *p_reg)</argsstring>
        <name>nrfy_pwm_int_uninit</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the PWM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="139" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga1a50b5e18e22b432611d51f78b15a8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_pwm_events_process</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_events_process</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified PWM events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="154" column="29" bodyfile="haly/nrfy_pwm.h" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga209f510cb6fa83ebb5986fa05ae8bba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_start</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint8_t seq_id, bool wait)</argsstring>
        <name>nrfy_pwm_start</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>seq_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for starting the PWM sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the sequence is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="169" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="169" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga01f4bf2564800dd97c8998a7810a1045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_abort</definition>
        <argsstring>(NRF_PWM_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_pwm_abort</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for aborting the ongoing PWM sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the abort is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="191" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="191" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga64c3b07435f3903a261779b6a4a7d9de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_task_trigger</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_task_t task)</argsstring>
        <name>nrfy_pwm_task_trigger</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga11cb9ca8fbb773011a3ad6658914418e" kindref="member">nrf_pwm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga80273886334d6d99c516aa13e9e6773a" kindref="member">nrf_pwm_task_trigger</ref>  Function for activating the specified PWM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="209" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga1210658d3fb8e7b3fcad79d1abeeb581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_pwm_task_address_get</definition>
        <argsstring>(NRF_PWM_Type const *p_reg, nrf_pwm_task_t task)</argsstring>
        <name>nrfy_pwm_task_address_get</name>
        <param>
          <type>NRF_PWM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga11cb9ca8fbb773011a3ad6658914418e" kindref="member">nrf_pwm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gaa78ad952a4164f2acdc2aa22b6fd0618" kindref="member">nrf_pwm_task_address_get</ref>  Function for getting the address of the specified PWM task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="217" column="29" bodyfile="haly/nrfy_pwm.h" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga6148b56d089ec30cafa3a583d65630b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_event_clear</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_event_t event)</argsstring>
        <name>nrfy_pwm_event_clear</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gadd2be0c46a34bece88f176db55cfe9ee" kindref="member">nrf_pwm_event_clear</ref>  Function for clearing the specified PWM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="224" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga2b7145921d9c9e6289055ffa6bb76f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_pwm_event_check</definition>
        <argsstring>(NRF_PWM_Type const *p_reg, nrf_pwm_event_t event)</argsstring>
        <name>nrfy_pwm_event_check</name>
        <param>
          <type>NRF_PWM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga7b6689ec738c01ef7e02d6923b8707a4" kindref="member">nrf_pwm_event_check</ref>  Function for retrieving the state of the PWM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="232" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="232" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga60da3475cf0467b492afe55cdf947024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_pwm_event_address_get</definition>
        <argsstring>(NRF_PWM_Type const *p_reg, nrf_pwm_event_t event)</argsstring>
        <name>nrfy_pwm_event_address_get</name>
        <param>
          <type>NRF_PWM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga3eba935312b4bf541151a30e0d408beb" kindref="member">nrf_pwm_event_address_get</ref>  Function for getting the address of the specified PWM event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="242" column="29" bodyfile="haly/nrfy_pwm.h" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga7ef18d3d011e4b9a343875fc495022a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_shorts_enable</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_shorts_enable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gad37230defb6539bad9deeed03b4ec1ed" kindref="member">nrf_pwm_shorts_enable</ref>  Function for enabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="249" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga142efbc33e623c0426c2dc8eb56ce70c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_shorts_disable</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_shorts_disable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga52672c9d16d8b47bfccf573a959d1929" kindref="member">nrf_pwm_shorts_disable</ref>  Function for disabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="257" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga0c076f8ed8caf96dbb54e4919ecbdf15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_shorts_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_shorts_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga486254506e79e5017ec076850ac3b275" kindref="member">nrf_pwm_shorts_set</ref>  Function for setting the configuration of PWM shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts configuration to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="265" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="265" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gae8955a275264d986814048ca4baca2fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_int_enable</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_int_enable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gad97a8c07dceaad191d77748b3311c25b" kindref="member">nrf_pwm_int_enable</ref>  Function for enabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__pwm__hal_1ga3f6888e6f40342ef64cf5b9555bd04d5" kindref="member">nrf_pwm_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="273" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="273" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga43327dfb362166b2bbf955ea39b9f7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_int_disable</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_int_disable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga502fca6db746ea1fb1d5c45573cc6c1b" kindref="member">nrf_pwm_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__pwm__hal_1ga3f6888e6f40342ef64cf5b9555bd04d5" kindref="member">nrf_pwm_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="281" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="281" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga631e89e949e8a518066efdd0981866f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_int_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_int_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga188dee0693d8704d6d8d77bf2e68831a" kindref="member">nrf_pwm_int_set</ref>  Function for setting the configuration of PWM interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be set. Use <ref refid="group__nrf__pwm__hal_1ga3f6888e6f40342ef64cf5b9555bd04d5" kindref="member">nrf_pwm_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="289" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="289" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga9b25905c43b5507198a781ad12a9d879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_pwm_int_enable_check</definition>
        <argsstring>(NRF_PWM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_pwm_int_enable_check</name>
        <param>
          <type>NRF_PWM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gaec938406e805161ad153e2a95638a74c" kindref="member">nrf_pwm_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__pwm__hal_1ga3f6888e6f40342ef64cf5b9555bd04d5" kindref="member">nrf_pwm_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="297" column="29" bodyfile="haly/nrfy_pwm.h" bodystart="297" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga5a7b1a13616530ee16efa8165f4048b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_subscribe_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_pwm_subscribe_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga11cb9ca8fbb773011a3ad6658914418e" kindref="member">nrf_pwm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gad002575566c75b323e425cdf59c0a550" kindref="member">nrf_pwm_subscribe_set</ref>  Function for setting the subscribe configuration for a given PWM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="307" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="307" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gac9ff0747178e480ea0a45731f901ef07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_subscribe_clear</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_task_t task)</argsstring>
        <name>nrfy_pwm_subscribe_clear</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga11cb9ca8fbb773011a3ad6658914418e" kindref="member">nrf_pwm_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga7622c00fccfd7653ef3ca5a2f43ca07f" kindref="member">nrf_pwm_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given PWM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="316" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="316" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gaa01ca3f180c3c99521836f7aec911449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_publish_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_pwm_publish_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga41edf2cfc651f859f465ac532cd4616a" kindref="member">nrf_pwm_publish_set</ref>  Function for setting the publish configuration for a given PWM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="324" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="324" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga10e0f88a23ff222e08ed046ab9c432b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_publish_clear</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_event_t event)</argsstring>
        <name>nrfy_pwm_publish_clear</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga6cd95cd70efae593bd68fa84e93fc433" kindref="member">nrf_pwm_publish_clear</ref>  Function for clearing the publish configuration for a given PWM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="333" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="333" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gadf2651fcbd0680f93e142e890e2ae05f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_enable</definition>
        <argsstring>(NRF_PWM_Type *p_reg)</argsstring>
        <name>nrfy_pwm_enable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga592cb178b637ab0b03bea8523e8ded82" kindref="member">nrf_pwm_enable</ref>  Function for enabling the PWM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="342" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="342" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga56b596aada64172432a013d7e74de793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_disable</definition>
        <argsstring>(NRF_PWM_Type *p_reg)</argsstring>
        <name>nrfy_pwm_disable</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga03d306651afccddaccc092b9da93789a" kindref="member">nrf_pwm_disable</ref>  Function for disabling the PWM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="349" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="349" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga8bf0222a0a36e491252883fb1863cbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_pwm_enable_check</definition>
        <argsstring>(NRF_PWM_Type *p_reg)</argsstring>
        <name>nrfy_pwm_enable_check</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga5895bf394e866a56f522c4bbdfb54996" kindref="member">nrf_pwm_enable_check</ref>  Function for checking if the PWM peripheral is enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The PWM is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The PWM is not enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="356" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="356" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gab783942d542622524fdfe946303a7eb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_pins_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint32_t out_pins[NRF_PWM_CHANNEL_COUNT])</argsstring>
        <name>nrfy_pwm_pins_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>out_pins</declname>
          <array>[NRF_PWM_CHANNEL_COUNT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga0bcd0f7311e790199cd14373fc823a9f" kindref="member">nrf_pwm_pins_set</ref>  Function for assigning pins to PWM output channels.  </para>
</simplesect>
</para>
<para>Usage of all PWM output channels is optional. If a given channel is not needed, pass the <ref refid="group__nrf__pwm__hal_1gabf854890a14200d20e7aea8234a16887" kindref="member">NRF_PWM_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Array with pin numbers for individual PWM output channels.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="365" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="365" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga165b416fc52e91f8242dcf4f0a6d6ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_pwm_pin_get</definition>
        <argsstring>(NRF_PWM_Type const *p_reg, uint8_t channel)</argsstring>
        <name>nrfy_pwm_pin_get</name>
        <param>
          <type>NRF_PWM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gaafe7e1c261d441016e999e52ec8282b4" kindref="member">nrf_pwm_pin_get</ref>  Function for getting pin selection associated with specified PWM output channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM output channel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pin selection associated with specified PWM output channel.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="373" column="29" bodyfile="haly/nrfy_pwm.h" bodystart="373" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga4907db21dcb4bcdc52b690dbca6a6add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_configure</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_clk_t base_clock, nrf_pwm_mode_t mode, uint16_t top_value)</argsstring>
        <name>nrfy_pwm_configure</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga8479da20e14394fb2388b1be3b879670" kindref="member">nrf_pwm_clk_t</ref></type>
          <declname>base_clock</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga1f29b190ff13c52895d249e07ebe92cb" kindref="member">nrf_pwm_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>top_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga58bcf18a7b025c1416d7ea3d6e35038b" kindref="member">nrf_pwm_configure</ref>  Function for configuring the PWM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">base_clock</parametername>
</parameternamelist>
<parameterdescription>
<para>Base clock frequency. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operating mode of the pulse generator counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">top_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value up to which the pulse generator counter counts.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="382" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="382" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga4ad1c7489b99d8799e373cc1f5fa1597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_sequence_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint8_t seq_id, nrf_pwm_sequence_t const *p_seq)</argsstring>
        <name>nrfy_pwm_sequence_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>seq_id</declname>
        </param>
        <param>
          <type><ref refid="structnrf__pwm__sequence__t" kindref="compound">nrf_pwm_sequence_t</ref> const *</type>
          <declname>p_seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga993b47eb4fc9b6350ced9043945a8206" kindref="member">nrf_pwm_sequence_set</ref>  Function for defining a sequence of PWM duty cycles.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the sequence (0 or 1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_seq</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the sequence definition.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="392" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="392" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gad97258c8814d251314529a2ae5171f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_decoder_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, nrf_pwm_dec_load_t dec_load, nrf_pwm_dec_step_t dec_step)</argsstring>
        <name>nrfy_pwm_decoder_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1ga453888e5feb46774da27499ca1eeafd2" kindref="member">nrf_pwm_dec_load_t</ref></type>
          <declname>dec_load</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__pwm__hal_1gae25a7e03c383934d33cda8a049b7dde4" kindref="member">nrf_pwm_dec_step_t</ref></type>
          <declname>dec_step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga6a3c94d7139f17dd0f43ef4f16abb5cd" kindref="member">nrf_pwm_decoder_set</ref>  Function for setting the mode of loading sequence data from RAM and advancing the sequence.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec_load</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode of loading sequence data from RAM. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec_step</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode of advancing the active sequence.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="402" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="402" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gaaf31f4eb5297d2cfd910fd4d7b0aa03c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_pwm_loop_set</definition>
        <argsstring>(NRF_PWM_Type *p_reg, uint16_t loop_count)</argsstring>
        <name>nrfy_pwm_loop_set</name>
        <param>
          <type>NRF_PWM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>loop_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gaa7c79a9e33546f5dff5ef564052cbe1c" kindref="member">nrf_pwm_loop_set</ref>  Function for setting the number of times the sequence playback should be performed.  </para>
</simplesect>
</para>
<para>This function applies to two-sequence playback (concatenated sequence 0 and 1). A single sequence can be played back only once.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">loop_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of times to perform the sequence playback.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="411" column="25" bodyfile="haly/nrfy_pwm.h" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1gaf117892bba2a442fbcf98d8d9791904f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__pwm__hal_1ga11cb9ca8fbb773011a3ad6658914418e" kindref="member">nrf_pwm_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_pwm_task_t nrfy_pwm_seqstart_task_get</definition>
        <argsstring>(uint8_t seq_id)</argsstring>
        <name>nrfy_pwm_seqstart_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>seq_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1gaa0d334d0587cb0f3213e097a67475d5e" kindref="member">nrf_pwm_seqstart_task_get</ref>  Function for getting the specified PWM SEQSTART task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified PWM SEQSTART task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="418" column="35" bodyfile="haly/nrfy_pwm.h" bodystart="418" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__pwm_1ga008e8b41df6de832c2c8a5e84f69b6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__pwm__hal_1ga4a8ceac653433e4ac8ee8682bdef45bf" kindref="member">nrf_pwm_event_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_pwm_event_t nrfy_pwm_seqend_event_get</definition>
        <argsstring>(uint8_t seq_id)</argsstring>
        <name>nrfy_pwm_seqend_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>seq_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__pwm__hal_1ga9e0af905e8f4605795455630b66ea833" kindref="member">nrf_pwm_seqend_event_get</ref>  Function for getting the specified PWM SEQEND event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seq_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified PWM SEQEND event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_pwm.h" line="424" column="36" bodyfile="haly/nrfy_pwm.h" bodystart="424" bodyend="427"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer with cache and barrier support for managing the PWM peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
