<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__spim_8h" kind="file" language="C++">
    <compoundname>nrfy_spim.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__spim_8h" local="no">hal/nrf_spim.h</includes>
    <includedby refid="nrfx__spim_8h" local="no">drivers/include/nrfx_spim.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_spim.h</label>
        <link refid="nrfy__spim_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__spim__xfer__desc__t" prot="public">nrfy_spim_xfer_desc_t</innerclass>
    <innerclass refid="structnrfy__spim__ext__pins__t" prot="public">nrfy_spim_ext_pins_t</innerclass>
    <innerclass refid="structnrfy__spim__ext__config__t" prot="public">nrfy_spim_ext_config_t</innerclass>
    <innerclass refid="structnrfy__spim__pins__t" prot="public">nrfy_spim_pins_t</innerclass>
    <innerclass refid="structnrfy__spim__config__t" prot="public">nrfy_spim_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__spim_1ga1876cc8f27dbcf303d41f5f829bbd05e" prot="public" static="no">
        <name>NRFY_SPIM_HAS_HW_CSN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gab5a624869149f7b68b6fe32d5e444a2b" kindref="member">NRF_SPIM_HAS_HW_CSN</ref>  Macro for checking if the hardware chip select function is available.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="69" column="9" bodyfile="haly/nrfy_spim.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1ga2cca18e40ca6186fa86a35fb84d4163a" prot="public" static="no">
        <name>NRFY_SPIM_HAS_DCX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga049b3c81d0630a45eedcd285eab5990c" kindref="member">NRF_SPIM_HAS_DCX</ref>  Macro for checking if the DCX pin control is available.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="76" column="9" bodyfile="haly/nrfy_spim.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1ga48aede8baca3947f7d55f66e06266f04" prot="public" static="no">
        <name>NRFY_SPIM_HAS_RXDELAY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga85bcdb0401e83ebeff629c4c2aa4000c" kindref="member">NRF_SPIM_HAS_RXDELAY</ref>  Macro for checking if the RXDELAY function is available.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="83" column="9" bodyfile="haly/nrfy_spim.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1ga1e7a9118815b44de362729d2d58feae0" prot="public" static="no">
        <name>NRFY_SPIM_HAS_STALLSTAT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga11298007c9b6ca4509d27fb9061e3180" kindref="member">NRF_SPIM_HAS_STALLSTAT</ref>  Macro for checking if the STALLSTAT feature is available.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="90" column="9" bodyfile="haly/nrfy_spim.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1gaa74d88f262954ba6d715aa2447a4f66f" prot="public" static="no">
        <name>NRFY_SPIM_HAS_EXTENDED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gac8a0d0d0e287b7ca762dbe459a4f62a7" kindref="member">NRF_SPIM_HAS_EXTENDED</ref>  Symbol indicating whether any of the SPIM extended features is available.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="97" column="9" bodyfile="haly/nrfy_spim.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1ga317ee1c8505939ce656eb9bae2c9fdd4" prot="public" static="no">
        <name>NRFY_SPIM_HAS_ARRAY_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga88c383efc01f44147ed35b7af4864191" kindref="member">NRF_SPIM_HAS_ARRAY_LIST</ref>  Symbol indicating whether EasyDMA array list feature is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="104" column="9" bodyfile="haly/nrfy_spim.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1gad063968adbf32141683a2b08168e2e16" prot="public" static="no">
        <name>NRFY_SPIM_HAS_FREQUENCY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga8a6ebb40d934749cc238e5e60cb2830d" kindref="member">NRF_SPIM_HAS_FREQUENCY</ref>  Symbol indicating whether frequency is used.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="111" column="9" bodyfile="haly/nrfy_spim.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__spim_1gacd5b527695016e1fae5b6fa49afc1eff" prot="public" static="no">
        <name>NRFY_SPIM_HAS_PRESCALER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga651e480b9fd1175e371dd34fd72dbba8" kindref="member">NRF_SPIM_HAS_PRESCALER</ref>  Symbol indicating whether prescaler is used.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="118" column="9" bodyfile="haly/nrfy_spim.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nrfy__spim_8h_1ac6f8971405eb7a0eecd0124c14ac866b" prot="public" static="no">
        <type>struct <ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref></type>
        <definition>typedef struct nrfy_spim_xfer_desc_t nrfy_spim_xfer_desc_t</definition>
        <argsstring></argsstring>
        <name>nrfy_spim_xfer_desc_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="44" column="36" bodyfile="haly/nrfy_spim.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__spim_8h_1a6852f29816dd2a541ee84554b01fc0c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_spim_event_handle</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask, nrf_spim_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_spim_event_handle</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="797" column="25" bodyfile="haly/nrfy_spim.h" bodystart="797" bodyend="812" declfile="haly/nrfy_spim.h" declline="46" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__spim_8h_1a7dbd1ccf0a401591d8841bf5969be6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_spim_events_process</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask, nrfy_spim_xfer_desc_t const *p_xfer)</argsstring>
        <name>__nrfy_internal_spim_events_process</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="815" column="10" bodyfile="haly/nrfy_spim.h" bodystart="815" bodyend="844" declfile="haly/nrfy_spim.h" declline="52" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__spim_8h_1a1ddac0f8718e915a2837b9d42688946b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_spim_event_enabled_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask, nrf_spim_event_t event)</argsstring>
        <name>__nrfy_internal_spim_event_enabled_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="846" column="25" bodyfile="haly/nrfy_spim.h" bodystart="846" bodyend="854" declfile="haly/nrfy_spim.h" declline="56" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga1b08443967645022475ad82a3e9c48e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_periph_configure</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrfy_spim_config_t const *p_config)</argsstring>
        <name>nrfy_spim_periph_configure</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__config__t" kindref="compound">nrfy_spim_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the SPIM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="209" column="25" bodyfile="haly/nrfy_spim.h" bodystart="209" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga913cc0465ad1cf274e2e8e53436fd16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_int_init</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_spim_int_init</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified SPIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupts associated with the event mask are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="247" column="25" bodyfile="haly/nrfy_spim.h" bodystart="247" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga5edba24f779b5c4e2ee3e3843461d436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_int_uninit</definition>
        <argsstring>(NRF_SPIM_Type *p_reg)</argsstring>
        <name>nrfy_spim_int_uninit</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the SPIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="273" column="25" bodyfile="haly/nrfy_spim.h" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga0ca008e107734bdfbebdb1b426b75ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_events_process</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask, nrfy_spim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_spim_events_process</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified SPIM events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing buffers associated with the last transaction. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="290" column="29" bodyfile="haly/nrfy_spim.h" bodystart="290" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga81e9d0e05f50b520b829e6a27a951b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_buffers_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrfy_spim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_spim_buffers_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for setting the SPIM transaction buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing transaction buffers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="305" column="25" bodyfile="haly/nrfy_spim.h" bodystart="305" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga74619cdf7d4d3c246477c708da81e531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_xfer_start</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrfy_spim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_spim_xfer_start</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for starting the SPIM transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing transaction buffers if the transaction is to be blocking. NULL for non-blocking transactions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="324" column="25" bodyfile="haly/nrfy_spim.h" bodystart="324" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga800a28386987af5cd2c1e2180ad7ed1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_abort</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrfy_spim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_spim_abort</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for aborting the ongoing SPIM transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing transaction buffers if the abort is to be blocking. NULL for non-blocking operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="347" column="25" bodyfile="haly/nrfy_spim.h" bodystart="347" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga6e31077d1dde065175db953661ec458f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_pins_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, nrfy_spim_pins_t *p_pins)</argsstring>
        <name>nrfy_spim_pins_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__pins__t" kindref="compound">nrfy_spim_pins_t</ref> *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for getting the SPIM pins configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with SPIM pins configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="369" column="25" bodyfile="haly/nrfy_spim.h" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga655b07a4ad41fde0320a24d34f718623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_ext_pins_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, nrfy_spim_ext_pins_t *p_pins)</argsstring>
        <name>nrfy_spim_ext_pins_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__spim__ext__pins__t" kindref="compound">nrfy_spim_ext_pins_t</ref> *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for getting the configuration of the SPIM pins used for extended features. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with SPIM pins configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="383" column="25" bodyfile="haly/nrfy_spim.h" bodystart="383" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga864e13aa762bbf6c893d5045429b79c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_tx_list_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_spim_tx_list_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if TX list feature is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="400" column="25" bodyfile="haly/nrfy_spim.h" bodystart="400" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaa5ff72182beb38ab86257f4df467a0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_rx_list_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_spim_rx_list_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if RX list feature is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="419" column="25" bodyfile="haly/nrfy_spim.h" bodystart="419" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga33485bc6736bc4820bbbe39dcac6e358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_task_trigger</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_task_t task)</argsstring>
        <name>nrfy_spim_task_trigger</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga9e52a7c6afa466c4c2d494e87206898f" kindref="member">nrf_spim_task_trigger</ref>  Function for activating the specified SPIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="434" column="25" bodyfile="haly/nrfy_spim.h" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga871c901902548ee4ef9f647f4f9678bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_task_address_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, nrf_spim_task_t task)</argsstring>
        <name>nrfy_spim_task_address_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga4a9e3819ecafa986a3e7af05ca46b40a" kindref="member">nrf_spim_task_address_get</ref>  Function for getting the address of the specified SPIM task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="442" column="29" bodyfile="haly/nrfy_spim.h" bodystart="442" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaad318ad75cfb65c0678b4cf6e6be37d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_event_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_event_t event)</argsstring>
        <name>nrfy_spim_event_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gacdfadb80c0d980545acb217c57abc88a" kindref="member">nrf_spim_event_clear</ref>  Function for clearing the specified SPIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be cleared.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="449" column="25" bodyfile="haly/nrfy_spim.h" bodystart="449" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga94d5ea8c2bb576466d930955f85fad25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_spim_event_check</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, nrf_spim_event_t event)</argsstring>
        <name>nrfy_spim_event_check</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaebe158267c1fe407bd2f84919b2a337b" kindref="member">nrf_spim_event_check</ref>  Function for retrieving the state of the SPIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="456" column="25" bodyfile="haly/nrfy_spim.h" bodystart="456" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga7a1f88c57dc8b96de2b9cd971cdb980d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_event_address_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, nrf_spim_event_t event)</argsstring>
        <name>nrfy_spim_event_address_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga24e020ebb846d4a8f9cbbb2e94234ba3" kindref="member">nrf_spim_event_address_get</ref>  Function for getting the address of the specified SPIM event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="465" column="29" bodyfile="haly/nrfy_spim.h" bodystart="465" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gabb508e89bc532a49bd6dcae96292e4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_shorts_enable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_spim_shorts_enable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga707662c0db21ffac917ff9c6506d07f8" kindref="member">nrf_spim_shorts_enable</ref>  Function for enabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="472" column="25" bodyfile="haly/nrfy_spim.h" bodystart="472" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga30a868ee6b7ee6fadc00a14a9e708929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_shorts_disable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_spim_shorts_disable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaca728bc9c609f43da7ec0877a9a9c6b2" kindref="member">nrf_spim_shorts_disable</ref>  Function for disabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="479" column="25" bodyfile="haly/nrfy_spim.h" bodystart="479" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga485030771660d044d0a8505bca8de551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_shorts_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_shorts_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga230f345fcbb0a4cb4ed2ad7ae49da86b" kindref="member">nrf_spim_shorts_get</ref>  Function for getting the shortcut setting.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current shortcut configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="486" column="29" bodyfile="haly/nrfy_spim.h" bodystart="486" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaf1346c826f1b18dec2f1a29f39f243fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_int_enable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_spim_int_enable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga2d1f16e4bd513c2e6a0f4b502f2cfe1c" kindref="member">nrf_spim_int_enable</ref>  Function for enabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__spim__hal_1ga4a5f83e02f7d7ad04f8ab305804cabfd" kindref="member">nrf_spim_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="495" column="25" bodyfile="haly/nrfy_spim.h" bodystart="495" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga20cccc7e3a9422bace97a7bef9c84b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_int_disable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_spim_int_disable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga26449809b37227511a1faf6233eeb71f" kindref="member">nrf_spim_int_disable</ref>  Function for disabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__spim__hal_1ga4a5f83e02f7d7ad04f8ab305804cabfd" kindref="member">nrf_spim_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="502" column="25" bodyfile="haly/nrfy_spim.h" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga335c9597275d902a3901c046cecbe659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_int_enable_check</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_spim_int_enable_check</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gafe12634c5609d63fbc3820c44c29b430" kindref="member">nrf_spim_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__spim__hal_1ga4a5f83e02f7d7ad04f8ab305804cabfd" kindref="member">nrf_spim_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="509" column="29" bodyfile="haly/nrfy_spim.h" bodystart="509" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga03baef24c25e1454939e12ad4db70a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_subscribe_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_spim_subscribe_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gad6fb6e25713c9c18f91c07a5c4a39425" kindref="member">nrf_spim_subscribe_set</ref>  Function for setting the subscribe configuration for a given SPIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="519" column="25" bodyfile="haly/nrfy_spim.h" bodystart="519" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga49f87ddcbdf8bc3fb54707a5ed7121c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_subscribe_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_task_t task)</argsstring>
        <name>nrfy_spim_subscribe_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gadaa800f166325ce4b749fdb8d6e276eb" kindref="member">nrf_spim_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given SPIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="528" column="25" bodyfile="haly/nrfy_spim.h" bodystart="528" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaebfc3812ec3f773dac4238d8f1ecba29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_publish_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_spim_publish_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga85022dc74e20435979e08102e5bdf163" kindref="member">nrf_spim_publish_set</ref>  Function for setting the publish configuration for a given SPIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="536" column="25" bodyfile="haly/nrfy_spim.h" bodystart="536" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga666698bc61147669f935cba0989eabcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_publish_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_event_t event)</argsstring>
        <name>nrfy_spim_publish_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaba6fb6223b0a3d87820c65fafd6a386b" kindref="member">nrf_spim_publish_clear</ref>  Function for clearing the publish configuration for a given SPIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="545" column="25" bodyfile="haly/nrfy_spim.h" bodystart="545" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga2752a2997d2dc0ebd075aef2ace00524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_enable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg)</argsstring>
        <name>nrfy_spim_enable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaeeb8736598b8d189faa547b1656d482e" kindref="member">nrf_spim_enable</ref>  Function for enabling the SPIM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="554" column="25" bodyfile="haly/nrfy_spim.h" bodystart="554" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga3db84293afe15fc8c380faa88b8b6158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_disable</definition>
        <argsstring>(NRF_SPIM_Type *p_reg)</argsstring>
        <name>nrfy_spim_disable</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gab0911efd55fdbc077c37d4622c7dc3dc" kindref="member">nrf_spim_disable</ref>  Function for disabling the SPIM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="561" column="25" bodyfile="haly/nrfy_spim.h" bodystart="561" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga8addd4475c4e9f24a7e608eb5a21ccfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_pins_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t sck_pin, uint32_t mosi_pin, uint32_t miso_pin)</argsstring>
        <name>nrfy_spim_pins_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sck_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mosi_pin</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>miso_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga7a84520c7baba19ea26a494bd4c4ea16" kindref="member">nrf_spim_pins_set</ref>  Function for configuring SPIM pins.  </para>
</simplesect>
</para>
<para>If a given signal is not needed, pass the <ref refid="group__nrf__spim__hal_1ga818eb2c4164cd8f9422c3a8a0a626e2a" kindref="member">NRF_SPIM_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sck_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>SCK pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mosi_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>MOSI pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">miso_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>MISO pin number.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="568" column="25" bodyfile="haly/nrfy_spim.h" bodystart="568" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gac05c35ded330f8563bb6cd271c771857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_sck_pin_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_sck_pin_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaa0b911843ae1a2dc62f894580cf3756b" kindref="member">nrf_spim_sck_pin_get</ref>  Function for getting the SCK pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCK pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="578" column="29" bodyfile="haly/nrfy_spim.h" bodystart="578" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga4367c060788d68746d7dce671b65d512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_mosi_pin_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_mosi_pin_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga9deca8a6a43c5f53c6f0e6c3fe0cf6b7" kindref="member">nrf_spim_mosi_pin_get</ref>  Function for getting the MOSI pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MOSI pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="587" column="29" bodyfile="haly/nrfy_spim.h" bodystart="587" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga6cf393f6c016f6f429c223aed00167b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_miso_pin_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_miso_pin_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga1551251bf0c13f179b343e1f9b624459" kindref="member">nrf_spim_miso_pin_get</ref>  Function for getting the MISO pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MISO pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="596" column="29" bodyfile="haly/nrfy_spim.h" bodystart="596" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga14f2829831231bb1422b6aac22961761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_csn_configure</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t pin, nrf_spim_csn_pol_t polarity, uint32_t duration)</argsstring>
        <name>nrfy_spim_csn_configure</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga69909d4302a3e9c65806dc7c7be9c9c7" kindref="member">nrf_spim_csn_pol_t</ref></type>
          <declname>polarity</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga39c17d197d4e59c45c02620352167fd4" kindref="member">nrf_spim_csn_configure</ref>  Function for configuring the SPIM hardware CSN pin.  </para>
</simplesect>
</para>
<para>If this signal is not needed, pass the <ref refid="group__nrf__spim__hal_1ga818eb2c4164cd8f9422c3a8a0a626e2a" kindref="member">NRF_SPIM_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pin</parametername>
</parameternamelist>
<parameterdescription>
<para>CSN pin number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">polarity</parametername>
</parameternamelist>
<parameterdescription>
<para>CSN pin polarity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">duration</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum duration between the edge of CSN and the edge of SCK and minimum duration of CSN must stay unselected between transactions. The value is specified in number of 64 MHz clock cycles (15.625 ns).   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="607" column="25" bodyfile="haly/nrfy_spim.h" bodystart="607" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga6ae8ca4ad76b433f03f559db84a9da46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_csn_pin_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_csn_pin_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga0fa864eb77c4299cb0eb444401674121" kindref="member">nrf_spim_csn_pin_get</ref>  Function for getting the CSN pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CSN pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="617" column="29" bodyfile="haly/nrfy_spim.h" bodystart="617" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaf5a3abdf13d3b1781dc04ce301071de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_dcx_pin_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t dcx_pin)</argsstring>
        <name>nrfy_spim_dcx_pin_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dcx_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga75f2491ddcbd092b71ebac239d9929a3" kindref="member">nrf_spim_dcx_pin_set</ref>  Function for configuring the SPIM DCX pin.  </para>
</simplesect>
</para>
<para>If this signal is not needed, pass the <ref refid="group__nrf__spim__hal_1ga818eb2c4164cd8f9422c3a8a0a626e2a" kindref="member">NRF_SPIM_PIN_NOT_CONNECTED</ref> value instead of its pin number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dcx_pin</parametername>
</parameternamelist>
<parameterdescription>
<para>DCX pin number.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="628" column="25" bodyfile="haly/nrfy_spim.h" bodystart="628" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga38ea07f5ddcf7a64d9f0f3980ec304b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_dcx_pin_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_dcx_pin_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga2ee73ba7b9a8109edb841923c356aca2" kindref="member">nrf_spim_dcx_pin_get</ref>  Function for getting the DCX pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DCX pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="636" column="29" bodyfile="haly/nrfy_spim.h" bodystart="636" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gae5cf1353e043c87700af9d1fc598d9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_dcx_cnt_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t count)</argsstring>
        <name>nrfy_spim_dcx_cnt_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga9d7991c2826771ef33daab7f19e4d95d" kindref="member">nrf_spim_dcx_cnt_set</ref>  Function for configuring the number of command bytes.  </para>
</simplesect>
</para>
<para>Maximum value available for dividing the transmitted bytes into command bytes and data bytes is <ref refid="group__nrf__spim__hal_1ga71e07fdf41d8a5b31573f20807ede06e" kindref="member">NRF_SPIM_DCX_CNT_ALL_CMD</ref> - 1. The <ref refid="group__nrf__spim__hal_1ga71e07fdf41d8a5b31573f20807ede06e" kindref="member">NRF_SPIM_DCX_CNT_ALL_CMD</ref> value passed as the <computeroutput>count</computeroutput> parameter causes all transmitted bytes to be marked as command bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of command bytes preceding the data bytes.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="645" column="25" bodyfile="haly/nrfy_spim.h" bodystart="645" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga130ab0d7f019028603fab7f54b1cdaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_iftiming_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t rxdelay)</argsstring>
        <name>nrfy_spim_iftiming_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rxdelay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga3004d57ece479bf8ff51719706b4d1f9" kindref="member">nrf_spim_iftiming_set</ref>  Function for configuring the extended SPIM interface.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rxdelay</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample delay for input serial data on MISO, specified in 64 MHz clock cycles (15.625 ns) from the sampling edge of SCK.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="654" column="25" bodyfile="haly/nrfy_spim.h" bodystart="654" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga51b2785d5fcc6d86fd5cb70f4278e6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_stallstat_rx_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg)</argsstring>
        <name>nrfy_spim_stallstat_rx_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaba056a74bc686de26adda489f78cf171" kindref="member">nrf_spim_stallstat_rx_clear</ref>  Function for clearing stall status for RX EasyDMA RAM accesses.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="664" column="25" bodyfile="haly/nrfy_spim.h" bodystart="664" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga815c772715cb7adeae0a257b877e7cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_spim_stallstat_rx_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_stallstat_rx_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga35d75ec23eefdb2ab6dcb7e8514d1df8" kindref="member">nrf_spim_stallstat_rx_get</ref>  Function for getting stall status for RX EasyDMA RAM accesses.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stall status of RX EasyDMA RAM accesses.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="671" column="25" bodyfile="haly/nrfy_spim.h" bodystart="671" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga00026deab6ed4819412e6bb26575d7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_stallstat_tx_clear</definition>
        <argsstring>(NRF_SPIM_Type *p_reg)</argsstring>
        <name>nrfy_spim_stallstat_tx_clear</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaa3b5d792be98180e79c35b68c623e817" kindref="member">nrf_spim_stallstat_tx_clear</ref>  Function for clearing stall status for TX EasyDMA RAM accesses.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="680" column="25" bodyfile="haly/nrfy_spim.h" bodystart="680" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gadcf84997676337c924837a9f712e492f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_spim_stallstat_tx_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_stallstat_tx_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gac63ada40f97be3c9e76ba794561f6ab4" kindref="member">nrf_spim_stallstat_tx_get</ref>  Function for getting stall status for TX EasyDMA RAM accesses.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stall status of TX EasyDMA RAM accesses.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="687" column="25" bodyfile="haly/nrfy_spim.h" bodystart="687" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga2457146653993a8bb2ad29b78c814bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_frequency_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_frequency_t frequency)</argsstring>
        <name>nrfy_spim_frequency_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga5e37c3150ccd77887556edd6afbe3f65" kindref="member">nrf_spim_frequency_t</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga9207d0b744b7aa398141b2004d1aa381" kindref="member">nrf_spim_frequency_set</ref>  Function for setting the SPI master data rate.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI frequency.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="698" column="25" bodyfile="haly/nrfy_spim.h" bodystart="698" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga5f06cb16235e956595d74ba1793e1c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_prescaler_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint32_t prescaler)</argsstring>
        <name>nrfy_spim_prescaler_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prescaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga79eecd772cb0b0c4faedcddf87e7e72e" kindref="member">nrf_spim_prescaler_set</ref>  Function for setting the prescaler value.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>Prescaler value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="708" column="25" bodyfile="haly/nrfy_spim.h" bodystart="708" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga8a3a0a5e0d838b86b73decb79092d9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_prescaler_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_prescaler_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga4ce7dbafe298b763cb978a9d0cc21e18" kindref="member">nrf_spim_prescaler_get</ref>  Function for getting the prescaler value.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Prescaler value.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="715" column="29" bodyfile="haly/nrfy_spim.h" bodystart="715" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaa924ea70eb43127a78534e4c75a2796b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_tx_buffer_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint8_t const *p_buffer, size_t length)</argsstring>
        <name>nrfy_spim_tx_buffer_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gaf6294e8b452baa88e8533e8a1e3041ea" kindref="member">nrf_spim_tx_buffer_set</ref>  Function for setting the transmit buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer with data to send. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to transmit.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="725" column="25" bodyfile="haly/nrfy_spim.h" bodystart="725" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gadca1a80ec46d0b74713e590aac0bd429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_tx_amount_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_tx_amount_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga924ca917786ef51dcf07cd0f0ccce1c6" kindref="member">nrf_spim_tx_amount_get</ref>  Function for getting number of bytes transmitted in the last transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes transmitted.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="734" column="29" bodyfile="haly/nrfy_spim.h" bodystart="734" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaa2feac92a4ad3f6fcd6a38e6936778dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_tx_maxcnt_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_tx_maxcnt_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gac76e46f7b09bb8fda5c351d41972d9fc" kindref="member">nrf_spim_tx_maxcnt_get</ref>  Function for getting number of bytes to be transmitted in the next transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes to be transmitted.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="743" column="29" bodyfile="haly/nrfy_spim.h" bodystart="743" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaa7c0256e8c97ea4f5e0fc290b3db0c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_rx_buffer_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint8_t *p_buffer, size_t length)</argsstring>
        <name>nrfy_spim_rx_buffer_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga8e5557a6f5b0294fdd49ca950b1b3e15" kindref="member">nrf_spim_rx_buffer_set</ref>  Function for setting the receive buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for received data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of data bytes to receive.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="752" column="25" bodyfile="haly/nrfy_spim.h" bodystart="752" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gaac1a0dd4381777d26f6e39e9dc349a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_rx_amount_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_rx_amount_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga924ca917786ef51dcf07cd0f0ccce1c6" kindref="member">nrf_spim_tx_amount_get</ref>  Function for getting number of bytes transmitted in the last transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes transmitted.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="761" column="29" bodyfile="haly/nrfy_spim.h" bodystart="761" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga30d1b341471df442f979c65093a1aef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_spim_rx_maxcnt_get</definition>
        <argsstring>(NRF_SPIM_Type const *p_reg)</argsstring>
        <name>nrfy_spim_rx_maxcnt_get</name>
        <param>
          <type>NRF_SPIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga7eceeed170a987436f97714573ebebfe" kindref="member">nrf_spim_rx_maxcnt_get</ref>  Function for getting number of bytes to be received in the next transaction.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Amount</parametername>
</parameternamelist>
<parameterdescription>
<para>of bytes to be received.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="770" column="29" bodyfile="haly/nrfy_spim.h" bodystart="770" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1gafd7551c79c3fbdb73524a6c0a4765ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_configure</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, nrf_spim_mode_t spi_mode, nrf_spim_bit_order_t spi_bit_order)</argsstring>
        <name>nrfy_spim_configure</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1gaf6ad2321f2fd4a896c097b5d4040ff94" kindref="member">nrf_spim_mode_t</ref></type>
          <declname>spi_mode</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__spim__hal_1ga37c6bc10f199291b31990254df1b7e21" kindref="member">nrf_spim_bit_order_t</ref></type>
          <declname>spi_bit_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1ga04cb0f3fce5a0c8eaf3993dbc348818a" kindref="member">nrf_spim_configure</ref>  Function for setting the SPI configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spi_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spi_bit_order</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI bit order.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="779" column="25" bodyfile="haly/nrfy_spim.h" bodystart="779" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__spim_1ga6df1736df74efbddfcf4fd0a5fab6212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_spim_orc_set</definition>
        <argsstring>(NRF_SPIM_Type *p_reg, uint8_t orc)</argsstring>
        <name>nrfy_spim_orc_set</name>
        <param>
          <type>NRF_SPIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>orc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__spim__hal_1gafeac3b0a862ff72358ceeb02edd22704" kindref="member">nrf_spim_orc_set</ref>  Function for setting the over-read character.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">orc</parametername>
</parameternamelist>
<parameterdescription>
<para>Over-read character that is clocked out in case of an over-read of the TXD buffer.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_spim.h" line="788" column="25" bodyfile="haly/nrfy_spim.h" bodystart="788" bodyend="793"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_SPIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_spim.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_spim_event_handle(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="52"><highlight class="normal">uint32_t<sp/>__nrfy_internal_spim_events_process(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_spim_event_enabled_clear(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_spim<sp/>SPIM<sp/>HALY</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_spim</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>SPIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_HW_CSN<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_HW_CSN}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_HW_CSN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_HW_CSN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_DCX<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_DCX}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_DCX<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_DCX<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_RXDELAY<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_RXDELAY}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_RXDELAY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_RXDELAY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_STALLSTAT<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_STALLSTAT}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_STALLSTAT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_STALLSTAT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_EXTENDED<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_EXTENDED}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_EXTENDED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_EXTENDED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_ARRAY_LIST<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_ARRAY_LIST}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_ARRAY_LIST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_ARRAY_LIST<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_FREQUENCY<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_FREQUENCY}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_FREQUENCY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_FREQUENCY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_SPIM_HAS_PRESCALER<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**<sp/>@refhal{NRF_SPIM_HAS_PRESCALER}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_PRESCALER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SPIM_HAS_PRESCALER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>single<sp/>SPIM<sp/>transfer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structnrfy__spim__xfer__desc__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structnrfy__spim__xfer__desc__t_1a2b422868f9c20e8a71c1d0c079cc1238" kindref="member">p_tx_buffer</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>TX<sp/>data<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t_1a73af43d2d26760c98ea6440ff43f7471" kindref="member">tx_length</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TX<sp/>data<sp/>buffer<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t_1a695b06a5ea0cf54e4a936cfe16107ef3" kindref="member">p_rx_buffer</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>RX<sp/>data<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t_1aa2ad2852df3e43598b1dede9b79ac099" kindref="member">rx_length</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>RX<sp/>data<sp/>buffer<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">/**<sp/>@brief<sp/>Configuration<sp/>structure<sp/>for<sp/>SPIM<sp/>pins<sp/>used<sp/>for<sp/>extended<sp/>features.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="structnrfy__spim__ext__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_DCX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dcx_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>D/CX<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Set<sp/>to<sp/>@ref<sp/>NRF_SPIM_PIN_NOT_CONNECTED<sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_HW_CSN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>csn_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>CSN<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Set<sp/>to<sp/>@ref<sp/>NRF_SPIM_PIN_NOT_CONNECTED<sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><ref refid="structnrfy__spim__ext__pins__t" kindref="compound">nrfy_spim_ext_pins_t</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment">/**<sp/>@brief<sp/>Configuration<sp/>structure<sp/>for<sp/>SPIM<sp/>extended<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structnrfy__spim__ext__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__ext__pins__t" kindref="compound">nrfy_spim_ext_pins_t</ref><sp/>pins;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pin<sp/>configuration<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_HW_CSN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga69909d4302a3e9c65806dc7c7be9c9c7" kindref="member">nrf_spim_csn_pol_t</ref><sp/><sp/><sp/>csn_pol;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Polarity<sp/>of<sp/>the<sp/>CSN<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csn_duration;<sp/></highlight><highlight class="comment">///&lt;<sp/>Minimum<sp/>duration<sp/>between<sp/>the<sp/>edge<sp/>of<sp/>CSN<sp/>and<sp/>the<sp/>edge<sp/>of<sp/>SCK.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Also,<sp/>minimum<sp/>duration<sp/>of<sp/>CSN<sp/>inactivity<sp/>between<sp/>transactions.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>The<sp/>value<sp/>is<sp/>specified<sp/>in<sp/>number<sp/>of<sp/>64<sp/>MHz<sp/>clock<sp/>cycles<sp/>(15.625<sp/>ns).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_RXDELAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_delay;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sample<sp/>delay<sp/>for<sp/>input<sp/>serial<sp/>data<sp/>on<sp/>MISO.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>This<sp/>value<sp/>specifies<sp/>the<sp/>delay<sp/>between<sp/>the<sp/>occurrence</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>of<sp/>the<sp/>SCK<sp/>sampling<sp/>edge<sp/>and<sp/>actual<sp/>sampling<sp/>operation,</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>expressed<sp/>in<sp/>number<sp/>of<sp/>64<sp/>MHz<sp/>clock<sp/>cycles<sp/>(15.625<sp/>ns).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/><ref refid="structnrfy__spim__ext__config__t" kindref="compound">nrfy_spim_ext_config_t</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_SPIM_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">/**<sp/>@brief<sp/>SPIM<sp/>pins<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="structnrfy__spim__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sck_pin;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SCK<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mosi_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>MOSI<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Set<sp/>to<sp/>@ref<sp/>NRF_SPIM_PIN_NOT_CONNECTED<sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>miso_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>MISO<sp/>pin<sp/>number.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Set<sp/>to<sp/>@ref<sp/>NRF_SPIM_PIN_NOT_CONNECTED<sp/>if<sp/>this<sp/>signal<sp/>is<sp/>not<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/><ref refid="structnrfy__spim__pins__t" kindref="compound">nrfy_spim_pins_t</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">/**<sp/>@brief<sp/>SPIM<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structnrfy__spim__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__pins__t" kindref="compound">nrfy_spim_pins_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pins;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pin<sp/>configuration<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Overrun<sp/>character.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>This<sp/>character<sp/>is<sp/>transmitted<sp/>when<sp/>the<sp/>TX<sp/>buffer<sp/>gets<sp/>exhausted,</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>the<sp/>transaction<sp/>continues<sp/>due<sp/>to<sp/>RX.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_FREQUENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga5e37c3150ccd77887556edd6afbe3f65" kindref="member">nrf_spim_frequency_t</ref><sp/><sp/><sp/>frequency;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SPIM<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRFY_SPIM_HAS_PRESCALER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescaler;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SPIM<sp/>prescaler<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaf6ad2321f2fd4a896c097b5d4040ff94" kindref="member">nrf_spim_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SPIM<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga37c6bc10f199291b31990254df1b7e21" kindref="member">nrf_spim_bit_order_t</ref><sp/><sp/><sp/>bit_order;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>SPIM<sp/>bit<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_EXTENDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__ext__config__t" kindref="compound">nrfy_spim_ext_config_t</ref><sp/>ext_config;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Extended<sp/>features<sp/>configuration<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_psel_cfg;<sp/></highlight><highlight class="comment">///&lt;<sp/>Skip<sp/>pin<sp/>selection<sp/>configuration.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>the<sp/>driver<sp/>does<sp/>not<sp/>modify</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>pin<sp/>select<sp/>registers<sp/>in<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Those<sp/>registers<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>externally<sp/>before<sp/>the<sp/>driver<sp/>is<sp/>initialized.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>@note<sp/>When<sp/>both<sp/>GPIO<sp/>configuration<sp/>and<sp/>pin</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>selection<sp/>are<sp/>to<sp/>be<sp/>skipped,<sp/>the<sp/>structure</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>fields<sp/>that<sp/>specify<sp/>pins<sp/>can<sp/>be<sp/>omitted,</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>as<sp/>they<sp/>are<sp/>ignored<sp/>anyway.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><ref refid="structnrfy__spim__config__t" kindref="compound">nrfy_spim_config_t</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>SPIM.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>peripheral<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga1b08443967645022475ad82a3e9c48e9" kindref="member">nrfy_spim_periph_configure</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__config__t" kindref="compound">nrfy_spim_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_config-&gt;<ref refid="structnrfy__spim__config__t_1a7442f412ce50ab0e1e69aad63cc18dee" kindref="member">skip_psel_cfg</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga7a84520c7baba19ea26a494bd4c4ea16" kindref="member">nrf_spim_pins_set</ref>(p_reg,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a8b530d1ab91e62fc6d3980de90a11914" kindref="member">pins</ref>.<ref refid="structnrfy__spim__pins__t_1adc0abcbe986a369f1d1a3904a0df8ccf" kindref="member">sck_pin</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a8b530d1ab91e62fc6d3980de90a11914" kindref="member">pins</ref>.<ref refid="structnrfy__spim__pins__t_1a04ede4de91c45981d8738059660b46c8" kindref="member">mosi_pin</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a8b530d1ab91e62fc6d3980de90a11914" kindref="member">pins</ref>.<ref refid="structnrfy__spim__pins__t_1abc0038fc17c98133a624adcee9bbb6cb" kindref="member">miso_pin</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_DCX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga75f2491ddcbd092b71ebac239d9929a3" kindref="member">nrf_spim_dcx_pin_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a6bab1328f4e830b8de6ea5e589dc0eb5" kindref="member">ext_config</ref>.<ref refid="structnrfy__spim__ext__config__t_1a62188ede0bdcb7e0435e7679d9dcba30" kindref="member">pins</ref>.<ref refid="structnrfy__spim__ext__pins__t_1aa455d8889653983f26df7a75b598c8d9" kindref="member">dcx_pin</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_HW_CSN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga39c17d197d4e59c45c02620352167fd4" kindref="member">nrf_spim_csn_configure</ref>(p_reg,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a6bab1328f4e830b8de6ea5e589dc0eb5" kindref="member">ext_config</ref>.<ref refid="structnrfy__spim__ext__config__t_1a62188ede0bdcb7e0435e7679d9dcba30" kindref="member">pins</ref>.<ref refid="structnrfy__spim__ext__pins__t_1a1ddaa7bdcc082f9c6f1bfa8a3336e6da" kindref="member">csn_pin</ref>,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a6bab1328f4e830b8de6ea5e589dc0eb5" kindref="member">ext_config</ref>.<ref refid="structnrfy__spim__ext__config__t_1a282c1c4fdfe52418c62f68febc786ed9" kindref="member">csn_pol</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a6bab1328f4e830b8de6ea5e589dc0eb5" kindref="member">ext_config</ref>.<ref refid="structnrfy__spim__ext__config__t_1a1336d5af8e915f0323e2c6719daba133" kindref="member">csn_duration</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gafeac3b0a862ff72358ceeb02edd22704" kindref="member">nrf_spim_orc_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a75d93fa9594347a24570554a38eaf9b9" kindref="member">orc</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_FREQUENCY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9207d0b744b7aa398141b2004d1aa381" kindref="member">nrf_spim_frequency_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1afcd26b121f8ae4ca54de8372d927de3e" kindref="member">frequency</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRFY_SPIM_HAS_PRESCALER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga79eecd772cb0b0c4faedcddf87e7e72e" kindref="member">nrf_spim_prescaler_set</ref>(p_reg,<sp/>p_config-&gt;prescaler);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga04cb0f3fce5a0c8eaf3993dbc348818a" kindref="member">nrf_spim_configure</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a7b22cb42988fd3ddeeebe6282e6de0bd" kindref="member">mode</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a8123b4be876b18d850641972f3b33ef6" kindref="member">bit_order</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_RXDELAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga3004d57ece479bf8ff51719706b4d1f9" kindref="member">nrf_spim_iftiming_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__spim__config__t_1a6bab1328f4e830b8de6ea5e589dc0eb5" kindref="member">ext_config</ref>.<ref refid="structnrfy__spim__ext__config__t_1a00358b805fcb46b4c1c48adf968d3fa9" kindref="member">rx_delay</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>SPIM<sp/>interrupts.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>interrupts<sp/>associated<sp/>with<sp/>the<sp/>event<sp/>mask<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga913cc0465ad1cf274e2e8e53436fd16f" kindref="member">nrfy_spim_int_init</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_spim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea6de9fdf692c7a973adf9dd42a24013e7" kindref="member">NRF_SPIM_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_spim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6eaa83e64148f6cbfc56d19f809fd03081e" kindref="member">NRF_SPIM_EVENT_ENDRX</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_spim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea1e4f7c0bbf075459d38eb74a7c5e8664" kindref="member">NRF_SPIM_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_spim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea73d9f975cb5a43340c9907f9e1b25939" kindref="member">NRF_SPIM_EVENT_ENDTX</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_spim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea8c7b3599214eab130a5661a049bf0622" kindref="member">NRF_SPIM_EVENT_STARTED</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2d1f16e4bd513c2e6a0f4b502f2cfe1c" kindref="member">nrf_spim_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>SPIM<sp/>interrupts.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga5edba24f779b5c4e2ee3e3843461d436" kindref="member">nrfy_spim_int_uninit</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>SPIM<sp/>events.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK();</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>buffers<sp/>associated<sp/>with<sp/>the<sp/>last<sp/>transaction.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga0ca008e107734bdfbebdb1b426b75ac7" kindref="member">nrfy_spim_events_process</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_spim_events_process(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>SPIM<sp/>transaction<sp/>buffers.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>transaction<sp/>buffers.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga81e9d0e05f50b520b829e6a27a951b9c" kindref="member">nrfy_spim_buffers_set</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a2b422868f9c20e8a71c1d0c079cc1238" kindref="member">p_tx_buffer</ref>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a2b422868f9c20e8a71c1d0c079cc1238" kindref="member">p_tx_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a73af43d2d26760c98ea6440ff43f7471" kindref="member">tx_length</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaf6294e8b452baa88e8533e8a1e3041ea" kindref="member">nrf_spim_tx_buffer_set</ref>(p_reg,<sp/>p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a2b422868f9c20e8a71c1d0c079cc1238" kindref="member">p_tx_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a73af43d2d26760c98ea6440ff43f7471" kindref="member">tx_length</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga8e5557a6f5b0294fdd49ca950b1b3e15" kindref="member">nrf_spim_rx_buffer_set</ref>(p_reg,<sp/>p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a695b06a5ea0cf54e4a936cfe16107ef3" kindref="member">p_rx_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1aa2ad2852df3e43598b1dede9b79ac099" kindref="member">rx_length</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>SPIM<sp/>transaction.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>transaction<sp/>buffers</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>transaction<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>transactions.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga74619cdf7d4d3c246477c708da81e531" kindref="member">nrfy_spim_xfer_start</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9e52a7c6afa466c4c2d494e87206898f" kindref="member">nrf_spim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__spim__hal_1gga2982879a943ea49b37cebd5abbe7fe84a5188b4263186c81d7f8ffbb44fc21d8e" kindref="member">NRF_SPIM_TASK_START</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__nrf__spim__hal_1gaebe158267c1fe407bd2f84919b2a337b" kindref="member">nrf_spim_event_check</ref>(p_reg,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea1e4f7c0bbf075459d38eb74a7c5e8664" kindref="member">NRF_SPIM_EVENT_END</ref>))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_spim_events_process(p_reg,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea1e4f7c0bbf075459d38eb74a7c5e8664" kindref="member">NRF_SPIM_EVENT_END</ref>),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_xfer);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>aborting<sp/>the<sp/>ongoing<sp/>SPIM<sp/>transaction.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>transaction<sp/>buffers</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>abort<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>operation.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga800a28386987af5cd2c1e2180ad7ed1b" kindref="member">nrfy_spim_abort</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9e52a7c6afa466c4c2d494e87206898f" kindref="member">nrf_spim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__spim__hal_1gga2982879a943ea49b37cebd5abbe7fe84a305c8391fb7ef9cf6f420ecfb6d03fcc" kindref="member">NRF_SPIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea6de9fdf692c7a973adf9dd42a24013e7" kindref="member">NRF_SPIM_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_spim_events_process(p_reg,<sp/>evt_mask,<sp/>p_xfer))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_spim_events_process(p_reg,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea1e4f7c0bbf075459d38eb74a7c5e8664" kindref="member">NRF_SPIM_EVENT_END</ref>),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>SPIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>SPIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga6e31077d1dde065175db953661ec458f" kindref="member">nrfy_spim_pins_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="structnrfy__spim__pins__t" kindref="compound">nrfy_spim_pins_t</ref><sp/>*<sp/>p_pins)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__spim__pins__t_1adc0abcbe986a369f1d1a3904a0df8ccf" kindref="member">sck_pin</ref><sp/><sp/>=<sp/><ref refid="group__nrf__spim__hal_1gaa0b911843ae1a2dc62f894580cf3756b" kindref="member">nrf_spim_sck_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__spim__pins__t_1a04ede4de91c45981d8738059660b46c8" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga9deca8a6a43c5f53c6f0e6c3fe0cf6b7" kindref="member">nrf_spim_mosi_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__spim__pins__t_1abc0038fc17c98133a624adcee9bbb6cb" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga1551251bf0c13f179b343e1f9b624459" kindref="member">nrf_spim_miso_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_EXTENDED</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>SPIM<sp/>pins<sp/>used<sp/>for<sp/>extended<sp/>features.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>SPIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga655b07a4ad41fde0320a24d34f718623" kindref="member">nrfy_spim_ext_pins_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__ext__pins__t" kindref="compound">nrfy_spim_ext_pins_t</ref><sp/>*<sp/>p_pins)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__spim__ext__pins__t_1aa455d8889653983f26df7a75b598c8d9" kindref="member">dcx_pin</ref><sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga2ee73ba7b9a8109edb841923c356aca2" kindref="member">nrf_spim_dcx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_HW_CSN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__spim__ext__pins__t_1a1ddaa7bdcc082f9c6f1bfa8a3336e6da" kindref="member">csn_pin</ref><sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga0fa864eb77c4299cb0eb444401674121" kindref="member">nrf_spim_csn_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_ARRAY_LIST</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>TX<sp/>list<sp/>feature<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga864e13aa762bbf6c893d5045429b79c9" kindref="member">nrfy_spim_tx_list_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga7357a796a2fdf9d2c4ae16a0350852c7" kindref="member">nrf_spim_tx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga72c0c83e5b18565861b24cc2f9b7b405" kindref="member">nrf_spim_tx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>RX<sp/>list<sp/>feature<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaa5ff72182beb38ab86257f4df467a0b0" kindref="member">nrfy_spim_rx_list_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga1352d05967bc99ec35c6a35653263caa" kindref="member">nrf_spim_rx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2a825732a31c91886fc4915c73fe437f" kindref="member">nrf_spim_rx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="433"><highlight class="comment">/**<sp/>@refhal{nrf_spim_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga33485bc6736bc4820bbbe39dcac6e358" kindref="member">nrfy_spim_task_trigger</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9e52a7c6afa466c4c2d494e87206898f" kindref="member">nrf_spim_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="441"><highlight class="comment">/**<sp/>@refhal{nrf_spim_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga871c901902548ee4ef9f647f4f9678bf" kindref="member">nrfy_spim_task_address_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spim__hal_1ga4a9e3819ecafa986a3e7af05ca46b40a" kindref="member">nrf_spim_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">/**<sp/>@refhal{nrf_spim_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaad318ad75cfb65c0678b4cf6e6be37d3" kindref="member">nrfy_spim_event_clear</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gacdfadb80c0d980545acb217c57abc88a" kindref="member">nrf_spim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment">/**<sp/>@refhal{nrf_spim_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga94d5ea8c2bb576466d930955f85fad25" kindref="member">nrfy_spim_event_check</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gaebe158267c1fe407bd2f84919b2a337b" kindref="member">nrf_spim_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="464"><highlight class="comment">/**<sp/>@refhal{nrf_spim_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga7a1f88c57dc8b96de2b9cd971cdb980d" kindref="member">nrfy_spim_event_address_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__spim__hal_1ga24e020ebb846d4a8f9cbbb2e94234ba3" kindref="member">nrf_spim_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment">/**<sp/>@refhal{nrf_spim_shorts_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gabb508e89bc532a49bd6dcae96292e4a8" kindref="member">nrfy_spim_shorts_enable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga707662c0db21ffac917ff9c6506d07f8" kindref="member">nrf_spim_shorts_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="478"><highlight class="comment">/**<sp/>@refhal{nrf_spim_shorts_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga30a868ee6b7ee6fadc00a14a9e708929" kindref="member">nrfy_spim_shorts_disable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaca728bc9c609f43da7ec0877a9a9c6b2" kindref="member">nrf_spim_shorts_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="485"><highlight class="comment">/**<sp/>@refhal{nrf_spim_shorts_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga485030771660d044d0a8505bca8de551" kindref="member">nrfy_spim_shorts_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shorts<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga230f345fcbb0a4cb4ed2ad7ae49da86b" kindref="member">nrf_spim_shorts_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shorts;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment">/**<sp/>@refhal{nrf_spim_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaf1346c826f1b18dec2f1a29f39f243fe" kindref="member">nrfy_spim_int_enable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2d1f16e4bd513c2e6a0f4b502f2cfe1c" kindref="member">nrf_spim_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">/**<sp/>@refhal{nrf_spim_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga20cccc7e3a9422bace97a7bef9c84b9f" kindref="member">nrfy_spim_int_disable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga26449809b37227511a1faf6233eeb71f" kindref="member">nrf_spim_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment">/**<sp/>@refhal{nrf_spim_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga335c9597275d902a3901c046cecbe659" kindref="member">nrfy_spim_int_enable_check</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gafe12634c5609d63fbc3820c44c29b430" kindref="member">nrf_spim_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment">/**<sp/>@refhal{nrf_spim_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga03baef24c25e1454939e12ad4db70a37" kindref="member">nrfy_spim_subscribe_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad6fb6e25713c9c18f91c07a5c4a39425" kindref="member">nrf_spim_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment">/**<sp/>@refhal{nrf_spim_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga49f87ddcbdf8bc3fb54707a5ed7121c0" kindref="member">nrfy_spim_subscribe_clear</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga2982879a943ea49b37cebd5abbe7fe84" kindref="member">nrf_spim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gadaa800f166325ce4b749fdb8d6e276eb" kindref="member">nrf_spim_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="535"><highlight class="comment">/**<sp/>@refhal{nrf_spim_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaebfc3812ec3f773dac4238d8f1ecba29" kindref="member">nrfy_spim_publish_set</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga85022dc74e20435979e08102e5bdf163" kindref="member">nrf_spim_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment">/**<sp/>@refhal{nrf_spim_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga666698bc61147669f935cba0989eabcd" kindref="member">nrfy_spim_publish_clear</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaba6fb6223b0a3d87820c65fafd6a386b" kindref="member">nrf_spim_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment">/**<sp/>@refhal{nrf_spim_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga2752a2997d2dc0ebd075aef2ace00524" kindref="member">nrfy_spim_enable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaeeb8736598b8d189faa547b1656d482e" kindref="member">nrf_spim_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="560"><highlight class="comment">/**<sp/>@refhal{nrf_spim_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga3db84293afe15fc8c380faa88b8b6158" kindref="member">nrfy_spim_disable</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gab0911efd55fdbc077c37d4622c7dc3dc" kindref="member">nrf_spim_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="567"><highlight class="comment">/**<sp/>@refhal{nrf_spim_pins_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga8addd4475c4e9f24a7e608eb5a21ccfc" kindref="member">nrfy_spim_pins_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sck_pin,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mosi_pin,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miso_pin)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga7a84520c7baba19ea26a494bd4c4ea16" kindref="member">nrf_spim_pins_set</ref>(p_reg,<sp/>sck_pin,<sp/>mosi_pin,<sp/>miso_pin);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="577"><highlight class="comment">/**<sp/>@refhal{nrf_spim_sck_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1gac05c35ded330f8563bb6cd271c771857" kindref="member">nrfy_spim_sck_pin_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gaa0b911843ae1a2dc62f894580cf3756b" kindref="member">nrf_spim_sck_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="586"><highlight class="comment">/**<sp/>@refhal{nrf_spim_mosi_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga4367c060788d68746d7dce671b65d512" kindref="member">nrfy_spim_mosi_pin_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga9deca8a6a43c5f53c6f0e6c3fe0cf6b7" kindref="member">nrf_spim_mosi_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="595"><highlight class="comment">/**<sp/>@refhal{nrf_spim_miso_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga6cf393f6c016f6f429c223aed00167b4" kindref="member">nrfy_spim_miso_pin_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga1551251bf0c13f179b343e1f9b624459" kindref="member">nrf_spim_miso_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_HW_CSN</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="606"><highlight class="comment">/**<sp/>@refhal{nrf_spim_csn_configure}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga14f2829831231bb1422b6aac22961761" kindref="member">nrfy_spim_csn_configure</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pin,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga69909d4302a3e9c65806dc7c7be9c9c7" kindref="member">nrf_spim_csn_pol_t</ref><sp/>polarity,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga39c17d197d4e59c45c02620352167fd4" kindref="member">nrf_spim_csn_configure</ref>(p_reg,<sp/>pin,<sp/>polarity,<sp/>duration);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="616"><highlight class="comment">/**<sp/>@refhal{nrf_spim_csn_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga6ae8ca4ad76b433f03f559db84a9da46" kindref="member">nrfy_spim_csn_pin_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga0fa864eb77c4299cb0eb444401674121" kindref="member">nrf_spim_csn_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_DCX</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="627"><highlight class="comment">/**<sp/>@refhal{nrf_spim_dcx_pin_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaf5a3abdf13d3b1781dc04ce301071de0" kindref="member">nrfy_spim_dcx_pin_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dcx_pin)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga75f2491ddcbd092b71ebac239d9929a3" kindref="member">nrf_spim_dcx_pin_set</ref>(p_reg,<sp/>dcx_pin);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="635"><highlight class="comment">/**<sp/>@refhal{nrf_spim_dcx_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga38ea07f5ddcf7a64d9f0f3980ec304b9" kindref="member">nrfy_spim_dcx_pin_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pin<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga2ee73ba7b9a8109edb841923c356aca2" kindref="member">nrf_spim_dcx_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pin;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="644"><highlight class="comment">/**<sp/>@refhal{nrf_spim_dcx_cnt_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gae5cf1353e043c87700af9d1fc598d9a4" kindref="member">nrfy_spim_dcx_cnt_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>count)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9d7991c2826771ef33daab7f19e4d95d" kindref="member">nrf_spim_dcx_cnt_set</ref>(p_reg,<sp/>count);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_RXDELAY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment">/**<sp/>@refhal{nrf_spim_iftiming_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga130ab0d7f019028603fab7f54b1cdaf4" kindref="member">nrfy_spim_iftiming_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxdelay)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga3004d57ece479bf8ff51719706b4d1f9" kindref="member">nrf_spim_iftiming_set</ref>(p_reg,<sp/>rxdelay);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_STALLSTAT</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="663"><highlight class="comment">/**<sp/>@refhal{nrf_spim_stallstat_rx_clear}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga51b2785d5fcc6d86fd5cb70f4278e6ed" kindref="member">nrfy_spim_stallstat_rx_clear</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaba056a74bc686de26adda489f78cf171" kindref="member">nrf_spim_stallstat_rx_clear</ref>(p_reg);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment">/**<sp/>@refhal{nrf_spim_stallstat_rx_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga815c772715cb7adeae0a257b877e7cad" kindref="member">nrfy_spim_stallstat_rx_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stallstat<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga35d75ec23eefdb2ab6dcb7e8514d1df8" kindref="member">nrf_spim_stallstat_rx_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stallstat;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="679"><highlight class="comment">/**<sp/>@refhal{nrf_spim_stallstat_tx_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga00026deab6ed4819412e6bb26575d7bd" kindref="member">nrfy_spim_stallstat_tx_clear</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaa3b5d792be98180e79c35b68c623e817" kindref="member">nrf_spim_stallstat_tx_clear</ref>(p_reg);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="686"><highlight class="comment">/**<sp/>@refhal{nrf_spim_stallstat_tx_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gadcf84997676337c924837a9f712e492f" kindref="member">nrfy_spim_stallstat_tx_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stallstat<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gac63ada40f97be3c9e76ba794561f6ab4" kindref="member">nrf_spim_stallstat_tx_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stallstat;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_SPIM_HAS_STALLSTAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_FREQUENCY</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="697"><highlight class="comment">/**<sp/>@refhal{nrf_spim_frequency_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga2457146653993a8bb2ad29b78c814bc9" kindref="member">nrfy_spim_frequency_set</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga5e37c3150ccd77887556edd6afbe3f65" kindref="member">nrf_spim_frequency_t</ref><sp/>frequency)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga9207d0b744b7aa398141b2004d1aa381" kindref="member">nrf_spim_frequency_set</ref>(p_reg,<sp/>frequency);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_SPIM_HAS_PRESCALER</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment">/**<sp/>@refhal{nrf_spim_prescaler_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga5f06cb16235e956595d74ba1793e1c9d" kindref="member">nrfy_spim_prescaler_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>prescaler)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga79eecd772cb0b0c4faedcddf87e7e72e" kindref="member">nrf_spim_prescaler_set</ref>(p_reg,<sp/>prescaler);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="714"><highlight class="comment">/**<sp/>@refhal{nrf_spim_prescaler_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga8a3a0a5e0d838b86b73decb79092d9be" kindref="member">nrfy_spim_prescaler_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prescaler<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga4ce7dbafe298b763cb978a9d0cc21e18" kindref="member">nrf_spim_prescaler_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prescaler;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="724"><highlight class="comment">/**<sp/>@refhal{nrf_spim_tx_buffer_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaa924ea70eb43127a78534e4c75a2796b" kindref="member">nrfy_spim_tx_buffer_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaf6294e8b452baa88e8533e8a1e3041ea" kindref="member">nrf_spim_tx_buffer_set</ref>(p_reg,<sp/>p_buffer,<sp/>length);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="733"><highlight class="comment">/**<sp/>@refhal{nrf_spim_tx_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1gadca1a80ec46d0b74713e590aac0bd429" kindref="member">nrfy_spim_tx_amount_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>amount<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga924ca917786ef51dcf07cd0f0ccce1c6" kindref="member">nrf_spim_tx_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="742"><highlight class="comment">/**<sp/>@refhal{nrf_spim_tx_maxcnt_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1gaa2feac92a4ad3f6fcd6a38e6936778dc" kindref="member">nrfy_spim_tx_maxcnt_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>maxcnt<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gac76e46f7b09bb8fda5c351d41972d9fc" kindref="member">nrf_spim_tx_maxcnt_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxcnt;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="751"><highlight class="comment">/**<sp/>@refhal{nrf_spim_rx_buffer_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gaa7c0256e8c97ea4f5e0fc290b3db0c6b" kindref="member">nrfy_spim_rx_buffer_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_buffer,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga8e5557a6f5b0294fdd49ca950b1b3e15" kindref="member">nrf_spim_rx_buffer_set</ref>(p_reg,<sp/>p_buffer,<sp/>length);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment">/**<sp/>@refhal{nrf_spim_tx_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1gaac1a0dd4381777d26f6e39e9dc349a37" kindref="member">nrfy_spim_rx_amount_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="762"><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>amount<sp/>=<sp/><ref refid="group__nrf__spim__hal_1gabb5f4696a9964dd9d0785368bd90d125" kindref="member">nrf_spim_rx_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment">/**<sp/>@refhal{nrf_spim_rx_maxcnt_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__spim_1ga30d1b341471df442f979c65093a1aef1" kindref="member">nrfy_spim_rx_maxcnt_get</ref>(NRF_SPIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>maxcnt<sp/>=<sp/><ref refid="group__nrf__spim__hal_1ga7eceeed170a987436f97714573ebebfe" kindref="member">nrf_spim_rx_maxcnt_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxcnt;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment">/**<sp/>@refhal{nrf_spim_configure}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1gafd7551c79c3fbdb73524a6c0a4765ac4" kindref="member">nrfy_spim_configure</ref>(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gaf6ad2321f2fd4a896c097b5d4040ff94" kindref="member">nrf_spim_mode_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>spi_mode,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga37c6bc10f199291b31990254df1b7e21" kindref="member">nrf_spim_bit_order_t</ref><sp/>spi_bit_order)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1ga04cb0f3fce5a0c8eaf3993dbc348818a" kindref="member">nrf_spim_configure</ref>(p_reg,<sp/>spi_mode,<sp/>spi_bit_order);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="787"><highlight class="comment">/**<sp/>@refhal{nrf_spim_orc_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__spim_1ga6df1736df74efbddfcf4fd0a5fab6212" kindref="member">nrfy_spim_orc_set</ref>(NRF_SPIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orc)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gafeac3b0a862ff72358ceeb02edd22704" kindref="member">nrf_spim_orc_set</ref>(p_reg,<sp/>orc);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="795"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_spim_event_handle(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__spim__hal_1gaebe158267c1fe407bd2f84919b2a337b" kindref="member">nrf_spim_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gacdfadb80c0d980545acb217c57abc88a" kindref="member">nrf_spim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="815"><highlight class="normal">uint32_t<sp/>__nrfy_internal_spim_events_process(NRF_SPIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__spim__xfer__desc__t" kindref="compound">nrfy_spim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_spim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea8c7b3599214eab130a5661a049bf0622" kindref="member">NRF_SPIM_EVENT_STARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop<sp/>=<sp/>__nrfy_internal_spim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea6de9fdf692c7a973adf9dd42a24013e7" kindref="member">NRF_SPIM_EVENT_STOPPED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalidated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_spim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea1e4f7c0bbf075459d38eb74a7c5e8664" kindref="member">NRF_SPIM_EVENT_END</ref>,<sp/>&amp;evt_mask)<sp/>&amp;&amp;<sp/>p_xfer)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>stop<sp/>?<sp/><ref refid="group__nrf__spim__hal_1gabb5f4696a9964dd9d0785368bd90d125" kindref="member">nrf_spim_rx_amount_get</ref>(p_reg)<sp/>:<sp/>p_xfer-&gt;rx_length;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a695b06a5ea0cf54e4a936cfe16107ef3" kindref="member">p_rx_buffer</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_spim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6eaa83e64148f6cbfc56d19f809fd03081e" kindref="member">NRF_SPIM_EVENT_ENDRX</ref>,<sp/>&amp;evt_mask)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_xfer<sp/>&amp;&amp;<sp/>!invalidated)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>stop<sp/>?<sp/><ref refid="group__nrf__spim__hal_1gabb5f4696a9964dd9d0785368bd90d125" kindref="member">nrf_spim_rx_amount_get</ref>(p_reg)<sp/>:<sp/>p_xfer-&gt;rx_length;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__spim__xfer__desc__t_1a695b06a5ea0cf54e4a936cfe16107ef3" kindref="member">p_rx_buffer</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_spim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__spim__hal_1ggad3a00dacc9f2c0ebeedddd88a2a03f6ea73d9f975cb5a43340c9907f9e1b25939" kindref="member">NRF_SPIM_EVENT_ENDTX</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_spim_event_enabled_clear(NRF_SPIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gad3a00dacc9f2c0ebeedddd88a2a03f6e" kindref="member">nrf_spim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__spim__hal_1gacdfadb80c0d980545acb217c57abc88a" kindref="member">nrf_spim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_SPIM_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_spim.h"/>
  </compounddef>
</doxygen>
