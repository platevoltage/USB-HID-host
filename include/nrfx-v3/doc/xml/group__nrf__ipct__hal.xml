<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__ipct__hal" kind="group">
    <compoundname>nrf_ipct_hal</compoundname>
    <title>IPCT HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ipct_task_t</name>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a84dfb2f179ddd8941d4d854e01ebec07" prot="public">
          <name>NRF_IPCT_TASK_SEND_0</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [0] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a6ea0e0e424a2dc754ee7693d925d68a4" prot="public">
          <name>NRF_IPCT_TASK_SEND_1</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [1] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a539d1270295e489c20d0bce395a6d9cd" prot="public">
          <name>NRF_IPCT_TASK_SEND_2</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [2] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a548294628b7dcd83da021e79b6c5ab23" prot="public">
          <name>NRF_IPCT_TASK_SEND_3</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [3] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1aa90e3f4e8a1bc494f319799ad2c7bda2" prot="public">
          <name>NRF_IPCT_TASK_SEND_4</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [4] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a60614099266fbf212c8e34343d2b0b61" prot="public">
          <name>NRF_IPCT_TASK_SEND_5</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [5] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a2a6d5978149ac9239ddab4d79e51b7f7" prot="public">
          <name>NRF_IPCT_TASK_SEND_6</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [6] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1ac83cdb0478c81de9e9560300b51078d1" prot="public">
          <name>NRF_IPCT_TASK_SEND_7</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [7] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a5044a201476197abb97ee5cf79bd106b" prot="public">
          <name>NRF_IPCT_TASK_SEND_8</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [8] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1aeac4add9ac82e1ed28afa555f95dfc66" prot="public">
          <name>NRF_IPCT_TASK_SEND_9</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [9] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a22532a80b9283745790a2f62a6f5e6b0" prot="public">
          <name>NRF_IPCT_TASK_SEND_10</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [10] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1ae19deb20f0667e88fe538ef067bb2e21" prot="public">
          <name>NRF_IPCT_TASK_SEND_11</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [11] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a46cc9392b0ad921b3e6a16f4b0040cfc" prot="public">
          <name>NRF_IPCT_TASK_SEND_12</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [12] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a9f856eab8d8944f10a34cdbec56cd905" prot="public">
          <name>NRF_IPCT_TASK_SEND_13</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [13] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a493d1d008f00e2be5ac4e7256c22fa2c" prot="public">
          <name>NRF_IPCT_TASK_SEND_14</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [14] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1adf68f5fd5f1e987c3e90b59fd30bc8c3" prot="public">
          <name>NRF_IPCT_TASK_SEND_15</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_SEND[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send [15] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a59a346e6c6c363fa74a62e003295f592" prot="public">
          <name>NRF_IPCT_TASK_ACK_0</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[0] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1aa7ac39649dc24d3434b84476db5f1a40" prot="public">
          <name>NRF_IPCT_TASK_ACK_1</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[1] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a29144e5c524175c977637da8b7430aad" prot="public">
          <name>NRF_IPCT_TASK_ACK_2</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[2] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1ad6be47eea5459d05f8b2f891053ac09b" prot="public">
          <name>NRF_IPCT_TASK_ACK_3</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[3] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1ab9e5ecbdd7bba0fc04fc296446624524" prot="public">
          <name>NRF_IPCT_TASK_ACK_4</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[4] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1ac0b9743a16dd8ad5aeff66289c5e63e9" prot="public">
          <name>NRF_IPCT_TASK_ACK_5</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[5] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a0cda5f6a1b4d20e4fd5f4ea5061a32c5" prot="public">
          <name>NRF_IPCT_TASK_ACK_6</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[6] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1acc45ac3f1c83f1779cd90abac71b21d0" prot="public">
          <name>NRF_IPCT_TASK_ACK_7</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[7] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a61461a1025abe16385f5b41fc94b3ed6" prot="public">
          <name>NRF_IPCT_TASK_ACK_8</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[8] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a9b60f3c4f2e802f1f6298ac83b98997d" prot="public">
          <name>NRF_IPCT_TASK_ACK_9</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[9] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a42cd307a18a4ac35d147e28ff143abc5" prot="public">
          <name>NRF_IPCT_TASK_ACK_10</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[10] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1aae2fd3e118d44646db00eed1868ff4f9" prot="public">
          <name>NRF_IPCT_TASK_ACK_11</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[11] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a702cee5f15926b021b3d57553047fb5a" prot="public">
          <name>NRF_IPCT_TASK_ACK_12</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[12] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a54876784865f899fbe0796e3f199ad3d" prot="public">
          <name>NRF_IPCT_TASK_ACK_13</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[13] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a8b7b61709f44ee8fa0a32bf2cb602c59" prot="public">
          <name>NRF_IPCT_TASK_ACK_14</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[14] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggac40a46cd0d60e75bf3850dc4cb6360d1a609b0b6a305a3c17a04aaa3110c5f897" prot="public">
          <name>NRF_IPCT_TASK_ACK_15</name>
          <initializer>= offsetof(NRF_IPCT_Type, TASKS_ACK[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledge the RECEIVE[15] task. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>IPCT tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="62" column="1" bodyfile="hal/nrf_ipct.h" bodystart="63" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ipct_event_t</name>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000aeda54d32c7a035ebb60c466bb761d857" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_0</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [0] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a1f81739bcf5f6f3ed4f90e9f87b23a5a" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_1</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [1] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ae96f3e6abe631bd78ab0c47389ae4032" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_2</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [2] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a78008c2e026e4163ab4a2056ea38efde" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_3</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [3] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a9fc8b880f41ef7647f583073d28d6e7f" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_4</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [4] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ac015ed947d42b9fcb35c0ceb7b16fd14" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_5</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [5] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a1a34a7e3b104ce3ef50eb666be52fdf8" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_6</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [6] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a88b47970bb910a15df0f416d5eb53c00" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_7</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [7] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a0c60c0b1007e339147f41d3f56d26823" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_8</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [8] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ac056693b97e40f1fc84691776f2d9d49" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_9</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [9] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a43885d885e93f8069dc822edf79b9842" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_10</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [10] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000abbc163de9db532fd21cd14d09ebb4ede" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_11</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [11] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a100fe48ffcf73c76503be02264648214" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_12</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [12] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a31deb7189782f8b26800f36420a0349e" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_13</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [13] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ac37f24bd7b6b5347969a75835ca341b3" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_14</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [14] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000af3964f1bbe1f20156c3750a69eac7a53" prot="public">
          <name>NRF_IPCT_EVENT_RECEIVE_15</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_RECEIVE[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive [15] event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ab5d82cfc7b4d56bc467a1a6e3fea4aa0" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_0</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[0] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000af03bccc08511a45196684ad4d039f61d" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_1</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[1] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a7f2fcf362b56b5283f4a060f9bc7b479" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_2</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[2] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ae4711468cd2d2cacbd1bad1efc15929c" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_3</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[3] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a81161343b65245265501e08de4a26733" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_4</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[4] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a1ee01f52d77cfc6cc688852d4e741fcd" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_5</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[5] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a626a3cef20da2623571f311ba8693c7a" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_6</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[6] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000aea27d6ddab8022a9f10bdb89c7520947" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_7</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[7] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a56796f21515355f6f846403f610b8c7d" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_8</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[8] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a52a22e26f02889079d405b5ec9b3433f" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_9</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[9] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a4ee410044a0faaadfc28427d40bc4059" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_10</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[10] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000aef8262901734c578212e13a91db344c1" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_11</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[11] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000ae8296b2a79ac209d9a68cd737aa7f3bc" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_12</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[12] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a3ef6bf4afd6aa7d889ca20d9676ce86a" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_13</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[13] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a1db8f52931a76561e94433b2ff56f5c7" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_14</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[14] task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga2f9ffe69621608c7d29f50328f9f7000a96369bf8239ba167b55158b4f3b2ae37" prot="public">
          <name>NRF_IPCT_EVENT_ACKED_15</name>
          <initializer>= offsetof(NRF_IPCT_Type, EVENTS_ACKED[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Acknowledged event for the SEND[15] task. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>IPCT events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="101" column="1" bodyfile="hal/nrf_ipct.h" bodystart="102" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ipct__hal_1ga1e0018bcb6728fd65fcddc5953586110" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ipct_short_mask_t</name>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a5305336b7aa57cc89ecc7e7d014bf036" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE0_ACK0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[0] and task ACK[0]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110acabbe6e1fbd02bcb1250f36f3e29b72d" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE1_ACK1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[1] and task ACK[1]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110af4f419204ea7235226d2ac9e5bc0078b" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE2_ACK2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[2] and task ACK[2]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110aaedf4e22c68d97b1661045e89f60c7bd" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE3_ACK3_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[3] and task ACK[3]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a367b0044db5d459a6e2c2d9a087fb10b" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE4_ACK4_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[4] and task ACK[4]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110abf696ff3427e6244d67e93a8eb436f96" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE5_ACK5_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[5] and task ACK[5]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a31ef9a924dd6aadc0dbb716634c66dab" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE6_ACK6_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[6] and task ACK[6]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a18a93278bb1b770a6dac08bb73ad1789" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE7_ACK7_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[7] and task ACK[7]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a0687e741a33ac4a231604a05482483e7" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE8_ACK8_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[8] and task ACK[8]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110aa5ae57350cc16f595198727ab8fed206" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE9_ACK9_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[9] and task ACK[9]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a21152298c31be624ab03c2ada57b2ef0" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE10_ACK10_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[10] and task ACK[10]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a25403909b6cde93671167f18a6d2d4d3" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE11_ACK11_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[11] and task ACK[11]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a265d28e54bb57e3b4f808d152bd2dd8c" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE12_ACK12_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[12] and task ACK[12]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110aead4f65b617adccf14b42ef75fa7d123" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE13_ACK13_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[13] and task ACK[13]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a3a661ce1e3d363645e0948dfa7c954a7" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE14_ACK14_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[14] and task ACK[14]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110a493837fcd291952fccd377c119cdd0b2" prot="public">
          <name>NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK</name>
          <initializer>= IPCT_SHORTS_RECEIVE15_ACK15_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shortcut between event RECEIVE[15] and task ACK[15]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1gga1e0018bcb6728fd65fcddc5953586110aec331c1a29d166d0712fe47480463632" prot="public">
          <name>NRF_IPCT_ALL_SHORTS_MASK</name>
          <initializer>= NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK   |
                                          NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK |
                                          NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK |
                                          NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK |
                                          NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK |
                                          NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK |
                                          NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All IPCT shortcuts. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>IPCT shortcuts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="141" column="1" bodyfile="hal/nrf_ipct.h" bodystart="142" bodyend="175"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__ipct__hal_1gaf85a80fd40eba45147c9684e981d9d75" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_ipct_int_mask_t</name>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a1f0f5c4e3b9c5c04c1ed26d0db5bd26d" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_0</name>
          <initializer>= IPCT_INTEN0_RECEIVE0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[0]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75adf2bb12965821bbac452a3a77513b6b3" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_1</name>
          <initializer>= IPCT_INTEN0_RECEIVE1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[1]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75af1b847b7c816e3af3661a552a5b5af96" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_2</name>
          <initializer>= IPCT_INTEN0_RECEIVE2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[2]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75aff6c441454c18c76b0af28100a6c6e62" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_3</name>
          <initializer>= IPCT_INTEN0_RECEIVE3_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[3]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75ab616dd5874e76921401d2bd604c6639a" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_4</name>
          <initializer>= IPCT_INTEN0_RECEIVE4_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[4]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a5a131f0992a8f207cef4e57b643a55ef" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_5</name>
          <initializer>= IPCT_INTEN0_RECEIVE5_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[5]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a96bc0e2fe0e63629b74b2a80eed725d1" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_6</name>
          <initializer>= IPCT_INTEN0_RECEIVE6_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[6]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75ae02e1855765e4641bd6dec1a7078c9ac" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_7</name>
          <initializer>= IPCT_INTEN0_RECEIVE7_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[7]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a3fca64cd32d2567222d65a7801b101b8" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_8</name>
          <initializer>= IPCT_INTEN0_RECEIVE8_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[8]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a066a60af22d58b0b6c345b78fb47b20d" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_9</name>
          <initializer>= IPCT_INTEN0_RECEIVE9_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[9]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a69a4492213db4d1132605984955b01a0" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_10</name>
          <initializer>= IPCT_INTEN0_RECEIVE10_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[10]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a1af0aaedeb53b7ee4e124012e7c0f3f2" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_11</name>
          <initializer>= IPCT_INTEN0_RECEIVE11_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[11]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a4b21ad96df0b8356003a17e2fa972ed3" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_12</name>
          <initializer>= IPCT_INTEN0_RECEIVE12_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[12]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a7cd3098de07b951d9c50c5c212c5e018" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_13</name>
          <initializer>= IPCT_INTEN0_RECEIVE13_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[13]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a146fd7dce4a5f9bb090c2aebb3e6b1dc" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_14</name>
          <initializer>= IPCT_INTEN0_RECEIVE14_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[14]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75aa31ea7c34478a97445d5f2c7d56334f5" prot="public">
          <name>NRF_IPCT_INT_RECEIVE_15</name>
          <initializer>= IPCT_INTEN0_RECEIVE15_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event RECEIVE[15]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a0ba7f3ea949f09b4c6173cb702d26f72" prot="public">
          <name>NRF_IPCT_INT_ACKED_0</name>
          <initializer>= IPCT_INTEN0_ACKED0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[0]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a9cc2ddb8c9b1b590a15739294bd0049d" prot="public">
          <name>NRF_IPCT_INT_ACKED_1</name>
          <initializer>= IPCT_INTEN0_ACKED1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[1]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a7d3e612d1c2d808a9d511262a4ae6f6e" prot="public">
          <name>NRF_IPCT_INT_ACKED_2</name>
          <initializer>= IPCT_INTEN0_ACKED2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[2]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a067222b2e4eccfb8eea5e16d4c841b6a" prot="public">
          <name>NRF_IPCT_INT_ACKED_3</name>
          <initializer>= IPCT_INTEN0_ACKED3_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[3]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75abfa2ac88482fccdd0dc60590853eee79" prot="public">
          <name>NRF_IPCT_INT_ACKED_4</name>
          <initializer>= IPCT_INTEN0_ACKED4_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[4]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a2fc7ab751ad275c41beb0ac10d695598" prot="public">
          <name>NRF_IPCT_INT_ACKED_5</name>
          <initializer>= IPCT_INTEN0_ACKED5_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[5]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75aa62230cd0c46e2ad368f2fbedc398fc9" prot="public">
          <name>NRF_IPCT_INT_ACKED_6</name>
          <initializer>= IPCT_INTEN0_ACKED6_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[6]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75af182820bacba3b11f38638b8a3da6492" prot="public">
          <name>NRF_IPCT_INT_ACKED_7</name>
          <initializer>= IPCT_INTEN0_ACKED7_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[7]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a915fb8200cf2a42b522aceb4f8fd49e0" prot="public">
          <name>NRF_IPCT_INT_ACKED_8</name>
          <initializer>= IPCT_INTEN0_ACKED8_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[8]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a1677e1bce841fd3d16c3f22d1271b0e0" prot="public">
          <name>NRF_IPCT_INT_ACKED_9</name>
          <initializer>= IPCT_INTEN0_ACKED9_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[9]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a8164f79b0f7e589a0807336bf9f621bc" prot="public">
          <name>NRF_IPCT_INT_ACKED_10</name>
          <initializer>= IPCT_INTEN0_ACKED10_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[10]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a0d58d56011f1f88f40d844a8a0906b35" prot="public">
          <name>NRF_IPCT_INT_ACKED_11</name>
          <initializer>= IPCT_INTEN0_ACKED11_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[11]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75abdd5369d4e2f59ab47f8c6b98a0cd77d" prot="public">
          <name>NRF_IPCT_INT_ACKED_12</name>
          <initializer>= IPCT_INTEN0_ACKED12_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[12]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a2d59d856c65bcfe70ac9bf85f8fab249" prot="public">
          <name>NRF_IPCT_INT_ACKED_13</name>
          <initializer>= IPCT_INTEN0_ACKED13_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[13]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a2dd2815637d91a91dd7c384b94f59c69" prot="public">
          <name>NRF_IPCT_INT_ACKED_14</name>
          <initializer>= IPCT_INTEN0_ACKED14_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[14]. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__ipct__hal_1ggaf85a80fd40eba45147c9684e981d9d75a1c3ed53073d65151d8e1cbf0768af5f8" prot="public">
          <name>NRF_IPCT_INT_ACKED_15</name>
          <initializer>= IPCT_INTEN0_ACKED15_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Interrupt for event ACKED[15]. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>IPCT interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="179" column="1" bodyfile="hal/nrf_ipct.h" bodystart="180" bodyend="215"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga474cf275caf05f9ad998d7162e68f3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_task_trigger</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_task_t task)</argsstring>
        <name>nrf_ipct_task_trigger</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for triggering the specified IPCT task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be triggered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="435" column="24" bodyfile="hal/nrf_ipct.h" bodystart="435" bodyend="438" declfile="hal/nrf_ipct.h" declline="223" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga6bb994a5a4c45c5eace3919375c3e0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ipct_task_address_get</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, nrf_ipct_task_t task)</argsstring>
        <name>nrf_ipct_task_address_get</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified IPCT task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="440" column="28" bodyfile="hal/nrf_ipct.h" bodystart="440" bodyend="444" declfile="hal/nrf_ipct.h" declline="233" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1gabd046075c20890750058c30cfeb20795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_event_clear</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_event_t event)</argsstring>
        <name>nrf_ipct_event_clear</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified IPCT event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="446" column="24" bodyfile="hal/nrf_ipct.h" bodystart="446" bodyend="449" declfile="hal/nrf_ipct.h" declline="242" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga5b0cb5f14fe1e5ba2889ee3a0fa2f021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_ipct_event_check</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, nrf_ipct_event_t event)</argsstring>
        <name>nrf_ipct_event_check</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the IPCT event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="451" column="24" bodyfile="hal/nrf_ipct.h" bodystart="451" bodyend="454" declfile="hal/nrf_ipct.h" declline="253" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1gafbfbb90a5ea2adaf498295c9f8139f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ipct_event_address_get</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, nrf_ipct_event_t event)</argsstring>
        <name>nrf_ipct_event_address_get</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified IPCT event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="456" column="28" bodyfile="hal/nrf_ipct.h" bodystart="456" bodyend="460" declfile="hal/nrf_ipct.h" declline="263" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga95df27310bfe7f1d4ec6285f263d2e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_int_enable</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_ipct_int_enable</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__ipct__hal_1gaf85a80fd40eba45147c9684e981d9d75" kindref="member">nrf_ipct_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="462" column="24" bodyfile="hal/nrf_ipct.h" bodystart="462" bodyend="496" declfile="hal/nrf_ipct.h" declline="274" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga559fb1c55ce2d077f148ef9c745442f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_int_disable</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_ipct_int_disable</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__ipct__hal_1gaf85a80fd40eba45147c9684e981d9d75" kindref="member">nrf_ipct_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="498" column="24" bodyfile="hal/nrf_ipct.h" bodystart="498" bodyend="532" declfile="hal/nrf_ipct.h" declline="286" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga141adad63e6dabf65665f05b2b755963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ipct_int_enable_check</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, uint8_t group_idx, uint32_t mask)</argsstring>
        <name>nrf_ipct_int_enable_check</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__ipct__hal_1gaf85a80fd40eba45147c9684e981d9d75" kindref="member">nrf_ipct_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="534" column="28" bodyfile="hal/nrf_ipct.h" bodystart="534" bodyend="560" declfile="hal/nrf_ipct.h" declline="300" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga08389c36f17ce86709c80f4d71a9bd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_ipct_int_pending_get</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, uint8_t group_idx)</argsstring>
        <name>nrf_ipct_int_pending_get</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group_idx</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of pending interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para>States of pending interrupt are saved as a bitmask. One set at particular position means that interrupt for event is pending.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of interrupt group to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitmask with information about pending interrupts. Use <ref refid="group__nrf__ipct__hal_1gaf85a80fd40eba45147c9684e981d9d75" kindref="member">nrf_ipct_int_mask_t</ref> values for bit masking. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="562" column="28" bodyfile="hal/nrf_ipct.h" bodystart="562" bodyend="587" declfile="hal/nrf_ipct.h" declline="316" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga7f14eaa2c8b69be6a8f0a6fe2efc6cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_subscribe_set</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_task_t task, uint8_t channel)</argsstring>
        <name>nrf_ipct_subscribe_set</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the DPPI subscribe configuration for a given IPCT task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>DPPI channel through which to subscribe events. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="589" column="24" bodyfile="hal/nrf_ipct.h" bodystart="589" bodyend="595" declfile="hal/nrf_ipct.h" declline="328" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga6af5bc708484a11816aa97d670e3cba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_subscribe_clear</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_task_t task)</argsstring>
        <name>nrf_ipct_subscribe_clear</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI subscribe configuration for a given IPCT task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="597" column="24" bodyfile="hal/nrf_ipct.h" bodystart="597" bodyend="600" declfile="hal/nrf_ipct.h" declline="339" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga47607bfb326474d925afe68fcc285074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_publish_set</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_event_t event, uint8_t channel)</argsstring>
        <name>nrf_ipct_publish_set</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Function for setting the DPPI publish configuration for a given IPCT event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>DPPI channel through which to publish the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="602" column="24" bodyfile="hal/nrf_ipct.h" bodystart="602" bodyend="608" declfile="hal/nrf_ipct.h" declline="349" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1gadf4164f6653e94891559ee0f273cad9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_publish_clear</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, nrf_ipct_event_t event)</argsstring>
        <name>nrf_ipct_publish_clear</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the DPPI publish configuration for a given IPCT event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="610" column="24" bodyfile="hal/nrf_ipct.h" bodystart="610" bodyend="613" declfile="hal/nrf_ipct.h" declline="360" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga1088c74c513105e2cd4d741604309301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_ipct_overflow_send_get</definition>
        <argsstring>(NRF_IPCT_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrf_ipct_overflow_send_get</name>
        <param>
          <type>NRF_IPCT_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting value of the task overflow status for SEND task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>SEND task index to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Task overflow has happened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Task overflow has not happened. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="615" column="24" bodyfile="hal/nrf_ipct.h" bodystart="615" bodyend="619" declfile="hal/nrf_ipct.h" declline="371" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1gad3e826c139e75fdfc1bd2de100e99065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ipct_task_t nrf_ipct_send_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_ipct_send_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting SEND task by its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the SEND task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SEND task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="621" column="35" bodyfile="hal/nrf_ipct.h" bodystart="621" bodyend="624" declfile="hal/nrf_ipct.h" declline="380" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga80fa1c02506a8d43edfcb7ed410db5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ipct__hal_1gac40a46cd0d60e75bf3850dc4cb6360d1" kindref="member">nrf_ipct_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ipct_task_t nrf_ipct_ack_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_ipct_ack_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting ACK task by its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the ACK task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ACK task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="626" column="35" bodyfile="hal/nrf_ipct.h" bodystart="626" bodyend="634" declfile="hal/nrf_ipct.h" declline="389" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1gaaa1a4483f517e85b79823b3105039917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ipct_event_t nrf_ipct_receive_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_ipct_receive_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting RECEIVE event by its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the RECEIVE event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RECEIVE event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="636" column="36" bodyfile="hal/nrf_ipct.h" bodystart="636" bodyend="639" declfile="hal/nrf_ipct.h" declline="398" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga293d0b2bfaa7f78003e73444dddf5146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__ipct__hal_1ga2f9ffe69621608c7d29f50328f9f7000" kindref="member">nrf_ipct_event_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_ipct_event_t nrf_ipct_acked_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_ipct_acked_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting ACKED event by its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the ACKED event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ACKED event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="641" column="36" bodyfile="hal/nrf_ipct.h" bodystart="641" bodyend="649" declfile="hal/nrf_ipct.h" declline="407" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga78c9a7787784a18f281cab12d247b614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_shorts_enable</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_ipct_shorts_enable</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="651" column="24" bodyfile="hal/nrf_ipct.h" bodystart="651" bodyend="654" declfile="hal/nrf_ipct.h" declline="415" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga293160f93deb85bf91433fdf91665a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_shorts_disable</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_ipct_shorts_disable</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling the specified shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="656" column="24" bodyfile="hal/nrf_ipct.h" bodystart="656" bodyend="659" declfile="hal/nrf_ipct.h" declline="423" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__ipct__hal_1ga94120f1ac825e1c04b3bf2a1448ec56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_ipct_shorts_set</definition>
        <argsstring>(NRF_IPCT_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_ipct_shorts_set</name>
        <param>
          <type>NRF_IPCT_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the configuration of IPCT shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="661" column="24" bodyfile="hal/nrf_ipct.h" bodystart="661" bodyend="664" declfile="hal/nrf_ipct.h" declline="431" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__ipct__hal_1ga1ec2c25f894ded0153fe33c35b525e6b" prot="public" static="no">
        <name>NRF_IPCT_HAS_ACK</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating presence of ACK task and ACKED event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="53" column="9" bodyfile="hal/nrf_ipct.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__ipct__hal_1gaffbf3b6bb36c98862d8ed06913792851" prot="public" static="no">
        <name>NRF_IPCT_TASKS_SEND_COUNT</name>
        <initializer>IPCT_TASKS_SEND_MaxCount</initializer>
        <briefdescription>
<para>Number of send tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_ipct.h" line="59" column="9" bodyfile="hal/nrf_ipct.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the Inter-Processor Communication Transceiver (IPCT) peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
