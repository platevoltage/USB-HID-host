<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__vpr__hal" kind="group">
    <compoundname>nrf_vpr_hal</compoundname>
    <title>VPR HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_event_t</name>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaebf1d35d66aa1cc5488d5968fb2afc53" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_0</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 0 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaf3284ad6a341ec5e9fd9ea912273bbfc" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_1</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 1 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d1c14aa197044fc074e0f72dcc9ad83" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_2</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 2 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa70e8fe05f00c5348dd2ac115eef4fc29" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_3</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 3 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa08fe110c1b3296726f1e07fd210ba0b2" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_4</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 4 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa878f611e5d084a768bf256107a3c40dd" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_5</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 5 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa5c853ebf24283874e2aff1b5833bad64" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_6</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 6 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa58d031aacd89ad06567415e3be78d5e9" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_7</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 7 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa03f0429025abd3f72620b4cc9a3f8c7f" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_8</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 8 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa67ba0a90fce97bb0b9e73f0da6b68dfc" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_9</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 9 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadc6efd887188d21d62d982e5aee58a68" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_10</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 10 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa0c20a435947814b7e12e89fc2c6f9ea" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_11</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 11 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afafd2116ad66ddd6cfc0df3e0ba44086ef" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_12</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 12 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afadde0574bf5cb8b436b0b08b4d0bf52d0" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_13</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 13 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa96a0a6df5b06885836f2f9014b65caac" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_14</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 14 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa9b27f175da1c114dd2f4c72485d58475" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_15</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 15 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afaa4cb1d80993dd549ebc625e5ed242434" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_16</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[16])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 16 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa2d7051f95f16fce21ffefee6b720432b" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_17</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[17])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 17 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7c112f67a15216b68bc53751176eaaac" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_18</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[18])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 18 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa40941e912b41798bac0d8bacbff82daf" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_19</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[19])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 19 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa4d4191c342ef8b50e7caa7760d9bfe0c" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_20</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[20])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 20 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afab5d05119370035cf64d1ae4048a90cb2" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_21</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[21])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 21 event. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1ggaefccc60dc0d11472c75c898826ea04afa7177d2356b180025a5bd607784cabdb1" prot="public">
          <name>NRF_VPR_EVENT_TRIGGERED_22</name>
          <initializer>= offsetof(NRF_VPR_Type, EVENTS_TRIGGERED[22])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 22 event. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="74" column="1" bodyfile="hal/nrf_vpr.h" bodystart="75" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_int_mask_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a29ec38ed780e085f8ff94e159c8581a3" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_0_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 0 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a27b0e08428bdbf49853ccd033e530cd9" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_1_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 1 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3acb871908d5e4238d8df3a55297dc3f96" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_2_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 2 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ab9da7ed54f5d621984a5646472b73d8a" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_3_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED3_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 3 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a649a156a79069e252f03781ee3a45eef" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_4_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED4_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 4 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7b81ccd85a12e069027dcd8b15151f81" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_5_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED5_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 5 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a1d64a2bda9db1a95136853866d3f17d3" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_6_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED6_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 6 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a932dcc79572769c9e215dd2a38f0d407" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_7_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED7_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 7 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aca61706b22d81ee2742e23d0bfeca0e0" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_8_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED8_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 8 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a981df14f82787a8a098d1b748db11522" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_9_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED9_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 9 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ade381c22b1367e26fa287a5014a4c5dd" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_10_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED10_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 10 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afe4feb13f2bc9078ddf353f030f0561e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_11_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED11_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 11 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a7bd4ee3237c948b3e9d6a7a68c40c622" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_12_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED12_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 12 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2fbe5d9390c7f65b5f6b3999c6a5a1c1" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_13_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED13_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 13 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a085bad0d6a483c5679c5ff5850f47e1d" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_14_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED14_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 14 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af0b6fc8b0c1002c66ccc0ce17eb6ae19" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_15_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED15_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 15 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3af9ab402ddac30c4effcfb2c528684e2e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_16_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED16_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 16 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a4ff53b969135a75d282f9fd5d70dacbd" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_17_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED17_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 17 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3ac015b6296424d8d12995099cec6b8f5a" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_18_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED18_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 18 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a2d413d2175ed5ba00ba1aa434148b52b" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_19_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED19_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 19 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3aa55b1cd35780881b93a0b7d76f46849e" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_20_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED20_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 20 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3afcfb846137ed5dd223d99f1b23df5f46" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_21_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED21_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 21 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga6350a68d561921ac32788547cce356a3a93131f1ca629e93631273ed3545b06cf" prot="public">
          <name>NRF_VPR_INT_TRIGGERED_22_MASK</name>
          <initializer>= VPR_INTENSET_TRIGGERED22_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triggered 22 interrupt mask. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="115" column="1" bodyfile="hal/nrf_vpr.h" bodystart="116" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_task_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6761a3b0b62e2aa411c57eea482d8df0" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_0</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[0])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 0 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a843553794eee086f6c8ce5abb1ea7407" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_1</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[1])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 1 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2b5dac9b63cab0aeb632246c2589cec2" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_2</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[2])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 2 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a9252edbf1dcfe01981578847111dce00" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_3</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[3])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 3 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a54c1a5037ff62c4e27dc868ceef6175b" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_4</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[4])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 4 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aef73fdf07668fe311d9cf3fcca3a4a89" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_5</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[5])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 5 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a35a995bc32f1ce6231cec5c0e16fe1ad" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_6</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[6])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 6 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a0d324d866cf4b0c530070560cd34437f" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_7</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[7])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 7 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a6a224a153e7a93dfd0d485549b9bfabe" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_8</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[8])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 8 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aedc3bdff5d510b46476c996fef8d2c80" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_9</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[9])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 9 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a4953fd619f4cd0c4c73a5d7d1f7bda53" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_10</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[10])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 10 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a1b409dabb36840b21402869d38178202" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_11</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[11])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 11 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381abe60a721222d3a30b24679dd38eadfba" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_12</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[12])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 12 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2ec4e1ebe69bde12eb61b70a6bc8a295" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_13</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[13])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 13 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a2abf8fc6b532460f81447febbb338788" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_14</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[14])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 14 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a5df2d2d95bab6696ca5eb9510812eb29" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_15</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[15])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 15 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a69dbb16e9e51f7b433fcd1c3edbfa6cb" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_16</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[16])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 16 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381ac6e96e85e95180b17aab11d8ab39de70" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_17</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[17])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 17 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a63e9facd5733bcbe5eaa10d31d586d75" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_18</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[18])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 18 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a714717cc943f238cb544126df03df29a" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_19</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[19])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 19 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a128181a4ab8faff94f8ba4ed073c7dc1" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_20</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[20])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 20 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381aa273e4ac4fc3062e825e079821ba8056" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_21</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[21])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 21 task. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga83abf42553e30dad0a6c8e89145a3381a847a392f4b9e0f6380188b59c0279d10" prot="public">
          <name>NRF_VPR_TASK_TRIGGER_22</name>
          <initializer>= offsetof(NRF_VPR_Type, TASKS_TRIGGER[22])</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger 22 task. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>VPR tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="156" column="1" bodyfile="hal/nrf_vpr.h" bodystart="157" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_dmcontrol_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffafe98fa08f4a6b1327d4485b1614ca7b9" prot="public">
          <name>NRF_VPR_DMCONTROL_DMACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga35190f0b82c676e4d73b3f56f2ece9ffa71646dcd2e74eb8eefc70ec886a6af2c" prot="public">
          <name>NRF_VPR_DMCONTROL_NDMRESET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Debug module active. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Debug Mode Control signals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="197" column="1" bodyfile="hal/nrf_vpr.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__vpr__hal_1ga120514d158e254bb0e94a1d683f05de6" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_vpr_dmcontrol_mask_t</name>
        <enumvalue id="group__nrf__vpr__hal_1gga120514d158e254bb0e94a1d683f05de6a7410678fe05ac178d48048e6d6e37b37" prot="public">
          <name>NRF_VPR_DMCONTROL_DMACTIVE_MASK</name>
          <initializer>= VPR_DEBUGIF_DMCONTROL_DMACTIVE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__vpr__hal_1gga120514d158e254bb0e94a1d683f05de6a0ac6af5d08248f6798d0ae292b59dcb2" prot="public">
          <name>NRF_VPR_DMCONTROL_NDMRESET_MASK</name>
          <initializer>= VPR_DEBUGIF_DMCONTROL_NDMRESET_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Debug module active mask. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Debug Mode Control signal masks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="204" column="1" bodyfile="hal/nrf_vpr.h" bodystart="205" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga907c3749057d799427e19910a19c3d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_task_trigger</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrf_vpr_task_trigger</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for triggering the specified VPR task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be triggered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="380" column="24" bodyfile="hal/nrf_vpr.h" bodystart="380" bodyend="383" declfile="hal/nrf_vpr.h" declline="216" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga01815ed892820f3ecd7f7b2581061213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_task_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_task_t task)</argsstring>
        <name>nrf_vpr_task_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified VPR task register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="385" column="28" bodyfile="hal/nrf_vpr.h" bodystart="385" bodyend="389" declfile="hal/nrf_vpr.h" declline="226" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gaa2da678a2b9a3737b0ec4b8a0f82bc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1ga83abf42553e30dad0a6c8e89145a3381" kindref="member">nrf_vpr_task_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_task_t nrf_vpr_trigger_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_vpr_trigger_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the specified VPR TRIGGER task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Task index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGER task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="391" column="34" bodyfile="hal/nrf_vpr.h" bodystart="391" bodyend="394" declfile="hal/nrf_vpr.h" declline="236" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gad961b33210d4937bd0c7075f8c25cc5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_event_clear</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_clear</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for clearing the specified VPR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="396" column="24" bodyfile="hal/nrf_vpr.h" bodystart="396" bodyend="399" declfile="hal/nrf_vpr.h" declline="244" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga978f5d9abfae2e413c84334b291b407a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_event_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for retrieving the state of the VPR event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="401" column="24" bodyfile="hal/nrf_vpr.h" bodystart="401" bodyend="404" declfile="hal/nrf_vpr.h" declline="255" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga46d1cac15ba0cb54eafc067aca7d6ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_event_address_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_event_t event)</argsstring>
        <name>nrf_vpr_event_address_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function for getting the address of the specified VPR event register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="406" column="28" bodyfile="hal/nrf_vpr.h" bodystart="406" bodyend="410" declfile="hal/nrf_vpr.h" declline="265" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga72b26e3e399d99b3fb484307a8c6c7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__vpr__hal_1gaefccc60dc0d11472c75c898826ea04af" kindref="member">nrf_vpr_event_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_vpr_event_t nrf_vpr_triggered_event_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrf_vpr_triggered_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Function for getting the specified VPR TRIGGERED event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Event index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The specified VPR TRIGGERED event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="412" column="35" bodyfile="hal/nrf_vpr.h" bodystart="412" bodyend="415" declfile="hal/nrf_vpr.h" declline="275" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga7398319240c3fe8efd7b5df8aa3b1c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_int_enable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_enable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for enabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="417" column="24" bodyfile="hal/nrf_vpr.h" bodystart="417" bodyend="420" declfile="hal/nrf_vpr.h" declline="284" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga9d4752073b984bcd01e269d426939f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_int_disable</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_disable</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for disabling specified interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="422" column="24" bodyfile="hal/nrf_vpr.h" bodystart="422" bodyend="425" declfile="hal/nrf_vpr.h" declline="293" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga438dab7243ef940d2dce027b7786a4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_int_enable_check</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_int_enable_check</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for checking if the specified interrupts are enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__vpr__hal_1ga6350a68d561921ac32788547cce356a3" kindref="member">nrf_vpr_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="427" column="28" bodyfile="hal/nrf_vpr.h" bodystart="427" bodyend="431" declfile="hal/nrf_vpr.h" declline="304" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga012a27945c573679f902f2e345fc7792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_cpurun_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, bool enable)</argsstring>
        <name>nrf_vpr_cpurun_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the state of the CPU after core reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if CPU is to be running, false if stopped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="433" column="24" bodyfile="hal/nrf_vpr.h" bodystart="433" bodyend="437" declfile="hal/nrf_vpr.h" declline="313" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga87c5af83ac3f0680747f8949cf9dfb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_cpurun_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrf_vpr_cpurun_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the state of the CPU after core reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be running after core reset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>CPU is to be stopped after core reset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="439" column="24" bodyfile="hal/nrf_vpr.h" bodystart="439" bodyend="442" declfile="hal/nrf_vpr.h" declline="324" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga274fb49feaa99361a3f996131d8beb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_initpc_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t pc)</argsstring>
        <name>nrf_vpr_initpc_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pc</declname>
        </param>
        <briefdescription>
<para>Function for setting the initial value of the program counter after CPU reset. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This address value must be 64-bit aligned.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pc</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of the program counter to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="444" column="24" bodyfile="hal/nrf_vpr.h" bodystart="444" bodyend="449" declfile="hal/nrf_vpr.h" declline="334" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga18503be618285e03dfcdbcaa8d1070be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_vpr_initpc_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg)</argsstring>
        <name>nrf_vpr_initpc_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the initial value of the program counter after CPU reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Initial value of the program counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="451" column="28" bodyfile="hal/nrf_vpr.h" bodystart="451" bodyend="454" declfile="hal/nrf_vpr.h" declline="344" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1gaba0ea17e2364214ca0a36705e094a67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_debugif_dmcontrol_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, nrf_vpr_dmcontrol_t signal, bool enable)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for setting the specified debug mode control signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if signal is to be 1, false if 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="456" column="24" bodyfile="hal/nrf_vpr.h" bodystart="456" bodyend="479" declfile="hal/nrf_vpr.h" declline="353" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga13c4059a6d45a65e9bb7d369f3755f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_vpr_debugif_dmcontrol_mask_set</definition>
        <argsstring>(NRF_VPR_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_mask_set</name>
        <param>
          <type>NRF_VPR_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting the mask of debug mode control signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of signals to be set. Use <ref refid="group__nrf__vpr__hal_1ga120514d158e254bb0e94a1d683f05de6" kindref="member">nrf_vpr_dmcontrol_mask_t</ref> values for bit masking. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="481" column="24" bodyfile="hal/nrf_vpr.h" bodystart="481" bodyend="485" declfile="hal/nrf_vpr.h" declline="364" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__vpr__hal_1ga9300eb8dd279fffc9434d6ddae7e60c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_vpr_debugif_dmcontrol_get</definition>
        <argsstring>(NRF_VPR_Type const *p_reg, nrf_vpr_dmcontrol_t signal)</argsstring>
        <name>nrf_vpr_debugif_dmcontrol_get</name>
        <param>
          <type>NRF_VPR_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__vpr__hal_1ga35190f0b82c676e4d73b3f56f2ece9ff" kindref="member">nrf_vpr_dmcontrol_t</ref></type>
          <declname>signal</declname>
        </param>
        <briefdescription>
<para>Function for getting the debug mode control signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal to be retrieved.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Signal is logical 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="487" column="24" bodyfile="hal/nrf_vpr.h" bodystart="487" bodyend="502" declfile="hal/nrf_vpr.h" declline="376" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga2cf1a86ea52ea334c7dfdc37683e3b69" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_COUNT</name>
        <initializer>VPR_EVENTS_TRIGGERED_MaxCount</initializer>
        <briefdescription>
<para>Symbol specifying maximum number of available events triggered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="51" column="9" bodyfile="hal/nrf_vpr.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1gaf3d5edb244b799223665a9d4c9abb989" prot="public" static="no">
        <name>NRF_VPR_ALL_CHANNELS_INT_MASK</name>
        <initializer>    ((uint32_t) (((1ULL &lt;&lt; <ref refid="group__nrf__vpr__hal_1ga2cf1a86ea52ea334c7dfdc37683e3b69" kindref="member">NRF_VPR_EVENTS_TRIGGERED_COUNT</ref>) - 1) \
     &lt;&lt; VPR_EVENTS_TRIGGERED_MinIndex))</initializer>
        <briefdescription>
<para>Macro for creating the interrupt bitmask for all event channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="54" column="9" bodyfile="hal/nrf_vpr.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga89809bd4ac1e84322d00528e4295b51d" prot="public" static="no">
        <name>NRF_VPR_TASK_TRIGGER_ALL_MASK</name>
        <initializer>UINT32_MAX</initializer>
        <briefdescription>
<para>Macro used as an mask to clear all triggered interrupts within CSR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="59" column="9" bodyfile="hal/nrf_vpr.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga3eb8273a1de1c8ca2e83cfcd46dc7f9a" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_MIN</name>
        <initializer>VPR_EVENTS_TRIGGERED_MinIndex</initializer>
        <briefdescription>
<para>Symbol specifying minimal index of TRIGGERED events array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="62" column="9" bodyfile="hal/nrf_vpr.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga0ff1807b2be95a18e5b0b48c0d60fddd" prot="public" static="no">
        <name>NRF_VPR_EVENTS_TRIGGERED_MAX</name>
        <initializer>VPR_EVENTS_TRIGGERED_MaxIndex</initializer>
        <briefdescription>
<para>Symbol specifying maximal index of TRIGGERED events array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="65" column="9" bodyfile="hal/nrf_vpr.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1ga3930c28a3b298d080fa13859da8100c1" prot="public" static="no">
        <name>NRF_VPR_TASKS_TRIGGER_MIN</name>
        <initializer>VPR_TASKS_TRIGGER_MinIndex</initializer>
        <briefdescription>
<para>Symbol specifying minimal index of TRIGGER tasks array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="68" column="9" bodyfile="hal/nrf_vpr.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__vpr__hal_1gadf1cc490aaaf9c25aae3b1049c4070f9" prot="public" static="no">
        <name>NRF_VPR_TASKS_TRIGGER_MAX</name>
        <initializer>VPR_TASKS_TRIGGER_MaxIndex</initializer>
        <briefdescription>
<para>Symbol specifying maximal index of TRIGGER tasks array that is implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_vpr.h" line="71" column="9" bodyfile="hal/nrf_vpr.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the VPR RISC-V CPU unit (VPR). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
