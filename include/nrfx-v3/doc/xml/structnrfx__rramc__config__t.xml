<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structnrfx__rramc__config__t" kind="struct" language="C++" prot="public">
    <compoundname>nrfx_rramc_config_t</compoundname>
    <includes local="no">nrfx_rramc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1a872691118f767e4bc968a95c537f5fdb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_rramc_config_t::mode_write</definition>
        <argsstring></argsstring>
        <name>mode_write</name>
        <qualifiedname>nrfx_rramc_config_t::mode_write</qualifiedname>
        <briefdescription>
<para>True if write mode is to be enabled, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="54" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1a893c715a542d3cf44e146591a20e6a89" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrfx_rramc_config_t::write_buff_size</definition>
        <argsstring></argsstring>
        <name>write_buff_size</name>
        <qualifiedname>nrfx_rramc_config_t::write_buff_size</qualifiedname>
        <briefdescription>
<para>Size of write buffer. If set to 0, buffering is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="55" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1ac54d75a192471d2544618d633b98971a" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t nrfx_rramc_config_t::preload_timeout</definition>
        <argsstring></argsstring>
        <name>preload_timeout</name>
        <qualifiedname>nrfx_rramc_config_t::preload_timeout</qualifiedname>
        <briefdescription>
<para>Preload value expressed in clock cycles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="56" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1af28e103a11c808c565cb93b07a89ff04" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_rramc_config_t::preload_timeout_enable</definition>
        <argsstring></argsstring>
        <name>preload_timeout_enable</name>
        <qualifiedname>nrfx_rramc_config_t::preload_timeout_enable</qualifiedname>
        <briefdescription>
<para>True if writing to RRAM is to be triggered on the next timeout, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="57" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1a2c8f606d968ba40bd109ad8d4b4aca64" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t nrfx_rramc_config_t::access_timeout</definition>
        <argsstring></argsstring>
        <name>access_timeout</name>
        <qualifiedname>nrfx_rramc_config_t::access_timeout</qualifiedname>
        <briefdescription>
<para>Access timeout used either for going into standby power mode or to remain active on wake up, expressed in clock cycles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="58" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1aaf6df91c59917b512a9153a331a20823" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nrfx_rramc_config_t::abort_on_pof</definition>
        <argsstring></argsstring>
        <name>abort_on_pof</name>
        <qualifiedname>nrfx_rramc_config_t::abort_on_pof</qualifiedname>
        <briefdescription>
<para>True if the current RRAM write operation is to be aborted on the power failure, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="59" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnrfx__rramc__config__t_1aa67be36602d5465eba84b63bad8e5b8b" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrfx_rramc_config_t::irq_priority</definition>
        <argsstring></argsstring>
        <name>irq_priority</name>
        <qualifiedname>nrfx_rramc_config_t::irq_priority</qualifiedname>
        <briefdescription>
<para>Interrupt priority. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/include/nrfx_rramc.h" line="60" column="14" bodyfile="drivers/include/nrfx_rramc.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration structure of the RRAMC driver instance. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="drivers/include/nrfx_rramc.h" line="52" column="1" bodyfile="drivers/include/nrfx_rramc.h" bodystart="53" bodyend="61"/>
    <listofallmembers>
      <member refid="structnrfx__rramc__config__t_1aaf6df91c59917b512a9153a331a20823" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>abort_on_pof</name></member>
      <member refid="structnrfx__rramc__config__t_1a2c8f606d968ba40bd109ad8d4b4aca64" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>access_timeout</name></member>
      <member refid="structnrfx__rramc__config__t_1aa67be36602d5465eba84b63bad8e5b8b" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>irq_priority</name></member>
      <member refid="structnrfx__rramc__config__t_1a872691118f767e4bc968a95c537f5fdb" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>mode_write</name></member>
      <member refid="structnrfx__rramc__config__t_1ac54d75a192471d2544618d633b98971a" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>preload_timeout</name></member>
      <member refid="structnrfx__rramc__config__t_1af28e103a11c808c565cb93b07a89ff04" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>preload_timeout_enable</name></member>
      <member refid="structnrfx__rramc__config__t_1a893c715a542d3cf44e146591a20e6a89" prot="public" virt="non-virtual"><scope>nrfx_rramc_config_t</scope><name>write_buff_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
