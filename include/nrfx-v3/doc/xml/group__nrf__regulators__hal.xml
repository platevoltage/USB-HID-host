<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__regulators__hal" kind="group">
    <compoundname>nrf_regulators_hal</compoundname>
    <title>REGULATORS HAL</title>
    <innerclass refid="structnrf__regulators__pof__config__t" prot="public">nrf_regulators_pof_config_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_vreg_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa000c6b8eee287198f0ea85f45b802f53" prot="public">
          <name>NRF_REGULATORS_VREG_MAIN</name>
          <briefdescription>
<para>Main voltage regulator (VREGMAIN). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffaa8c63545624040d9fdd7badfb351cac7" prot="public">
          <name>NRF_REGULATORS_VREG_HIGH</name>
          <briefdescription>
<para>High voltage regulator (VREGH). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa9afee227055eee567b291a14e3a4fa03" prot="public">
          <name>NRF_REGULATORS_VREG_MEDIUM</name>
          <briefdescription>
<para>Medium voltage regulator (VREGM). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga12509403fa0832a719e9d308321a26ffa1fc588a2bcde9461df5931a0bc2284be" prot="public">
          <name>NRF_REGULATORS_VREG_RADIO</name>
          <briefdescription>
<para>Radio voltage regulator (VREGRADIO). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Voltage regulators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="121" column="1" bodyfile="hal/nrf_regulators.h" bodystart="122" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga69b75c63af2ecda706462bdaec674b49" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_pof_thr_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a6d9c24f8b07a3952637871be0a1f4936" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V17</initializer>
          <briefdescription>
<para>Set threshold to 1.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad4b9f19deeccf453e7d0cc8e234b24be" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V18</initializer>
          <briefdescription>
<para>Set threshold to 1.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a03327fcb877f0ac854d94320509f905c" prot="public">
          <name>NRF_REGULATORS_POF_THR_1V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V19</initializer>
          <briefdescription>
<para>Set threshold to 1.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aeebbae00b64c4ff6a08120bf1f5f37dd" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V20</initializer>
          <briefdescription>
<para>Set threshold to 2.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a0e75d5bdab220c2009e9bb182f910aa5" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V21</initializer>
          <briefdescription>
<para>Set threshold to 2.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ad0e0b620a462d3e8472f711443e63528" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V22</initializer>
          <briefdescription>
<para>Set threshold to 2.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49adefaea9e0609fdb924d78fabd3383f6a" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V3</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V23</initializer>
          <briefdescription>
<para>Set threshold to 2.3 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a340d78004e63ee715001d959868c97ec" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V4</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V24</initializer>
          <briefdescription>
<para>Set threshold to 2.4 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aba171aea2a2ed1a1fe314c947e19eaf4" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V5</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V25</initializer>
          <briefdescription>
<para>Set threshold to 2.5 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49a4e70288c5e84eb79355c340b31e4af11" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V6</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V26</initializer>
          <briefdescription>
<para>Set threshold to 2.6 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49ac9f6ac25e7a39adc79e74ab025757bfa" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V27</initializer>
          <briefdescription>
<para>Set threshold to 2.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga69b75c63af2ecda706462bdaec674b49aef7683696453e50ab345f63682f72058" prot="public">
          <name>NRF_REGULATORS_POF_THR_2V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLD_V28</initializer>
          <briefdescription>
<para>Set threshold to 2.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>POF Comparator thresholds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="137" column="1" bodyfile="hal/nrf_regulators.h" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1gabea9e8c5dd49ed64aea6eb9dc866808b" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_pof_thr_vddh_t</name>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba995bd0536690565f946e8070a6b9fff9" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V27</initializer>
          <briefdescription>
<para>Set threshold to 2.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad4455edf06a04be3a863582914f08ac5" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V28</initializer>
          <briefdescription>
<para>Set threshold to 2.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bad3f0fa11e486300b0a56ddd4e9bcca42" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_2V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V29</initializer>
          <briefdescription>
<para>Set threshold to 2.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808baf24f69580898c6f7e2d5b5fc37b2f2fb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V30</initializer>
          <briefdescription>
<para>Set threshold to 3.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba600dad1ffd6f49c3b7119c62dade49cb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V31</initializer>
          <briefdescription>
<para>Set threshold to 3.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba041504a78682fca73db429f2baed2019" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V32</initializer>
          <briefdescription>
<para>Set threshold to 3.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bacb17efca86df00293da2f3b9c711368a" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V3</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V33</initializer>
          <briefdescription>
<para>Set threshold to 3.3 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba21b24c7df78164957972dff54ad1b57c" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V4</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V34</initializer>
          <briefdescription>
<para>Set threshold to 3.4 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba9c83fc569fdadcf860f2d7435eda8355" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V5</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V35</initializer>
          <briefdescription>
<para>Set threshold to 3.5 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2ba47d3714440cd58f6b7a748c46d67e" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V6</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V36</initializer>
          <briefdescription>
<para>Set threshold to 3.6 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba396f1b50a95ffbb5d784878189ebb0df" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V7</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V37</initializer>
          <briefdescription>
<para>Set threshold to 3.7 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba2dce423ed0b63756195e57f4e4b84465" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V8</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V38</initializer>
          <briefdescription>
<para>Set threshold to 3.8 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba0dcba4a339ba200abd6d2b97b717d7fb" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_3V9</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V39</initializer>
          <briefdescription>
<para>Set threshold to 3.9 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba616ffeb9febd708a456f052c2c796438" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V0</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V40</initializer>
          <briefdescription>
<para>Set threshold to 4.0 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808ba1d7831fb465564535a93d63e1c4fffa5" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V1</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V41</initializer>
          <briefdescription>
<para>Set threshold to 4.1 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1ggabea9e8c5dd49ed64aea6eb9dc866808bac26f8530f7fe170cce44175bbaa821a3" prot="public">
          <name>NRF_REGULATORS_POF_THR_VDDH_4V2</name>
          <initializer>= REGULATORS_POFCON_THRESHOLDVDDH_V42</initializer>
          <briefdescription>
<para>Set threshold to 4.2 V. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>POF Comparator thresholds for VDDH. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="160" column="1" bodyfile="hal/nrf_regulators.h" bodystart="161" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_elv_mode_allow_mask_t</name>
        <enumvalue id="group__nrf__regulators__hal_1ggae14716c41df2dff382a4fdf40c736e01a55a2d9b0fb1352ad9096abd153c5b846" prot="public">
          <name>NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT</name>
          <briefdescription>
<para>Reserved. For internal use only. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Components allowed to introduce ELV mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="183" column="1" bodyfile="hal/nrf_regulators.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="enum" id="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_regulators_main_status_t</name>
        <enumvalue id="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a08457f02e9b9d6a15eb21630c372e9b7" prot="public">
          <name>NRF_REGULATORS_MAIN_STATUS_NORMAL</name>
          <initializer>= REGULATORS_MAINREGSTATUS_VREGH_Inactive</initializer>
          <briefdescription>
<para>Normal voltage mode. Voltage supplied on VDD and VDDH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__regulators__hal_1gga63b72d5d532f7edef8c34b4b34609761a298e1f5c4c974bc3cd482a154a14c7f8" prot="public">
          <name>NRF_REGULATORS_MAIN_STATUS_HIGH</name>
          <initializer>= REGULATORS_MAINREGSTATUS_VREGH_Active</initializer>
          <briefdescription>
<para>High voltage mode. Voltage supplied on VDDH. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Main supply status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="205" column="1" bodyfile="hal/nrf_regulators.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__regulators__hal_1gadfca2ae4d12293d8f7d45dc78b26f462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_vreg_enable_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, nrf_regulators_vreg_t regulator, bool enable)</argsstring>
        <name>nrf_regulators_vreg_enable_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref></type>
          <declname>regulator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the specified voltage regulator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regulator</parametername>
</parameternamelist>
<parameterdescription>
<para>Regulator to be enabled or disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if specified voltage regulator is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="329" column="24" bodyfile="hal/nrf_regulators.h" bodystart="329" bodyend="378" declfile="hal/nrf_regulators.h" declline="219" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaf7ed473147b902c1bc9ff8aa5732fd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_vreg_enable_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg, nrf_regulators_vreg_t regulator)</argsstring>
        <name>nrf_regulators_vreg_enable_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__regulators__hal_1ga12509403fa0832a719e9d308321a26ff" kindref="member">nrf_regulators_vreg_t</ref></type>
          <declname>regulator</declname>
        </param>
        <briefdescription>
<para>Function for checking whether the specified voltage regulator is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regulator</parametername>
</parameternamelist>
<parameterdescription>
<para>Regulator to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified voltage regulator is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified voltage regulator is disabled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="380" column="24" bodyfile="hal/nrf_regulators.h" bodystart="380" bodyend="419" declfile="hal/nrf_regulators.h" declline="232" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gafedd3f46bd0f37b2191580b72050135d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_system_off</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg)</argsstring>
        <name>nrf_regulators_system_off</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for putting the CPU in System OFF mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function never returns.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="421" column="24" bodyfile="hal/nrf_regulators.h" bodystart="421" bodyend="431" declfile="hal/nrf_regulators.h" declline="242" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaa16a19b3635e6630874c8ccaf1e952ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE <ref refid="group__nrf__regulators__hal_1ga63b72d5d532f7edef8c34b4b34609761" kindref="member">nrf_regulators_main_status_t</ref></type>
        <definition>NRF_STATIC_INLINE nrf_regulators_main_status_t nrf_regulators_main_status_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_main_status_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for getting the main supply status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current main supply status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="435" column="30" bodyfile="hal/nrf_regulators.h" bodystart="435" bodyend="438" declfile="hal/nrf_regulators.h" declline="253" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gad5219287b8a4adf780d10c5e757f5d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_pof_config_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, nrf_regulators_pof_config_t const *p_config)</argsstring>
        <name>nrf_regulators_pof_config_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for setting the POF Comparator configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing POF Comparator configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="442" column="24" bodyfile="hal/nrf_regulators.h" bodystart="442" bodyend="459" declfile="hal/nrf_regulators.h" declline="263" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaedc19c1388499d17cd3fe6a3ac878444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_pof_config_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg, nrf_regulators_pof_config_t *p_config)</argsstring>
        <name>nrf_regulators_pof_config_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__regulators__pof__config__t" kindref="compound">nrf_regulators_pof_config_t</ref> *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for getting the POF Comparator configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with POF Comparator configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="461" column="24" bodyfile="hal/nrf_regulators.h" bodystart="461" bodyend="484" declfile="hal/nrf_regulators.h" declline="272" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1ga5c07b577fbff9768347ee2f50bed20ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_pof_below_thr_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_pof_below_thr_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking if the detected voltage is below or above the threshold of VPOF (POF Comparator&apos;s threshold voltage). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Voltage below VPOF threshold has been detected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Voltage above VPOF threshold has been detected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="488" column="24" bodyfile="hal/nrf_regulators.h" bodystart="488" bodyend="492" declfile="hal/nrf_regulators.h" declline="285" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaa3393fe07c57260a798a77899a53c346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_regulators_elv_mode_allow_set</definition>
        <argsstring>(NRF_REGULATORS_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrf_regulators_elv_mode_allow_set</name>
        <param>
          <type>NRF_REGULATORS_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Function for setting components that are allowed to introduce the ELV mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This register is retained when retention is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of components to be set, created using <ref refid="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" kindref="member">nrf_regulators_elv_mode_allow_mask_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="496" column="24" bodyfile="hal/nrf_regulators.h" bodystart="496" bodyend="501" declfile="hal/nrf_regulators.h" declline="297" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1gaff311fb33836896f7863f35d7d8ef37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_regulators_elv_mode_allow_get</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_elv_mode_allow_get</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for geting components that are allowed to introduce the ELV mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This register is retained when retention is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of components allowed to introduce ELV mode, created using <ref refid="group__nrf__regulators__hal_1gae14716c41df2dff382a4fdf40c736e01" kindref="member">nrf_regulators_elv_mode_allow_mask_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="503" column="28" bodyfile="hal/nrf_regulators.h" bodystart="503" bodyend="506" declfile="hal/nrf_regulators.h" declline="310" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__regulators__hal_1ga667f90b9aa015dbdce197f44327cd544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE bool</type>
        <definition>NRF_STATIC_INLINE bool nrf_regulators_inductor_check</definition>
        <argsstring>(NRF_REGULATORS_Type const *p_reg)</argsstring>
        <name>nrf_regulators_inductor_check</name>
        <param>
          <type>NRF_REGULATORS_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for checking whether an inductor is connected to the DCC pin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The detection can only take place if the VREG_MAIN DC/DC converter is not enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Inductor detected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Inductor not detected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="510" column="24" bodyfile="hal/nrf_regulators.h" bodystart="510" bodyend="515" declfile="hal/nrf_regulators.h" declline="324" declcolumn="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__regulators__hal_1gad6a0a2b82c399e7768ddf7f1179b309c" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_HIGH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether high voltage regulator (VREGH) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="52" column="9" bodyfile="hal/nrf_regulators.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga4ff51384b92755789fad6efce9968677" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_MEDIUM</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether medium voltage regulator (VREGM) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="59" column="9" bodyfile="hal/nrf_regulators.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga7c43f733a5c5d5e2d293aa05c5fec980" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_VREG_RADIO</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether radio regulator (VREGRADIO) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="66" column="9" bodyfile="hal/nrf_regulators.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga91904bc5eff662dd5e178719a6359b76" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether Power-On-Fail Comparator (POF Comparator) is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="73" column="9" bodyfile="hal/nrf_regulators.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga37136d4e369e40698f4848791594785b" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_VDDH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator for VDDH is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="80" column="9" bodyfile="hal/nrf_regulators.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga3c320fcaeb798af297f31ca877661eef" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_WARN_DISABLE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator can disable POFWARN event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="87" column="9" bodyfile="hal/nrf_regulators.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1gabce02432199f281e790b711ff3dbc33f" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_POF_STATUS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether POF Comparator status is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="94" column="9" bodyfile="hal/nrf_regulators.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga066833d960faa38609c673839231d630" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_TRIM</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether TRIM register is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="101" column="9" bodyfile="hal/nrf_regulators.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga279aad54938782a4b3af73054caf8586" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_MAIN_STATUS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether main supply status is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="108" column="9" bodyfile="hal/nrf_regulators.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__regulators__hal_1ga689ee50e653915bde5ce003f52cc09ae" prot="public" static="no">
        <name>NRF_REGULATORS_HAS_INDUCTOR_DET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Symbol indicating whether inductor detection is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_regulators.h" line="115" column="9" bodyfile="hal/nrf_regulators.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer for managing the REGULATORS peripheral. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
