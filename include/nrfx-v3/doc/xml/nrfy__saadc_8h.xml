<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__saadc_8h" kind="file" language="C++">
    <compoundname>nrfy_saadc.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__saadc_8h" local="no">hal/nrf_saadc.h</includes>
    <includedby refid="nrfx__saadc_8h" local="no">drivers/include/nrfx_saadc.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_saadc.h</label>
        <link refid="nrfy__saadc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__saadc__buffer__t" prot="public">nrfy_saadc_buffer_t</innerclass>
    <innerclass refid="structnrfy__saadc__config__t" prot="public">nrfy_saadc_config_t</innerclass>
    <innerclass refid="structnrfy__saadc__channel__input__t" prot="public">nrfy_saadc_channel_input_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nrfy__saadc_8h_1ace79c1e28f12ff1f40ae2237a5fe74de" prot="public" static="no">
        <type>struct <ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref></type>
        <definition>typedef struct nrfy_saadc_buffer_t nrfy_saadc_buffer_t</definition>
        <argsstring></argsstring>
        <name>nrfy_saadc_buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="44" column="34" bodyfile="haly/nrfy_saadc.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__saadc_8h_1a5fbc91d6d32336f28aaeecb7223e2ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_saadc_event_handle</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask, nrf_saadc_event_t event, uint32_t *p_event_mask)</argsstring>
        <name>__nrfy_internal_saadc_event_handle</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_event_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="619" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="619" bodyend="634" declfile="haly/nrfy_saadc.h" declline="46" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__saadc_8h_1a36d630dc33941fabe14c17e25e3881c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_saadc_events_process</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask, nrfy_saadc_buffer_t const *p_desc)</argsstring>
        <name>__nrfy_internal_saadc_events_process</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref> const *</type>
          <declname>p_desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="637" column="10" bodyfile="haly/nrfy_saadc.h" bodystart="637" bodyend="671" declfile="haly/nrfy_saadc.h" declline="52" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__saadc_8h_1ac524030f361d3da38ec9047f37178d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_saadc_event_enabled_clear</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask, nrf_saadc_event_t event)</argsstring>
        <name>__nrfy_internal_saadc_event_enabled_clear</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="673" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="673" bodyend="681" declfile="haly/nrfy_saadc.h" declline="56" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__saadc_8h_1a96b9ad7222cf12a161446eb4458654cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_saadc_buffer_latch</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, bool wait)</argsstring>
        <name>__nrfy_internal_saadc_buffer_latch</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="683" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="683" bodyend="694" declfile="haly/nrfy_saadc.h" declline="60" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__saadc_8h_1ade2338a124a86beb1e897126d5ed2020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_saadc_stop</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, bool wait)</argsstring>
        <name>__nrfy_internal_saadc_stop</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="696" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="696" bodyend="706" declfile="haly/nrfy_saadc.h" declline="62" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga90f00a1924b4ce8737c58196104b6eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_periph_configure</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrfy_saadc_config_t const *p_config)</argsstring>
        <name>nrfy_saadc_periph_configure</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__config__t" kindref="compound">nrfy_saadc_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the SAADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="98" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gad5ee2e1e1a0549cf68189b9c3f8be47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_int_init</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_saadc_int_init</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified SAADC interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="114" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="114" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga63c6136f766506287e14ea02e38b4c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_int_uninit</definition>
        <argsstring>(NRF_SAADC_Type *p_reg)</argsstring>
        <name>nrfy_saadc_int_uninit</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the SAADC interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="152" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga971efd530b96c62996b14fd6a2d7c510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_events_process</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask, nrfy_saadc_buffer_t const *p_desc)</argsstring>
        <name>nrfy_saadc_events_process</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref> const *</type>
          <declname>p_desc</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified SAADC events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing buffer associated with the last sampling. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="169" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga9af1dbf2e53fcf3833db14bfa0e414ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_channel_configure</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, nrf_saadc_channel_config_t const *p_config, nrfy_saadc_channel_input_t const *p_input)</argsstring>
        <name>nrfy_saadc_channel_configure</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structnrf__saadc__channel__config__t" kindref="compound">nrf_saadc_channel_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__channel__input__t" kindref="compound">nrfy_saadc_channel_input_t</ref> const *</type>
          <declname>p_input</declname>
        </param>
        <briefdescription>
<para>Function for configuring the specified SAADC channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the channel configuration structure. NULL if configuration is to be omitted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_input</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the channel input configuration structure. NULL if configuration is to be omitted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="188" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="188" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaef1609c3aa1c4933c02409b5f7bd230e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_buffer_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrfy_saadc_buffer_t const *p_desc, bool latch, bool wait)</argsstring>
        <name>nrfy_saadc_buffer_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref> const *</type>
          <declname>p_desc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>latch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for setting the SAADC sampling buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing sampling buffer description. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">latch</parametername>
</parameternamelist>
<parameterdescription>
<para>True if buffer is to be latched, false otherwise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if latching is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="212" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="212" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga32ee77cb930ad93cda2a5fce9d779eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_buffer_latch</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_saadc_buffer_latch</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for latching the SAADC sampling buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if latching is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="231" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga2159225033497a94bcf14a8b7c3bdde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_sample_start</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrfy_saadc_buffer_t const *p_desc)</argsstring>
        <name>nrfy_saadc_sample_start</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref> const *</type>
          <declname>p_desc</declname>
        </param>
        <briefdescription>
<para>Function for starting the SAADC sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing sampling buffer if the sampling is to be blocking. NULL for non-blocking operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="243" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="243" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaab2caa537c7cd074fd4300ace0883f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_abort</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrfy_saadc_buffer_t const *p_desc)</argsstring>
        <name>nrfy_saadc_abort</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref> const *</type>
          <declname>p_desc</declname>
        </param>
        <briefdescription>
<para>Function for aborting the ongoing SAADC sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing sampling buffer if the abort is to be blocking. NULL for non-blocking operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="266" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="266" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga8e2ecb1bdd68522e4119059f38e98a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_stop</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_saadc_stop</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for stopping the SAADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if stopping is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="285" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga60a36ceedc5f515893495a09415c3034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_calibrate</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_saadc_calibrate</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for calibrating the SAADC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if calibration is to be blocking, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="297" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="297" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga07f0505cf4dfca954724b34ab855caef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_task_trigger</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_task_t task)</argsstring>
        <name>nrfy_saadc_task_trigger</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>  Function for triggering the specified SAADC task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>SAADC task.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="312" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gad93d48ceeca27faa8e3f538e055a0e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_task_address_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg, nrf_saadc_task_t task)</argsstring>
        <name>nrfy_saadc_task_address_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga2d7ab93e620dd1357e61015e67c38419" kindref="member">nrf_saadc_task_address_get</ref>  Function for getting the address of the specified SAADC task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>SAADC task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified SAADC task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="319" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="319" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga86330c73b3dfb1848ecd5dcc2c17eb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_saadc_event_check</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg, nrf_saadc_event_t event)</argsstring>
        <name>nrfy_saadc_event_check</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga302a420e63a91a87aa5a81e3f5aebada" kindref="member">nrf_saadc_event_check</ref>  Function for retrieving the state of the SAADC event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="326" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="326" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga450a55985c66f6cb74be93f5ba6bde07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_event_clear</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_event_t event)</argsstring>
        <name>nrfy_saadc_event_clear</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>  Function for clearing the specific SAADC event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>SAADC event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="336" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaa3c3062b77e5c338bc5e03ba57f79946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_event_address_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg, nrf_saadc_event_t event)</argsstring>
        <name>nrfy_saadc_event_address_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gadeade61bf67c5bdeea1af3a3cfbfa886" kindref="member">nrf_saadc_event_address_get</ref>  Function for getting the address of the specified SAADC event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>SAADC event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified SAADC event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="343" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="343" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga167077799e6bdd47607d099b7be2236c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_subscribe_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_saadc_subscribe_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gaa129d5679cafb3c0d2a0b561c3f59f90" kindref="member">nrf_saadc_subscribe_set</ref>  Function for setting the subscribe configuration for a given SAADC task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="351" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="351" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaf8f638c03bbe35fe2344192dffbd9e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_subscribe_clear</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_task_t task)</argsstring>
        <name>nrfy_saadc_subscribe_clear</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga73ca056baa1bcd338b41180933724cbd" kindref="member">nrf_saadc_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given SAADC task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="360" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gab60237fe3dd871a8e34a4709974ae727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_publish_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_saadc_publish_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga9cc7ba9f6ead07f9a11c97a34ba813c7" kindref="member">nrf_saadc_publish_set</ref>  Function for setting the publish configuration for a given SAADC event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="367" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="367" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gae57424f4e770c5b41756fda22de258bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_publish_clear</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_event_t event)</argsstring>
        <name>nrfy_saadc_publish_clear</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gad675daf087af3c40989b5a75eb163d42" kindref="member">nrf_saadc_publish_clear</ref>  Function for clearing the publish configuration for a given SAADC event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="376" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gab197918cde0bba343ac45e11f4f7715c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_saadc_event_t nrfy_saadc_limit_event_get</definition>
        <argsstring>(uint8_t channel, nrf_saadc_limit_t limit_type)</argsstring>
        <name>nrfy_saadc_limit_event_get</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gad3a1aa4df4fa236684487f209f438a3d" kindref="member">nrf_saadc_limit_t</ref></type>
          <declname>limit_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>  Function for getting the SAADC channel monitoring limit events.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">limit_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Low limit or high limit.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SAADC channel monitoring limit event.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="384" column="38" bodyfile="haly/nrfy_saadc.h" bodystart="384" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga231a079160c1416c603bb3d198fcd931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_channel_input_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, nrf_saadc_input_t pselp, nrf_saadc_input_t pseln)</argsstring>
        <name>nrfy_saadc_channel_input_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref></type>
          <declname>pselp</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref></type>
          <declname>pseln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga4aabfc8ebe63a4e31e55188ec4fc4d9c" kindref="member">nrf_saadc_channel_input_set</ref>  Function for configuring the input pins for the specified SAADC channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselp</parametername>
</parameternamelist>
<parameterdescription>
<para>Positive input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pseln</parametername>
</parameternamelist>
<parameterdescription>
<para>Negative input. Set to <ref refid="group__nrf__saadc__hal_1gab2b904fd842250f953752e186fd7ba66" kindref="member">NRF_SAADC_INPUT_DISABLED</ref> in single ended mode.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="391" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="391" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga5b97d3dcfec3d9a0545d08c6306d9f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_channel_pos_input_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, nrf_saadc_input_t pselp)</argsstring>
        <name>nrfy_saadc_channel_pos_input_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref></type>
          <declname>pselp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga727fff4c406e29364c28ad51f4422108" kindref="member">nrf_saadc_channel_pos_input_set</ref>  Function for configuring the positive input pin for the specified SAADC channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pselp</parametername>
</parameternamelist>
<parameterdescription>
<para>Positive input.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="401" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="401" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga92ed581a2c8339c21a7da761e20bb5a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_channel_limits_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, int16_t low, int16_t high)</argsstring>
        <name>nrfy_saadc_channel_limits_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga4c26cdf7597a21a26f0656dcd0211fd1" kindref="member">nrf_saadc_channel_limits_set</ref>  Function for setting the SAADC channel monitoring limits.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>Low limit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>High limit.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="410" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="410" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gac9bf47abf3ecb5392598f35616737815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_int_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_saadc_int_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gaabd7bf41a8bcbcd011e0b4b0625ad8b2" kindref="member">nrf_saadc_int_set</ref>  Function for setting the configuration of SAADC interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts configuration to be set. Use <ref refid="group__nrf__saadc__hal_1ga82c6d9ccbed7aa753b044ae4216a52e7" kindref="member">nrf_saadc_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="420" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga9bc3906195b9c05ee110bfabd9e56236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_int_enable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_saadc_int_enable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gaa8487e94e0de1dd9fc3cb9eda33a896d" kindref="member">nrf_saadc_int_enable</ref>  Function for enabling specified SAADC interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__saadc__hal_1ga82c6d9ccbed7aa753b044ae4216a52e7" kindref="member">nrf_saadc_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="427" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga9d7ad0f2eb667d038ed8d4718192ea8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_int_enable_check</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_saadc_int_enable_check</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga3a9a24e83f68aa22fad03a04648bad51" kindref="member">nrf_saadc_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__saadc__hal_1ga82c6d9ccbed7aa753b044ae4216a52e7" kindref="member">nrf_saadc_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="434" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="434" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaad385b367facc546af195e24da9fda1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_int_disable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_saadc_int_disable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gaae53ced5f63daece6fcb751ac7ed6918" kindref="member">nrf_saadc_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__saadc__hal_1ga82c6d9ccbed7aa753b044ae4216a52e7" kindref="member">nrf_saadc_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="443" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="443" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gad9b9a585cd000d8e03c1049649af34d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_limit_int_get</definition>
        <argsstring>(uint8_t channel, nrf_saadc_limit_t limit_type)</argsstring>
        <name>nrfy_saadc_limit_int_get</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gad3a1aa4df4fa236684487f209f438a3d" kindref="member">nrf_saadc_limit_t</ref></type>
          <declname>limit_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gab80147c8bd32b89c716f66e0f44664b2" kindref="member">nrf_saadc_limit_int_get</ref>  Function for generating masks for SAADC channel limit interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>SAADC channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">limit_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Limit type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Interrupt mask.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="450" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="450" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga0dab151e22b340cf60bfd9f1751078b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_saadc_busy_check</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_busy_check</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gab25084e697b176775ed9ebf6b8b9a3fd" kindref="member">nrf_saadc_busy_check</ref>  Function for checking whether the SAADC is busy.  </para>
</simplesect>
</para>
<para>This function checks whether the analog-to-digital converter is busy with a conversion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The SAADC is busy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The SAADC is not busy.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="457" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="457" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaa8a9fd91a9dea47d2695b3780c24fbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_enable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg)</argsstring>
        <name>nrfy_saadc_enable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga5fd952bc71c0d7bfc1227570b8e74f6e" kindref="member">nrf_saadc_enable</ref>  Function for enabling the SAADC.  </para>
</simplesect>
</para>
<para>The analog-to-digital converter must be enabled before use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="466" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="466" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaacd65b22b591f9edcd7d2c500942ee0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_disable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg)</argsstring>
        <name>nrfy_saadc_disable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga44b8bee69dcb4efea99b2996eecf7956" kindref="member">nrf_saadc_disable</ref>  Function for disabling the SAADC.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="473" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="473" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gad3cdac8233aeba4e2abcddeeb752f5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_saadc_enable_check</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_enable_check</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga37805e60b6f56abe9faed4aa1e9ce61c" kindref="member">nrf_saadc_enable_check</ref>  Function for checking if the SAADC is enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The SAADC is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The SAADC is not enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="480" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="480" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gabada7aee45595d498ff8cac94bc8af0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_buffer_init</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_value_t *p_buffer, uint32_t size)</argsstring>
        <name>nrfy_saadc_buffer_init</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref> *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gac1986dcb3b95d37d79d55c0263680867" kindref="member">nrf_saadc_buffer_init</ref>  Function for initializing the SAADC result buffer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer (in 8-bit or 16-bit samples).   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="489" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="489" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaddd8155ed54d8cbf9ef8c135001c8455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_buffer_pointer_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_value_t *p_buffer)</argsstring>
        <name>nrfy_saadc_buffer_pointer_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref> *</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga1facfe7d84b1304b2bb4dc2d14111e8a" kindref="member">nrf_saadc_buffer_pointer_set</ref>  Function for setting the SAADC result buffer pointer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result buffer.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="498" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="498" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga442401aa27a3a9e38a6777102a2f274c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref> *</type>
        <definition>NRFY_STATIC_INLINE nrf_saadc_value_t * nrfy_saadc_buffer_pointer_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_buffer_pointer_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga2a76ad513d6670515127f3b97810667e" kindref="member">nrf_saadc_buffer_pointer_get</ref>  Function for getting the SAADC result buffer pointer.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the result buffer.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="506" column="39" bodyfile="haly/nrfy_saadc.h" bodystart="506" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga20c2b2d41531715b26b0a11186b32106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint16_t</type>
        <definition>NRFY_STATIC_INLINE uint16_t nrfy_saadc_amount_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_amount_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gab0c2fd3c8bd02b9ea19876ff6a856e98" kindref="member">nrf_saadc_amount_get</ref>  Function for getting the number of samples written to the result buffer since the previous START task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of 8-bit or 16-bit samples written to the buffer.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="515" column="29" bodyfile="haly/nrfy_saadc.h" bodystart="515" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga12534f678b067457060eeddf5571e007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_resolution_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_resolution_t resolution)</argsstring>
        <name>nrfy_saadc_resolution_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gae3a1f1453c20051e27cb75ce2616fe33" kindref="member">nrf_saadc_resolution_set</ref>  Function for setting the SAADC sample resolution.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit resolution.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="524" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="524" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga648fea5b7e873c4f7fd7ba10f14b8ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_saadc_resolution_t nrfy_saadc_resolution_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_resolution_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga9c6df1f0637afe78a841e59d6c0d05da" kindref="member">nrf_saadc_resolution_get</ref>  Function for getting the SAADC sample resolution.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sample resolution.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="532" column="43" bodyfile="haly/nrfy_saadc.h" bodystart="532" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gafefa724924f8a733e0f4ab3a381e51fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_oversample_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, nrf_saadc_oversample_t oversample)</argsstring>
        <name>nrfy_saadc_oversample_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref></type>
          <declname>oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga73dd0c72c90270e07a4fccbb88a7e635" kindref="member">nrf_saadc_oversample_set</ref>  Function for configuring the oversampling feature.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oversample</parametername>
</parameternamelist>
<parameterdescription>
<para>Oversampling mode.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="541" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="541" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gaff9e42fdc307453c1dec5c1070e062f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_saadc_oversample_t nrfy_saadc_oversample_get</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_oversample_get</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gae2e2bd4002cb6badb4ce4c65d630d1d5" kindref="member">nrf_saadc_oversample_get</ref>  Function for getting the oversampling feature configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Oversampling configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="549" column="43" bodyfile="haly/nrfy_saadc.h" bodystart="549" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga7db53fe10b71ca69abe3d288432b7825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_saadc_oversample_sample_count_get</definition>
        <argsstring>(nrf_saadc_oversample_t oversample)</argsstring>
        <name>nrfy_saadc_oversample_sample_count_get</name>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref></type>
          <declname>oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga2111f43b238ee2297026937fd63122ae" kindref="member">nrf_saadc_oversample_sample_count_get</ref>  Function for getting the sample count needed for one averaged result for a given oversampling configuration.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">oversample</parametername>
</parameternamelist>
<parameterdescription>
<para>Oversampling configuration.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sample count.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="559" column="10" bodyfile="haly/nrfy_saadc.h" bodystart="559" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga207acef82309c33806685c5464977438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_continuous_mode_enable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint16_t cc)</argsstring>
        <name>nrfy_saadc_continuous_mode_enable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gafe3f681a38517ddd7a7b510ff028f630" kindref="member">nrf_saadc_continuous_mode_enable</ref>  Function for enabling the continuous sampling.  </para>
</simplesect>
</para>
<para>This function configures the SAADC internal timer to automatically take new samples at a fixed sample rate. Trigger the START task to begin continuous sampling. To stop the sampling, trigger the STOP task.</para>
<para><simplesect kind="note"><para>The internal timer can only be used when a single input channel is enabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cc</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture and compare value. Sample rate is 16 MHz/cc. Valid <computeroutput>CC</computeroutput> range is from 80 to 2047.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="565" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="565" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gacd8835833f909c15e3a3a0348ef1c2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_saadc_continuous_mode_enable_check</definition>
        <argsstring>(NRF_SAADC_Type const *p_reg)</argsstring>
        <name>nrfy_saadc_continuous_mode_enable_check</name>
        <param>
          <type>NRF_SAADC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gaed86f2ee2f007709d6743c431bf9a6fe" kindref="member">nrf_saadc_continuous_mode_enable_check</ref>  Function for checking if the continuous sampling is enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The continuous sampling is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The continuous sampling is disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="572" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="572" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga0819847115c90a29a6ab4380f525de6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_continuous_mode_disable</definition>
        <argsstring>(NRF_SAADC_Type *p_reg)</argsstring>
        <name>nrfy_saadc_continuous_mode_disable</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga2d83cf54c0286dc51724f910a9155056" kindref="member">nrf_saadc_continuous_mode_disable</ref>  Function for disabling the continuous sampling.  </para>
</simplesect>
</para>
<para>New samples can still be acquired by manually triggering the SAMPLE task or by PPI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="581" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="581" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gafd09ae40a6f85bf4b967a59170171c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_channel_init</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, nrf_saadc_channel_config_t const *config)</argsstring>
        <name>nrfy_saadc_channel_init</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="structnrf__saadc__channel__config__t" kindref="compound">nrf_saadc_channel_config_t</ref> const *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga941ace352581ba7295b0f3c09a3570f1" kindref="member">nrf_saadc_channel_init</ref>  Function for initializing the SAADC channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the channel configuration structure.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="588" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="588" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga3067b72362a61f53111ce5f07d63ba63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_saadc_burst_set</definition>
        <argsstring>(NRF_SAADC_Type *p_reg, uint8_t channel, nrf_saadc_burst_t burst)</argsstring>
        <name>nrfy_saadc_burst_set</name>
        <param>
          <type>NRF_SAADC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1ga46239c9f1d0af686aa09373d68c9a61a" kindref="member">nrf_saadc_burst_t</ref></type>
          <declname>burst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga0e2c3e00c21adb8298fcf13eb618bb93" kindref="member">nrf_saadc_burst_set</ref>  Function for configuring the burst mode for the specified channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burst</parametername>
</parameternamelist>
<parameterdescription>
<para>Burst mode setting.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="597" column="25" bodyfile="haly/nrfy_saadc.h" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1gac9608e5a812b8cfc6224157d7dfa0947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE int16_t</type>
        <definition>NRFY_STATIC_INLINE int16_t nrfy_saadc_value_min_get</definition>
        <argsstring>(nrf_saadc_resolution_t resolution)</argsstring>
        <name>nrfy_saadc_value_min_get</name>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1ga428c82af7d71a2d4ac62fea00d0ec66b" kindref="member">nrf_saadc_value_min_get</ref>  Function for getting the minimum value of the conversion result.  </para>
</simplesect>
</para>
<para>The minimum value of the conversion result depends on the configured resolution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit resolution.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum value of the conversion result.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="606" column="28" bodyfile="haly/nrfy_saadc.h" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__saadc_1ga52ff66af829491665b5486e0c95cf9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE int16_t</type>
        <definition>NRFY_STATIC_INLINE int16_t nrfy_saadc_value_max_get</definition>
        <argsstring>(nrf_saadc_resolution_t resolution)</argsstring>
        <name>nrfy_saadc_value_max_get</name>
        <param>
          <type><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref></type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__saadc__hal_1gafee2b4a40ff7fdb6c5b8ade61b859878" kindref="member">nrf_saadc_value_max_get</ref>  Function for getting the maximum value of the conversion result.  </para>
</simplesect>
</para>
<para>The maximum value of the conversion result depends on the configured resolution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit resolution.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Maximum value of the conversion result.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_saadc.h" line="612" column="28" bodyfile="haly/nrfy_saadc.h" bodystart="612" bodyend="615"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_SAADC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_SAADC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_saadc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_event_handle(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_event_mask);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="52"><highlight class="normal">uint32_t<sp/>__nrfy_internal_saadc_events_process(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_event_enabled_clear(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_buffer_latch(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_stop(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_saadc<sp/>SAADC<sp/>HALY</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_saadc</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>SAADC<sp/>peripheral.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>SAADC<sp/>sampling<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structnrfy__saadc__buffer__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref><sp/>*<sp/><ref refid="structnrfy__saadc__buffer__t_1aa61655d9c4e5ef66d053fff5674cfff0" kindref="member">p_buffer</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>sampling<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t_1a7f608af8849dbeab54dcaaf194da289c" kindref="member">length</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sampling<sp/>buffer<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**<sp/>@brief<sp/>SAADC<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structnrfy__saadc__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/>resolution;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sampling<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref><sp/>oversampling;<sp/></highlight><highlight class="comment">///&lt;<sp/>Oversampling<sp/>setting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/><ref refid="structnrfy__saadc__config__t" kindref="compound">nrfy_saadc_config_t</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">/**<sp/>@brief<sp/>SAADC<sp/>channel<sp/>input<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structnrfy__saadc__channel__input__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref><sp/>input_p;<sp/></highlight><highlight class="comment">///&lt;<sp/>Positive<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref><sp/>input_n;<sp/></highlight><highlight class="comment">///&lt;<sp/>Negative<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="structnrfy__saadc__channel__input__t" kindref="compound">nrfy_saadc_channel_input_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>SAADC.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>peripheral<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga90f00a1924b4ce8737c58196104b6eb9" kindref="member">nrfy_saadc_periph_configure</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__config__t" kindref="compound">nrfy_saadc_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gae3a1f1453c20051e27cb75ce2616fe33" kindref="member">nrf_saadc_resolution_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__saadc__config__t_1aed3a5d67f4339f44b96db8d6638860c3" kindref="member">resolution</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga73dd0c72c90270e07a4fccbb88a7e635" kindref="member">nrf_saadc_oversample_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__saadc__config__t_1a1d9bbfbdd0e7818601db6fc0f8cedaec" kindref="member">oversampling</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>SAADC<sp/>interrupts.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>interrupts<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gad5ee2e1e1a0549cf68189b9c3f8be47d" kindref="member">nrfy_saadc_int_init</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a8802cfd4ef157b181acf414cff6ff409" kindref="member">NRF_SAADC_EVENT_STARTED</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a3caea189d3feb4fb51f3eeeaa31a7d51" kindref="member">NRF_SAADC_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a38a3b65b88b278c566528173ee6f3403" kindref="member">NRF_SAADC_EVENT_DONE</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1af1aea0c0901456d0e677ed29e33e918a" kindref="member">NRF_SAADC_EVENT_RESULTDONE</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1abc9496dabfb62fe70c1ab872400bf75b" kindref="member">NRF_SAADC_EVENT_CALIBRATEDONE</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1ab74a57373475fe680c97c82ac7b73938" kindref="member">NRF_SAADC_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SAADC_CH_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>(i,<sp/><ref refid="group__nrf__saadc__hal_1ggad3a1aa4df4fa236684487f209f438a3da668f96bfc2e19db0c72fd6c7ebc2a4f6" kindref="member">NRF_SAADC_LIMIT_LOW</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/>event);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>(i,<sp/><ref refid="group__nrf__saadc__hal_1ggad3a1aa4df4fa236684487f209f438a3da80f852093bfb4fd581b30f154322cc49" kindref="member">NRF_SAADC_LIMIT_HIGH</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_enabled_clear(p_reg,<sp/>mask,<sp/>event);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaa8487e94e0de1dd9fc3cb9eda33a896d" kindref="member">nrf_saadc_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>SAADC<sp/>interrupts.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga63c6136f766506287e14ea02e38b4c01" kindref="member">nrfy_saadc_int_uninit</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>SAADC<sp/>events.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>buffer<sp/>associated<sp/>with<sp/>the<sp/>last<sp/>sampling.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__saadc_1ga971efd530b96c62996b14fd6a2d7c510" kindref="member">nrfy_saadc_events_process</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_saadc_events_process(p_reg,<sp/>mask,<sp/>p_desc);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>specified<sp/>SAADC<sp/>channel.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>channel<sp/><sp/>Channel<sp/>number.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>channel<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>if<sp/>configuration<sp/>is<sp/>to<sp/>be<sp/>omitted.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_input<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>channel<sp/>input<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>if<sp/>configuration<sp/>is<sp/>to<sp/>be<sp/>omitted.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga9af1dbf2e53fcf3833db14bfa0e414ce" kindref="member">nrfy_saadc_channel_configure</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__saadc__channel__config__t" kindref="compound">nrf_saadc_channel_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__channel__input__t" kindref="compound">nrfy_saadc_channel_input_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_input)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_config)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga941ace352581ba7295b0f3c09a3570f1" kindref="member">nrf_saadc_channel_init</ref>(p_reg,<sp/>channel,<sp/>p_config);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_input)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga4aabfc8ebe63a4e31e55188ec4fc4d9c" kindref="member">nrf_saadc_channel_input_set</ref>(p_reg,<sp/>channel,<sp/>p_input-&gt;<ref refid="structnrfy__saadc__channel__input__t_1a7f49083a24415c68050181229951b4e9" kindref="member">input_p</ref>,<sp/>p_input-&gt;<ref refid="structnrfy__saadc__channel__input__t_1af516ca73459a7a2c9f827cded717d57a" kindref="member">input_n</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>SAADC<sp/>sampling<sp/>buffer.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>sampling<sp/>buffer<sp/>description.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>latch<sp/><sp/>True<sp/>if<sp/>buffer<sp/>is<sp/>to<sp/>be<sp/>latched,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/><sp/>True<sp/>if<sp/>latching<sp/>is<sp/>to<sp/>be<sp/>blocking,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaef1609c3aa1c4933c02409b5f7bd230e" kindref="member">nrfy_saadc_buffer_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latch,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gac1986dcb3b95d37d79d55c0263680867" kindref="member">nrf_saadc_buffer_init</ref>(p_reg,<sp/>p_desc-&gt;<ref refid="structnrfy__saadc__buffer__t_1aa61655d9c4e5ef66d053fff5674cfff0" kindref="member">p_buffer</ref>,<sp/>p_desc-&gt;<ref refid="structnrfy__saadc__buffer__t_1a7f608af8849dbeab54dcaaf194da289c" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latch)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_buffer_latch(p_reg,<sp/>wait);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>latching<sp/>the<sp/>SAADC<sp/>sampling<sp/>buffer.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>if<sp/>latching<sp/>is<sp/>to<sp/>be<sp/>blocking,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga32ee77cb930ad93cda2a5fce9d779eec" kindref="member">nrfy_saadc_buffer_latch</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_buffer_latch(p_reg,<sp/>wait);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>SAADC<sp/>sampling.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>sampling<sp/>buffer</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>sampling<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>operation.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga2159225033497a94bcf14a8b7c3bdde9" kindref="member">nrfy_saadc_sample_start</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ggacde3c3040c12e04f9edc2bc92c1b2276a53f835ed3f4b6e9ff24d1550ead3c941" kindref="member">NRF_SAADC_TASK_SAMPLE</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_desc)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a3caea189d3feb4fb51f3eeeaa31a7d51" kindref="member">NRF_SAADC_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_saadc_events_process(p_reg,<sp/>evt_mask,<sp/>p_desc))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a38a3b65b88b278c566528173ee6f3403" kindref="member">NRF_SAADC_EVENT_DONE</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1af1aea0c0901456d0e677ed29e33e918a" kindref="member">NRF_SAADC_EVENT_RESULTDONE</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>aborting<sp/>the<sp/>ongoing<sp/>SAADC<sp/>sampling.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>sampling<sp/>buffer</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>abort<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>operation.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaab2caa537c7cd074fd4300ace0883f65" kindref="member">nrfy_saadc_abort</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_stop(p_reg,<sp/>p_desc<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_desc)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_saadc_events_process(p_reg,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a3caea189d3feb4fb51f3eeeaa31a7d51" kindref="member">NRF_SAADC_EVENT_END</ref>),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_desc);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>stopping<sp/>the<sp/>SAADC.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>if<sp/>stopping<sp/>is<sp/>to<sp/>be<sp/>blocking,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga8e2ecb1bdd68522e4119059f38e98a4f" kindref="member">nrfy_saadc_stop</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_stop(p_reg,<sp/>wait);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>calibrating<sp/>the<sp/>SAADC.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>if<sp/>calibration<sp/>is<sp/>to<sp/>be<sp/>blocking,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga60a36ceedc5f515893495a09415c3034" kindref="member">nrfy_saadc_calibrate</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ggacde3c3040c12e04f9edc2bc92c1b2276a541cf2b16d6bd1ca797afcb691e47603" kindref="member">NRF_SAADC_TASK_CALIBRATEOFFSET</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1abc9496dabfb62fe70c1ab872400bf75b" kindref="member">NRF_SAADC_EVENT_CALIBRATEDONE</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_saadc_events_process(p_reg,<sp/>evt_mask,<sp/>NULL))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a3caea189d3feb4fb51f3eeeaa31a7d51" kindref="member">NRF_SAADC_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga07f0505cf4dfca954724b34ab855caef" kindref="member">nrfy_saadc_task_trigger</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__saadc_1gad93d48ceeca27faa8e3f538e055a0e97" kindref="member">nrfy_saadc_task_address_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1ga2d7ab93e620dd1357e61015e67c38419" kindref="member">nrf_saadc_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga86330c73b3dfb1848ecd5dcc2c17eb94" kindref="member">nrfy_saadc_event_check</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga302a420e63a91a87aa5a81e3f5aebada" kindref="member">nrf_saadc_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga450a55985c66f6cb74be93f5ba6bde07" kindref="member">nrfy_saadc_event_clear</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__saadc_1gaa3c3062b77e5c338bc5e03ba57f79946" kindref="member">nrfy_saadc_event_address_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1gadeade61bf67c5bdeea1af3a3cfbfa886" kindref="member">nrf_saadc_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga167077799e6bdd47607d099b7be2236c" kindref="member">nrfy_saadc_subscribe_set</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaa129d5679cafb3c0d2a0b561c3f59f90" kindref="member">nrf_saadc_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="359"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaf8f638c03bbe35fe2344192dffbd9e62" kindref="member">nrfy_saadc_subscribe_clear</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__saadc__hal_1gacde3c3040c12e04f9edc2bc92c1b2276" kindref="member">nrf_saadc_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga73ca056baa1bcd338b41180933724cbd" kindref="member">nrf_saadc_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gab60237fe3dd871a8e34a4709974ae727" kindref="member">nrfy_saadc_publish_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga9cc7ba9f6ead07f9a11c97a34ba813c7" kindref="member">nrf_saadc_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gae57424f4e770c5b41756fda22de258bc" kindref="member">nrfy_saadc_publish_clear</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gad675daf087af3c40989b5a75eb163d42" kindref="member">nrf_saadc_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_limit_event_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/><ref refid="group__nrfy__saadc_1gab197918cde0bba343ac45e11f4f7715c" kindref="member">nrfy_saadc_limit_event_get</ref>(uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gad3a1aa4df4fa236684487f209f438a3d" kindref="member">nrf_saadc_limit_t</ref><sp/>limit_type)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>(channel,<sp/>limit_type);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_channel_input_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga231a079160c1416c603bb3d198fcd931" kindref="member">nrfy_saadc_channel_input_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref><sp/>pselp,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref><sp/>pseln)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga4aabfc8ebe63a4e31e55188ec4fc4d9c" kindref="member">nrf_saadc_channel_input_set</ref>(p_reg,<sp/>channel,<sp/>pselp,<sp/>pseln);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_channel_pos_input_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga5b97d3dcfec3d9a0545d08c6306d9f77" kindref="member">nrfy_saadc_channel_pos_input_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga28f7a2c0a47d0a5f1254ae6a23fb71e2" kindref="member">nrf_saadc_input_t</ref><sp/>pselp)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga727fff4c406e29364c28ad51f4422108" kindref="member">nrf_saadc_channel_pos_input_set</ref>(p_reg,<sp/>channel,<sp/>pselp);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_channel_limits_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga92ed581a2c8339c21a7da761e20bb5a0" kindref="member">nrfy_saadc_channel_limits_set</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga4c26cdf7597a21a26f0656dcd0211fd1" kindref="member">nrf_saadc_channel_limits_set</ref>(p_reg,<sp/>channel,<sp/>low,<sp/>high);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_int_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gac9bf47abf3ecb5392598f35616737815" kindref="member">nrfy_saadc_int_set</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaabd7bf41a8bcbcd011e0b4b0625ad8b2" kindref="member">nrf_saadc_int_set</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="426"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga9bc3906195b9c05ee110bfabd9e56236" kindref="member">nrfy_saadc_int_enable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaa8487e94e0de1dd9fc3cb9eda33a896d" kindref="member">nrf_saadc_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="433"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__saadc_1ga9d7ad0f2eb667d038ed8d4718192ea8c" kindref="member">nrfy_saadc_int_enable_check</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga3a9a24e83f68aa22fad03a04648bad51" kindref="member">nrf_saadc_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="442"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaad385b367facc546af195e24da9fda1f" kindref="member">nrfy_saadc_int_disable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaae53ced5f63daece6fcb751ac7ed6918" kindref="member">nrf_saadc_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="449"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_limit_int_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__saadc_1gad9b9a585cd000d8e03c1049649af34d0" kindref="member">nrfy_saadc_limit_int_get</ref>(uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gad3a1aa4df4fa236684487f209f438a3d" kindref="member">nrf_saadc_limit_t</ref><sp/>limit_type)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1gab80147c8bd32b89c716f66e0f44664b2" kindref="member">nrf_saadc_limit_int_get</ref>(channel,<sp/>limit_type);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="456"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_busy_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga0dab151e22b340cf60bfd9f1751078b0" kindref="member">nrfy_saadc_busy_check</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1gab25084e697b176775ed9ebf6b8b9a3fd" kindref="member">nrf_saadc_busy_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaa8a9fd91a9dea47d2695b3780c24fbed" kindref="member">nrfy_saadc_enable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga5fd952bc71c0d7bfc1227570b8e74f6e" kindref="member">nrf_saadc_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaacd65b22b591f9edcd7d2c500942ee0d" kindref="member">nrfy_saadc_disable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga44b8bee69dcb4efea99b2996eecf7956" kindref="member">nrf_saadc_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="479"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gad3cdac8233aeba4e2abcddeeb752f5e4" kindref="member">nrfy_saadc_enable_check</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga37805e60b6f56abe9faed4aa1e9ce61c" kindref="member">nrf_saadc_enable_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_buffer_init}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gabada7aee45595d498ff8cac94bc8af0a" kindref="member">nrfy_saadc_buffer_init</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref><sp/>*<sp/>p_buffer,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gac1986dcb3b95d37d79d55c0263680867" kindref="member">nrf_saadc_buffer_init</ref>(p_reg,<sp/>p_buffer,<sp/>size);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_buffer_pointer_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gaddd8155ed54d8cbf9ef8c135001c8455" kindref="member">nrfy_saadc_buffer_pointer_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref><sp/>*<sp/>p_buffer)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga1facfe7d84b1304b2bb4dc2d14111e8a" kindref="member">nrf_saadc_buffer_pointer_set</ref>(p_reg,<sp/>p_buffer);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_buffer_pointer_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref><sp/>*<sp/><ref refid="group__nrfy__saadc_1ga442401aa27a3a9e38a6777102a2f274c" kindref="member">nrfy_saadc_buffer_pointer_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gab991b20f4e170101f92956881889b755" kindref="member">nrf_saadc_value_t</ref><sp/>*<sp/>p_buffer<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga2a76ad513d6670515127f3b97810667e" kindref="member">nrf_saadc_buffer_pointer_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_buffer;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="514"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group__nrfy__saadc_1ga20c2b2d41531715b26b0a11186b32106" kindref="member">nrfy_saadc_amount_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>amount<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1gab0c2fd3c8bd02b9ea19876ff6a856e98" kindref="member">nrf_saadc_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="523"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_resolution_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga12534f678b067457060eeddf5571e007" kindref="member">nrfy_saadc_resolution_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/>resolution)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gae3a1f1453c20051e27cb75ce2616fe33" kindref="member">nrf_saadc_resolution_set</ref>(p_reg,<sp/>resolution);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_resolution_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/><ref refid="group__nrfy__saadc_1ga648fea5b7e873c4f7fd7ba10f14b8ca5" kindref="member">nrfy_saadc_resolution_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/>resolution<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga9c6df1f0637afe78a841e59d6c0d05da" kindref="member">nrf_saadc_resolution_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolution;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="540"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_oversample_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gafefa724924f8a733e0f4ab3a381e51fc" kindref="member">nrfy_saadc_oversample_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref><sp/>oversample)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga73dd0c72c90270e07a4fccbb88a7e635" kindref="member">nrf_saadc_oversample_set</ref>(p_reg,<sp/>oversample);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_oversample_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref><sp/><ref refid="group__nrfy__saadc_1gaff9e42fdc307453c1dec5c1070e062f3" kindref="member">nrfy_saadc_oversample_get</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref><sp/>oversample<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1gae2e2bd4002cb6badb4ce4c65d630d1d5" kindref="member">nrf_saadc_oversample_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oversample;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="557"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_oversample_sample_count_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="559"><highlight class="normal">uint32_t<sp/><ref refid="group__nrfy__saadc_1ga7db53fe10b71ca69abe3d288432b7825" kindref="member">nrfy_saadc_oversample_sample_count_get</ref>(<ref refid="group__nrf__saadc__hal_1ga62ca4cd30bcc0c4a306135c957f7ed39" kindref="member">nrf_saadc_oversample_t</ref><sp/>oversample)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1ga2111f43b238ee2297026937fd63122ae" kindref="member">nrf_saadc_oversample_sample_count_get</ref>(oversample);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_continuous_mode_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga207acef82309c33806685c5464977438" kindref="member">nrfy_saadc_continuous_mode_enable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/>uint16_t<sp/>cc)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafe3f681a38517ddd7a7b510ff028f630" kindref="member">nrf_saadc_continuous_mode_enable</ref>(p_reg,<sp/>cc);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="571"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_continuous_mode_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gacd8835833f909c15e3a3a0348ef1c2d1" kindref="member">nrfy_saadc_continuous_mode_enable_check</ref>(NRF_SAADC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__saadc__hal_1gaed86f2ee2f007709d6743c431bf9a6fe" kindref="member">nrf_saadc_continuous_mode_enable_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="580"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_continuous_mode_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga0819847115c90a29a6ab4380f525de6a" kindref="member">nrfy_saadc_continuous_mode_disable</ref>(NRF_SAADC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga2d83cf54c0286dc51724f910a9155056" kindref="member">nrf_saadc_continuous_mode_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_channel_init}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1gafd09ae40a6f85bf4b967a59170171c5b" kindref="member">nrfy_saadc_channel_init</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__saadc__channel__config__t" kindref="compound">nrf_saadc_channel_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>config)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga941ace352581ba7295b0f3c09a3570f1" kindref="member">nrf_saadc_channel_init</ref>(p_reg,<sp/>channel,<sp/>config);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_burst_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__saadc_1ga3067b72362a61f53111ce5f07d63ba63" kindref="member">nrfy_saadc_burst_set</ref>(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga46239c9f1d0af686aa09373d68c9a61a" kindref="member">nrf_saadc_burst_t</ref><sp/>burst)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga0e2c3e00c21adb8298fcf13eb618bb93" kindref="member">nrf_saadc_burst_set</ref>(p_reg,<sp/>channel,<sp/>burst);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_value_min_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">NRFY_STATIC_INLINE<sp/>int16_t<sp/><ref refid="group__nrfy__saadc_1gac9608e5a812b8cfc6224157d7dfa0947" kindref="member">nrfy_saadc_value_min_get</ref>(<ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/>resolution)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1ga428c82af7d71a2d4ac62fea00d0ec66b" kindref="member">nrf_saadc_value_min_get</ref>(resolution);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment">/**<sp/>@refhal{nrf_saadc_value_max_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">NRFY_STATIC_INLINE<sp/>int16_t<sp/><ref refid="group__nrfy__saadc_1ga52ff66af829491665b5486e0c95cf9fa" kindref="member">nrfy_saadc_value_max_get</ref>(<ref refid="group__nrf__saadc__hal_1gaeb0690ef4bdb8ec1cfac1f6c6a496630" kindref="member">nrf_saadc_resolution_t</ref><sp/>resolution)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__saadc__hal_1gafee2b4a40ff7fdb6c5b8ade61b859878" kindref="member">nrf_saadc_value_max_get</ref>(resolution);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="617"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_event_handle(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_event_mask)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__saadc__hal_1ga302a420e63a91a87aa5a81e3f5aebada" kindref="member">nrf_saadc_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_event_mask)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_event_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="637"><highlight class="normal">uint32_t<sp/>__nrfy_internal_saadc_events_process(NRF_SAADC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__saadc__buffer__t" kindref="compound">nrfy_saadc_buffer_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_desc)</highlight></codeline>
<codeline lineno="640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a8802cfd4ef157b181acf414cff6ff409" kindref="member">NRF_SAADC_EVENT_STARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop<sp/>=<sp/>__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1ab74a57373475fe680c97c82ac7b73938" kindref="member">NRF_SAADC_EVENT_STOPPED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a3caea189d3feb4fb51f3eeeaa31a7d51" kindref="member">NRF_SAADC_EVENT_END</ref>,<sp/>&amp;evt_mask)<sp/>&amp;&amp;<sp/>p_desc)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>stop<sp/>?<sp/><ref refid="group__nrf__saadc__hal_1gab0c2fd3c8bd02b9ea19876ff6a856e98" kindref="member">nrf_saadc_amount_get</ref>(p_reg)<sp/>:<sp/>p_desc-&gt;length;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_desc-&gt;<ref refid="structnrfy__saadc__buffer__t_1aa61655d9c4e5ef66d053fff5674cfff0" kindref="member">p_buffer</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a38a3b65b88b278c566528173ee6f3403" kindref="member">NRF_SAADC_EVENT_DONE</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1af1aea0c0901456d0e677ed29e33e918a" kindref="member">NRF_SAADC_EVENT_RESULTDONE</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1abc9496dabfb62fe70c1ab872400bf75b" kindref="member">NRF_SAADC_EVENT_CALIBRATEDONE</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrf__saadc__hal_1gac20d814557511379d047a7fae9f50286" kindref="member">NRF_SAADC_ALL_CHANNELS_LIMITS_INT_MASK</ref>)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SAADC_CH_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>(i,<sp/><ref refid="group__nrf__saadc__hal_1ggad3a1aa4df4fa236684487f209f438a3da668f96bfc2e19db0c72fd6c7ebc2a4f6" kindref="member">NRF_SAADC_LIMIT_LOW</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/>event,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__nrf__saadc__hal_1ga55a1e59db07bbcee1c6a0ae2f6c9bea1" kindref="member">nrf_saadc_limit_event_get</ref>(i,<sp/><ref refid="group__nrf__saadc__hal_1ggad3a1aa4df4fa236684487f209f438a3da80f852093bfb4fd581b30f154322cc49" kindref="member">NRF_SAADC_LIMIT_HIGH</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_saadc_event_handle(p_reg,<sp/>mask,<sp/>event,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_event_enabled_clear(NRF_SAADC_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1ga54a401b89bf604a64fce520429bbbdd1" kindref="member">nrf_saadc_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafd8a1fe786b649956ebbcc6a905a7054" kindref="member">nrf_saadc_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_buffer_latch(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ggacde3c3040c12e04f9edc2bc92c1b2276a7900b2c3694c7cc4da64f5de28da8b9b" kindref="member">NRF_SAADC_TASK_START</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1a8802cfd4ef157b181acf414cff6ff409" kindref="member">NRF_SAADC_EVENT_STARTED</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_saadc_events_process(p_reg,<sp/>evt_mask,<sp/>NULL))</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_saadc_stop(NRF_SAADC_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__saadc__hal_1gafaffd78a579b5fb3aa119c140d4271d3" kindref="member">nrf_saadc_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__saadc__hal_1ggacde3c3040c12e04f9edc2bc92c1b2276a268763796f741cda6eea1a51f348b204" kindref="member">NRF_SAADC_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__saadc__hal_1gga54a401b89bf604a64fce520429bbbdd1ab74a57373475fe680c97c82ac7b73938" kindref="member">NRF_SAADC_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_saadc_events_process(p_reg,<sp/>evt_mask,<sp/>NULL))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_SAADC_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_saadc.h"/>
  </compounddef>
</doxygen>
