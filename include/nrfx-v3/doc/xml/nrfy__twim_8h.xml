<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__twim_8h" kind="file" language="C++">
    <compoundname>nrfy_twim.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__twim_8h" local="no">hal/nrf_twim.h</includes>
    <includedby refid="nrfx__twim_8h" local="no">drivers/include/nrfx_twim.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_twim.h</label>
        <link refid="nrfy__twim_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__twim__pins__t" prot="public">nrfy_twim_pins_t</innerclass>
    <innerclass refid="structnrfy__twim__config__t" prot="public">nrfy_twim_config_t</innerclass>
    <innerclass refid="structnrfy__twim__xfer__desc__t" prot="public">nrfy_twim_xfer_desc_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__twim_1ga0095fd8451f02f13e9f6aba20e1ba438" prot="public" static="no">
        <name>NRFY_TWIM_HAS_ARRAY_LIST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga2819d1e2c146013c30fb943d92387043" kindref="member">NRF_TWIM_HAS_ARRAY_LIST</ref>  Symbol indicating whether EasyDMA array list feature is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="69" column="9" bodyfile="haly/nrfy_twim.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nrfy__twim_8h_1ac0c01df2b96a407dd1fd4fdea01a2ef1" prot="public" static="no">
        <type>struct <ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref></type>
        <definition>typedef struct nrfy_twim_xfer_desc_t nrfy_twim_xfer_desc_t</definition>
        <argsstring></argsstring>
        <name>nrfy_twim_xfer_desc_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="44" column="36" bodyfile="haly/nrfy_twim.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__twim_8h_1a902678bad921b8e49b691cb462483666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_twim_event_enabled_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask, nrf_twim_event_t event)</argsstring>
        <name>__nrfy_internal_twim_event_enabled_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="666" column="25" bodyfile="haly/nrfy_twim.h" bodystart="666" bodyend="674" declfile="haly/nrfy_twim.h" declline="46" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__twim_8h_1a8ae0d3b300581e51aea494d9dec7bc9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_twim_event_handle</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask, nrf_twim_event_t event, uint32_t *p_evt_mask)</argsstring>
        <name>__nrfy_internal_twim_event_handle</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_evt_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="676" column="25" bodyfile="haly/nrfy_twim.h" bodystart="676" bodyend="691" declfile="haly/nrfy_twim.h" declline="50" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__twim_8h_1ad7e91078c02b2c4e5af643cbff4e0d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_twim_events_process</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>__nrfy_internal_twim_events_process</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="694" column="10" bodyfile="haly/nrfy_twim.h" bodystart="694" bodyend="719" declfile="haly/nrfy_twim.h" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gabf436c1e831be0d904aa9b9eb1d0156c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_periph_configure</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_config_t const *p_config)</argsstring>
        <name>nrfy_twim_periph_configure</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__config__t" kindref="compound">nrfy_twim_config_t</ref> const *</type>
          <declname>p_config</declname>
        </param>
        <briefdescription>
<para>Function for configuring the TWIM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the peripheral configuration structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="110" column="25" bodyfile="haly/nrfy_twim.h" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga677cb800150c78600f26bbf9ea4f1a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_int_init</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_twim_int_init</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified TWIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if interrupts associated with the event mask are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="129" column="25" bodyfile="haly/nrfy_twim.h" bodystart="129" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gae0f4d9761ef72b0702ba3ad5b3bf7e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_int_uninit</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_int_uninit</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the TWIM interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="157" column="25" bodyfile="haly/nrfy_twim.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gac1c5157a0850d4c352797ccd4ff1e6c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_events_process</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_events_process</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified TWIM events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing buffer associated with the last reception. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="174" column="29" bodyfile="haly/nrfy_twim.h" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaa29f44b52c8acd2981f68c23e0e2673c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_tx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_tx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for setting the TWIM transaction buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing transaction buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="189" column="25" bodyfile="haly/nrfy_twim.h" bodystart="189" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga3cc3e5eee9ac2e500379f95ab066ad53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_rx_buffer_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_rx_buffer_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for setting the TWIM reception buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing reception buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="206" column="25" bodyfile="haly/nrfy_twim.h" bodystart="206" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga4bbd97aea02cb2ab44473a72f2d21047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_tx_start</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_tx_start</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for starting TWIM transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing transaction buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="219" column="25" bodyfile="haly/nrfy_twim.h" bodystart="219" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga284ac594719604471c09686d35407851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_rx_start</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_rx_start</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for starting TWIM reception. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing reception buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="292" column="25" bodyfile="haly/nrfy_twim.h" bodystart="292" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaf2f04786219e71a3f907248961d69f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_abort</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_xfer_desc_t const *p_xfer)</argsstring>
        <name>nrfy_twim_abort</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref> const *</type>
          <declname>p_xfer</declname>
        </param>
        <briefdescription>
<para>Function for aborting the ongoing TWIM transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure containing reception buffer if the abort is to be blocking. NULL for non-blocking operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="330" column="25" bodyfile="haly/nrfy_twim.h" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga94db4abadd3418244075c353169e08f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_pins_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrfy_twim_pins_t *p_pins)</argsstring>
        <name>nrfy_twim_pins_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref> *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for getting TWIM pins configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with TWIM pins configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="349" column="25" bodyfile="haly/nrfy_twim.h" bodystart="349" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga0f272cfe2144f1570933e35721774b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_stop</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_stop</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for disabling TWIM with all interrupts and shortcuts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="363" column="25" bodyfile="haly/nrfy_twim.h" bodystart="363" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gac3186ef7036b795f9ef7f46d68326375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_tx_list_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_twim_tx_list_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the TX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if TX list feature is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="378" column="25" bodyfile="haly/nrfy_twim.h" bodystart="378" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga1e52f5f3fa98a81c56f56045361b36a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_rx_list_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, bool enable)</argsstring>
        <name>nrfy_twim_rx_list_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling the RX list feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if RX list feature is to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="397" column="25" bodyfile="haly/nrfy_twim.h" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaf639074f093d9e8a9a26369d0647171e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_pins_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrfy_twim_pins_t const *p_pins)</argsstring>
        <name>nrfy_twim_pins_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref> const *</type>
          <declname>p_pins</declname>
        </param>
        <briefdescription>
<para>Function for setting the TWIM pins configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_pins</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the TWIM pin configurartion structure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="417" column="25" bodyfile="haly/nrfy_twim.h" bodystart="417" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga125f1d2f562076d9b7224eab55e940c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_task_trigger</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrfy_twim_task_trigger</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>  Function for activating the specified TWIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="425" column="25" bodyfile="haly/nrfy_twim.h" bodystart="425" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga2caa86fdabd303aa90108ed3682a2b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_task_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrfy_twim_task_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" kindref="member">nrf_twim_task_address_get</ref>  Function for getting the address of the specified TWIM task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="433" column="29" bodyfile="haly/nrfy_twim.h" bodystart="433" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga88c56ad32c517ad9ac35fcb25422aff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_event_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrfy_twim_event_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>  Function for clearing the specified TWIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="440" column="25" bodyfile="haly/nrfy_twim.h" bodystart="440" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaec278f3c36717c37f5a37e315487bda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_twim_event_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrfy_twim_event_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" kindref="member">nrf_twim_event_check</ref>  Function for retrieving the state of the TWIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="448" column="25" bodyfile="haly/nrfy_twim.h" bodystart="448" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga9df5d8927f90601aea02838c69ce63e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_event_address_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrfy_twim_event_address_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" kindref="member">nrf_twim_event_address_get</ref>  Function for getting the address of the specified TWIM event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="458" column="29" bodyfile="haly/nrfy_twim.h" bodystart="458" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga5759658c0d25d600aecb582e15231281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_shorts_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_shorts_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" kindref="member">nrf_twim_shorts_enable</ref>  Function for enabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="465" column="25" bodyfile="haly/nrfy_twim.h" bodystart="465" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga900b6bf6d9fb39a043b1c362a3456d0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_shorts_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_shorts_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" kindref="member">nrf_twim_shorts_disable</ref>  Function for disabling the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be disabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="473" column="25" bodyfile="haly/nrfy_twim.h" bodystart="473" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga9ac982bd873da7b6ca5255edcaa87a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_int_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_int_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" kindref="member">nrf_twim_int_enable</ref>  Function for enabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="481" column="25" bodyfile="haly/nrfy_twim.h" bodystart="481" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga817b9cfc270a80e39249e93e0b399768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_int_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_int_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" kindref="member">nrf_twim_int_disable</ref>  Function for disabling the specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="489" column="25" bodyfile="haly/nrfy_twim.h" bodystart="489" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga60929bda30ae4a9d36faa0854768e75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_int_enable_check</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_int_enable_check</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" kindref="member">nrf_twim_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__twim__hal_1ga0e8202cfd7b4b4bf1986e76f5686e5ac" kindref="member">nrf_twim_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="497" column="29" bodyfile="haly/nrfy_twim.h" bodystart="497" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaa3d67a13e243f592bcf38dd5afba1c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_subscribe_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_twim_subscribe_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" kindref="member">nrf_twim_subscribe_set</ref>  Function for setting the subscribe configuration for a given TWIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="507" column="25" bodyfile="haly/nrfy_twim.h" bodystart="507" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga84afc71f14da5dc751611e0a0f47436e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_subscribe_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_task_t task)</argsstring>
        <name>nrfy_twim_subscribe_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" kindref="member">nrf_twim_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given TWIM task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="516" column="25" bodyfile="haly/nrfy_twim.h" bodystart="516" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga8007e08c493b7a5fc81f586f29dceae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_publish_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_twim_publish_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" kindref="member">nrf_twim_publish_set</ref>  Function for setting the publish configuration for a given TWIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="525" column="25" bodyfile="haly/nrfy_twim.h" bodystart="525" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga56ebd43e6f7e8f08ac214c72b7fce533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_publish_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_event_t event)</argsstring>
        <name>nrfy_twim_publish_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" kindref="member">nrf_twim_publish_clear</ref>  Function for clearing the publish configuration for a given TWIM event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="534" column="25" bodyfile="haly/nrfy_twim.h" bodystart="534" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga5d1ed4f85caca496065f4cf9285c17d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" kindref="member">nrf_twim_enable</ref>  Function for enabling the TWIM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="543" column="25" bodyfile="haly/nrfy_twim.h" bodystart="543" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga6f4fe8fdd94a8e1088502b25e9f9912c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" kindref="member">nrf_twim_disable</ref>  Function for disabling the TWIM peripheral.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="550" column="25" bodyfile="haly/nrfy_twim.h" bodystart="550" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga82db985fb56bd734e38dd419f54ebb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_scl_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrfy_twim_scl_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" kindref="member">nrf_twim_scl_pin_get</ref>  Function for retrieving the SCL pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SCL pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="557" column="29" bodyfile="haly/nrfy_twim.h" bodystart="557" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga7d0eb86ed17109d69a1f9246ab13f724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_sda_pin_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrfy_twim_sda_pin_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" kindref="member">nrf_twim_sda_pin_get</ref>  Function for retrieving the SDA pin selection.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDA pin selection.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="566" column="29" bodyfile="haly/nrfy_twim.h" bodystart="566" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga36504236043d92c63bbce99eea5cd6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_frequency_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, nrf_twim_frequency_t frequency)</argsstring>
        <name>nrfy_twim_frequency_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" kindref="member">nrf_twim_frequency_set</ref>  Function for setting the TWI master clock frequency.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>TWI frequency.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="575" column="25" bodyfile="haly/nrfy_twim.h" bodystart="575" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga268b3699f8e43b5b7c09426c79072016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_errorsrc_get_and_clear</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_errorsrc_get_and_clear</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" kindref="member">nrf_twim_errorsrc_get_and_clear</ref>  Function for checking the TWI error source.  </para>
</simplesect>
</para>
<para>The error flags are cleared after reading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask with error source flags.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="583" column="29" bodyfile="haly/nrfy_twim.h" bodystart="583" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga9cb8ba98bd633b789ee9db23abe37d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_address_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint8_t address)</argsstring>
        <name>nrfy_twim_address_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" kindref="member">nrf_twim_address_set</ref>  Function for setting the address to be used in TWI transfers.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to be used in transfers.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="592" column="25" bodyfile="haly/nrfy_twim.h" bodystart="592" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga0333e82b3c0ed32575092f202297f7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_shorts_set</definition>
        <argsstring>(NRF_TWIM_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_twim_shorts_set</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" kindref="member">nrf_twim_shorts_set</ref>  Function for setting the specified shortcuts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Shortcuts to be set.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="600" column="25" bodyfile="haly/nrfy_twim.h" bodystart="600" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaceaf3cede0d44a0f96ef6b02ec2397e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_twim_shorts_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrfy_twim_shorts_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" kindref="member">nrf_twim_shorts_get</ref>  Function for getting the shortcut setting.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current shortcut configuration.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="608" column="29" bodyfile="haly/nrfy_twim.h" bodystart="608" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga434a4e298cc91c4915723cdbb5ea3a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE size_t</type>
        <definition>NRFY_STATIC_INLINE size_t nrfy_twim_txd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrfy_twim_txd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" kindref="member">nrf_twim_txd_amount_get</ref>  Function for getting the amount of transmitted bytes.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of transmitted bytes.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="617" column="27" bodyfile="haly/nrfy_twim.h" bodystart="617" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga1eca0421aa569604bbddfdd90e766f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE size_t</type>
        <definition>NRFY_STATIC_INLINE size_t nrfy_twim_rxd_amount_get</definition>
        <argsstring>(NRF_TWIM_Type const *p_reg)</argsstring>
        <name>nrfy_twim_rxd_amount_get</name>
        <param>
          <type>NRF_TWIM_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" kindref="member">nrf_twim_rxd_amount_get</ref>  Function for getting the amount of received bytes in the last transaction.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>In case of NACK error, includes the NACK&apos;ed byte. </para>
</simplesect>
<simplesect kind="note"><para>Number of bytes are updated after the END event and each MATCH event.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amount of received bytes.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="626" column="27" bodyfile="haly/nrfy_twim.h" bodystart="626" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gae7df95b111f5dbd2b791b5647672537b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_tx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_tx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" kindref="member">nrf_twim_tx_list_enable</ref>  Function for enabling the TX list feature.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="636" column="25" bodyfile="haly/nrfy_twim.h" bodystart="636" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga72d8023437261d8cc5f360673f1d4dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_tx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_tx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" kindref="member">nrf_twim_tx_list_disable</ref>  Function for disabling the TX list feature.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="643" column="25" bodyfile="haly/nrfy_twim.h" bodystart="643" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1ga5258b7b91452ed488c920119f751e768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_rx_list_enable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_rx_list_enable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" kindref="member">nrf_twim_rx_list_enable</ref>  Function for enabling the RX list feature.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="650" column="25" bodyfile="haly/nrfy_twim.h" bodystart="650" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__twim_1gaa8e74d426269a23e9bfa99f50bc98637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_twim_rx_list_disable</definition>
        <argsstring>(NRF_TWIM_Type *p_reg)</argsstring>
        <name>nrfy_twim_rx_list_disable</name>
        <param>
          <type>NRF_TWIM_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" kindref="member">nrf_twim_rx_list_disable</ref>  Function for disabling the RX list feature.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_twim.h" line="657" column="25" bodyfile="haly/nrfy_twim.h" bodystart="657" bodyend="661"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_twim.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_twim_event_enabled_clear(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_twim_event_handle(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="56"><highlight class="normal">uint32_t<sp/>__nrfy_internal_twim_events_process(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_twim<sp/>TWIM<sp/>HALY</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_twim</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>TWIM<sp/>peripheral.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_TWIM_HAS_ARRAY_LIST<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">/**<sp/>@refhal{NRF_TWIM_HAS_ARRAY_LIST}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_TWIM_HAS_ARRAY_LIST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_TWIM_HAS_ARRAY_LIST<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>pins<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structnrfy__twim__pins__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>scl_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>SCL<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sda_pin;<sp/></highlight><highlight class="comment">///&lt;<sp/>SDA<sp/>pin<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">/**<sp/>@brief<sp/>TWIM<sp/>configuration<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structnrfy__twim__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref><sp/><sp/><sp/><sp/><sp/>pins;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TWIM<sp/>pins<sp/>configuation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref><sp/>frequency;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>TWIM<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_psel_cfg;<sp/></highlight><highlight class="comment">///&lt;<sp/>Skip<sp/>pin<sp/>selection<sp/>configuration.</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>the<sp/>driver<sp/>does<sp/>not<sp/>modify</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>pin<sp/>select<sp/>registers<sp/>in<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Those<sp/>registers<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>set<sp/>up</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>externally<sp/>before<sp/>the<sp/>driver<sp/>is<sp/>initialized.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>@note<sp/>When<sp/>both<sp/>GPIO<sp/>configuration<sp/>and<sp/>pin</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>selection<sp/>are<sp/>to<sp/>be<sp/>skipped,<sp/>the<sp/>structure</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>fields<sp/>that<sp/>specify<sp/>pins<sp/>can<sp/>be<sp/>omitted,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>as<sp/>they<sp/>are<sp/>ignored<sp/>anyway.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><ref refid="structnrfy__twim__config__t" kindref="compound">nrfy_twim_config_t</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>a<sp/>TWIM<sp/>transfer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structnrfy__twim__xfer__desc__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>transferred<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Number<sp/>of<sp/>bytes<sp/>transferred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>configuring<sp/>the<sp/>TWIM.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_config<sp/>Pointer<sp/>to<sp/>the<sp/>peripheral<sp/>configuration<sp/>structure.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gabf436c1e831be0d904aa9b9eb1d0156c" kindref="member">nrfy_twim_periph_configure</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__config__t" kindref="compound">nrfy_twim_config_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_config)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_config-&gt;<ref refid="structnrfy__twim__config__t_1ac199797f1184acc4d5f2ff3efed55254" kindref="member">skip_psel_cfg</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" kindref="member">nrf_twim_pins_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__twim__config__t_1a92f1763287afa6cd1e4a31acac070362" kindref="member">pins</ref>.<ref refid="structnrfy__twim__pins__t_1a7d84ccea46964232517a6a1f1b5bec49" kindref="member">scl_pin</ref>,<sp/>p_config-&gt;<ref refid="structnrfy__twim__config__t_1a92f1763287afa6cd1e4a31acac070362" kindref="member">pins</ref>.<ref refid="structnrfy__twim__pins__t_1a752a35390b3dc292ef09d532a842b8ae" kindref="member">sda_pin</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" kindref="member">nrf_twim_frequency_set</ref>(p_reg,<sp/>p_config-&gt;<ref refid="structnrfy__twim__config__t_1aa189a6644bda210c881736d46a863dec" kindref="member">frequency</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>TWIM<sp/>interrupts.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>interrupts<sp/>associated<sp/>with<sp/>the<sp/>event<sp/>mask<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga677cb800150c78600f26bbf9ea4f1a78" kindref="member">nrfy_twim_int_init</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" kindref="member">NRF_TWIM_EVENT_TXSTARTED</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" kindref="member">NRF_TWIM_EVENT_RXSTARTED</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" kindref="member">NRF_TWIM_EVENT_LASTTX</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" kindref="member">NRF_TWIM_EVENT_LASTRX</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_twim_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" kindref="member">nrf_twim_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>TWIM<sp/>interrupts.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gae0f4d9761ef72b0702ba3ad5b3bf7e78" kindref="member">nrfy_twim_int_uninit</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>TWIM<sp/>events.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,<sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK();</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>buffer<sp/>associated<sp/>with<sp/>the<sp/>last<sp/>reception.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1gac1c5157a0850d4c352797ccd4ff1e6c3" kindref="member">nrfy_twim_events_process</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_twim_events_process(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>TWIM<sp/>transaction<sp/>buffer.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>transaction<sp/>buffer.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaa29f44b52c8acd2981f68c23e0e2673c" kindref="member">nrfy_twim_tx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga69598fbbb9293d1c116a998103050a6e" kindref="member">nrf_twim_tx_buffer_set</ref>(p_reg,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>TWIM<sp/>reception<sp/>buffer.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>reception<sp/>buffer.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga3cc3e5eee9ac2e500379f95ab066ad53" kindref="member">nrfy_twim_rx_buffer_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gaad43bb3e7ec6c84080609df5fcfc4373" kindref="member">nrf_twim_rx_buffer_set</ref>(p_reg,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>TWIM<sp/>transaction.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>transaction<sp/>buffer.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga4bbd97aea02cb2ab44473a72f2d21047" kindref="member">nrfy_twim_tx_start</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a75915573dd56ea04d2f89f533aea68d7" kindref="member">NRF_TWIM_TASK_STARTTX</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(evt_mask<sp/>&amp;<sp/>(<ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>))))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/>__nrfy_internal_twim_events_process(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt_mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lasttx_triggered<sp/>=<sp/>__nrfy_internal_twim_events_process(p_reg,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" kindref="member">NRF_TWIM_EVENT_LASTTX</ref>),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>shorts_mask<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" kindref="member">nrf_twim_shorts_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(lasttx_triggered<sp/>&amp;&amp;<sp/>(shorts_mask<sp/>&amp;<sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4ad540ff8b6b5ac0904d50e08b6778faff" kindref="member">NRF_TWIM_SHORT_LASTTX_STOP_MASK</ref>)))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unless<sp/>LASTTX<sp/>event<sp/>arrived<sp/>and<sp/>LASTTX_STOP<sp/>shortcut<sp/>is<sp/>active,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triggering<sp/>of<sp/>STOP<sp/>task<sp/>in<sp/>case<sp/>of<sp/>error<sp/>has<sp/>to<sp/>be<sp/>done<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a080a36834935e231d07ea4f75eb488fd" kindref="member">NRF_TWIM_TASK_RESUME</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>transmission<sp/>as<sp/>not<sp/>finished<sp/>yet,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>STOPPED<sp/>event<sp/>is<sp/>expected<sp/>to<sp/>arrive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>LASTTX_SUSPENDED<sp/>shortcut<sp/>is<sp/>active,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NACK<sp/>has<sp/>been<sp/>received<sp/>on<sp/>last<sp/>byte<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>SUSPENDED<sp/>event<sp/>happened<sp/>to<sp/>be<sp/>checked<sp/>before<sp/>ERROR,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transmission<sp/>will<sp/>be<sp/>marked<sp/>as<sp/>finished.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>such<sp/>case<sp/>this<sp/>flag<sp/>has<sp/>to<sp/>be<sp/>overwritten.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lasttx_triggered<sp/>&amp;&amp;<sp/>(shorts_mask<sp/>&amp;<sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4a0a8df7ede7f011f77c76e7b05fa08706" kindref="member">NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK</ref>))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>STOP<sp/>task<sp/>was<sp/>triggered<sp/>just<sp/>before<sp/>SUSPEND<sp/>task<sp/>has<sp/>taken<sp/>effect,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SUSPENDED<sp/>event<sp/>may<sp/>not<sp/>arrive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>if<sp/>SUSPENDED<sp/>arrives<sp/>it<sp/>always<sp/>arrives<sp/>after<sp/>ERROR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>SUSPENDED<sp/>has<sp/>to<sp/>be<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>does<sp/>not<sp/>cause<sp/>premature<sp/>termination<sp/>of<sp/>busy<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>waiting<sp/>for<sp/>STOPPED<sp/>event<sp/>to<sp/>arrive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_events_process(p_reg,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>),</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_xfer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>transmission<sp/>as<sp/>not<sp/>finished<sp/>yet,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>same<sp/>reasons<sp/>as<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>TWIM<sp/>reception.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>reception<sp/>buffer.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga284ac594719604471c09686d35407851" kindref="member">nrfy_twim_rx_start</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3aab6746392435f2b57a8d1a2258fdeb69" kindref="member">NRF_TWIM_TASK_STARTRX</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(evt_mask<sp/>&amp;<sp/>(<ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>)<sp/>|</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>))))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt_mask<sp/>=<sp/>__nrfy_internal_twim_events_process(p_reg,<sp/>mask,<sp/>p_xfer);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt_mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>))</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triggering<sp/>of<sp/>STOP<sp/>task<sp/>in<sp/>case<sp/>of<sp/>error<sp/>has<sp/>to<sp/>be<sp/>done<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>aborting<sp/>the<sp/>ongoing<sp/>TWIM<sp/>transaction.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_xfer<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>containing<sp/>reception<sp/>buffer</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>abort<sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>operation.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaf2f04786219e71a3f907248961d69f8d" kindref="member">nrfy_twim_abort</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,<sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga67e52d869d3a071fa1c5040e3a0bf0c3a6146df013442c8666058817c6983ba99" kindref="member">NRF_TWIM_TASK_STOP</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_twim_events_process(p_reg,<sp/>evt_mask,<sp/>p_xfer))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>TWIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>TWIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga94db4abadd3418244075c353169e08f4" kindref="member">nrfy_twim_pins_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref><sp/>*<sp/><sp/><sp/><sp/>p_pins)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__twim__pins__t_1a7d84ccea46964232517a6a1f1b5bec49" kindref="member">scl_pin</ref><sp/>=<sp/><ref refid="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" kindref="member">nrf_twim_scl_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>p_pins-&gt;<ref refid="structnrfy__twim__pins__t_1a752a35390b3dc292ef09d532a842b8ae" kindref="member">sda_pin</ref><sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" kindref="member">nrf_twim_sda_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="358"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>disabling<sp/>TWIM<sp/>with<sp/>all<sp/>interrupts<sp/>and<sp/>shortcuts.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga0f272cfe2144f1570933e35721774b0e" kindref="member">nrfy_twim_stop</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" kindref="member">nrf_twim_int_disable</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1gga0e8202cfd7b4b4bf1986e76f5686e5aca91edd9c8686edbdd2c0f9ecc3a7c5882" kindref="member">NRF_TWIM_ALL_INTS_MASK</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" kindref="member">nrf_twim_shorts_disable</ref>(p_reg,<sp/><ref refid="group__nrf__twim__hal_1ggadd0664ac6080208c547d3352d082a8e4adf591f39db80005910acf9a5aa124f9d" kindref="member">NRF_TWIM_ALL_SHORTS_MASK</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" kindref="member">nrf_twim_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_TWIM_HAS_ARRAY_LIST</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>TX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>TX<sp/>list<sp/>feature<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gac3186ef7036b795f9ef7f46d68326375" kindref="member">nrfy_twim_tx_list_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" kindref="member">nrf_twim_tx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" kindref="member">nrf_twim_tx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>the<sp/>RX<sp/>list<sp/>feature.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>RX<sp/>list<sp/>feature<sp/>is<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga1e52f5f3fa98a81c56f56045361b36a3" kindref="member">nrfy_twim_rx_list_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" kindref="member">nrf_twim_rx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" kindref="member">nrf_twim_rx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="411"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>TWIM<sp/>pins<sp/>configuration.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_pins<sp/>Pointer<sp/>to<sp/>the<sp/>TWIM<sp/>pin<sp/>configurartion<sp/>structure.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaf639074f093d9e8a9a26369d0647171e" kindref="member">nrfy_twim_pins_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__pins__t" kindref="compound">nrfy_twim_pins_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_pins)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga4253f7c0e2cfc1030fe7d747cae106f5" kindref="member">nrf_twim_pins_set</ref>(p_reg,<sp/>p_pins-&gt;<ref refid="structnrfy__twim__pins__t_1a7d84ccea46964232517a6a1f1b5bec49" kindref="member">scl_pin</ref>,<sp/>p_pins-&gt;<ref refid="structnrfy__twim__pins__t_1a752a35390b3dc292ef09d532a842b8ae" kindref="member">sda_pin</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="424"><highlight class="comment">/**<sp/>@refhal{nrf_twim_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga125f1d2f562076d9b7224eab55e940c2" kindref="member">nrfy_twim_task_trigger</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gad17e42d1f7d6810a25cf0a3ea9d656d5" kindref="member">nrf_twim_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment">/**<sp/>@refhal{nrf_twim_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga2caa86fdabd303aa90108ed3682a2b13" kindref="member">nrfy_twim_task_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gab36e701a7533112870253cb6731c693d" kindref="member">nrf_twim_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="439"><highlight class="comment">/**<sp/>@refhal{nrf_twim_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga88c56ad32c517ad9ac35fcb25422aff3" kindref="member">nrfy_twim_event_clear</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment">/**<sp/>@refhal{nrf_twim_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaec278f3c36717c37f5a37e315487bda2" kindref="member">nrfy_twim_event_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" kindref="member">nrf_twim_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">/**<sp/>@refhal{nrf_twim_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga9df5d8927f90601aea02838c69ce63e0" kindref="member">nrfy_twim_event_address_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__twim__hal_1gabdd393afa6247c512ab1a2903042526d" kindref="member">nrf_twim_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="464"><highlight class="comment">/**<sp/>@refhal{nrf_twim_shorts_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga5759658c0d25d600aecb582e15231281" kindref="member">nrfy_twim_shorts_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga90b77c8ca342ed7b72d2d19957cf58ce" kindref="member">nrf_twim_shorts_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/**<sp/>@refhal{nrf_twim_shorts_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga900b6bf6d9fb39a043b1c362a3456d0f" kindref="member">nrfy_twim_shorts_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga5609397c874dcf863396035b14ec0b55" kindref="member">nrf_twim_shorts_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">/**<sp/>@refhal{nrf_twim_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga9ac982bd873da7b6ca5255edcaa87a72" kindref="member">nrfy_twim_int_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab4ceece3e4f5b154e38e2139689a122c" kindref="member">nrf_twim_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment">/**<sp/>@refhal{nrf_twim_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga817b9cfc270a80e39249e93e0b399768" kindref="member">nrfy_twim_int_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gacff36f2873b91dccb4574f7d459d854a" kindref="member">nrf_twim_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="496"><highlight class="comment">/**<sp/>@refhal{nrf_twim_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga60929bda30ae4a9d36faa0854768e75c" kindref="member">nrfy_twim_int_enable_check</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga128085dcaa423618645dfd5d896ee8cb" kindref="member">nrf_twim_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">/**<sp/>@refhal{nrf_twim_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaa3d67a13e243f592bcf38dd5afba1c87" kindref="member">nrfy_twim_subscribe_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga6327ea6ef1182bcb9ee23c9371e8dba5" kindref="member">nrf_twim_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="515"><highlight class="comment">/**<sp/>@refhal{nrf_twim_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga84afc71f14da5dc751611e0a0f47436e" kindref="member">nrfy_twim_subscribe_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga67e52d869d3a071fa1c5040e3a0bf0c3" kindref="member">nrf_twim_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga6643a459df7a6f419dc20deff48e97c2" kindref="member">nrf_twim_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment">/**<sp/>@refhal{nrf_twim_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga8007e08c493b7a5fc81f586f29dceae9" kindref="member">nrfy_twim_publish_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga1cd7fe19a23e22863f7f8049854a22d0" kindref="member">nrf_twim_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment">/**<sp/>@refhal{nrf_twim_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga56ebd43e6f7e8f08ac214c72b7fce533" kindref="member">nrfy_twim_publish_clear</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gaefd456987eecf488487efb33240061da" kindref="member">nrf_twim_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">/**<sp/>@refhal{nrf_twim_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga5d1ed4f85caca496065f4cf9285c17d0" kindref="member">nrfy_twim_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gaf6a759fdc87271edf9d9315ecb4142aa" kindref="member">nrf_twim_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="549"><highlight class="comment">/**<sp/>@refhal{nrf_twim_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga6f4fe8fdd94a8e1088502b25e9f9912c" kindref="member">nrfy_twim_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab53405a71d4e4a9bcf901d212c481b46" kindref="member">nrf_twim_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment">/**<sp/>@refhal{nrf_twim_scl_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga82db985fb56bd734e38dd419f54ebb2d" kindref="member">nrfy_twim_scl_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>scl_pin<sp/>=<sp/><ref refid="group__nrf__twim__hal_1gad5e13e3c17069d0b4167597788ac75a9" kindref="member">nrf_twim_scl_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scl_pin;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="565"><highlight class="comment">/**<sp/>@refhal{nrf_twim_sda_pin_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga7d0eb86ed17109d69a1f9246ab13f724" kindref="member">nrfy_twim_sda_pin_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sda_pin<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga4171a5440f602ca14691f27d02a4c7ab" kindref="member">nrf_twim_sda_pin_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sda_pin;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="574"><highlight class="comment">/**<sp/>@refhal{nrf_twim_frequency_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga36504236043d92c63bbce99eea5cd6de" kindref="member">nrfy_twim_frequency_set</ref>(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga63248331964302df70fdc0fbd85ce6b7" kindref="member">nrf_twim_frequency_t</ref><sp/>frequency)</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gab9918a1bee7c2b5f3ac99b7f667c105c" kindref="member">nrf_twim_frequency_set</ref>(p_reg,<sp/>frequency);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="582"><highlight class="comment">/**<sp/>@refhal{nrf_twim_errorsrc_get_and_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1ga268b3699f8e43b5b7c09426c79072016" kindref="member">nrfy_twim_errorsrc_get_and_clear</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>errorsrc<sp/>=<sp/><ref refid="group__nrf__twim__hal_1gabbe5a20020f724c910503de1aa1ac20e" kindref="member">nrf_twim_errorsrc_get_and_clear</ref>(p_reg);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errorsrc;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="591"><highlight class="comment">/**<sp/>@refhal{nrf_twim_address_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga9cb8ba98bd633b789ee9db23abe37d9c" kindref="member">nrfy_twim_address_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga28b0f24a8560024b990d21b12ee6a31d" kindref="member">nrf_twim_address_set</ref>(p_reg,<sp/>address);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="599"><highlight class="comment">/**<sp/>@refhal{nrf_twim_shorts_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga0333e82b3c0ed32575092f202297f7aa" kindref="member">nrfy_twim_shorts_set</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga94c02a0d249cd9cf3a677963c1ef0521" kindref="member">nrf_twim_shorts_set</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="607"><highlight class="comment">/**<sp/>@refhal{nrf_twim_shorts_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__twim_1gaceaf3cede0d44a0f96ef6b02ec2397e6" kindref="member">nrfy_twim_shorts_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shorts<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga2a969f4992eb6cb15f80323c89c71505" kindref="member">nrf_twim_shorts_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shorts;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="616"><highlight class="comment">/**<sp/>@refhal{nrf_twim_txd_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga434a4e298cc91c4915723cdbb5ea3a2c" kindref="member">nrfy_twim_txd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="group__nrf__twim__hal_1ga5df899ec58ae160c669166aaa97c1acf" kindref="member">nrf_twim_txd_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="625"><highlight class="comment">/**<sp/>@refhal{nrf_twim_rxd_amount_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga1eca0421aa569604bbddfdd90e766f9d" kindref="member">nrfy_twim_rxd_amount_get</ref>(NRF_TWIM_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="group__nrf__twim__hal_1gacc3a25232d56b5a90d748804bdf799eb" kindref="member">nrf_twim_rxd_amount_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_TWIM_HAS_ARRAY_LIST</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="635"><highlight class="comment">/**<sp/>@refhal{nrf_twim_tx_list_enable}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gae7df95b111f5dbd2b791b5647672537b" kindref="member">nrfy_twim_tx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gafc2f2a76bdf10eb1dff40a15c3ef03f5" kindref="member">nrf_twim_tx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="642"><highlight class="comment">/**<sp/>@refhal{nrf_twim_tx_list_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga72d8023437261d8cc5f360673f1d4dbf" kindref="member">nrfy_twim_tx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gaf372b42692629090c455c52af6b7e732" kindref="member">nrf_twim_tx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="649"><highlight class="comment">/**<sp/>@refhal{nrf_twim_rx_list_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1ga5258b7b91452ed488c920119f751e768" kindref="member">nrfy_twim_rx_list_enable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga1f60ad15fabf458492dc94e47edf859f" kindref="member">nrf_twim_rx_list_enable</ref>(p_reg);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="656"><highlight class="comment">/**<sp/>@refhal{nrf_twim_rx_list_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__twim_1gaa8e74d426269a23e9bfa99f50bc98637" kindref="member">nrfy_twim_rx_list_disable</ref>(NRF_TWIM_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga238200d06bd6827fb1fe29634f5f3ddb" kindref="member">nrf_twim_rx_list_disable</ref>(p_reg);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="664"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_twim_event_enabled_clear(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_twim_event_handle(NRF_TWIM_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1ga679dbc060dbfcbd0d2cc3d49bd19b3fe" kindref="member">nrf_twim_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_evt_mask)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__twim__hal_1ga94ef87c05045e590ceefa30c99b1f1fb" kindref="member">nrf_twim_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__twim__hal_1gade188106854be17384293a78b74cd2dd" kindref="member">nrf_twim_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_evt_mask)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_evt_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="694"><highlight class="normal">uint32_t<sp/>__nrfy_internal_twim_events_process(NRF_TWIM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__twim__xfer__desc__t" kindref="compound">nrfy_twim_xfer_desc_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_xfer)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea935580e75d45f2c15ac503cbc6e1defb" kindref="member">NRF_TWIM_EVENT_SUSPENDED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2e4f99df05723e422891acf29b8f6422" kindref="member">NRF_TWIM_EVENT_ERROR</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feae4788f53d604226e0b490e742d9acd29" kindref="member">NRF_TWIM_EVENT_TXSTARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3feaa872bea0ff0c54a21511e2f9ecc36b8d" kindref="member">NRF_TWIM_EVENT_RXSTARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea4778879a9fd0869337c295a19fb09325" kindref="member">NRF_TWIM_EVENT_LASTTX</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_twim_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" kindref="member">NRF_TWIM_EVENT_LASTRX</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer<sp/>&amp;&amp;<sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea2ad0b1699267e1cf3dbff36f2e13ba32" kindref="member">NRF_TWIM_EVENT_STOPPED</ref>)))</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_xfer<sp/>&amp;&amp;<sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__twim__hal_1gga679dbc060dbfcbd0d2cc3d49bd19b3fea3058d2fe16f030fecbadf94cebdee665" kindref="member">NRF_TWIM_EVENT_LASTRX</ref>)))</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1ad11bfe99079b55471f661ecae14ac373" kindref="member">p_buffer</ref>,<sp/>p_xfer-&gt;<ref refid="structnrfy__twim__xfer__desc__t_1aa9fa4c33e9518dffff13161d25713d0d" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_TWIM_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_twim.h"/>
  </compounddef>
</doxygen>
