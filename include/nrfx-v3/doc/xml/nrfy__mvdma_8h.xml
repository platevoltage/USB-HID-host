<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__mvdma_8h" kind="file" language="C++">
    <compoundname>nrfy_mvdma.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__mvdma_8h" local="no">hal/nrf_mvdma.h</includes>
    <includes refid="nrf__vdma_8h" local="no">helpers/nrf_vdma.h</includes>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_mvdma.h</label>
        <link refid="nrfy__mvdma_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnrfy__mvdma__list__request__t" prot="public">nrfy_mvdma_list_request_t</innerclass>
    <innerclass refid="structnrfy__mvdma__list__desc__t" prot="public">nrfy_mvdma_list_desc_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrfy__mvdma_1ga9d77568243baee496850736edda08630" prot="public" static="no">
        <name>NRFY_MVDMA_HAS_NEW_VER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gae2a46e84fd2c194d6d687f760e5b563b" kindref="member">NRF_MVDMA_HAS_NEW_VER</ref>  Symbol indicating whether MVDMA uses new or old version.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="74" column="9" bodyfile="haly/nrfy_mvdma.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrfy__mvdma_1ga24377ab54bf7ef395677f43896c78fca" prot="public" static="no">
        <name>NRFY_MVDMA_HAS_AXIMODE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga3136a8d34e086cd5984556a0d4c28203" kindref="member">NRF_MVDMA_HAS_AXIMODE</ref>  Symbol indicating whether AXIMODE configuration is present.  </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="81" column="9" bodyfile="haly/nrfy_mvdma.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nrfy__mvdma_8h_1a90f71612f568e3c09cc2817cf833cf26" prot="public" static="no">
        <type>struct <ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref></type>
        <definition>typedef struct nrfy_mvdma_list_request_t nrfy_mvdma_list_request_t</definition>
        <argsstring></argsstring>
        <name>nrfy_mvdma_list_request_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="45" column="40" bodyfile="haly/nrfy_mvdma.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nrfy__mvdma_8h_1a62ca6ad1beb66cf4e2d5c3a53ddd8b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool __nrfy_internal_mvdma_event_handle</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask, nrf_mvdma_event_t event, uint32_t *p_event_mask)</argsstring>
        <name>__nrfy_internal_mvdma_event_handle</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_event_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="618" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="618" bodyend="633" declfile="haly/nrfy_mvdma.h" declline="47" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__mvdma_8h_1a7826a0ecfaa038bd11265baa4c347652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_mvdma_events_process</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask, nrfy_mvdma_list_request_t const *p_list_request)</argsstring>
        <name>__nrfy_internal_mvdma_events_process</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref> const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="636" column="10" bodyfile="haly/nrfy_mvdma.h" bodystart="636" bodyend="690" declfile="haly/nrfy_mvdma.h" declline="53" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__mvdma_8h_1a578ca11cbe8313222a00fe08e638102a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_mvdma_event_enabled_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask, nrf_mvdma_event_t event)</argsstring>
        <name>__nrfy_internal_mvdma_event_enabled_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="692" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="692" bodyend="700" declfile="haly/nrfy_mvdma.h" declline="57" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__mvdma_8h_1a406a46e244076f1206d369f2e3313b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void __nrfy_internal_mvdma_source_buffers_flush</definition>
        <argsstring>(nrf_vdma_job_t *p_source_job)</argsstring>
        <name>__nrfy_internal_mvdma_source_buffers_flush</name>
        <param>
          <type><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> *</type>
          <declname>p_source_job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="702" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="702" bodyend="725" declfile="haly/nrfy_mvdma.h" declline="61" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="nrfy__mvdma_8h_1a088f79323de8b27bf63bf6bbc55637fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t __nrfy_internal_mvdma_sink_job_count_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>__nrfy_internal_mvdma_sink_job_count_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="727" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="727" bodyend="733" declfile="haly/nrfy_mvdma.h" declline="63" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga5b784802ba865998b780a55a90bc5f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_int_init</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask, uint8_t irq_priority, bool enable)</argsstring>
        <name>nrfy_mvdma_int_init</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irq_priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for initializing the specified MVDMA interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be initialized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt priority. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the interrupts are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="119" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="119" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga86c35ce8bac5b4ee26697944cf9cd7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_int_uninit</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg)</argsstring>
        <name>nrfy_mvdma_int_uninit</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
<para>Function for uninitializing the specified MVDMA interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="154" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga3f836ff6c47e42975cc0a507927660b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_events_process</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask, nrfy_mvdma_list_request_t *p_list_request)</argsstring>
        <name>nrfy_mvdma_events_process</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref> *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for processing the specified MVDMA events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events to be processed, created by <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of list execution request associated with the last operation. Can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of events that were generated and processed. To be checked against the result of <ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="172" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gadee2abf18c994780bd909590916fabaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_start</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrfy_mvdma_list_request_t const *p_list_request)</argsstring>
        <name>nrfy_mvdma_start</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref> const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for starting the MVDMA jobs in single-mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of list execution request if the transaction is to be blocking. NULL for non-blocking transactions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="188" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="188" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga5a34fbe7d9394cc229335b0cd7a95377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_multi_start</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint8_t idx, nrfy_mvdma_multi_list_request_t const *p_list_request)</argsstring>
        <name>nrfy_mvdma_multi_start</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>nrfy_mvdma_multi_list_request_t const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for starting the MVDMA jobs in multi-mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the job list that will be executed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of lists execution request if the transaction is to be blocking. NULL for non-blocking transactions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="212" column="6" bodyfile="haly/nrfy_mvdma.h" bodystart="212" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga46f64c5c2212bad48cfc824a88e4835c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_multi_job_list_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrfy_mvdma_multi_list_request_t const *p_list_request)</argsstring>
        <name>nrfy_mvdma_multi_job_list_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>nrfy_mvdma_multi_list_request_t const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for setting the MVDMA job lists in multi-mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of list execution request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="240" column="6" bodyfile="haly/nrfy_mvdma.h" bodystart="240" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga2ab1fdd973456c352aa246508a420b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_multi_job_list_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrfy_mvdma_multi_list_request_t *p_list_request)</argsstring>
        <name>nrfy_mvdma_multi_job_list_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>nrfy_mvdma_multi_list_request_t *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for getting the MVDMA job lists in multi-mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with list execution request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="259" column="6" bodyfile="haly/nrfy_mvdma.h" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga33a286dc72d59bee7b4d25f325e334ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_job_list_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrfy_mvdma_list_request_t const *p_list_request)</argsstring>
        <name>nrfy_mvdma_job_list_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref> const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for setting the MVDMA jobs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of list execution request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="274" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="274" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga9ab523a3cb73b1ef082f656a9260da4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_reset</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, bool wait)</argsstring>
        <name>nrfy_mvdma_reset</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
<para>Function for resetting the MVDMA peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>True if reset is to be done in blocking mode, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="290" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="290" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga0da2efb4fea20bcce5c5aa10131f87a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_abort</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrfy_mvdma_list_request_t const *p_list_request)</argsstring>
        <name>nrfy_mvdma_abort</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref> const *</type>
          <declname>p_list_request</declname>
        </param>
        <briefdescription>
<para>Function for aborting the MVDMA transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_list_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of list execution request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="310" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="310" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gaa5b7c18d184cf90b46196e70e479c238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_source_job_description_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrfy_mvdma_list_desc_t *p_job_list_desc)</argsstring>
        <name>nrfy_mvdma_source_job_description_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__desc__t" kindref="compound">nrfy_mvdma_list_desc_t</ref> *</type>
          <declname>p_job_list_desc</declname>
        </param>
        <briefdescription>
<para>Function for getting the MVDMA source job details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_job_list_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with job list description. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="340" column="6" bodyfile="haly/nrfy_mvdma.h" bodystart="340" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga12b43721d2d631321dbf0e378e9af44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_sink_job_description_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrfy_mvdma_list_desc_t *p_job_list_desc)</argsstring>
        <name>nrfy_mvdma_sink_job_description_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrfy__mvdma__list__desc__t" kindref="compound">nrfy_mvdma_list_desc_t</ref> *</type>
          <declname>p_job_list_desc</declname>
        </param>
        <briefdescription>
<para>Function for getting the MVDMA sink job details. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_job_list_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure to be filled with job list description. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="357" column="6" bodyfile="haly/nrfy_mvdma.h" bodystart="357" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga33967753b0c3e54e4decfb7d1067e1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_task_trigger</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrfy_mvdma_task_trigger</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>  Function for activating the specified MVDMA task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="368" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga62f8f13aff01e93c3431acd6ecba50c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_task_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrfy_mvdma_task_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gafcbc21aa3b202cea94a75170ea2c8d79" kindref="member">nrf_mvdma_task_address_get</ref>  Function for getting the address of the specified MVDMA task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="376" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga633edc324e95832e045bf79a874f357e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_mvdma_task_t nrfy_mvdma_start_task_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, uint8_t index)</argsstring>
        <name>nrfy_mvdma_start_task_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga770ec8d1849122f7bf50341e0bceb7a6" kindref="member">nrf_mvdma_start_task_get</ref>  Function for getting START task by its index.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the START task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>START task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="383" column="37" bodyfile="haly/nrfy_mvdma.h" bodystart="383" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga8f9cea7bf645665ce615a80ff74bdebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_event_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrfy_mvdma_event_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga74a7b2e9a23a8eeaa82bdce6b9575374" kindref="member">nrf_mvdma_event_clear</ref>  Function for clearing the specified MVDMA event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to clear.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="390" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="390" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gaf5efab42e2782b57e0f693300af62fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_mvdma_event_check</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrfy_mvdma_event_check</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga367b9509c93895cb50689d31ac284c01" kindref="member">nrf_mvdma_event_check</ref>  Function for retrieving the state of the MVDMA event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has been generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The event has not been generated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="398" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="398" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga433913283231dbb4aef4d80d085f02f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_event_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrfy_mvdma_event_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga7d44269c67a65e59a4a9606593782002" kindref="member">nrf_mvdma_event_address_get</ref>  Function for getting the address of the specified MVDMA event register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified event.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified event register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="408" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="408" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gad3d7d557315bafa48fdefa86888f53c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_int_enable</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_mvdma_int_enable</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga519024a15bce6aa1ce1c25ca32e9a5a3" kindref="member">nrf_mvdma_int_enable</ref>  Function for enabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="415" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="415" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga003322648954545e58164e4c9bfbf4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_int_disable</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_mvdma_int_disable</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga18e7178bdf80b95ac9d531fcbeb0d7c6" kindref="member">nrf_mvdma_int_disable</ref>  Function for disabling specified interrupts.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="423" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="423" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gad9d8c8922312f35584f10d063f9f9748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_int_enable_check</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_mvdma_int_enable_check</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga773770b5370b2f21403fffa5bb532598" kindref="member">nrf_mvdma_int_enable_check</ref>  Function for checking if the specified interrupts are enabled.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be checked. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mask of enabled interrupts.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="431" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="431" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gaf37fde6d31131ce9d7bb8dfbbd36d591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_int_pending_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_int_pending_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga88407231c53c6d9d92ab20ab6c81110d" kindref="member">nrf_mvdma_int_pending_get</ref>  Function for retrieving the state of pending interrupts.  </para>
</simplesect>
</para>
<para><simplesect kind="note"><para>States of pending interrupt are saved as a bitmask. One set at particular position means that interrupt for event is pending.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitmask with information about pending interrupts. Use <ref refid="group__nrf__mvdma__hal_1ga2fc7541ce6835a58a26f9ba3794f3118" kindref="member">nrf_mvdma_int_mask_t</ref> values for bit masking.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="441" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="441" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gab3dae9f262b49bcf2ee1a39baa079c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_subscribe_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_mvdma_subscribe_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga855b2fdd44b7e7a4bce7659b5190f54e" kindref="member">nrf_mvdma_subscribe_set</ref>  Function for setting the subscribe configuration for a given MVDMA task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="451" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="451" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gab177b7b8f716016f09b36f088d1a932c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_subscribe_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_task_t task)</argsstring>
        <name>nrfy_mvdma_subscribe_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga962201d7a29f3b10c4a520248efa4057" kindref="member">nrf_mvdma_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given MVDMA task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="460" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="460" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga5d2b433bc02a0d4ea6961145b492b44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_publish_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event, uint8_t channel)</argsstring>
        <name>nrfy_mvdma_publish_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gaa9370f101858358a70af0964ca7a056a" kindref="member">nrf_mvdma_publish_set</ref>  Function for setting the publish configuration for a given MVDMA event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to publish the event.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="468" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="468" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga2ee85af3690e08619165afc7b2a7e426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_publish_clear</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_event_t event)</argsstring>
        <name>nrfy_mvdma_publish_clear</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gadc4859cd77da19bb928f0a477e5c3c39" kindref="member">nrf_mvdma_publish_clear</ref>  Function for clearing the publish configuration for a given MVDMA event.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="477" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="477" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gae7c3a908280e9d1158e4f01ea9b80a2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_mode_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_mode_t mode)</argsstring>
        <name>nrfy_mvdma_mode_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga0efe65b3bb929a13864bb29e0b570428" kindref="member">nrf_mvdma_mode_set</ref>  Function for setting the MVDMA mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired operating mode for MVDMA.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="486" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="486" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga03fa0b8e35713c9e4b39ac66102cfcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_aximode_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_mvdma_aximode_t aximode)</argsstring>
        <name>nrfy_mvdma_aximode_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__mvdma__hal_1ga064227e6f56210dfaaecbef20ada7377" kindref="member">nrf_mvdma_aximode_t</ref></type>
          <declname>aximode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga313afb53dca74554c3b4356b7246f517" kindref="member">nrf_mvdma_aximode_set</ref>  Function for setting the AXI mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aximode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired AXI mode for MVDMA.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="495" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="495" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gab0cdcf701d7d86b04ca71555a0c3cdbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_source_list_ptr_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_vdma_job_t const *p_job)</argsstring>
        <name>nrfy_mvdma_source_list_ptr_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> const *</type>
          <declname>p_job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga6ee1a92116337e8fc4c1f5cdba571778" kindref="member">nrf_mvdma_source_list_ptr_set</ref>  Function for setting the pointer to the source descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_job</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a job list.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="504" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="504" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga4b9986ce9ff5e077c86790ad555a2088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> *</type>
        <definition>NRFY_STATIC_INLINE nrf_vdma_job_t * nrfy_mvdma_source_list_ptr_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_source_list_ptr_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga600ce66bf59c367d736c20a9cad42a4b" kindref="member">nrf_mvdma_source_list_ptr_get</ref>  Function for getting the pointer to the source descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a job list.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="512" column="36" bodyfile="haly/nrfy_mvdma.h" bodystart="512" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga3c8224a1c01aa15badb068b443387a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_mvdma_sink_list_ptr_set</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg, nrf_vdma_job_t const *p_job)</argsstring>
        <name>nrfy_mvdma_sink_list_ptr_set</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> const *</type>
          <declname>p_job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gab120702d8cc46932695bcfa1b8b700a0" kindref="member">nrf_mvdma_sink_list_ptr_set</ref>  Function for getting the pointer to the sink descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_job</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a job list.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="521" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="521" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga65b151f3528c7af9f465e171dcdb421a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref> *</type>
        <definition>NRFY_STATIC_INLINE nrf_vdma_job_t * nrfy_mvdma_sink_list_ptr_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_sink_list_ptr_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gaf012e8c81fd1e2735b818a36f4e5cab7" kindref="member">nrf_mvdma_sink_list_ptr_get</ref>  Function for getting the pointer to the sink descriptor list or pointer to the list of descriptor list pointers, depending on configured <ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref> mode.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a job list.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="529" column="36" bodyfile="haly/nrfy_mvdma.h" bodystart="529" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga9c885354545fc15f249c2c4fb7229d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_crc_result_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_crc_result_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga8fbb296c6cb2888e3186bfeba3de4678" kindref="member">nrf_mvdma_crc_result_get</ref>  Function for getting the result of CRC checksum calculation.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of CRC checksum calculation.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="538" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="538" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1gab11b0ae1bfe6e9e9bc0835f4bb4e7924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1gae569c468089413c6e25a5108060e8cb1" kindref="member">nrf_mvdma_fifo_status_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_mvdma_fifo_status_t nrfy_mvdma_fifo_status_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_fifo_status_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gaa604217304e34b65605fb1cdc7160689" kindref="member">nrf_mvdma_fifo_status_get</ref>  Function for getting the status of intermediate FIFO.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Intermediate FIFO status.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="547" column="44" bodyfile="haly/nrfy_mvdma.h" bodystart="547" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga35feab93ea049917f9e6fcc9c4bc5764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_mvdma_activity_check</definition>
        <argsstring>(NRF_MVDMA_Type *p_reg)</argsstring>
        <name>nrfy_mvdma_activity_check</name>
        <param>
          <type>NRF_MVDMA_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga048d320f31fc4f79927e69ba28b97f3a" kindref="member">nrf_mvdma_activity_check</ref>  Function for checking the MVDMA activity.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>MVDMA is processing data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>MVDMA is idle.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="556" column="25" bodyfile="haly/nrfy_mvdma.h" bodystart="556" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga48f8e1c06995636f0782a5701573c159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1ga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2" kindref="member">nrf_mvdma_source_error_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_mvdma_source_error_t nrfy_mvdma_source_error_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_source_error_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gab11530bca70704fa00c6605fc5df11f0" kindref="member">nrf_mvdma_source_error_get</ref>  Function for getting the bus error of MVDMA data source.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bus error of data source.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="566" column="26" bodyfile="haly/nrfy_mvdma.h" bodystart="566" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga4b114027b87bca31ad22cb5a3c611028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__mvdma__hal_1ga98f9129dba13ac35d89a1cfc60c2e4e9" kindref="member">nrf_mvdma_sink_error_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_mvdma_sink_error_t nrfy_mvdma_sink_error_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_sink_error_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga0a4df038da3b5e328413aed798212d73" kindref="member">nrf_mvdma_sink_error_get</ref>  Function for getting the bus error of MVDMA data source.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bus error of data sink.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="575" column="43" bodyfile="haly/nrfy_mvdma.h" bodystart="575" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga2a84ae3dfcafa4aca9a4e785ec007dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_last_source_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_last_source_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga27ce2352bcae4bec021641c662e88a71" kindref="member">nrf_mvdma_last_source_address_get</ref>  Function for getting the latest address being accessed on the source AXI channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest address being accessed on the source AXI channel.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="584" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="584" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga538999526d1af66cb1447207a0e7dc0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_last_sink_address_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_last_sink_address_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gac83dac3081b964c22bc05821f0f485fb" kindref="member">nrf_mvdma_last_sink_address_get</ref>  Function for getting the latest address being accessed on the sink AXI channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Latest address being accessed on the sink AXI channel.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="593" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="593" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga448c18fd6c09db2db751d804e9ce55b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_source_job_count_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_source_job_count_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1gaaa85c9f87d1afa300b35d39675fdf11a" kindref="member">nrf_mvdma_source_job_count_get</ref>  Function for getting the number of completed jobs in the current source descriptor list.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of completed jobs in the current source descriptor list.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="602" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="602" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__mvdma_1ga2b131fb649acfb668a499b002aaf0368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_mvdma_sink_job_count_get</definition>
        <argsstring>(NRF_MVDMA_Type const *p_reg)</argsstring>
        <name>nrfy_mvdma_sink_job_count_get</name>
        <param>
          <type>NRF_MVDMA_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__mvdma__hal_1ga6eaf1d2c50551a0a955650036486b7dc" kindref="member">nrf_mvdma_sink_job_count_get</ref>  Function for getting the number of completed jobs in the current sink descriptor list.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of completed jobs in the current sink descriptor list.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_mvdma.h" line="611" column="29" bodyfile="haly/nrfy_mvdma.h" bodystart="611" bodyend="614"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_MVDMA_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_MVDMA_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_mvdma.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;helpers/nrf_vdma.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_event_handle(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_event_mask);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="53"><highlight class="normal">uint32_t<sp/>__nrfy_internal_mvdma_events_process(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_event_enabled_clear(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_source_buffers_flush(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_source_job);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_mvdma_sink_job_count_get(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_mvdma<sp/>MVDMA<sp/>HALY</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_mvdma</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>MVDMA<sp/>peripheral.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_NEW_VER<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">/**<sp/>@refhal{NRF_MVDMA_HAS_NEW_VER}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_MVDMA_HAS_NEW_VER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_MVDMA_HAS_NEW_VER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_AXIMODE<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">/**<sp/>@refhal{NRF_MVDMA_HAS_AXIMODE}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_MVDMA_HAS_AXIMODE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_MVDMA_HAS_AXIMODE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>list<sp/>execution<sp/>request<sp/>for<sp/>the<sp/>MVDMA.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structnrfy__mvdma__list__request__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/><ref refid="structnrfy__mvdma__list__request__t_1a7f57a56678e8f5c55bef3c1749512614" kindref="member">p_source_job_list</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>source<sp/>job<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/><ref refid="structnrfy__mvdma__list__request__t_1a3a999dda56c66e4d455cdd938bb016a9" kindref="member">p_sink_job_list</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>sink<sp/>job<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_MULTIMODE</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/>@brief<sp/>Structure<sp/>describing<sp/>lists<sp/>of<sp/>job<sp/>list<sp/>execution<sp/>requests<sp/>for<sp/>the<sp/>MVDMA.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>**<sp/>pp_source_job_lists;<sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>list<sp/>of<sp/>the<sp/>source<sp/>job<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>**<sp/>pp_sink_job_lists;<sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>list<sp/>of<sp/>the<sp/>sink<sp/>job<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Length<sp/>of<sp/>the<sp/>list<sp/>of<sp/>the<sp/>sink/source<sp/>job<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/>nrfy_mvdma_multi_list_request_t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**<sp/>@brief<sp/>Auxiliary<sp/>structure<sp/>describing<sp/>the<sp/>MVDMA<sp/>job<sp/>list<sp/>with<sp/>unspecified<sp/>direction.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structnrfy__mvdma__list__desc__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_jobs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>job<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job_count;<sp/></highlight><highlight class="comment">///&lt;<sp/>Number<sp/>of<sp/>jobs<sp/>executed,<sp/>including<sp/>terminating<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_addr;<sp/></highlight><highlight class="comment">///&lt;<sp/>Last<sp/>sink<sp/>or<sp/>source<sp/>address<sp/>accessed<sp/>by<sp/>the<sp/>peripheral<sp/>when<sp/>the<sp/>list<sp/>was<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><ref refid="structnrfy__mvdma__list__desc__t" kindref="compound">nrfy_mvdma_list_desc_t</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>initializing<sp/>the<sp/>specified<sp/>MVDMA<sp/>interrupts.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>interrupts<sp/>to<sp/>be<sp/>initialized.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>irq_priority<sp/>Interrupt<sp/>priority.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>interrupts<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga5b784802ba865998b780a55a90bc5f1d" kindref="member">nrfy_mvdma_int_init</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>irq_priority,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fad39f02c6e66781fdb74dd359507034ce" kindref="member">NRF_MVDMA_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac4e8ebd0e07363938099f074f2825e0a" kindref="member">NRF_MVDMA_EVENT_RESET</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac50a517bbd48467bb55a2ac017ba6777" kindref="member">NRF_MVDMA_EVENT_STARTED</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa59980a449a84dbb08da5dce4ab2f1a99" kindref="member">NRF_MVDMA_EVENT_PAUSED</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/>NRF_MVDMA_EVENT_STOPPED);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5faa8c96f13ef51ad9e896e0cbe57405f7f" kindref="member">NRF_MVDMA_EVENT_SINKBUSERROR</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa125898a4bae1add7fdf040f74b541cd6" kindref="member">NRF_MVDMA_EVENT_SOURCEBUSERROR</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fadd433afccebae42c2d0d7de3eaac4871" kindref="member">NRF_MVDMA_EVENT_SINKSELECTJOBDONE</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_event_enabled_clear(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa63d43fee3a4bffbcd5c70d153177a4bf" kindref="member">NRF_MVDMA_EVENT_SOURCESELECTJOBDONE</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga4182ca2864cca23d945b728e3dddfd7b" kindref="member">NRFX_IRQ_PRIORITY_SET</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg),<sp/>irq_priority);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1gab330b41ecdcfb8b13a929b0c74084293" kindref="member">NRFX_IRQ_ENABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga519024a15bce6aa1ce1c25ca32e9a5a3" kindref="member">nrf_mvdma_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>uninitializing<sp/>the<sp/>specified<sp/>MVDMA<sp/>interrupts.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga86c35ce8bac5b4ee26697944cf9cd7ea" kindref="member">nrfy_mvdma_int_uninit</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrfx__glue_1ga5837b0b0518c6e7a2c6ce86bd96d2148" kindref="member">NRFX_IRQ_DISABLE</ref>(<ref refid="group__nrfx__common_1ga99320a533545d814f480ee108a6b61ce" kindref="member">nrfx_get_irq_number</ref>(p_reg));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>processing<sp/>the<sp/>specified<sp/>MVDMA<sp/>events.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>of<sp/>events<sp/>to<sp/>be<sp/>processed,</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>created<sp/>by<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>list<sp/>execution<sp/>request<sp/>associated<sp/>with</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>last<sp/>operation.<sp/>Can<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>@return<sp/>Mask<sp/>of<sp/>events<sp/>that<sp/>were<sp/>generated<sp/>and<sp/>processed.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>To<sp/>be<sp/>checked<sp/>against<sp/>the<sp/>result<sp/>of<sp/>@ref<sp/>NRFY_EVENT_TO_INT_BITMASK().</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga3f836ff6c47e42975cc0a507927660b7" kindref="member">nrfy_mvdma_events_process</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>__nrfy_internal_mvdma_events_process(p_reg,<sp/>mask,<sp/>p_list_request);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>MVDMA<sp/>jobs<sp/>in<sp/>single-mode.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>list<sp/>execution<sp/>request<sp/>if<sp/>the<sp/>transaction</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>transactions.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gadee2abf18c994780bd909590916fabaa" kindref="member">nrfy_mvdma_start</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea4148010af285f4346a78bf058387e661" kindref="member">NRF_MVDMA_TASK_START0</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_list_request)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fad39f02c6e66781fdb74dd359507034ce" kindref="member">NRF_MVDMA_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_mvdma_events_process(p_reg,<sp/>evt_mask,<sp/>p_list_request))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_MULTIMODE<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>starting<sp/>the<sp/>MVDMA<sp/>jobs<sp/>in<sp/>multi-mode.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>idx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>of<sp/>the<sp/>job<sp/>list<sp/>that<sp/>will<sp/>be<sp/>executed.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>lists<sp/>execution<sp/>request<sp/>if<sp/>the<sp/>transaction</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>to<sp/>be<sp/>blocking.<sp/>NULL<sp/>for<sp/>non-blocking<sp/>transactions.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga5a34fbe7d9394cc229335b0cd7a95377" kindref="member">nrfy_mvdma_multi_start</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfy_mvdma_multi_list_request_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__mvdma__hal_1ga770ec8d1849122f7bf50341e0bceb7a6" kindref="member">nrf_mvdma_start_task_get</ref>(p_reg,<sp/>idx));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_list_request)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/>list_req<sp/>=</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structnrfy__mvdma__list__request__t_1a7f57a56678e8f5c55bef3c1749512614" kindref="member">p_source_job_list</ref><sp/>=<sp/>p_list_request-&gt;pp_source_job_lists[idx],</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.p_sink_job_list<sp/><sp/><sp/>=<sp/>p_list_request-&gt;pp_sink_job_lists[idx],</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fad39f02c6e66781fdb74dd359507034ce" kindref="member">NRF_MVDMA_EVENT_END</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_mvdma_events_process(p_reg,<sp/>evt_mask,<sp/>&amp;list_req))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>MVDMA<sp/>job<sp/>lists<sp/>in<sp/>multi-mode.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>list<sp/>execution<sp/>request.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga46f64c5c2212bad48cfc824a88e4835c" kindref="member">nrfy_mvdma_multi_job_list_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfy_mvdma_multi_list_request_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p_list_request-&gt;length;<sp/>i++)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_source_buffers_flush(p_list_request-&gt;pp_source_job_lists[i]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga6ee1a92116337e8fc4c1f5cdba571778" kindref="member">nrf_mvdma_source_list_ptr_set</ref>(p_reg,<sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*)p_list_request-&gt;pp_source_job_lists);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gab120702d8cc46932695bcfa1b8b700a0" kindref="member">nrf_mvdma_sink_list_ptr_set</ref>(p_reg,<sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*)p_list_request-&gt;pp_sink_job_lists);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MVDMA<sp/>job<sp/>lists<sp/>in<sp/>multi-mode.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>list<sp/>execution<sp/>request.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga2ab1fdd973456c352aa246508a420b48" kindref="member">nrfy_mvdma_multi_job_list_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfy_mvdma_multi_list_request_t<sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>p_list_request-&gt;pp_source_job_lists<sp/>=<sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>**)<ref refid="group__nrf__mvdma__hal_1ga600ce66bf59c367d736c20a9cad42a4b" kindref="member">nrf_mvdma_source_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>p_list_request-&gt;pp_sink_job_lists<sp/>=<sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>**)<ref refid="group__nrf__mvdma__hal_1gaf012e8c81fd1e2735b818a36f4e5cab7" kindref="member">nrf_mvdma_sink_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRF_MVDMA_HAS_MULTIMODE<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>setting<sp/>the<sp/>MVDMA<sp/>jobs.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>list<sp/>execution<sp/>request.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga33a286dc72d59bee7b4d25f325e334ca" kindref="member">nrfy_mvdma_job_list_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>__nrfy_internal_mvdma_source_buffers_flush(p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a7f57a56678e8f5c55bef3c1749512614" kindref="member">p_source_job_list</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga6ee1a92116337e8fc4c1f5cdba571778" kindref="member">nrf_mvdma_source_list_ptr_set</ref>(p_reg,<sp/>p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a7f57a56678e8f5c55bef3c1749512614" kindref="member">p_source_job_list</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gab120702d8cc46932695bcfa1b8b700a0" kindref="member">nrf_mvdma_sink_list_ptr_set</ref>(p_reg,<sp/>p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a3a999dda56c66e4d455cdd938bb016a9" kindref="member">p_sink_job_list</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>resetting<sp/>the<sp/>MVDMA<sp/>peripheral.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>wait<sp/><sp/>True<sp/>if<sp/>reset<sp/>is<sp/>to<sp/>be<sp/>done<sp/>in<sp/>blocking<sp/>mode,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga9ab523a3cb73b1ef082f656a9260da4e" kindref="member">nrfy_mvdma_reset</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eeab1c2e0da085f0f0657f178da17be5f34" kindref="member">NRF_MVDMA_TASK_RESET</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac4e8ebd0e07363938099f074f2825e0a" kindref="member">NRF_MVDMA_EVENT_RESET</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_mvdma_events_process(p_reg,<sp/>evt_mask,<sp/>NULL))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>aborting<sp/>the<sp/>MVDMA<sp/>transaction.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_list_request<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>list<sp/>execution<sp/>request.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga0da2efb4fea20bcce5c5aa10131f87a0" kindref="member">nrfy_mvdma_abort</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/><ref refid="group__nrf__mvdma__hal_1ggae8bc5cb67530b3f15c89775ca88116eea8d93caf32970ead40bb7991d191ada8a" kindref="member">NRF_MVDMA_TASK_PAUSE</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/>NRF_MVDMA_TASK_STOP);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_list_request)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(<ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa59980a449a84dbb08da5dce4ab2f1a99" kindref="member">NRF_MVDMA_EVENT_PAUSED</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(NRF_MVDMA_EVENT_STOPPED);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!__nrfy_internal_mvdma_events_process(p_reg,<sp/>evt_mask,<sp/>p_list_request))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MVDMA<sp/>source<sp/>job<sp/>details</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_job_list_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>job<sp/>list<sp/>description.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gaa5b7c18d184cf90b46196e70e479c238" kindref="member">nrfy_mvdma_source_job_description_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__desc__t" kindref="compound">nrfy_mvdma_list_desc_t</ref><sp/>*<sp/>p_job_list_desc)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1aeed4c82ea1ea7a64d0fefa636235108e" kindref="member">p_jobs</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga600ce66bf59c367d736c20a9cad42a4b" kindref="member">nrf_mvdma_source_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1aef1c8d483440292ee968094f2a3f0ad9" kindref="member">job_count</ref><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gaaa85c9f87d1afa300b35d39675fdf11a" kindref="member">nrf_mvdma_source_job_count_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1a1b470d2a71b273ec55ddabb0761efa2d" kindref="member">last_addr</ref><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga27ce2352bcae4bec021641c662e88a71" kindref="member">nrf_mvdma_last_source_address_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>MVDMA<sp/>sink<sp/>job<sp/>details</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/><sp/>p_reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>p_job_list_desc<sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>to<sp/>be<sp/>filled<sp/>with<sp/>job<sp/>list<sp/>description.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga12b43721d2d631321dbf0e378e9af44c" kindref="member">nrfy_mvdma_sink_job_description_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__desc__t" kindref="compound">nrfy_mvdma_list_desc_t</ref><sp/>*<sp/>p_job_list_desc)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1aeed4c82ea1ea7a64d0fefa636235108e" kindref="member">p_jobs</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gaf012e8c81fd1e2735b818a36f4e5cab7" kindref="member">nrf_mvdma_sink_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1aef1c8d483440292ee968094f2a3f0ad9" kindref="member">job_count</ref><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga6eaf1d2c50551a0a955650036486b7dc" kindref="member">nrf_mvdma_sink_job_count_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>p_job_list_desc-&gt;<ref refid="structnrfy__mvdma__list__desc__t_1a1b470d2a71b273ec55ddabb0761efa2d" kindref="member">last_addr</ref><sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gac83dac3081b964c22bc05821f0f485fb" kindref="member">nrf_mvdma_last_sink_address_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga33967753b0c3e54e4decfb7d1067e1d3" kindref="member">nrfy_mvdma_task_trigger</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga8ff4dd7798c2e64bc78ae3fe6f662532" kindref="member">nrf_mvdma_task_trigger</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga62f8f13aff01e93c3431acd6ecba50c4" kindref="member">nrfy_mvdma_task_address_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mvdma__hal_1gafcbc21aa3b202cea94a75170ea2c8d79" kindref="member">nrf_mvdma_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_start_task_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref><sp/><ref refid="group__nrfy__mvdma_1ga633edc324e95832e045bf79a874f357e" kindref="member">nrfy_mvdma_start_task_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mvdma__hal_1ga770ec8d1849122f7bf50341e0bceb7a6" kindref="member">nrf_mvdma_start_task_get</ref>(p_reg,<sp/>index);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_event_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga8f9cea7bf645665ce615a80ff74bdebc" kindref="member">nrfy_mvdma_event_clear</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga74a7b2e9a23a8eeaa82bdce6b9575374" kindref="member">nrf_mvdma_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_event_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gaf5efab42e2782b57e0f693300af62fce" kindref="member">nrfy_mvdma_event_check</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga367b9509c93895cb50689d31ac284c01" kindref="member">nrf_mvdma_event_check</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_event_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga433913283231dbb4aef4d80d085f02f4" kindref="member">nrfy_mvdma_event_address_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>event)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__mvdma__hal_1ga7d44269c67a65e59a4a9606593782002" kindref="member">nrf_mvdma_event_address_get</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="414"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_int_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gad3d7d557315bafa48fdefa86888f53c9" kindref="member">nrfy_mvdma_int_enable</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga519024a15bce6aa1ce1c25ca32e9a5a3" kindref="member">nrf_mvdma_int_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_int_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga003322648954545e58164e4c9bfbf4a8" kindref="member">nrfy_mvdma_int_disable</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga18e7178bdf80b95ac9d531fcbeb0d7c6" kindref="member">nrf_mvdma_int_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_int_enable_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1gad9d8c8922312f35584f10d063f9f9748" kindref="member">nrfy_mvdma_int_enable_check</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>check<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga773770b5370b2f21403fffa5bb532598" kindref="member">nrf_mvdma_int_enable_check</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_int_pending_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1gaf37fde6d31131ce9d7bb8dfbbd36d591" kindref="member">nrfy_mvdma_int_pending_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pending<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga88407231c53c6d9d92ab20ab6c81110d" kindref="member">nrf_mvdma_int_pending_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DPPI_PRESENT)<sp/>||<sp/>defined(__NRFX_DOXYGEN__)</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_subscribe_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gab3dae9f262b49bcf2ee1a39baa079c3b" kindref="member">nrfy_mvdma_subscribe_set</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref><sp/>task,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga855b2fdd44b7e7a4bce7659b5190f54e" kindref="member">nrf_mvdma_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="459"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gab177b7b8f716016f09b36f088d1a932c" kindref="member">nrfy_mvdma_subscribe_clear</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gae8bc5cb67530b3f15c89775ca88116ee" kindref="member">nrf_mvdma_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga962201d7a29f3b10c4a520248efa4057" kindref="member">nrf_mvdma_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_publish_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga5d2b433bc02a0d4ea6961145b492b44b" kindref="member">nrfy_mvdma_publish_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gaa9370f101858358a70af0964ca7a056a" kindref="member">nrf_mvdma_publish_set</ref>(p_reg,<sp/>event,<sp/>channel);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_publish_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga2ee85af3690e08619165afc7b2a7e426" kindref="member">nrfy_mvdma_publish_clear</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gadc4859cd77da19bb928f0a477e5c3c39" kindref="member">nrf_mvdma_publish_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="485"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_mode_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gae7c3a908280e9d1158e4f01ea9b80a2a" kindref="member">nrfy_mvdma_mode_set</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga611db7934e2236bfe69148e89823a3a3" kindref="member">nrf_mvdma_mode_t</ref><sp/>mode)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga0efe65b3bb929a13864bb29e0b570428" kindref="member">nrf_mvdma_mode_set</ref>(p_reg,<sp/>mode);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRFY_MVDMA_HAS_AXIMODE</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_aximode_set}<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga03fa0b8e35713c9e4b39ac66102cfcb3" kindref="member">nrfy_mvdma_aximode_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga064227e6f56210dfaaecbef20ada7377" kindref="member">nrf_mvdma_aximode_t</ref><sp/>aximode)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga313afb53dca74554c3b4356b7246f517" kindref="member">nrf_mvdma_aximode_set</ref>(p_reg,<sp/>aximode);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_source_list_ptr_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1gab0cdcf701d7d86b04ca71555a0c3cdbe" kindref="member">nrfy_mvdma_source_list_ptr_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_job)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga6ee1a92116337e8fc4c1f5cdba571778" kindref="member">nrf_mvdma_source_list_ptr_set</ref>(p_reg,<sp/>p_job);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_source_list_ptr_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/><ref refid="group__nrfy__mvdma_1ga4b9986ce9ff5e077c86790ad555a2088" kindref="member">nrfy_mvdma_source_list_ptr_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_job<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga600ce66bf59c367d736c20a9cad42a4b" kindref="member">nrf_mvdma_source_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_job;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_sink_list_ptr_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga3c8224a1c01aa15badb068b443387a48" kindref="member">nrfy_mvdma_sink_list_ptr_set</ref>(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_job)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gab120702d8cc46932695bcfa1b8b700a0" kindref="member">nrf_mvdma_sink_list_ptr_set</ref>(p_reg,<sp/>p_job);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="528"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_sink_list_ptr_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/><ref refid="group__nrfy__mvdma_1ga65b151f3528c7af9f465e171dcdb421a" kindref="member">nrfy_mvdma_sink_list_ptr_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_job<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gaf012e8c81fd1e2735b818a36f4e5cab7" kindref="member">nrf_mvdma_sink_list_ptr_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_job;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="537"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_crc_result_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga9c885354545fc15f249c2c4fb7229d5b" kindref="member">nrfy_mvdma_crc_result_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>crc_result<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga8fbb296c6cb2888e3186bfeba3de4678" kindref="member">nrf_mvdma_crc_result_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc_result;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_fifo_status_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__mvdma__hal_1gae569c468089413c6e25a5108060e8cb1" kindref="member">nrf_mvdma_fifo_status_t</ref><sp/><ref refid="group__nrfy__mvdma_1gab11b0ae1bfe6e9e9bc0835f4bb4e7924" kindref="member">nrfy_mvdma_fifo_status_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gae569c468089413c6e25a5108060e8cb1" kindref="member">nrf_mvdma_fifo_status_t</ref><sp/>fifo_status<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gaa604217304e34b65605fb1cdc7160689" kindref="member">nrf_mvdma_fifo_status_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_status;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="555"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_activity_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__mvdma_1ga35feab93ea049917f9e6fcc9c4bc5764" kindref="member">nrfy_mvdma_activity_check</ref>(NRF_MVDMA_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga048d320f31fc4f79927e69ba28b97f3a" kindref="member">nrf_mvdma_activity_check</ref>(p_reg);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_source_error_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="group__nrf__mvdma__hal_1ga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2" kindref="member">nrf_mvdma_source_error_t</ref><sp/><ref refid="group__nrfy__mvdma_1ga48f8e1c06995636f0782a5701573c159" kindref="member">nrfy_mvdma_source_error_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga5b4c6f5dc7fb23b4d6c9f3d185fbc2c2" kindref="member">nrf_mvdma_source_error_t</ref><sp/>error<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gab11530bca70704fa00c6605fc5df11f0" kindref="member">nrf_mvdma_source_error_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="574"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_sink_error_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__mvdma__hal_1ga98f9129dba13ac35d89a1cfc60c2e4e9" kindref="member">nrf_mvdma_sink_error_t</ref><sp/><ref refid="group__nrfy__mvdma_1ga4b114027b87bca31ad22cb5a3c611028" kindref="member">nrfy_mvdma_sink_error_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga98f9129dba13ac35d89a1cfc60c2e4e9" kindref="member">nrf_mvdma_sink_error_t</ref><sp/>error<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga0a4df038da3b5e328413aed798212d73" kindref="member">nrf_mvdma_sink_error_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="583"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_last_source_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga2a84ae3dfcafa4aca9a4e785ec007dc3" kindref="member">nrfy_mvdma_last_source_address_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>address<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga27ce2352bcae4bec021641c662e88a71" kindref="member">nrf_mvdma_last_source_address_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>address;</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="592"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_last_sink_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga538999526d1af66cb1447207a0e7dc0a" kindref="member">nrfy_mvdma_last_sink_address_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>address<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gac83dac3081b964c22bc05821f0f485fb" kindref="member">nrf_mvdma_last_sink_address_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>address;</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="601"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_source_job_count_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga448c18fd6c09db2db751d804e9ce55b6" kindref="member">nrfy_mvdma_source_job_count_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>job_count<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1gaaa85c9f87d1afa300b35d39675fdf11a" kindref="member">nrf_mvdma_source_job_count_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>job_count;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="610"><highlight class="comment">/**<sp/>@refhal{nrf_mvdma_sink_job_count_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__mvdma_1ga2b131fb649acfb668a499b002aaf0368" kindref="member">nrfy_mvdma_sink_job_count_get</ref>(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_sink_job_count_get(p_reg);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="616"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_event_handle(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_event_mask)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))<sp/>&amp;&amp;<sp/><ref refid="group__nrf__mvdma__hal_1ga367b9509c93895cb50689d31ac284c01" kindref="member">nrf_mvdma_event_check</ref>(p_reg,<sp/>event))</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga74a7b2e9a23a8eeaa82bdce6b9575374" kindref="member">nrf_mvdma_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_event_mask)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p_event_mask<sp/>|=<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="636"><highlight class="normal">uint32_t<sp/>__nrfy_internal_mvdma_events_process(NRF_MVDMA_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnrfy__mvdma__list__request__t" kindref="compound">nrfy_mvdma_list_request_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_list_request)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>evt_mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac4e8ebd0e07363938099f074f2825e0a" kindref="member">NRF_MVDMA_EVENT_RESET</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fac50a517bbd48467bb55a2ac017ba6777" kindref="member">NRF_MVDMA_EVENT_STARTED</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5faa8c96f13ef51ad9e896e0cbe57405f7f" kindref="member">NRF_MVDMA_EVENT_SINKBUSERROR</ref>,<sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa125898a4bae1add7fdf040f74b541cd6" kindref="member">NRF_MVDMA_EVENT_SOURCEBUSERROR</ref>,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fadd433afccebae42c2d0d7de3eaac4871" kindref="member">NRF_MVDMA_EVENT_SINKSELECTJOBDONE</ref>,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)__nrfy_internal_mvdma_event_handle(p_reg,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa63d43fee3a4bffbcd5c70d153177a4bf" kindref="member">NRF_MVDMA_EVENT_SOURCESELECTJOBDONE</ref>,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;evt_mask);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invalidated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MVDMA_HAS_NEW_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fa59980a449a84dbb08da5dce4ab2f1a99" kindref="member">NRF_MVDMA_EVENT_PAUSED</ref>,<sp/>&amp;evt_mask))</highlight></codeline>
<codeline lineno="665"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/>NRF_MVDMA_EVENT_STOPPED,<sp/>&amp;evt_mask))</highlight></codeline>
<codeline lineno="667"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>job_count<sp/>=<sp/>__nrfy_internal_mvdma_sink_job_count_get(p_reg);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>job_count;<sp/>i++)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a3a999dda56c66e4d455cdd938bb016a9" kindref="member">p_sink_job_list</ref>[i].<ref refid="structnrf__vdma__job__t_1a27fafa4c6f8dcf30c51fcc66d318d76a" kindref="member">p_buffer</ref>,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a3a999dda56c66e4d455cdd938bb016a9" kindref="member">p_sink_job_list</ref>[i].<ref refid="structnrf__vdma__job__t_1a3c4a7a59dcbcaa2a6f9d8909aac36025" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(__nrfy_internal_mvdma_event_handle(p_reg,<sp/>mask,<sp/><ref refid="group__nrf__mvdma__hal_1gga10d2949383a7405b41eeed35d9a02a5fad39f02c6e66781fdb74dd359507034ce" kindref="member">NRF_MVDMA_EVENT_END</ref>,<sp/>&amp;evt_mask)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!invalidated)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_job<sp/>=<sp/>p_list_request-&gt;<ref refid="structnrfy__mvdma__list__request__t_1a3a999dda56c66e4d455cdd938bb016a9" kindref="member">p_sink_job_list</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_job-&gt;<ref refid="structnrf__vdma__job__t_1a27fafa4c6f8dcf30c51fcc66d318d76a" kindref="member">p_buffer</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_job++)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_INV(p_job-&gt;p_buffer,<sp/>p_job-&gt;size);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>evt_mask;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_event_enabled_clear(NRF_MVDMA_Type<sp/>*<sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga10d2949383a7405b41eeed35d9a02a5f" kindref="member">nrf_mvdma_event_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>&amp;<sp/><ref refid="group__nrfy__common_1ga0c6f93867e58ecfb266f70393b408c03" kindref="member">NRFY_EVENT_TO_INT_BITMASK</ref>(event))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__mvdma__hal_1ga74a7b2e9a23a8eeaa82bdce6b9575374" kindref="member">nrf_mvdma_event_clear</ref>(p_reg,<sp/>event);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__nrfy_internal_mvdma_source_buffers_flush(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_source_job)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recognize<sp/>if<sp/>nrf_vdma_reduced_job_t<sp/>is<sp/>being<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_source_job-&gt;<ref refid="structnrf__vdma__job__t_1a137e1708aeb086c32323d3fd03a6c90c" kindref="member">attributes</ref><sp/>&amp;<sp/><ref refid="group__nrf__vdma_1gga9b496442550fec4ecc584eccb09a1c81adbe8eb5be69a391c4b18cbb14a020c59" kindref="member">NRF_VDMA_ATTRIBUTE_FIXED_ATTR</ref>)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>p_source_job-&gt;<ref refid="structnrf__vdma__job__t_1a3c4a7a59dcbcaa2a6f9d8909aac36025" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__vdma_1ga145cc526139348f5bc7e15c6e1b7a9fb" kindref="member">nrf_vdma_job_reduced_t</ref><sp/>*<sp/>p_job_reduced<sp/>=<sp/>(<ref refid="group__nrf__vdma_1ga145cc526139348f5bc7e15c6e1b7a9fb" kindref="member">nrf_vdma_job_reduced_t</ref><sp/>*)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_source_job<sp/>+<sp/>1)-&gt;p_buffer;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_source_job-&gt;<ref refid="structnrf__vdma__job__t_1a27fafa4c6f8dcf30c51fcc66d318d76a" kindref="member">p_buffer</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="group__nrf__vdma_1ga145cc526139348f5bc7e15c6e1b7a9fb" kindref="member">nrf_vdma_job_reduced_t</ref><sp/>*<sp/>p_buffer<sp/>=<sp/>p_job_reduced;<sp/>p_buffer<sp/>!=<sp/>NULL;<sp/>p_buffer++)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_buffer,<sp/>size);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structnrf__vdma__job__t" kindref="compound">nrf_vdma_job_t</ref><sp/>*<sp/>p_job<sp/>=<sp/>p_source_job;<sp/>p_job-&gt;<ref refid="structnrf__vdma__job__t_1a27fafa4c6f8dcf30c51fcc66d318d76a" kindref="member">p_buffer</ref><sp/>!=<sp/>NULL;<sp/>p_job++)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NRFY_CACHE_WB(p_job-&gt;p_buffer,<sp/>p_job-&gt;size);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/>__nrfy_internal_mvdma_sink_job_count_get(NRF_MVDMA_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>job_count<sp/>=<sp/><ref refid="group__nrf__mvdma__hal_1ga6eaf1d2c50551a0a955650036486b7dc" kindref="member">nrf_mvdma_sink_job_count_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>job_count;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_MVDMA_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_mvdma.h"/>
  </compounddef>
</doxygen>
