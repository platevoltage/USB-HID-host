<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="nrfy__dppi_8h" kind="file" language="C++">
    <compoundname>nrfy_dppi.h</compoundname>
    <includes local="no">nrfx.h</includes>
    <includes refid="nrf__dppi_8h" local="no">hal/nrf_dppi.h</includes>
    <includedby refid="nrfx__dppi_8h" local="no">drivers/include/nrfx_dppi.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>haly/nrfy_dppi.h</label>
        <link refid="nrfy__dppi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nrfx.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrfy__dppi_1gaa4a0917088471b1c85c757850e5dc6f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_set</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t mask, bool enable)</argsstring>
        <name>nrfy_dppi_channels_set</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Function for enabling or disabling multiple DPPI channels. </para>
        </briefdescription>
        <detaileddescription>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 enables or disables channel 0, writing 1 to bit 1 enables or disables channel 1 etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>True if specified channels are to be enabled, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="62" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="62" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga0e7150f6a686ec60e1f7d02e4b872be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t</type>
        <definition>NRFY_STATIC_INLINE uint8_t nrfy_dppi_channel_number_get</definition>
        <argsstring>(NRF_DPPIC_Type const *p_reg)</argsstring>
        <name>nrfy_dppi_channel_number_get</name>
        <param>
          <type>NRF_DPPIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga3bb93d0787f2d0d5ee9bd6aaaa3f71f3" kindref="member">nrf_dppi_channel_number_get</ref>  Function for getting the total number of available channels for the given DPPIC instance.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of available channels.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="76" column="28" bodyfile="haly/nrfy_dppi.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1gadb040c6695f7c310e7a8b6641551fe3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint8_t</type>
        <definition>NRFY_STATIC_INLINE uint8_t nrfy_dppi_group_number_get</definition>
        <argsstring>(NRF_DPPIC_Type const *p_reg)</argsstring>
        <name>nrfy_dppi_group_number_get</name>
        <param>
          <type>NRF_DPPIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gab882acff39c1f6dcb2bafa5d4e4ded67" kindref="member">nrf_dppi_group_number_get</ref>  Function for getting the total number of available groups for the given DPPIC instance.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of available groups.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="82" column="28" bodyfile="haly/nrfy_dppi.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga76685f04839a189a3b82c474d2747ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_task_trigger</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_task_t dppi_task)</argsstring>
        <name>nrfy_dppi_task_trigger</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
          <declname>dppi_task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga66161914f3ff04ef023cc1df763ac5cd" kindref="member">nrf_dppi_task_trigger</ref>  Function for activating a DPPI task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dppi_task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task to be activated.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="88" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga78dd48917cad080c78146078f73783c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE uint32_t</type>
        <definition>NRFY_STATIC_INLINE uint32_t nrfy_dppi_task_address_get</definition>
        <argsstring>(NRF_DPPIC_Type const *p_reg, nrf_dppi_task_t task)</argsstring>
        <name>nrfy_dppi_task_address_get</name>
        <param>
          <type>NRF_DPPIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gadf7c6dc3ccdf4d0b086db084e601b76c" kindref="member">nrf_dppi_task_address_get</ref>  Function for getting the address of the specified DPPI task register.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Address of the specified task register.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="95" column="29" bodyfile="haly/nrfy_dppi.h" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga9ffe06d655c2894c8011f26abe69b457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE bool</type>
        <definition>NRFY_STATIC_INLINE bool nrfy_dppi_channel_check</definition>
        <argsstring>(NRF_DPPIC_Type const *p_reg, uint8_t channel)</argsstring>
        <name>nrfy_dppi_channel_check</name>
        <param>
          <type>NRF_DPPIC_Type const *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gacf7986a1c7a765d6c9ca48cc6ac3498a" kindref="member">nrf_dppi_channel_check</ref>  Function for checking the state of a specific DPPI channel.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is enabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel is not enabled.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="102" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga82a4b24e8f187b7e8ae72c901361a732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_enable</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_dppi_channels_enable</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga1e8cc3ec8ff1fe30f49aaffefc53f2ca" kindref="member">nrf_dppi_channels_enable</ref>  Function for enabling multiple DPPI channels.  </para>
</simplesect>
</para>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 enables channel 0, writing 1 to bit 1 enables channel 1 etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="111" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga939256caf1244647603b6913af0fca8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_disable</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t mask)</argsstring>
        <name>nrfy_dppi_channels_disable</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga2a39053147a8325daf9cb589f280d409" kindref="member">nrf_dppi_channels_disable</ref>  Function for disabling multiple DPPI channels.  </para>
</simplesect>
</para>
<para>The bits in <computeroutput>mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 disables channel 0, writing 1 to bit 1 disables channel 1 etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel mask.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="118" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga2b611f9b67fa9053312cc729dd68d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_disable_all</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg)</argsstring>
        <name>nrfy_dppi_channels_disable_all</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gaa7da76961b76caadccc805cd16a18774" kindref="member">nrf_dppi_channels_disable_all</ref>  Function for disabling all DPPI channels.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="125" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga29ae560ad8f0b6117f605990725edb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_subscribe_set</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_task_t task, uint8_t channel)</argsstring>
        <name>nrfy_dppi_subscribe_set</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga2c23a914c75199ffd1e9366bfa138a4b" kindref="member">nrf_dppi_subscribe_set</ref>  Function for setting the subscribe configuration for a given DPPI task.  </para>
</simplesect>
</para>
<para><simplesect kind="warning"><para>After setting the subscription for a given task, channel group configuration associated with this task cannot be modified until <ref refid="group__nrf__dppi__hal_1ga6163d2d97a58fbb406a498e0bb8870e6" kindref="member">nrf_dppi_subscribe_clear</ref> is used.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to set the configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel through which to subscribe events.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="132" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga6e0cd49bc18fd09f245128eb57e46936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_subscribe_clear</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_task_t task)</argsstring>
        <name>nrfy_dppi_subscribe_clear</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga6163d2d97a58fbb406a498e0bb8870e6" kindref="member">nrf_dppi_subscribe_clear</ref>  Function for clearing the subscribe configuration for a given DPPI task.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task</parametername>
</parameternamelist>
<parameterdescription>
<para>Task for which to clear the configuration.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="141" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga943fafefc1a51a273fc304fbc0f743f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_group_set</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t channel_mask, nrf_dppi_channel_group_t channel_group)</argsstring>
        <name>nrfy_dppi_channels_group_set</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gacc707e5a7c20ecf1225df84f5d00a882" kindref="member">nrf_dppi_channels_group_set</ref>  Function for setting multiple DPPI channels in a channel group.  </para>
</simplesect>
</para>
<para>This function assigns all specified channels to the group. The bits in <computeroutput>channel_mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 includes channel 0, writing 1 to bit 1 includes channel 1, and so on.</para>
<para><simplesect kind="warning"><para>All channels included previously will be overwritten.</para>
</simplesect>
<simplesect kind="warning"><para>Channel group configuration can be modified only if subscriptions for tasks associated with this group are disabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be assigned in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="148" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1gabf37c6ac472566f7b7e94cc357a7410b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_include_in_group</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t channel_mask, nrf_dppi_channel_group_t channel_group)</argsstring>
        <name>nrfy_dppi_channels_include_in_group</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga7c94430c35fd213889e8530e35a64e0a" kindref="member">nrf_dppi_channels_include_in_group</ref>  Function for including multiple DPPI channels in a channel group.  </para>
</simplesect>
</para>
<para>This function adds all specified channels to the group. The bits in <computeroutput>channel_mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 includes channel 0, writing 1 to bit 1 includes channel 1 etc.</para>
<para><simplesect kind="warning"><para>Channel group configuration can be modified only if subscriptions for tasks associated with this group are disabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be included in the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="157" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1gab9a2a4b86104de97d706eddfe6a51cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_channels_remove_from_group</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, uint32_t channel_mask, nrf_dppi_channel_group_t channel_group)</argsstring>
        <name>nrfy_dppi_channels_remove_from_group</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channel_mask</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>channel_group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga742f7c1d6568a2000efb9864b387908f" kindref="member">nrf_dppi_channels_remove_from_group</ref>  Function for removing multiple DPPI channels from a channel group.  </para>
</simplesect>
</para>
<para>This function removes all specified channels from the group. The bits in <computeroutput>channel_mask</computeroutput> value correspond to particular channels. It means that writing 1 to bit 0 removes channel 0, writing 1 to bit 1 removes channel 1 etc.</para>
<para><simplesect kind="warning"><para>Channel group configuration can be modified only if subscriptions for tasks associated with this group are disabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Channels to be removed from the group. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel_group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="167" column="6" bodyfile="haly/nrfy_dppi.h" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga9345ee9a294bf7a9e0b1ab4f9dea73e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_group_clear</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_channel_group_t group)</argsstring>
        <name>nrfy_dppi_group_clear</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga6e8136564ba991409f2a35125d75bad1" kindref="member">nrf_dppi_group_clear</ref>  Function for removing all DPPI channels from a channel group.  </para>
</simplesect>
</para>
<para><simplesect kind="warning"><para>Channel group configuration can be modified only if subscriptions for tasks associated with this group are disabled.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="176" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="176" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga752af11e727f7e0fbe47786d5c272c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_group_enable</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_channel_group_t group)</argsstring>
        <name>nrfy_dppi_group_enable</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1gac104471e7b75b92150d3c29ae7ac3f79" kindref="member">nrf_dppi_group_enable</ref>  Function for enabling a channel group.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="184" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga793cfb6856233d031437748d25eec5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE void</type>
        <definition>NRFY_STATIC_INLINE void nrfy_dppi_group_disable</definition>
        <argsstring>(NRF_DPPIC_Type *p_reg, nrf_dppi_channel_group_t group)</argsstring>
        <name>nrfy_dppi_group_disable</name>
        <param>
          <type>NRF_DPPIC_Type *</type>
          <declname>p_reg</declname>
        </param>
        <param>
          <type><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref></type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga47f9246d3323433bd15b3f2592103d6c" kindref="member">nrf_dppi_group_disable</ref>  Function for disabling a channel group.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure of registers of the peripheral. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">group</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="192" column="25" bodyfile="haly/nrfy_dppi.h" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1ga4fd343bb17d8573990ffa68342b1c85a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_dppi_task_t nrfy_dppi_group_enable_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrfy_dppi_group_enable_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga51033ebfa0736491df389fd16a2a57b5" kindref="member">nrf_dppi_group_enable_task_get</ref>  Function for getting the ENABLE task associated with the specified channel group.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested ENABLE task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="200" column="36" bodyfile="haly/nrfy_dppi.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__nrfy__dppi_1gabe9a687aa9de082cda37fab8819026d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRFY_STATIC_INLINE <ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref></type>
        <definition>NRFY_STATIC_INLINE nrf_dppi_task_t nrfy_dppi_group_disable_task_get</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>nrfy_dppi_group_disable_task_get</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__dppi__hal_1ga343f21926fb7a91d2e38040d27f0fce0" kindref="member">nrf_dppi_group_disable_task_get</ref>  Function for getting the DISABLE task associated with the specified channel group.  </para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel group index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Requested DISABLE task.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="haly/nrfy_dppi.h" line="206" column="36" bodyfile="haly/nrfy_dppi.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>-<sp/>2024,<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NRFY_DPPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRFY_DPPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrfx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hal/nrf_dppi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>nrfy_dppi<sp/>DPPI<sp/>HALY</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>nrf_dppi</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Hardware<sp/>access<sp/>layer<sp/>with<sp/>cache<sp/>and<sp/>barrier<sp/>support<sp/>for<sp/>managing<sp/>the<sp/>DPPI<sp/>peripheral.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Function<sp/>for<sp/>enabling<sp/>or<sp/>disabling<sp/>multiple<sp/>DPPI<sp/>channels.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>The<sp/>bits<sp/>in<sp/>@c<sp/>mask<sp/>value<sp/>correspond<sp/>to<sp/>particular<sp/>channels.<sp/>It<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>0<sp/>enables<sp/>or<sp/>disables<sp/>channel<sp/>0,</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>writing<sp/>1<sp/>to<sp/>bit<sp/>1<sp/>enables<sp/>or<sp/>disables<sp/>channel<sp/>1<sp/>etc.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>p_reg<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>structure<sp/>of<sp/>registers<sp/>of<sp/>the<sp/>peripheral.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mask<sp/><sp/><sp/>Channel<sp/>mask.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>enable<sp/>True<sp/>if<sp/>specified<sp/>channels<sp/>are<sp/>to<sp/>be<sp/>enabled,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1gaa4a0917088471b1c85c757850e5dc6f9" kindref="member">nrfy_dppi_channels_set</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga1e8cc3ec8ff1fe30f49aaffefc53f2ca" kindref="member">nrf_dppi_channels_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga2a39053147a8325daf9cb589f280d409" kindref="member">nrf_dppi_channels_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channel_number_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrfy__dppi_1ga0e7150f6a686ec60e1f7d02e4b872be0" kindref="member">nrfy_dppi_channel_number_get</ref>(NRF_DPPIC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__dppi__hal_1ga3bb93d0787f2d0d5ee9bd6aaaa3f71f3" kindref="member">nrf_dppi_channel_number_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_number_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group__nrfy__dppi_1gadb040c6695f7c310e7a8b6641551fe3b" kindref="member">nrfy_dppi_group_number_get</ref>(NRF_DPPIC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__dppi__hal_1gab882acff39c1f6dcb2bafa5d4e4ded67" kindref="member">nrf_dppi_group_number_get</ref>(p_reg);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_task_trigger}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga76685f04839a189a3b82c474d2747ed8" kindref="member">nrfy_dppi_task_trigger</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/>dppi_task)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga66161914f3ff04ef023cc1df763ac5cd" kindref="member">nrf_dppi_task_trigger</ref>(p_reg,<sp/>dppi_task);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_task_address_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">NRFY_STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group__nrfy__dppi_1ga78dd48917cad080c78146078f73783c7" kindref="member">nrfy_dppi_task_address_get</ref>(NRF_DPPIC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__dppi__hal_1gadf7c6dc3ccdf4d0b086db084e601b76c" kindref="member">nrf_dppi_task_address_get</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channel_check}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga9ffe06d655c2894c8011f26abe69b457" kindref="member">nrfy_dppi_channel_check</ref>(NRF_DPPIC_Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p_reg,<sp/>uint8_t<sp/>channel)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_rw();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="group__nrf__dppi__hal_1gacf7986a1c7a765d6c9ca48cc6ac3498a" kindref="member">nrf_dppi_channel_check</ref>(p_reg,<sp/>channel);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_r();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga82a4b24e8f187b7e8ae72c901361a732" kindref="member">nrfy_dppi_channels_enable</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga1e8cc3ec8ff1fe30f49aaffefc53f2ca" kindref="member">nrf_dppi_channels_enable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga939256caf1244647603b6913af0fca8c" kindref="member">nrfy_dppi_channels_disable</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga2a39053147a8325daf9cb589f280d409" kindref="member">nrf_dppi_channels_disable</ref>(p_reg,<sp/>mask);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_disable_all}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga2b611f9b67fa9053312cc729dd68d91a" kindref="member">nrfy_dppi_channels_disable_all</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1gaa7da76961b76caadccc805cd16a18774" kindref="member">nrf_dppi_channels_disable_all</ref>(p_reg);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_subscribe_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga29ae560ad8f0b6117f605990725edb27" kindref="member">nrfy_dppi_subscribe_set</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/><sp/>task,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga2c23a914c75199ffd1e9366bfa138a4b" kindref="member">nrf_dppi_subscribe_set</ref>(p_reg,<sp/>task,<sp/>channel);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_subscribe_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga6e0cd49bc18fd09f245128eb57e46936" kindref="member">nrfy_dppi_subscribe_clear</ref>(NRF_DPPIC_Type<sp/>*<sp/>p_reg,<sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/>task)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga6163d2d97a58fbb406a498e0bb8870e6" kindref="member">nrf_dppi_subscribe_clear</ref>(p_reg,<sp/>task);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_group_set}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga943fafefc1a51a273fc304fbc0f743f4" kindref="member">nrfy_dppi_channels_group_set</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1gacc707e5a7c20ecf1225df84f5d00a882" kindref="member">nrf_dppi_channels_group_set</ref>(p_reg,<sp/>channel_mask,<sp/>channel_group);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_include_in_group}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1gabf37c6ac472566f7b7e94cc357a7410b" kindref="member">nrfy_dppi_channels_include_in_group</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga7c94430c35fd213889e8530e35a64e0a" kindref="member">nrf_dppi_channels_include_in_group</ref>(p_reg,<sp/>channel_mask,<sp/>channel_group);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_channels_remove_from_group}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">NRFY_STATIC_INLINE</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1gab9a2a4b86104de97d706eddfe6a51cda" kindref="member">nrfy_dppi_channels_remove_from_group</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel_mask,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>channel_group)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga742f7c1d6568a2000efb9864b387908f" kindref="member">nrf_dppi_channels_remove_from_group</ref>(p_reg,<sp/>channel_mask,<sp/>channel_group);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_clear}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga9345ee9a294bf7a9e0b1ab4f9dea73e2" kindref="member">nrfy_dppi_group_clear</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga6e8136564ba991409f2a35125d75bad1" kindref="member">nrf_dppi_group_clear</ref>(p_reg,<sp/>group);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_enable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga752af11e727f7e0fbe47786d5c272c02" kindref="member">nrfy_dppi_group_enable</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1gac104471e7b75b92150d3c29ae7ac3f79" kindref="member">nrf_dppi_group_enable</ref>(p_reg,<sp/>group);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_disable}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">NRFY_STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nrfy__dppi_1ga793cfb6856233d031437748d25eec5bb" kindref="member">nrfy_dppi_group_disable</ref>(NRF_DPPIC_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_reg,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga3378ea28f33874ce35b843cf92e8f45b" kindref="member">nrf_dppi_channel_group_t</ref><sp/>group)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__nrf__dppi__hal_1ga47f9246d3323433bd15b3f2592103d6c" kindref="member">nrf_dppi_group_disable</ref>(p_reg,<sp/>group);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf_barrier_w();</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_enable_task_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/><ref refid="group__nrfy__dppi_1ga4fd343bb17d8573990ffa68342b1c85a" kindref="member">nrfy_dppi_group_enable_task_get</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__dppi__hal_1ga51033ebfa0736491df389fd16a2a57b5" kindref="member">nrf_dppi_group_enable_task_get</ref>(index);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment">/**<sp/>@refhal{nrf_dppi_group_disable_task_get}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">NRFY_STATIC_INLINE<sp/><ref refid="group__nrf__dppi__hal_1ga00d050252ff713dd61f3ff7499819122" kindref="member">nrf_dppi_task_t</ref><sp/><ref refid="group__nrfy__dppi_1gabe9a687aa9de082cda37fab8819026d9" kindref="member">nrfy_dppi_group_disable_task_get</ref>(uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__nrf__dppi__hal_1ga343f21926fb7a91d2e38040d27f0fce0" kindref="member">nrf_dppi_group_disable_task_get</ref>(index);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NRFY_DPPI_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="haly/nrfy_dppi.h"/>
  </compounddef>
</doxygen>
