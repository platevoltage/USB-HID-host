<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__nrf__systick__hal" kind="group">
    <compoundname>nrf_systick_hal</compoundname>
    <title>SYSTICK HAL</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__systick__hal_1ga49c38556c98d5fd6a215ae8ed4bba32c" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_systick_csr_flags_t</name>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca21d950914ecb5f93457431319d8ccaa4" prot="public">
          <name>NRF_SYSTICK_CSR_COUNTFLAG_MASK</name>
          <initializer>= SysTick_CTRL_COUNTFLAG_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Status flag: Returns 1 if timer counted to 0 since the last read of this register. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca63171e9eb85492e1d63fda00714c066e" prot="public">
          <name>NRF_SYSTICK_CSR_CLKSOURCE_MASK</name>
          <initializer>= SysTick_CTRL_CLKSOURCE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration bit: Select the SysTick clock source. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca39661f9793008a87b696a2ab86161610" prot="public">
          <name>NRF_SYSTICK_CSR_CLKSOURCE_REF</name>
          <initializer>= 0U &lt;&lt; SysTick_CTRL_CLKSOURCE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Select reference clock. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca3c16ccf807a7b213e2e48352523810b8" prot="public">
          <name>NRF_SYSTICK_CSR_CLKSOURCE_CPU</name>
          <initializer>= 1U &lt;&lt; SysTick_CTRL_CLKSOURCE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Select CPU clock. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32cae609da6726edc0c0df396a1364aaea3f" prot="public">
          <name>NRF_SYSTICK_CSR_TICKINT_MASK</name>
          <initializer>= SysTick_CTRL_TICKINT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration bit: Enables SysTick exception request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca3a0bac7fa41895d840e9374cfcdf3599" prot="public">
          <name>NRF_SYSTICK_CSR_TICKINT_ENABLE</name>
          <initializer>= 1U &lt;&lt; SysTick_CTRL_TICKINT_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Counting down to zero does not assert the SysTick exception request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca83b301e2e96072ea339d854d15c15cfa" prot="public">
          <name>NRF_SYSTICK_CSR_TICKINT_DISABLE</name>
          <initializer>= 0U &lt;&lt; SysTick_CTRL_TICKINT_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Counting down to zero to asserts the SysTick exception request. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32caf3cb7d6c53cf531fb3aa0eb78e5c6c0f" prot="public">
          <name>NRF_SYSTICK_CSR_ENABLE_MASK</name>
          <initializer>= SysTick_CTRL_ENABLE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration bit: Enable the SysTick timer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca89a2c3538df94c8703dee3d5fbc4b1d3" prot="public">
          <name>NRF_SYSTICK_CSR_ENABLE</name>
          <initializer>= 1U &lt;&lt; SysTick_CTRL_ENABLE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Counter enabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32cae21aa2ccd44d0f004447b0ba0e9580bd" prot="public">
          <name>NRF_SYSTICK_CSR_DISABLE</name>
          <initializer>= 0U &lt;&lt; SysTick_CTRL_ENABLE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration value: Counter disabled. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags used by SysTick configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__nrf__systick__hal_1ga351895fef0d7850af00a1f7cf9921ad1" kindref="member">nrf_systick_csr_set</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__nrf__systick__hal_1ga44ac47ecb274c1f2aae9acc586df5325" kindref="member">nrf_systick_csr_get</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="68" column="1" bodyfile="hal/nrf_systick.h" bodystart="68" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__systick__hal_1ga44ac47ecb274c1f2aae9acc586df5325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_systick_csr_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_systick_csr_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting Configuration and Status Register. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The <ref refid="group__nrf__systick__hal_1gga49c38556c98d5fd6a215ae8ed4bba32ca21d950914ecb5f93457431319d8ccaa4" kindref="member">NRF_SYSTICK_CSR_COUNTFLAG_MASK</ref> value is cleared when CSR register is read. </para>
</simplesect>
<simplesect kind="return"><para>Values composed by <ref refid="group__nrf__systick__hal_1ga49c38556c98d5fd6a215ae8ed4bba32c" kindref="member">nrf_systick_csr_flags_t</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="139" column="28" bodyfile="hal/nrf_systick.h" bodystart="139" bodyend="142" declfile="hal/nrf_systick.h" declline="90" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1ga351895fef0d7850af00a1f7cf9921ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_systick_csr_set</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>nrf_systick_csr_set</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Function for setting Configuration and Status Register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value composed from <ref refid="group__nrf__systick__hal_1ga49c38556c98d5fd6a215ae8ed4bba32c" kindref="member">nrf_systick_csr_flags_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="144" column="24" bodyfile="hal/nrf_systick.h" bodystart="144" bodyend="147" declfile="hal/nrf_systick.h" declline="97" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1ga925fa429e98306a044401ae07e423f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_systick_load_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_systick_load_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for getting the current reload value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reload register value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="149" column="28" bodyfile="hal/nrf_systick.h" bodystart="149" bodyend="152" declfile="hal/nrf_systick.h" declline="104" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1gaae480344be5bd0c8f78ebfedd2919e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_systick_load_set</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>nrf_systick_load_set</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Function for configuring the reload value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be set in the reload register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="154" column="24" bodyfile="hal/nrf_systick.h" bodystart="154" bodyend="157" declfile="hal/nrf_systick.h" declline="111" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1ga85c20d332df8a2bb7bc80a3788fe9bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_systick_val_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_systick_val_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading the SysTick current value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current SysTick value </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__nrf__systick__hal_1ga434dd61eb082c4d2f9e9f9c4ba9b1971" kindref="member">NRF_SYSTICK_VAL_MASK</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="159" column="28" bodyfile="hal/nrf_systick.h" bodystart="159" bodyend="162" declfile="hal/nrf_systick.h" declline="119" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1ga9a48ffc929c473edacec41f8e5f2acd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE void</type>
        <definition>NRF_STATIC_INLINE void nrf_systick_val_clear</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_systick_val_clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for clearing the SysTick current value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The SysTick does not allow setting current value. Any write to VAL register would clear the timer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="164" column="24" bodyfile="hal/nrf_systick.h" bodystart="164" bodyend="167" declfile="hal/nrf_systick.h" declline="127" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__systick__hal_1ga52a8a38f77d462712756f26a0272bbba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NRF_STATIC_INLINE uint32_t</type>
        <definition>NRF_STATIC_INLINE uint32_t nrf_systick_calib_get</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_systick_calib_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function for reading the calibration register. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calibration register value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="169" column="28" bodyfile="hal/nrf_systick.h" bodystart="169" bodyend="172" declfile="hal/nrf_systick.h" declline="134" declcolumn="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__systick__hal_1ga434dd61eb082c4d2f9e9f9c4ba9b1971" prot="public" static="no">
        <name>NRF_SYSTICK_VAL_MASK</name>
        <initializer>SysTick_VAL_CURRENT_Msk</initializer>
        <briefdescription>
<para>Mask of usable bits in the SysTick value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hal/nrf_systick.h" line="60" column="9" bodyfile="hal/nrf_systick.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware access layer (HAL) for managing the SYSTICK peripheral. </para>
    </briefdescription>
    <detaileddescription>
<para>SYSTICK is a peripheral designed by ARM. This means that it does not feature the typical Nordic interface with Tasks and Events.</para>
<para>Its usage is limited here to the implementation of simple delays. Moreover, keep in mind that this timer will be stopped when CPU is sleeping (WFE/WFI instruction is successfully executed). </para>
    </detaileddescription>
  </compounddef>
</doxygen>
